<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>Определяет действие, выполняемое, когда метод <see cref="M:System.Data.DataSet.AcceptChanges" /> или <see cref="M:System.Data.DataTable.RejectChanges" /> вызывается в объекте <see cref="T:System.Data.DataTable" /> с объектом <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>Изменения располагаются каскадом в отношении.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>Никакие действия не выполняются (по умолчанию).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>Содержит описание результатов запроса и его воздействия на базу данных.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>При выполнении этой команды связанный объект <see langword="Connection" /> закрывается, когда закрывается связанный объект <see langword="DataReader" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>Запрос может вернуть несколько наборов результатов. Выполнение запроса может повлиять на состояние базы данных. Поле <see langword="Default" /> не задает флаги <see cref="T:System.Data.CommandBehavior" />, поэтому вызов метода <see langword="ExecuteReader(CommandBehavior.Default)" /> функционально эквивалентен вызову метода <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>Запрос возвращает информацию колонки и первичного ключа. Поставщик добавляет дополнительные столбцы в результирующий набор для существующего первичного ключа и столбцы меток времени.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>Запрос возвращает только сведения о столбце. При использовании <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> поставщик данных .NET Framework для SQL Server предваряет оператор, выполняемый с параметром SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>Содержит способ для <see langword="DataReader" /> для обработки строк, содержащих столбцы с большими двоичными значениями. Вместо загрузки всей строки, <see langword="SequentialAccess" /> позволяет <see langword="DataReader" /> загрузить данные как поток. Затем можно использовать метод <see langword="GetBytes" /> или метод <see langword="GetChars" />, чтобы указать положение байта для начала операции чтения и ограниченный размер буфера для возврата данных.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>Запрос возвращает один набор результатов.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>Ожидается, что запрос вернет одну строку из первого набора результатов. Выполнение запроса может повлиять на состояние базы данных. Некоторые поставщики данных .NET Framework могут, но не обязательно, использовать эту информацию для оптимизации производительности команды. При указании <see cref="F:System.Data.CommandBehavior.SingleRow" /> с методом <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> объекта <see cref="T:System.Data.OleDb.OleDbCommand" />, поставщик данных .NET Framework для OLE DB выполняет привязку с помощью интерфейса <see langword="IRow" /> OLE DB, если он доступен. В обратном случае, используется интерфейс <see langword="IRowset" />. Если оператор SQL должен вернуть только одну строку, рекомендуется указать <see cref="F:System.Data.CommandBehavior.SingleRow" /> для повышения производительности приложения. Можно также указать <see langword="SingleRow" /> при выполнении запросов, которые должны возвращать несколько наборов результатов.  В этом случае, если заданы и SQL-запрос с несколькими наборами результатом, и одна строка, возвращаемый результат будет содержать только первую строку первого набора результатов. Другие наборы результатов запроса не возвращаются.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>Определяет, как интерпретируется командная строка.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>Имя хранимой процедуры.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>Имя таблицы.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>Текстовая команда SQL. (по умолчанию).</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary>Указывает местоположение имени каталога в полном имени таблицы в текстовой команде.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary>Указывает, что местоположение имени каталога находится после части, отведенной для схемы, в полном имени таблицы в текстовой команде. <c>End</c> и <c>Start</c> являются взаимоисключающими.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary>Указывает, что местоположение имени каталога находится перед частью, отведенной для схемы, в полном имени таблицы в текстовой команде. <c>Start</c> и <c>End</c> являются взаимоисключающими.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>Предоставляет набор команд SQL и подключение базы данных, которые используются для заполнения объекта <see cref="T:System.Data.DataSet" /> и обновления источника данных.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataAdapter" /> из существующего объекта того же типа.</summary>
      <param name="from">Объект <see cref="T:System.Data.Common.DataAdapter" /> используется для создания нового <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>Возвращает или задает значение, указывающее, вызывается ли метод <see cref="M:System.Data.DataRow.AcceptChanges" /> в объекте <see cref="T:System.Data.DataRow" /> после его добавления к объекту <see cref="T:System.Data.DataTable" /> при выполнении любой из операций Fill.</summary>
      <returns>Значение <see langword="true" />, если метод <see cref="M:System.Data.DataRow.AcceptChanges" /> вызывается в объект <see cref="T:System.Data.DataRow" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary>Возвращает или задает, вызывается ли метод <see cref="M:System.Data.DataRow.AcceptChanges" /> при вызове метода <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Значение <see langword="true" />, если метод <see cref="M:System.Data.DataRow.AcceptChanges" /> вызывается при вызове метода <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>Создает дубликат этого экземпляра класса <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns>Клонированный экземпляр <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>Возвращает или задает значение, указывающее, следует ли генерировать ли исключение при обнаружении ошибки во время обновления строки.</summary>
      <returns>Значение <see langword="true" /> для продолжения обновления без генерации исключения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>Создает новый экземпляр <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>Новая коллекция сопоставления таблицы.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DataAdapter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>Добавляет или обновляет строки в <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> для заполнения записями.</param>
      <param name="srcTable">Строка, указывающая имя исходной таблицы.</param>
      <param name="dataReader">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Индекс (с нуля) начальной записи.</param>
      <param name="maxRecords">Целое число, указывающее максимальное количество записей.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>Добавляет или обновляет строки в <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных с помощью имени <see cref="T:System.Data.DataTable" /> и указанного интерфейса <see cref="T:System.Data.IDataReader" />.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> для заполнения записями.</param>
      <param name="dataReader">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Добавляет или обновляет строки в указанной коллекции объектов <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных.</summary>
      <param name="dataTables">Коллекция объектов <see cref="T:System.Data.DataTable" /> для заполнения записями.</param>
      <param name="dataReader">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Индекс (с нуля) начальной записи.</param>
      <param name="maxRecords">Целое число, указывающее максимальное количество записей.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary>Возвращается при возникновении ошибки во время работы операции заполнения.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary>Возвращает или задает значение перечисления типа <see cref="T:System.Data.LoadOption" />, определяющее, как адаптер заполняет объект <see cref="T:System.Data.DataTable" /> из объекта <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Значение <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, который необходимо заполнить сведениями схемы из источника данных.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataTable" />, заполняемый из <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблицы.</param>
      <param name="dataReader">Интерфейс <see cref="T:System.Data.IDataReader" />, используемый в качестве источника данных при заполнении объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns>Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в объект <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, заполняемый из <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader">Интерфейс <see cref="T:System.Data.IDataReader" />, используемый в качестве источника данных при заполнении объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns>Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary>Указывает, был ли создан <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DataTableMappingCollection" /> был создан; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>Определяет действие, выполняемое, если входные данные не соответствуют таблице или столбцу.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />. Значение по умолчанию — <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение не является одним из значений <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />. Значение по умолчанию — <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение не является одним из значений <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>Вызывается при возникновении ошибки, когда применяется метод <see langword="Fill" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary>Сбрасывает свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> к состоянию по умолчанию и вызывает метод <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> для обеспечения поддержки свойства <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary>Возвращает или задает, должен ли метод <see langword="Fill" /> возвращать зависящие от поставщика значения или обычные CLS-совместимые значения.</summary>
      <returns>Значение <see langword="true" />, если метод <see langword="Fill" /> должен возвращать зависящие от поставщика значения; в противном случае — значение <see langword="false" />, чтобы возвращать обычные CLS-совместимые значения.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary>Определяет, должно ли сохраняться свойство <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> должно сохраняться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary>Определяет, должно ли сохраняться свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> должно сохраняться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>Определяет, существует ли один или несколько объектов <see cref="T:System.Data.Common.DataTableMapping" /> и нужно ли их сохранить.</summary>
      <returns>Значение <see langword="true" />, если существует один или несколько объектов <see cref="T:System.Data.Common.DataTableMapping" />, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary>Указывает, как исходная таблица сопоставлена с таблицей набора данных.</summary>
      <returns>Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>Получает коллекцию, обеспечивающую основное сопоставление между исходной таблицей и <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>Вызывает соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном объекте <see cref="T:System.Data.DataSet" /> из <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>Содержит универсальное сопоставление столбца для объекта, который наследуется из объекта <see cref="T:System.Data.Common.DataAdapter" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца и именем столбца <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <param name="sourceColumn">Имя столбца из источника данных, определяемое с учетом регистра.</param>
      <param name="dataSetColumn">Имя столбца без учета регистра из объекта <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>Возвращает или задает имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <returns>Имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления. Имя без учета регистра.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> из данного объекта <see cref="T:System.Data.DataTable" /> с использованием объекта <see cref="T:System.Data.MissingSchemaAction" /> и свойства <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, из которого получается столбец.</param>
      <param name="dataType">Объект <see cref="T:System.Type" /> столбца данных.</param>
      <param name="schemaAction">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Столбец данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Статическая версия метода <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" />, который может быть вызван без создания экземпляра объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn">Имя столбца из источника данных, определяемое с учетом регистра.</param>
      <param name="dataSetColumn">Имя столбца без учета регистра из объекта <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="dataTable">Экземпляр <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType">Тип данных для сопоставляемого столбца.</param>
      <param name="schemaAction">Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</param>
      <returns>Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>Возвращает или задает имя столбца в источнике данных для сопоставления. Имя указано с учетом регистра.</summary>
      <returns>Имя столбца в источнике данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns>Копия текущего объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>Преобразует текущее имя <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> в строку.</summary>
      <returns>Текущее имя <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> как строка.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>Создает пустой словарь <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию.</summary>
      <param name="value">Объект <see langword="DataColumnMapping" /> для добавления в коллекцию.</param>
      <returns>Индекс объекта <see langword="DataColumnMapping" />, который был добавлен в коллекцию.</returns>
      <exception cref="T:System.InvalidCastException">Переданный объект не был объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию на основе заданного имени исходного столбца и имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца для сопоставления.</param>
      <param name="dataSetColumn">Независящее от регистра имя столбца <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <returns>Объект <see langword="DataColumnMapping" />, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary>Копирует элементы указанного объекта <see cref="T:System.Array" /> в конец коллекции.</summary>
      <param name="values">Параметр <see cref="T:System.Array" /> для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.Common.DataColumnMapping" /> в конец коллекции.</summary>
      <param name="values">Массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Data.Common.DataColumnMapping" /> из коллекции.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>Возвращает значение, указывающее, существует ли объект <see cref="T:System.Data.Common.DataColumnMapping" /> с данным объектом <see cref="T:System.Object" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит указанный объект <see cref="T:System.Data.Common.DataColumnMapping" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidCastException">Переданный объект не был объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>Возвращает значение, указывающее, существует ли объект <see cref="T:System.Data.Common.DataColumnMapping" /> с данным именем исходного столбца в коллекции.</summary>
      <param name="value">Зависящее от регистра имя исходного столбца объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Data.Common.DataColumnMappingCollection" /> в указанный массив.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">Начальный индекс массива.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Data.Common.DataColumnMappingCollection" /> в указанный массив <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="array">Массив <see cref="T:System.Data.Common.DataColumnMapping" />, в который копируются элементы <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">Индекс (с нуля) в <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>Возвращает количество объектов <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="value">Независящее от регистра имя искомого столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> для указанного <see cref="T:System.Data.Common.DataColumnMappingCollection" />, имени исходного столбца и <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="columnMappings">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца для поиска.</param>
      <param name="mappingAction">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Статический метод, который возвращает объект <see cref="T:System.Data.DataColumn" />, не создавая экземпляр объекта <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">Зависящее от регистра имя столбца из источника данных.</param>
      <param name="dataType">Тип данных для сопоставляемого столбца.</param>
      <param name="dataTable">Экземпляр <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</param>
      <returns>Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию элементов коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>Возвращает расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, являющийся объектом <see cref="T:System.Data.Common.DataColumnMapping" /> для поиска.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>Возвращает местоположение объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца.</param>
      <returns>Отсчитываемое от нуля расположение объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным зависящим от регистра именем исходного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>Возвращает местоположение указанного объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumn">Независящее от регистра имя столбца набора данных для поиска.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с данным именем столбца <see langword="DataSet" /> или -1, если объект <see langword="DataColumnMapping" /> не существует в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary>Вставляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <param name="value">Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <param name="value">Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DataColumnMapping" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс объекта <see cref="T:System.Data.Common.DataColumnMapping" /> для поиска.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Common.DataColumnMapping" /> из коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> для удаления.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>Удаляет из коллекции объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, являющийся объектом <see cref="T:System.Data.Common.DataColumnMapping" /> для удаления.</param>
      <exception cref="T:System.InvalidCastException">Указанный объект не являлся объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException">Указанный объект отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным индексом из коллекции.</summary>
      <param name="index">Индекс (отсчет с нуля) удаляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Отсутствует объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным индексом.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>Удаляет из коллекции объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException">Отсутствует объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Collections.IList" /> доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> с помощью имени исходного столбца и имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">Зависящее от регистра имя исходного столбца.</param>
      <param name="dataSetColumnName">Имя столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns>Объект ColumnMapping, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumnName">Независящее от регистра имя искомого столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</summary>
      <param name="index">Индекс элемента.</param>
      <returns>Объект <see langword="IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>Содержит описание сопоставленных отношений между исходной таблицей и объектом <see cref="T:System.Data.DataTable" />. Этот класс используется <see cref="T:System.Data.Common.DataAdapter" /> при заполнении <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" /> с источником, если дано имя исходной таблицы и имя <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sourceTable">Имя исходной таблицы из источника данных, определяемое с учетом регистра.</param>
      <param name="dataSetTable">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" />, если дано имя исходной таблицы, имя объекта <see cref="T:System.Data.DataTable" /> и массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable">Имя исходной таблицы из источника данных, определяемое с учетом регистра.</param>
      <param name="dataSetTable">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="columnMappings">Массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>Возвращает состояние <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для экземпляра <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>Возвращает или задает имя таблицы из <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Имя таблицы из <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> из указанного объекта <see cref="T:System.Data.DataTable" /> с использованием указанного значения <see cref="T:System.Data.MissingMappingAction" /> и имени объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="sourceColumn">Имя <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Столбец данных.</returns>
      <exception cref="T:System.InvalidOperationException">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Возвращает объект <see cref="T:System.Data.DataColumn" /> для данного имени столбца.</summary>
      <param name="sourceColumn">Имя <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType">Тип данных для объекта <paramref name="sourceColumn" />.</param>
      <param name="dataTable">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="mappingAction">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>Получает текущий объект <see cref="T:System.Data.DataTable" /> для указанного объекта <see cref="T:System.Data.DataSet" /> с использованием указанного значения <see cref="T:System.Data.MissingSchemaAction" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, из которого получается объект <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaAction">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Таблица данных.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>Возвращает или задает имя исходной таблицы из источника данных, определяемое с учетом регистра.</summary>
      <returns>Имя исходной таблицы из источника данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary>Получает производной коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект, который является копией текущего экземпляра.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>Преобразует текущее имя <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> в строку.</summary>
      <returns>Текущее имя <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> как строка.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>Коллекция объектов <see cref="T:System.Data.Common.DataTableMapping" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMappingCollection" />. Этот новый экземпляр пуст, т. е. пока не содержит объектов <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>Добавляет объект <see cref="T:System.Object" />, являющийся сопоставлением таблиц в коллекции.</summary>
      <param name="value">Объект <see langword="DataTableMapping" /> для добавления в коллекцию.</param>
      <returns>Индекс объекта <see langword="DataTableMapping" />, который был добавлен к коллекции.</returns>
      <exception cref="T:System.InvalidCastException">Переданный объект не был объектом <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>Добавляет <see cref="T:System.Data.Common.DataTableMapping" /> к коллекции для данного имени исходной таблицы и имени таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable">Имя исходной таблицы для сопоставления, определяемое с учетом регистра.</param>
      <param name="dataSetTable">Имя таблицы <see cref="T:System.Data.DataSet" /> для сопоставления, определяемое без учета регистра.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" />, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary>Копирует элементы указанного объекта <see cref="T:System.Array" /> в конец коллекции.</summary>
      <param name="values">Массив значений типа <see cref="T:System.Array" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.Common.DataTableMapping" /> в конец коллекции.</summary>
      <param name="values">Массив объектов <see cref="T:System.Data.Common.DataTableMapping" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>Получает значение, показывающее, существует ли данный объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит указанный объект <see cref="T:System.Data.Common.DataTableMapping" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>Получает значение, показывающее, существует ли объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы в коллекции.</summary>
      <param name="value">Имя исходной таблицы, содержащей объект <see cref="T:System.Data.Common.DataTableMapping" />, определяемое с учетом регистра.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит объект <see cref="T:System.Data.Common.DataTableMapping" /> с этим именем исходной таблицы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Data.Common.DataTableMappingCollection" /> в указанный массив.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">Начальный индекс массива.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Data.Common.DataTableMapping" /> в указанный массив.</summary>
      <param name="array">Объект <see cref="T:System.Data.Common.DataTableMapping" />, в который копируются элементы <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">Начальный индекс массива.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>Возвращает количество объектов <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <returns>Количество объектов <see langword="DataTableMapping" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Получает объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTable">Имя таблицы <see cref="T:System.Data.DataSet" /> для поиска, определяемое без учета регистра.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию элементов коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>Получает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходной таблицы и именем таблицы <see cref="T:System.Data.DataSet" /> с помощью заданного <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="tableMappings">Коллекция <see cref="T:System.Data.Common.DataTableMappingCollection" /> для поиска.</param>
      <param name="sourceTable">Имя сопоставленной исходной таблицы, определяемое с учетом регистра.</param>
      <param name="dataSetTable">Имя сопоставленной таблицы <see cref="T:System.Data.DataSet" /> без учета регистра.</param>
      <param name="mappingAction">Одно из значений <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>Получает местоположение указанного объекта <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataTableMapping" /> для поиска.</param>
      <returns>Местоположение (с нуля) указанного объекта <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>Получает расположение объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable">Имя исходной таблицы с учетом регистра.</param>
      <returns>Местоположение (с нуля) объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>Получает расположение объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTable">Имя таблицы <see langword="DataSet" /> для поиска, определяемое без учета регистра.</param>
      <returns>Местоположение (с нуля) объекта <see cref="T:System.Data.Common.DataTableMapping" /> с данным именем таблицы <see cref="T:System.Data.DataSet" />; -1, если объект <see cref="T:System.Data.Common.DataTableMapping" /> не существует в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary>Вставляет объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекцию <see cref="T:System.Data.Common.DataTableMappingCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <param name="value">Вставляемый объект <see cref="T:System.Data.Common.DataTableMapping" /> .</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекцию <see cref="T:System.Data.Common.DataTableMappingCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <param name="value">Вставляемый объект <see cref="T:System.Data.Common.DataTableMapping" /> .</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DataTableMapping" /> по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) объекта <see cref="T:System.Data.Common.DataTableMapping" /> для возвращения.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable">Имя исходной таблицы с учетом регистра.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
      <param name="value">Удаляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
      <param name="value">Удаляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <exception cref="T:System.InvalidCastException">Указанный объект не являлся объектом <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException">Указанный объект отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Common.DataTableMapping" />, находящийся по указанному индексу, из коллекции.</summary>
      <param name="index">Индекс (отсчет с нуля) удаляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Объект <see cref="T:System.Data.Common.DataTableMapping" /> не существует по указанному индексу.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>Удаляет из коллекции объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable">Имя исходной таблицы для поиска, определяемое с учетом регистра.</param>
      <exception cref="T:System.IndexOutOfRangeException">Не существует объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IList" /> доступным только для чтения.</summary>
      <returns>Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент, расположенный в коллекции по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс получаемого или задаваемого элемента.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary>Добавляет сопоставление таблицы в коллекцию.</summary>
      <param name="sourceTableName">Имя исходной таблицы с учетом регистра.</param>
      <param name="dataSetTableName">Имя таблицы <see cref="T:System.Data.DataSet" />.</param>
      <returns>Ссылка на вновь сопоставленный объект <see cref="T:System.Data.ITableMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary>Получает объект TableMapping с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTableName">Имя таблицы <see langword="DataSet" /> в коллекции.</param>
      <returns>Объект TableMapping с указанным именем таблицы <see langword="DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary>Возвращает или задает экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" />.</summary>
      <param name="index">Имя <see langword="SourceTable" /> объекта <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see langword="SourceTable" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary>Представляет столбец в источнике данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, разрешены ли значения <see langword="DBNull" /> в этом столбце, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, разрешены ли значения <see langword="DBNull" /> в этом столбце, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если значения <see langword="DBNull" /> разрешены в этом столбце; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary>Получает имя каталога, связанного с источником данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя каталога или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя каталога, связанного с источником данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary>Возвращает имя базового столбца; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя столбца или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя базового столбца; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary>Получает имя схемы, связанной с источником данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя схемы или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя схемы, связанной с источником данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary>Получает имя сервера, связанное со столбцом; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя сервера или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя сервера, связанное со столбцом; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary>Возвращает имя таблицы в схеме; в противном случае возвращает <see langword="null" />, если значение не задано. Можно задать имя таблицы или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя таблицы в схеме; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary>Возвращает имя столбца. Можно задать имя столбца при переопределении в производном классе.</summary>
      <returns>Имя столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary>Возвращает позицию столбца (порядковый номер) в строке источника данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее позицию столбца, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Значение <see langword="int32" /> для порядкового номера столбца; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary>Возвращает размер столбца; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее размер столбца, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Значение для размера столбца; в противном случае — пустая<see langword="Nothing" /> ссылка (в Visual Basic), если значение не задано. <see langword="int32" /></returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary>Возвращает тип данных, хранящихся в столбце. Можно задать объект <see cref="T:System.Type" />, представляющий тип данных в столбце при переопределении в производном классе.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип данных, хранящихся в столбце.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary>Получает имя типа данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя типа данных или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя типа данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, обозначен ли этот столбец псевдонимом, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, обозначен ли этот столбец псевдонимом, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец обозначен псевдонимом, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, выполняется ли автоматическое увеличение значений в этом столбце, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, выполняется ли автоматическое увеличение значений в этом столбце, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если выполняется автоматическое увеличение значений в этом столбце; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец выражением, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец выражением, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец является выражением; в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец скрытым, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец скрытым, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец является скрытым, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец идентификатором, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец идентификатором, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец является идентификатором, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец ключом, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец ключом, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец является ключом, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, содержит ли этот столбец данные большого формата, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, содержит ли этот столбец данные большого формата, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец содержит данные большого формата; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, доступен ли этот столбец только для чтения, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, доступен ли этот столбец только для чтения, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец доступен только для чтения; в противном случае — значение <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, применяется ли к этому столбцу уникальное ограничение, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, применяется ли к этому столбцу уникальное ограничение, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если к этому столбцу применяется уникальное ограничение; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary>Получает объект на основе имени свойства столбца.</summary>
      <param name="property">Имя свойства столбца.</param>
      <returns>Объект на основе имени свойства столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary>Получает точность чисел данных в столбце; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее точность чисел данных в столбце, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Значение, указывающее точность данных столбца, если данные являются числовыми; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано. <see langword="int32" /></returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary>Получает значение <see langword="int32" />, допускающее null, которое возвращает <see langword="null" /> или числовой масштаб данных в столбце. Можно задать значение <see langword="null" /> или <see langword="int32" /> для числового масштаба данных в столбце при переопределении в производном классе.</summary>
      <returns>Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано; в противном случае — значение <see langword="int32" />, указывающее масштаб данных в столбце, если данные являются числовыми.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary>Получает имя с указанием сборки для объекта <see cref="T:System.Type" />, представляющего тип данных в столбце; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя с указанием сборки или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя с указанием сборки для объекта <see cref="T:System.Type" />, представляющего тип данных в столбце; в противном случае — пустая сборка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary>Представляет оператор SQL или хранимую процедуру, применяемую к источнику данных. Предоставляет базовый класс для классов, зависящих от базы данных, представляющих команды. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary>Создает экземпляр объекта <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary>При переопределении в производном классе пытается отменить выполнение <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary>При переопределении в производном классе получает или задает текстовую команду для выполнения в отношении источника данных.</summary>
      <returns>Текстовая команда для выполнения. Значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary>При переопределении в производном классе получает или задает время ожидания перед завершением попытки выполнить команду и выдачей сообщения об ошибке.</summary>
      <returns>Время в секундах, в течение которого должно происходить ожидание выполнения команды.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary>При переопределении в производном классе возвращает или задает способ интерпретации свойства <see cref="P:System.Data.Common.DbCommand.CommandText" />.</summary>
      <returns>Одно из значений перечисления, указывающее, как интерпретируется Командная строка. Значение по умолчанию — <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DbConnection" />, используемый этим объектом <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Подключение к источнику данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary>При переопределении в производном классе создает новый экземпляр объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary>При переопределении в производном классе получает или задает <see cref="T:System.Data.Common.DbConnection" />, используемый <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Подключение к источнику данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary>При переопределении в производном классе возвращает коллекцию объектов <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary>При переопределении в производном классе получает или задает <see cref="P:System.Data.Common.DbCommand.DbTransaction" />, который выполняет этот объект <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Транзакция, в рамках которой выполняется командный объект поставщика данных .NET. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary>При переопределении в производном классе получает или задает значение, определяющее, должен ли объект команды выводиться на экран в настраиваемом элементе управления интерфейса.</summary>
      <returns>Значение <see langword="true" />, если объект команды должен выводиться на экран в элементе управления; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary>Асинхронно размещает объект команды.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary>При переопределении в производном классе выполняет команду для подключения.</summary>
      <param name="behavior">Экземпляр <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Задача, представляющая операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Поставщики должны реализовать этот метод, чтобы предоставить реализацию, отличную от реализации по умолчанию, для перегрузок <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены. Исключения, создаваемые ExecuteReader, будут связаны через возвращаемое свойство исключения задачи.  
Этот метод принимает токен отмены, который может использоваться для запроса ранней отмены операции. Реализации могут игнорировать данный запрос.</summary>
      <param name="behavior">Параметры для завершения инструкции и извлечения данных.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary>При переопределении в производном классе выполняет инструкцию SQL для объекта подключения.</summary>
      <returns>Число обработанных строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary>Асинхронная версия <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, которая выполняет инструкцию SQL относительно объекта соединения.  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>Это асинхронная версия метода <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно игнорировать токен отмены.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены.  Исключения, создаваемые <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, будут связаны через возвращаемое свойство исключения задачи.  
Не вызывайте другие методы и свойства объекта <see langword="DbCommand" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary>Выполняет свойство <see cref="P:System.Data.Common.DbCommand.CommandText" /> применительно к свойству <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Выполняет свойство <see cref="P:System.Data.Common.DbCommand.CommandText" /> применительно к свойству <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает объект <see cref="T:System.Data.Common.DbDataReader" />, используя одно из значений типа <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Одно из значений перечисления, задающее поведение команды.</param>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary>Асинхронная версия <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbCommand.CommandText" /> относительно <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />.  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>Асинхронная версия <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbCommand.CommandText" /> относительно <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />.  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Одно из значений перечисления, задающее поведение команды.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Одно из значений перечисления, задающее поведение команды.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbCommand.CommandText" /> относительно <see cref="P:System.Data.Common.DbCommand.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />. Этот метод распространяет уведомление о том, что операции следует отменить.  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.CommandBehavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary>При переопределении в производном классе выполняет запрос и возвращает первый столбец первой строки в результирующем наборе, возвращаемом запросом. Все другие столбцы и строки игнорируются.</summary>
      <returns>Первый столбец первой строки в результирующем наборе.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary>Асинхронная версия метода <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />, который выполняет запрос и возвращает первый столбец первой строки в наборе результатов, возвращаемых запросом. Все другие столбцы и строки игнорируются.  
Вызывает <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>Это асинхронная версия метода <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно игнорировать токен отмены.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены. Исключения, создаваемые ExecuteScalar, будут связаны через возвращаемое свойство исключения задачи.  
Не вызывайте другие методы и свойства объекта <see langword="DbCommand" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Data.Common.DbParameter" />. Дополнительные сведения о параметрах см. в разделе Настройка параметров и типов данных параметров.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary>При переопределении в производном классе создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary>Асинхронно создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
      <param name="cancellationToken" />
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IDbConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>Подключение к источнику данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns>Объект <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary>Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> в <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary>Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> в <see cref="P:System.Data.IDbCommand.Connection" /> и строит <see cref="T:System.Data.IDataReader" /> с помощью одного из значений <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Одно из значений перечисления, задающее поведение команды.</param>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary>Возвращает набор <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary>Возвращает или задает контекст <see cref="P:System.Data.Common.DbCommand.DbTransaction" />, в котором выполняется этот объект <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Транзакция, в рамках которой выполняется объект <see langword="Command" /> поставщика данных .NET Framework. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary>Возвращает или задает контекст <see cref="T:System.Data.Common.DbTransaction" />, в котором выполняется этот объект <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Транзакция, в рамках которой выполняется объект <see langword="Command" /> поставщика данных .NET Framework. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary>При переопределении в производном классе получает или задает способ применения результатов команды к объекту <see cref="T:System.Data.DataRow" />, если он используется методом Update объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Одно из значений перечисления, указывающее, как применяются результаты команды. Значение по умолчанию — <see langword="Both" />, если команда не создается автоматически. Значение по умолчанию — <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary>Автоматически создает однотабличные команды, которые позволяют согласовать изменения, внесенные в <see cref="T:System.Data.DataSet" />, со связанной базой данных. Это абстрактный класс, который может только наследоваться.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса, который наследует от класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary>Разрешает реализации поставщика класса <see cref="T:System.Data.Common.DbCommandBuilder" /> обрабатывать дополнительные свойства параметров.</summary>
      <param name="parameter">Объект <see cref="T:System.Data.Common.DbParameter" />, к которому применяются дополнительные изменения.</param>
      <param name="row">Объект <see cref="T:System.Data.DataRow" />, из которого таблица схемы предоставляется с помощью метода <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType">Тип создаваемой команды: INSERT, UPDATE или DELETE.</param>
      <param name="whereClause">Значение <see langword="true" />, если параметр является частью значений команд UPDATE или DELETE предложения WHERE, значение <see langword="false" />, если он является частью значений команд INSERT или UPDATE.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary>Возвращает или задает <see cref="T:System.Data.Common.CatalogLocation" /> для экземпляра класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary>Возвращает или задает строку, которую можно использовать в качестве разделителя каталогов, для экземпляра класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Строка, указывающая разделитель каталогов, который используется в экземпляре класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary>Указывает, какое значение типа <see cref="T:System.Data.ConflictOption" /> должно использоваться объектом <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Возвращает одно из значений <see cref="T:System.Data.ConflictOption" />, описывающих функционирование этого объекта <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DbDataAdapter" />, для которого автоматически создаются инструкции Transact-SQL.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbCommandBuilder" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций удаления в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций удаления в источнике данных (дополнительно могут использоваться имена столбцов для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются <c>@p1</c>, <c>@p2</c> и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций вставки в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций вставки в источнике данных (дополнительно могут использоваться столбцы для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются <c>@p1</c>, <c>@p2</c> и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary>Возвращает имя указанного параметра в формате <c>@p#</c>. Используется при создании пользовательского построителя команд.</summary>
      <param name="parameterOrdinal">Число, включаемое как часть имени параметра.</param>
      <returns>Имя параметра с заданным числом, добавляемым в качестве части имени этого параметра.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary>Возвращает полное имя параметра при данном частичном имени параметра.</summary>
      <param name="parameterName">Частичное имя параметра.</param>
      <returns>Полное имя параметра, соответствующее запрошенному частичному имени параметра.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary>Возвращает местозаполнитель для параметра в связанной инструкции SQL.</summary>
      <param name="parameterOrdinal">Число, включаемое как часть имени параметра.</param>
      <returns>Имя параметра с указанным добавленным числом.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary>Возвращает таблицу схемы для объекта <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <param name="sourceCommand">Объект <see cref="T:System.Data.Common.DbCommand" />, для которого выполняется извлечение соответствующей таблицы схемы.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, представляющий схему для указанного объекта <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций обновления в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, который требуется для выполнения операций обновления в источнике данных (дополнительно могут использоваться столбцы для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются <c>@p1</c>, <c>@p2</c> и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbCommand" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary>Сбрасывает свойства <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> и <see cref="T:System.Data.UpdateRowSource" /> в объекте <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="command">Объект <see cref="T:System.Data.Common.DbCommand" />, который должен использоваться построителем команд для соответствующих команд INSERT, UPDATE или DELETE.</param>
      <returns>Экземпляр объекта <see cref="T:System.Data.Common.DbCommand" />, используемый для каждой операции вставки, обновления или удаления. Передача значения NULL позволяет методу <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> создавать объект <see cref="T:System.Data.Common.DbCommand" /> на основе команды Select, связанной с объектом <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Если у идентификатора нет кавычек, при наличии правильного каталога возвращает правильную форму этого идентификатора, взятую в кавычки, при этом корректно избегает кавычек, встроенных в идентификатор.</summary>
      <param name="unquotedIdentifier">Исходный идентификатор без кавычек.</param>
      <returns>Версия идентификатора, заключенного кавычки. Кавычки, встроенные в идентификатор, корректно игнорируются.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary>Возвращает или задает начальный символ или символы, используемые для указания объектов базы данных (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</summary>
      <returns>Используемый начальный символ или символы. Значение по умолчанию - пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Это свойство не может быть изменено после создания команды INSERT, UPDATE или DELETE.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary>Получает или задает конечный символ или символы, используемые для указания объектов базы данных (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</summary>
      <returns>Используемый конечный символ или символы. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary>Очищает команды, связанные с этим объектом <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Добавляет обработчик событий для события <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent">Экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, содержащий сведения о событии.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary>Возвращает или задает символ, который используется в качестве разделителя между идентификатором схемы и остальными идентификаторами.</summary>
      <returns>Символ, который необходимо использовать в схеме в качестве разделителя.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary>Указывает, включены все значения столбца в инструкции UPDATE или только измененные значения.</summary>
      <returns>Значение <see langword="true" />, если оператор UPDATE, созданный объектом <see cref="T:System.Data.Common.DbCommandBuilder" />, включает все столбцы; значение <see langword="false" />, если он включает только измененные столбцы.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary>Регистрирует объект <see cref="T:System.Data.Common.DbCommandBuilder" />, чтобы обработать событие <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter">Объект <see cref="T:System.Data.Common.DbDataAdapter" />, который требуется использовать для обновления.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Если у идентификатора есть кавычки, возвращает форму этого идентификатора без кавычек, при этом корректно учитывая кавычки, встроенные в идентификатор.</summary>
      <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
      <returns>Идентификатор без кавычек, в котором встроенные кавычки корректно учтены.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary>Определяет основное поведение подключений к базе данных и предоставляет базовый класс для подключений, связанных с базой данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>При переопределении в производном классе запускает транзакцию в базе данных.</summary>
      <param name="isolationLevel">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Асинхронно запускает транзакцию в базе данных.</summary>
      <param name="isolationLevel">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <param name="cancellationToken">Токен для отмены асинхронной операции.</param>
      <returns>Задача, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой является объектом, представляющим новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary>Начинает транзакцию базы данных.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
      <param name="isolationLevel">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Асинхронно начинает транзакцию базы данных.</summary>
      <param name="isolationLevel">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <param name="cancellationToken">Токен для отмены асинхронной операции.</param>
      <returns>Задача, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой является объектом, представляющим новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary>Асинхронно начинает транзакцию базы данных.</summary>
      <param name="cancellationToken">Токен для отмены асинхронной операции.</param>
      <returns>Задача, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой является объектом, представляющим новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary>При переопределении в производном классе изменяет текущую базу данных для открытого подключения.</summary>
      <param name="databaseName">Имя базы данных для используемого подключения.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>Асинхронно изменяет текущую базу данных для открытого подключения.</summary>
      <param name="databaseName">Имя базы данных для используемого подключения.</param>
      <param name="cancellationToken">Токен для отмены асинхронной операции.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary>При переопределении в производном классе закрывает подключение к базе данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary>Асинхронно закрывает подключение к базе данных.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary>При переопределении в производном классе получает или задает строку, используемую для открытия подключения.</summary>
      <returns>Строка подключения использована для установления первоначального подключения. Точное содержимое строки подключения зависит от конкретного источника данных для этого подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary>Получает время ожидания при установлении подключения, по истечении которого попытка подключения завершается и генерируется ошибка.</summary>
      <returns>Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию определяется конкретным типом используемого подключения.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary>Создает и возвращает объект <see cref="T:System.Data.Common.DbCommand" />, связанный с текущим подключением.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary>При переопределении в производном классе создает и возвращает объект <see cref="T:System.Data.Common.DbCommand" />, связанный с текущим подключением.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary>При переопределении в производном классе получает имя текущей базы данных после открытия подключения или имя базы данных, указанное в строке подключения перед открытием подключения.</summary>
      <returns>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary>При переопределении в производном классе возвращает имя сервера базы данных, к которому осуществляется подключение.</summary>
      <returns>Имя сервера базы данных, к которому осуществляется подключение. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary>Получает объект <see cref="T:System.Data.Common.DbProviderFactory" /> для данного элемента <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Набор методов для создания экземпляров классов поставщиков, реализующих источник данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary>Асинхронно размещает объект подключения.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Выполняет прикрепление в указанной транзакции.</summary>
      <param name="transaction">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />, используя указанную строку в качестве имени схемы.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> задается как значение NULL.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />, используя указанную строку в качестве имени схемы и указанный массив строк для значений ограничений.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <param name="restrictionValues">Задает набор значений ограничений для запрошенной схемы.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> задается как значение NULL.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange">Объект <see cref="T:System.Data.StateChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary>При переопределении в производном классе открывает подключение к базе данных с параметрами, определяемыми свойством <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary>Асинхронная версия <see cref="M:System.Data.Common.DbConnection.Open" />, которая открывает соединение с базой данных с параметрами, указанными <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Этот метод вызывает виртуальный метод <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>Это асинхронная версия метода <see cref="M:System.Data.Common.DbConnection.Open" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно учитывать токен отмены.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbConnection.Open" /> и возвращает выполненную задачу. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный cancellationToken. Исключения, создаваемые Open, будут связаны через возвращаемое свойство исключения задачи.  
Не вызывайте другие методы и свойства объекта <see langword="DbConnection" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary>При переопределении в производном классе получает строку, представляющую версию сервера, к которому подключен объект.</summary>
      <returns>Версия базы данных. Формат возвращенной строки зависит от конкретного типа используемого подключения.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> был вызван, когда возвращаемая задача не была завершена, и не было открыто соединение после вызова <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary>Получает строку, описывающую состояние подключения.</summary>
      <returns>Состояние подключения. Формат возвращенной строки зависит от конкретного типа используемого подключения.</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary>Происходит при изменении состояния события.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary>Начинает транзакцию базы данных.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
      <param name="isolationLevel">Одно из значений перечисления, задающих уровень изоляции используемой транзакции.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary>Создает и возвращает объект <see cref="T:System.Data.Common.DbCommand" />, связанный с текущим подключением.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbCommand" />, связанный с подключением.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary>Предоставляет базовый класс для строго типизированных построителей строк подключения.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> (необязательно) с использованием правил ODBC для значений в кавычках.</summary>
      <param name="useOdbcRules">Значение <see langword="true" /> определяет использование {} для разделения полей. Значение <see langword="false" /> — использование кавычек.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary>Добавляет запись с указанными ключом и значением в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ, добавляемый в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value">Значение заданного ключа.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения.  

или - 
<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary>Обеспечивает эффективный и безопасный способ добавления ключа и значения в существующий объект <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="builder">Объект <see cref="T:System.Text.StringBuilder" />, к которому требуется добавить пару "ключ — значение".</param>
      <param name="keyword">Добавляемый ключ.</param>
      <param name="value">Значение указанного ключа.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary>Обеспечивает эффективный и безопасный способ добавления ключа и значения в существующий объект <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="builder">Объект <see cref="T:System.Text.StringBuilder" />, к которому требуется добавить пару "ключ — значение".</param>
      <param name="keyword">Добавляемый ключ.</param>
      <param name="value">Значение указанного ключа.</param>
      <param name="useOdbcRules">Значение <see langword="true" /> определяет использование {} для разделения полей. Значение <see langword="false" /> — использование кавычек.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary>Возвращает или задает значение, указывающее, отображается ли свойство <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> в конструкторах Visual Studio.</summary>
      <returns>Значение <see langword="true" />, если строка подключения отображается в конструкторах; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary>Удаляет содержимое экземпляра <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary>Очищает коллекцию объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в связанном <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary>Возвращает или задает строку подключения, связанную с этим <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Текущая строка подключения, созданная из пар "ключ-значение", которые содержатся в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. Значение по умолчанию - пустая строка.</returns>
      <exception cref="T:System.ArgumentException">Предоставлен недопустимый аргумент строки соединения.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Определяет, содержит ли объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> указанный ключ.</summary>
      <param name="keyword">Ключ, который требуется найти в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> содержит запись с указанным ключом. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary>Возвращает текущее количество ключей, содержащихся в свойстве <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns>Количество ключей, содержащихся в строке соединения, которую обеспечивает экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary>Сравнивает сведения о подключении в этом объекте <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> со сведениями о подключении в предоставленном объекте.</summary>
      <param name="connectionStringBuilder">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, который необходимо сравнить с объектом <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" />, если сведения о подключении в обоих объектах <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> приводят к появлению эквивалентной строки подключения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary>Заполняет указанный <see cref="T:System.Collections.Hashtable" /> сведениями обо всех свойствах данного <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors">
        <see cref="T:System.Collections.Hashtable" />, заполняемый сведениями о данном <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если список <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступной только для чтения.</summary>
      <returns>Значение<see langword="true" /> , если объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary>Возвращает или задает значение, связанное с указанным ключом.</summary>
      <param name="keyword">Ключ возвращаемого или задаваемого элемента.</param>
      <returns>Значение, связанное с указанным ключом. Если указанный ключ не найден, при попытке его получения возвращается пустая ссылка (<see langword="Nothing" /> в Visual Basic), а при попытке задания создается новый элемент с использованием указанного ключа.  
Передача пустого ключа (<see langword="Nothing" /> в Visual Basic) порождает <see cref="T:System.ArgumentNullException" />. При присвоении значения NULL удаляется пара "ключ-значение".</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Свойство задано, а значение <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступно только для чтения.  

или - 
Свойство задано, <paramref name="keyword" /> не существует в коллекции, а <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary>Удаляет из экземпляра <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> запись с указанным ключом.</summary>
      <param name="keyword">Ключ пары «ключ-значение», удаляемой из строки подключения в этом объекте <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если ключ был указан в строке подключения и был удален. Значение <see langword="false" />, если такого ключа не было.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения, или <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Указывает, существует ли заданный ключ в этом экземпляре <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ, который требуется найти в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> содержит запись с указанным ключом. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary>Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Добавляет элемент с указанными ключом и значением в объект <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">Объект <see cref="T:System.Object" /> используется в качестве ключа добавляемого элемента.</param>
      <param name="value">Объект <see cref="T:System.Object" /> используется в качестве значения добавляемого элемента.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Определяет, содержится ли элемент с указанным ключом в объекте <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">Ключ для размещения в объекте <see cref="T:System.Collections.IDictionary" />.</param>
      <returns>Значение <see langword="true" />, если в <see cref="T:System.Collections.IDictionary" /> содержится элемент с данным ключом; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary>Возвращает или задает элемент с указанным ключом.</summary>
      <param name="keyword">Ключ элемента, который требуется получить или задать.</param>
      <returns>Элемент с указанным ключом.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">Ключ элемента, который требуется удалить.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который осуществляет итерацию по коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns>
        <see cref="T:System.ComponentModel.AttributeCollection" />, содержащий атрибуты для этого объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns>Имя класса объекта или <see langword="null" />, если класс не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя этого экземпляра компонента.</summary>
      <returns>Имя объекта или <see langword="null" />, если объект не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типа для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.TypeConverter" />, который является преобразователем для данного объекта, или значение <see langword="null" /> в случае отсутствия <see cref="T:System.ComponentModel.TypeConverter" /> для данного объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns>Значение <see cref="T:System.ComponentModel.EventDescriptor" />, представляющее событие по умолчанию для этого объекта, или <see langword="null" />, если этот объект не имеет событий.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns>Значение <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющее свойство по умолчанию для данного объекта, или <see langword="null" />, если этот объект не имеет свойств.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор заданного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns>Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает события для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает события для этого экземпляра компонента, используя заданный массив атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns>Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий отфильтрованные события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает свойства для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает свойства для этого экземпляра компонента, используя массив атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns>Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющая отфильтрованные свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает объект, содержащий свойство, описываемое заданным дескриптором свойства.</summary>
      <param name="pd">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, для которого ведется поиск владельца.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий владельца заданного свойства.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary>Возвращает строку подключения, связанную с этим <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Текущее свойство <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Получает значение, соответствующее заданному ключу, из данного объекта <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ искомого элемента.</param>
      <param name="value">Значение, соответствующее <paramref name="keyword" />.</param>
      <returns>Значение <see langword="true" />, если значение <paramref name="keyword" /> найдено в строке подключения. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> содержит значение NULL (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит значения в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит значения из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>Помогает реализации интерфейса <see cref="T:System.Data.IDbDataAdapter" />. Разработчики производных классов <see cref="T:System.Data.Common.DbDataAdapter" /> реализуют набор функций, обеспечивающий строгую типизацию, но наследуют большинство функций, необходимых для полной реализации DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>Инициализирует новый экземпляр класса DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary>Инициализирует новый экземпляр класса <see langword="DataAdapter" /> из существующего объекта того же типа.</summary>
      <param name="adapter">Объект <see langword="DataAdapter" /> используется для создания нового <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary>Добавляет интерфейс <see cref="T:System.Data.IDbCommand" /> к текущему пакету.</summary>
      <param name="command">Интерфейс <see cref="T:System.Data.IDbCommand" />, добавляемый к пакету.</param>
      <returns>Число команд в пакете, имевшееся до добавления интерфейса <see cref="T:System.Data.IDbCommand" />.</returns>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary>Удаляет все объекты <see cref="T:System.Data.IDbCommand" /> из пакета.</summary>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <param name="command">Интерфейс <see cref="T:System.Data.IDbCommand" /> выполняется во время использования метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Является ли команда оператором UPDATE, INSERT, DELETE или SELECT.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" />, который обновляет источник данных.</param>
      <param name="command">Интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения при применении метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Является ли команда оператором UPDATE, INSERT, DELETE или SELECT.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>Имя по умолчанию, используемое объектом <see cref="T:System.Data.Common.DataAdapter" /> для сопоставлений таблиц.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary>Возвращает или задает команду для удаления записей из набора данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbDataAdapter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary>Выполняет текущий пакет.</summary>
      <returns>Возвращает значение из последней команды в пакете.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="startRecord">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords">Максимальное число извлекаемых записей.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблицы.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.  
 -или-  
 Подключение является недопустимым.</exception>
      <exception cref="T:System.InvalidCastException">Не удалось найти подключение.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startRecord" /> меньше 0.  

или - 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с помощью имен <see cref="T:System.Data.DataSet" /> и исходной таблицы, командной строки и поведения команды.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="startRecord">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords">Максимальное число извлекаемых записей.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблицы.</param>
      <param name="command">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startRecord" /> меньше 0.  
-или- 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с помощью имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблицы.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.SystemException">Исходная таблица является недопустимой.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имени <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">Имя объекта <see cref="T:System.Data.DataTable" />, используемое для сопоставления таблицы.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных с помощью указанного объекта <see cref="T:System.Data.DataTable" />, интерфейса <see cref="T:System.Data.IDbCommand" /> и значения типа <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="command">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Объект <see cref="T:System.Data.DataTable" /> для заполнения из источника данных.</param>
      <param name="startRecord">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords">Максимальное число извлекаемых записей.</param>
      <param name="command">Интерфейс <see cref="T:System.Data.IDbCommand" />, исполняемый для заполнения объектов <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Количество строк, успешно добавленных или обновленных в таблицах данных.</returns>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.  

или -  

 Подключение является недопустимым.</exception>
      <exception cref="T:System.InvalidCastException">Не удалось найти подключение.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startRecord" /> меньше 0.  

или - 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary>Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных, начиная с указанной записи и вплоть до заданного максимального количества получаемых записей.</summary>
      <param name="startRecord">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords">Максимальное число извлекаемых записей.</param>
      <param name="dataTables">Объект <see cref="T:System.Data.DataTable" /> для заполнения из источника данных.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Это значение не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary>Возвращает или задает реакцию команды, использованной для заполнения адаптера данных.</summary>
      <returns>Значение типа <see cref="T:System.Data.CommandBehavior" /> команды, использованной для заполнения адаптера данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> с именем "Таблица" к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для вставки схемы.</param>
      <param name="schemaType">Одно из значений типа <see cref="T:System.Data.SchemaType" />, указывающее, как вставлять схему.</param>
      <returns>Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в объект <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, который необходимо заполнить сведениями схемы из источника данных.</param>
      <param name="schemaType">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблицы.</param>
      <param name="behavior">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" /> и объекте <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для вставки схемы.</param>
      <param name="schemaType">Одно из значений типа <see cref="T:System.Data.SchemaType" />, указывающее, как вставлять схему.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблицы.</param>
      <returns>Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в объект <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException">Не удается найти исходную таблицу для получения схемы.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>Настраивает схему для указанного объекта <see cref="T:System.Data.DataTable" />, основываясь на указанном значении типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, который необходимо заполнить сведениями схемы из источника данных.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Настраивает схему для указанного объекта <see cref="T:System.Data.DataTable" />, основываясь на указанном значении типа <see cref="T:System.Data.SchemaType" />, командной строке и значениях типа <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, который необходимо заполнить сведениями схемы из источника данных.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary>Возвращает интерфейс <see cref="T:System.Data.IDataParameter" /> из одной из команд в текущем пакете.</summary>
      <param name="commandIdentifier">Индекс команды, из которой извлекается параметр.</param>
      <param name="parameterIndex">Индекс параметра внутри команды.</param>
      <returns>Указанный <see cref="T:System.Data.IDataParameter" />.</returns>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary>Возвращает сведения об отдельной попытке обновления в рамках большего по своему объему пакета обновления.</summary>
      <param name="commandIdentifier">Порядковый номер (с нуля) столбца отдельной команды в пакете.</param>
      <param name="recordsAffected">Количество строк в хранилище данных, на которые было оказано воздействие указанной командой в пакете.</param>
      <param name="error">Исключение <see cref="T:System.Exception" />, выданное при выполнении указанной команды. Возвращает значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic), если исключение не было выдано.</param>
      <returns>Сведения об отдельной попытке обновления в рамках большего по своему объему пакета обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns>Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary>Инициализирует пакетную обработку для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary>Возвращает или задает команду SQL для вставки новых записей в источник данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>Вызывает событие <see langword="RowUpdated" /> поставщика данных .NET Framework.</summary>
      <param name="value">Объект <see cref="T:System.Data.Common.RowUpdatedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Вызывает событие <see langword="RowUpdating" /> поставщика данных .NET Framework.</summary>
      <param name="value">Объект класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary>Возвращает или задает команду, используемую для выбора записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>Возвращает или задает оператор SQL для удаления записей из набора данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>Возвращает или задает оператор SQL для вставки новых записей в источник данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>Возвращает или задает оператор SQL для выбора записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>Возвращает или задает оператор SQL для обновления записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary>Завершает пакетную обработку для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном массиве объектов <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows">Массив объектов <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  

или - 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  

или - 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном массиве объектов <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows">Массив объектов <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <param name="tableMapping">Используемая коллекция <see cref="P:System.Data.IDataAdapter.TableMappings" />.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  

или - 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  

или - 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в <see cref="T:System.Data.DataSet" /> с заданным именем <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, используемый для обновления источника данных.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблицы.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  

или - 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  

или - 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary>Возвращает или задает значение, которое включает или отключает поддержку пакетной обработки и задает количество команд, которые могут выполняться в рамках одного пакета.</summary>
      <returns>Количество строк, которые необходимо обработать с помощью одного пакета.  
  Значение 
  Действие 
  0 
  Размер пакета не ограничен.  

  1 
  Отключает пакетное обновление.  

  &gt; 1 
  Изменения отправляются с помощью пакетов, единовременное количество операций в которых определяется свойством <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />.  

   

 При присвоении этому <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> свойству значения, отличного от 1, для всех команд <see cref="T:System.Data.Common.DbDataAdapter" /> , связанных с, свойство должно иметь значение None или аутпутпараметерс. В противном случае будет выдаваться исключение.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary>Возвращает или задает команду, используемую для обновления записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary>Считывает однопроходные потоки строк из источника данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary>Закрывает объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary>Асинхронно закрывает объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary>Возвращает значение, показывающее глубину вложенности для текущей строки.</summary>
      <returns>Глубина вложенности для текущей строки.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary>Освобождает управляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbDataReader" /> (при необходимости освобождает и неуправляемые ресурсы).</summary>
      <param name="disposing">Значение <see langword="true" />, чтобы освободить все ресурсы (управляемые и неуправляемые); значение <see langword="false" />, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary>Асинхронно освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary>При переопределении в производном классе получает число столбцов в текущей строке.</summary>
      <returns>Число столбцов в текущей строке.</returns>
      <exception cref="T:System.NotSupportedException">Текущее подключение к экземпляру SQL Server отсутствует.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде логического значения.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде байта.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе считывает указанное число байтов из указанного столбца, начиная с указанного индекса, и записывает их в буфер, начиная с указанной позиции в буфере.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataOffset">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который копируются данные.</param>
      <param name="bufferOffset">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length">Максимальное число считываемых символов.</param>
      <returns>Число фактически считанных байтов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде одиночного символа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе считывает указанное число символов из указанного столбца, начиная с указанного индекса, и записывает их в буфер, начиная с указанной позиции.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataOffset">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который копируются данные.</param>
      <param name="bufferOffset">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length">Максимальное число считываемых символов.</param>
      <returns>Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary>Возвращает вложенный объект чтения данных для запрошенного столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Средство чтения данных.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary>При переопределении в производном классе получает название типа данных указанного столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Имя типа данных.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbDataReader" /> для запрошенного порядкового номера столбца, который может быть переопределен с помощью зависящей от поставщика реализации.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary>При переопределении в производном классе получает значение заданного столбца в виде числа с плавающей запятой двойной точности.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary>При переопределении в производном классе возвращает перечислитель, который может использоваться для выполнения итерации по строкам в модуле чтения данных.</summary>
      <returns>Перечислитель, который может использоваться для выполнения итерации по строкам в модуле чтения данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary>При переопределении в производном классе получает тип данных указанного столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных заданного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  
-или- 
Модуль чтения данных был закрыт во время получения данных.  

или -

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).  
-или-
Модуль чтения попытался считать ранее считанный столбец в последовательном режиме.  
-или-
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary>Асинхронно возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Задача, <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой содержит значение заданного столбца.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  

или -

Модуль чтения данных был закрыт во время получения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).
-или-
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  

или -

Выполнялась асинхронная операция. Относится ко всем методам Get_*_ при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="cancellationToken">Токен для отмены асинхронной операции.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Задача, <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой содержит значение заданного столбца.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  
-или-
Модуль чтения данных был закрыт во время получения данных.  

или -

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).

или -

Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
-или-
Выполнялась асинхронная операция. Относится ко всем методам Get_*_ при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary>При переопределении в производном классе получает значение заданного столбца в виде числа с плавающей запятой одиночной точности.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary>При переопределении в производном классе получает значение заданного столбца в виде глобального уникального идентификатора (GUID).</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary>При переопределении в производном классе получает значение заданного столбца в виде 16-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary>При переопределении в производном классе получает значение заданного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary>При переопределении в производном классе получает значение заданного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary>При переопределении в производном классе получает имя столбца по порядковому номеру столбца (от нуля).</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Имя заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary>При переопределении в производном классе получает порядковый номер столбца по имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Порядковый номер столбца (от нуля).</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Возвращает тип заданного столбца, зависящий от поставщика.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Зависящий от поставщика тип .NET.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Возвращает значение указанного столбца как экземпляр зависящего от поставщика типа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Возвращает из коллекции все столбцы атрибутов, зависящие от поставщика, для текущей строки.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns>Число экземпляров элементов в массиве.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.NotSupportedException">Только в .NET Core: этот элемент не поддерживается.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary>Возвращает поток для получения данных из указанного столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Поток.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  

или -

Модуль чтения данных закрыт во время получения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  
-или-
Модуль чтения данных попытался считать ранее считанный столбец в последовательном режиме.  

или -

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Тип указанного столбца не является двоичным типом, поддерживающим чтение с помощью <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде экземпляра <see cref="T:System.String" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary>Получает модуль чтения текста для извлечения данных из столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Средство чтения текста.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  

или -

Модуль чтения данных закрыт во время получения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

или -

Модуль чтения данных попытался считать ранее считанный столбец в последовательном режиме.  

или -

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Тип указанного столбца не является текстовым типом, поддерживающим чтение с помощью <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде экземпляра <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary>При переопределении в производном классе заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary>При переопределении в производном классе получает значение, указывающее, содержит ли <see cref="T:System.Data.Common.DbDataReader" /> одну или несколько строк.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbDataReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary>При переопределении в производном классе получает значение, показывающее, закрыт ли объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbDataReader" /> закрыт; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary>При переопределении в производном классе получает значение, указывающее, содержатся ли в столбце несуществующие или отсутствующие значения.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение <see langword="true" />, если указанный столбец эквивалентен <see cref="T:System.DBNull" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary>Асинхронно получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="ordinal">Извлекаемый столбец (отсчитываемый с нуля).</param>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого равно <see langword="true" />, если указанное значение столбца эквивалентно значению <see langword="DBNull" />, или <see langword="false" /> в противном случае.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  

или -

Модуль чтения данных закрыт во время получения данных.  

или -

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

или -

Попытка чтения ранее считанного столбца в последовательном режиме.  

или -

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="ordinal">Извлекаемый столбец (отсчитываемый с нуля).</param>
      <param name="cancellationToken">Токен для отмены асинхронной операции.</param>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого равно <see langword="true" />, если указанное значение столбца эквивалентно значению <see langword="DBNull" />, или <see langword="false" /> в противном случае.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  

или -

Модуль чтения данных закрыт во время получения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

или -

Попытка чтения ранее считанного столбца в последовательном режиме.  

или - 
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде экземпляра <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Индекс столбца находится за пределами диапазона.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary>При переопределении в производном классе получает значение указанного столбца в виде экземпляра <see cref="T:System.Object" />.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Столбец с указанным именем не найден.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary>При переопределении в производном классе асинхронно перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций.</summary>
      <returns>Значение <see langword="true" />, если имеются и другие наборы результатов, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary>Асинхронно перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций.</summary>
      <returns>Задача, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой имеет значение <see langword="true" />, если результирующие наборы еще имеются, или <see langword="false" /> в противном случае.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>Асинхронно перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого имеет значение <see langword="true" />, если есть еще результирующие наборы, или <see langword="false" /> в противном случае.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary>При переопределении в производном классе перемещает модуль чтения к следующей записи в результирующем наборе.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary>Асинхронно перемещает модуль чтения к следующей записи в результирующем наборе.</summary>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого имеет значение <see langword="true" />, если есть еще строки, или <see langword="false" /> в противном случае.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>Асинхронно перемещает модуль чтения к следующей записи в результирующем наборе.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого имеет значение <see langword="true" />, если есть еще строки, или <see langword="false" /> в противном случае.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary>При переопределении в производном классе возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение -1 для операторов SELECT; значение 0, если строки не изменены или при сбое инструкции.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Экземпляр <see cref="T:System.Data.IDataReader" />, используемый, когда поле указывает на дополнительные удаленные структурированные данные.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary>Возвращает число не скрытых полей в <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Число не скрытых полей.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary>Этот класс содержит методы расширения схемы столбца для <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Получает значение, которое указывает, может ли <see cref="T:System.Data.Common.DbDataReader" /> получить схему столбца.</summary>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" />, который следует проверить на поддержку схемы столбца.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbDataReader" /> может получить схему столбца; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Получает схему столбца (коллекцию <see cref="T:System.Data.Common.DbColumn" />) для <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" /> для возврата схемы столбца.</param>
      <returns>Схема столбца (коллекция <see cref="T:System.Data.Common.DbColumn" />) для <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary>Реализует <see cref="T:System.Data.IDataRecord" /> и <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> и обеспечивает поддержку привязки данных для <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>Указывает количество полей в текущей записи. Это свойство доступно только для чтения.</summary>
      <returns>Количество полей в текущей записи.</returns>
      <exception cref="T:System.NotSupportedException">Не подключено к источнику данных для чтения.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде логического значения.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>
        <see langword="true" />, если логическое значение представлено <see langword="true" />. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде байта.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Возвращает значение заданного столбца как массив байтов.</summary>
      <param name="i">Порядковый номер столбца (начиная с нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде символа.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Возвращает значение заданного столбца в виде массива знаков.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <param name="dataIndex">Буфер для копирования данных.</param>
      <param name="buffer">Максимальная длина для копирования в буфер.</param>
      <param name="bufferIndex">Точка для начала из буфера.</param>
      <param name="length">Указывает на пиксель начала в данных источника.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>В настоящее время не поддерживается.</summary>
      <param name="i">В настоящее время не поддерживается.</param>
      <returns>В настоящий момент не поддерживается.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>Возвращает имя типа данных сервера.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Имя окончательного типа данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>Возвращает значение заданного столбца как объект <see cref="T:System.DateTime" />.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbDataReader" /> для запрошенного порядкового номера столбца, который может быть переопределен с помощью зависящей от поставщика реализации.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>Возвращает значение заданного столбца как объект <see cref="T:System.Decimal" />.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа двойной точности с плавающей запятой.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>Возвращает значение <see cref="T:System.Type" />, которое является типом данных объекта.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>
        <see cref="T:System.Type" />, который является типом данных объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа одиночной точности с плавающей запятой.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>Возвращает значение GUID указанного поля.</summary>
      <param name="i">Индекс поля, который требуется вернуть.</param>
      <returns>Значение GUID указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>Возвращает значение указанного столбца в формате 16-битового целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>Возвращает имя указанного столбца.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Имя указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца с данным именем.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Порядковый номер столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде строки.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>Возвращает значение в указанном столбце в его исходном формате.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Возвращаемое значение.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей записи.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который копируются поля атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>Используется для обозначения несуществующих значений.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>
        <see langword="true" />, если указанный столбец эквивалентен <see cref="T:System.DBNull" />. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>Указывает значение в заданном столбце в его формате с данным порядковым номером столбца. Это свойство доступно только для чтения.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение в указанном столбце в его исходном формате.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>Указывает значение в заданном столбце в его формате с данным именем столбца. Это свойство доступно только для чтения.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение в указанном столбце в его исходном формате.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns>Коллекция <see cref="T:System.ComponentModel.AttributeCollection" />, которая содержит атрибуты для этого объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns>Имя класса объекта или значение <see langword="null" />, если у класса нет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя этого экземпляра компонента.</summary>
      <returns>Имя объекта или значение <see langword="null" />, если у объекта нет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типа для этого экземпляра компонента.</summary>
      <returns>Преобразователь <see cref="T:System.ComponentModel.TypeConverter" />, являющийся преобразователем для этого типа, или значение <see langword="null" />, если преобразователь <see cref="T:System.ComponentModel.TypeConverter" /> для данного объекта отсутствует.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.EventDescriptor" />, представляющий событие по умолчанию для этого объекта, или значение <see langword="null" />, если для данного объекта нет событий.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, который представляет свойство, используемое по умолчанию для этого объекта, или значение <see langword="null" />, если у данного объекта нет свойств.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор заданного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns>Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или значение <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает события для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, который представляет события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает события для этого экземпляра компонента, используя заданный массив атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns>Коллекция <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющая фильтрованные события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает свойства для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает свойства для этого экземпляра компонента, используя массив атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns>Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющая фильтрованные свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает объект, содержащий свойство, описываемое заданным дескриптором свойства.</summary>
      <param name="pd">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, для которого ведется поиск владельца.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий владельца указанного свойства.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary>Предоставляет механизм для перечисления всех доступных экземпляров серверов баз данных в локальной сети.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary>Получает объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех видимых экземплярах сервера, представленных строго типизированным экземпляром этого класса.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех видимых экземплярах связанного источника данных.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary>Предоставляет метод <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, который поддерживает простую итерацию по коллекции с помощью поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> указанным модулем чтения данных.</summary>
      <param name="reader">DataReader, по которому выполняется итерация.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> класса, используя указанный модуль чтения, и указывает, следует ли автоматически закрывать модуль чтения после итераций по данным.</summary>
      <param name="reader">DataReader, по которому выполняется итерация.</param>
      <param name="closeReader">Значение <see langword="true" />, чтобы автоматически закрывать объект DataReader после выполнения итераций по данным; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> с использованием указанного объекта <see langword="DataReader" />.</summary>
      <param name="reader">
        <see langword="DataReader" />, по которому выполняется итерация.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" />, используя указанный модуль <see langword="DataReader" />, и указывает, следует ли автоматически закрывать <see langword="DataReader" /> после итераций по данным.</summary>
      <param name="reader">
        <see langword="DataReader" />, по которому выполняется итерация.</param>
      <param name="closeReader">Значение <see langword="true" />, чтобы автоматически закрывать объект <see langword="false" /> после выполнения итераций по данным; в противном случае — значение <see langword="DataReader" />.</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>Получает текущий элемент в коллекции.</summary>
      <returns>Текущий элемент в коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">Перечислитель размещается перед первым элементом семейства или после его последнего элемента.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>Перемещает перечислитель к следующему элементу коллекции.</summary>
      <returns>Значение <see langword="true" />, если перечислитель был успешно перемещен к следующему элементу; значение <see langword="false" />, если перечислитель достиг конца коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">После создания перечислителя семейство было изменено.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</summary>
      <exception cref="T:System.InvalidOperationException">После создания перечислителя семейство было изменено.</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary>Базовый класс для всех исключений, выданных от имени источника данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанными сведениями о сериализации и контекстом.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, отображаемое для этого исключения.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Строка сообщения об ошибке.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанным сообщением об ошибке и кодом ошибки.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="errorCode">Код ошибки для исключения.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary>Предоставляет список констант для известных MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords и Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary>Предоставляет статические значения, которые используются для имен столбцов в объектах MetaDataCollection, содержащихся в <see cref="T:System.Data.DataTable" />. Объект <see cref="T:System.Data.DataTable" /> создан с помощью метода GetSchema.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary>Используется методом GetSchema для создания столбца CollectionName в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary>Используется методом GetSchema для создания столбца ColumnSize в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary>Используется методом GetSchema для создания столбца CompositeIdentifierSeparatorPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary>Используется методом GetSchema для создания столбца CreateFormat в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary>Используется методом GetSchema для создания столбца CreateParameters в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary>Используется методом GetSchema для создания столбца DataSourceProductName в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary>Используется методом GetSchema для создания столбца DataSourceProductVersion в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary>Используется методом GetSchema для создания столбца DataSourceProductVersionNormalized в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary>Используется методом GetSchema для создания столбца DataType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary>Используется методом GetSchema для создания столбца GroupByBehavior в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary>Используется методом GetSchema для создания столбца IdentifierCase в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary>Используется методом GetSchema для создания столбца IdentifierPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary>Используется методом GetSchema для создания столбца IsAutoIncrementable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary>Используется методом GetSchema для создания столбца IsBestMatch в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary>Используется методом GetSchema для создания столбца IsCaseSensitive в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary>Используется методом GetSchema для создания столбца IsConcurrencyType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary>Используется методом GetSchema для создания столбца IsFixedLengthв коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary>Используется методом GetSchema для создания столбца IsFixedPrecisionScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary>Используется методом GetSchema для создания столбца IsLiteralSupported в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary>Используется методом GetSchema для создания столбца IsLong в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary>Используется методом GetSchema для создания столбца IsNullable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary>Используется методом GetSchema для создания столбца IsSearchable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary>Используется методом GetSchema для создания столбца IsSearchableWithLike в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary>Используется методом GetSchema для создания столбца IsUnsigned в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary>Используется методом GetSchema для создания столбца LiteralPrefix в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary>Используется методом GetSchema для создания столбца LiteralSuffix в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary>Используется методом GetSchema для создания столбца MaximumScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary>Используется методом GetSchema для создания столбца MinimumScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary>Используется методом GetSchema для создания столбца NumberOfIdentifierParts в коллекции MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary>Используется методом GetSchema для создания столбца NumberOfRestrictions в коллекции MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary>Используется методом GetSchema для создания столбца OrderByColumnsInSelect в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary>Используется методом GetSchema для создания столбца ParameterMarkerFormat в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary>Используется методом GetSchema для создания столбца ParameterMarkerPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary>Используется методом GetSchema для создания столбца ParameterNameMaxLength в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary>Используется методом GetSchema для создания столбца ParameterNamePattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary>Используется методом GetSchema для создания столбца ProviderDbType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary>Используется методом GetSchema для создания столбца QuotedIdentifierCase в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary>Используется методом GetSchema для создания столбца QuotedIdentifierPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary>Используется методом GetSchema для создания столбца ReservedWord в коллекции ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary>Используется методом GetSchema для создания столбца StatementSeparatorPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary>Используется методом GetSchema для создания столбца StringLiteralPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary>Используется методом GetSchema для создания столбца SupportedJoinOperators в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary>Используется методом GetSchema для создания столбца TypeName в коллекции DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary>Представляет параметр для объекта <see cref="T:System.Data.Common.DbCommand" /> и (необязательно) его сопоставление со столбцом <see cref="T:System.Data.DataSet" />. Дополнительные сведения о параметрах см. в разделе Настройка параметров и типов данных параметров.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary>Возвращает или задает значение, указывающее, является ли параметр только входным, только выходным, двунаправленным или параметром, возвращаемым хранимой процедурой.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано допустимое значение <see cref="T:System.Data.ParameterDirection" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary>Возвращает или задает значение, указывающее, принимает ли этот параметр значения NULL.</summary>
      <returns>
        <see langword="true" />, если значение NULL допустимо; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Имя <see cref="T:System.Data.Common.DbParameter" />. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary>Возвращает или задает максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary>Сбрасывает свойство DbType к его исходным параметрам.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary>Возвращает или задает число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary>Возвращает или задает максимальную длину данных (в байтах) в столбце.</summary>
      <returns>Максимальная длина данных (в байтах) в столбце. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary>Возвращает или задает имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary>Возвращает или задает значение, показывающее, допускает ли исходный столбец значение NULL. Это позволяет <see cref="T:System.Data.Common.DbCommandBuilder" /> правильно создавать инструкции Update для столбцов со значением NULL.</summary>
      <returns>
        <see langword="true" />, если исходный столбец допускает значение NULL, <see langword="false" /> — в противном случае.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary>Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" />, используемое при загрузке <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException">Свойству не задано одно из значений <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary>Указывает точность числовых параметров.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства <see langword="Value" /> объекта <see langword="Parameter" /> поставщика данных. Значение по умолчанию — 0. Оно указывает, что точность значения <see langword="Value" /> задает поставщик данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> . Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary>Возвращает или задает значение параметра.</summary>
      <returns>Объект <see cref="T:System.Object" />, который является значением параметра. Значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary>Базовый класс для коллекции параметров, относящихся к <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.Common.DbParameter" /> в коллекцию <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value">
        <see cref="P:System.Data.Common.DbParameter.Value" /> из <see cref="T:System.Data.Common.DbParameter" /> для добавления в коллекцию.</param>
      <returns>Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary>Добавляет массив элементов с заданными значениями в <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values">Массив значений типа <see cref="T:System.Data.Common.DbParameter" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary>Удаляет все значения <see cref="T:System.Data.Common.DbParameter" /> из <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary>Указывает, содержится ли в коллекции объект <see cref="T:System.Data.Common.DbParameter" /> с указанным <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <param name="value">Значение <see cref="P:System.Data.Common.DbParameter.Value" /> параметра <see cref="T:System.Data.Common.DbParameter" />, которое нужно найти в коллекции.</param>
      <returns>Значение <see langword="true" />, если элемент <see cref="T:System.Data.Common.DbParameter" /> присутствует в коллекции, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary>Указывает, содержится ли в коллекции объект <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</summary>
      <param name="value">Имя параметра <see cref="T:System.Data.Common.DbParameter" />, которое следует искать в коллекции.</param>
      <returns>Значение <see langword="true" />, если элемент <see cref="T:System.Data.Common.DbParameter" /> присутствует в коллекции, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует массив экземпляров в коллекцию, начиная с указанного индекса.</summary>
      <param name="array">Массив элементов для копирования в коллекцию.</param>
      <param name="index">Индекс в коллекции для копирования элементов.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary>Указывает количество элементов в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary>Предоставляет метод <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, который поддерживает простую итерацию по коллекции с помощью поставщика данных .NET Framework.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу в коллекции.</summary>
      <param name="index">Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName">Имя <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary>Возвращает индекс указанного объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns>Индекс указанного объекта <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary>Возвращает индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName">Имя объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns>Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет указанный индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с указанным именем в коллекцию по указанному индексу.</summary>
      <param name="index">Индекс, по которому нужно вставить объект <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">Объект <see cref="T:System.Data.Common.DbParameter" />, который нужно вставить в коллекцию.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary>Указывает, имеет ли коллекция фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если коллекция имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary>Указывает, является ли коллекция доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary>Указывает, является ли коллекция синхронизированной.</summary>
      <returns>Значение <see langword="true" />, если коллекция синхронизирована; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным индексом.</summary>
      <param name="index">Отсчитываемый с нуля индекс параметра.</param>
      <returns>Параметр <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанный индекс не существует.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName">Имя параметра.</param>
      <returns>Параметр <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанный индекс не существует.</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Common.DbParameter" /> из коллекции.</summary>
      <param name="value">Удаляемый объект <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Common.DbParameter" /> в указанной позиции из коллекции.</summary>
      <param name="index">Индекс, где находится объект <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.Common.DbParameter" /> с указанным именем из коллекции.</summary>
      <param name="parameterName">Имя удаляемого объекта <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary>Задает новое значение для объекта <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу.</summary>
      <param name="index">Индекс, где находится объект <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">Новое значение <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary>Назначает новое значение объекту <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</summary>
      <param name="parameterName">Имя объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <param name="value">Новое значение <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary>Указывает объект <see cref="T:System.Object" />, который следует использовать для синхронизации доступа к коллекции.</summary>
      <returns>Объект <see cref="T:System.Object" />, который следует использовать для синхронизации доступа к коллекции <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary>Возвращает или задает параметр по указанному индексу.</summary>
      <param name="parameterName">Имя получаемого параметра.</param>
      <returns>Элемент <see cref="T:System.Object" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary>Представляет набор статических методов для создания одного или нескольких экземпляров классов <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection">Используемое подключение.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного подключения.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow">Объект <see cref="T:System.Data.DataRow" />, содержащий сведения о конфигурации поставщика.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного объекта <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName">Инвариантное имя поставщика.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного имени поставщика.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех установленных поставщиках, реализующих объект <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий объекты <see cref="T:System.Data.DataRow" />, которые содержат следующие данные: 
  Порядковый номер столбца 
  Имя столбца 
  Описание 
  0 
  Name  
  Понятное имя поставщика данных.  
  1 
  Описание  
  Понятное описание поставщика данных.  
  2 
  InvariantName  
  Имя, которое может быть использовано программным образом для ссылки на поставщика данных.  
  3 
  AssemblyQualifiedName  
  Полное имя класса FACTORY, содержащее достаточно сведений для создания экземпляра объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames" />
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <param name="providerInvariantName" />
      <param name="factory" />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <param name="providerInvariantName" />
      <param name="factoryTypeAssemblyQualifiedName" />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <param name="providerInvariantName" />
      <param name="providerFactoryClass" />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <param name="providerInvariantName" />
      <param name="factory" />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <param name="providerInvariantName" />
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary>Представляет набор методов для создания экземпляров классов поставщиков, реализующих источник данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary>Возвращает значение, определяющее, поддерживает ли экземпляр <see cref="T:System.Data.Common.DbProviderFactory" /> класс <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>
        <see langword="true" />значение, если данный экземпляр <see cref="T:System.Data.Common.DbCommandBuilder" /> поддерживает класс; в <see langword="false" />противном случае —.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary>Возвращает значение, определяющее, поддерживает ли экземпляр <see cref="T:System.Data.Common.DbProviderFactory" /> класс <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>
        <see langword="true" />значение, если экземпляр поддерживает <see cref="T:System.Data.Common.DbDataAdapter" /> класс; в противном случае —. <see langword="false" /></returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Возвращает значение, определяющее, поддерживает ли экземпляр <see cref="T:System.Data.Common.DbProviderFactory" /> класс <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>
        <see langword="true" />значение, если экземпляр поддерживает <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> класс; в противном случае —. <see langword="false" /></returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary>Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary>Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary>Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary>Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary>Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary>Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary>Возвращает новый экземпляра класса поставщика, реализующий класс <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary>Указывает, какое зависящее от поставщика свойство в строго типизированных классах параметров должно использоваться при настройке типа, зависящего от поставщика.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty">Указывает, является ли это свойство свойством, зависящим от поставщика.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary>Указывает, имеет ли это атрибутивное свойство тип, зависящий от поставщика.</summary>
      <returns>Значение <see langword="true" />, если свойство, к которому применяется этот атрибут, является свойством типа, зависящего от поставщика; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary>Определяет основное поведение транзакций базы данных и предоставляет базовый класс для транзакций, связанных с базой данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary>При переопределении в производном классе фиксирует транзакцию в базе данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary>Асинхронно фиксирует транзакцию базы данных.</summary>
      <param name="cancellationToken">Токен для отмены асинхронной операции.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary>Задает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary>При переопределении в производном классе получает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary>Освобождает неуправляемые ресурсы, используемые <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbTransaction" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">При значении <see langword="true" /> этот метод освобождает все ресурсы, используемые любыми управляемыми объектами, на которые ссылается этот объект <see cref="T:System.Data.Common.DbTransaction" />.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary>Асинхронно размещает объект транзакции.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" />, представляющий асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary>При переопределении в производном классе возвращает уровень изоляции для этой транзакции.</summary>
      <returns>Уровень изоляции для этой транзакции.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary>При переопределении в производном классе выполняет откат транзакции из состояния ожидания.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary>Асинхронно откатывает транзакцию из состояния ожидания.</summary>
      <param name="cancellationToken">Токен для отмены асинхронной операции.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией, или пустую ссылку, если транзакция больше не является допустимой.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary>Задает связь между столбцами в предложении GROUP BY и неагрегированными столбцами в списке выбора оператора SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary>Предложение GROUP BY должно содержать все неагрегированные столбцы в списке выбора и не должно содержать другие столбцы не в списке выбора.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary>Предложение GROUP BY должно содержать все неагрегированные столбцы в списке выбора и может содержать другие столбцы не в списке выбора.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary>Предложение GROUP BY не поддерживается.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary>Неизвестно, поддерживается ли предложение GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary>Отсутствует связь между столбцами в предложении GROUP BY и неагрегированными столбцами в списке SELECT. Может выполняться группировка по любому столбцу.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary>Создает схему столбца.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary>Получает схему столбца (коллекцию <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns>Схема столбца (коллекция <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary>Указывает, каким образом идентификаторы воспринимаются источником данных при выполнении поиска в системном каталоге.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary>Источник данных не учитывает регистр идентификатора при выполнении поиска в системном каталоге. Идентификаторы "ab" и "AB" будут совпадать.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary>Источник данных учитывает регистр идентификатора при выполнении поиска в системном каталоге. Идентификаторы "ab" и "AB" не будут совпадать.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary>Источником данных используются неоднозначные правила, касающиеся учета регистра идентификатора, и поэтому эти сведения распознать не удается.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>Предоставляет данные для события <see langword="RowUpdated" /> поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">Команда <see cref="T:System.Data.IDbCommand" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Тип исполняемого оператора SQL.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary>Получает объект <see cref="T:System.Data.IDbCommand" />, выполняемый при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Команда <see cref="T:System.Data.IDbCommand" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary>Копирует ссылки на измененные строки в предоставленный массив.</summary>
      <param name="array">Массив объектов <see cref="T:System.Data.DataRow" />, в который выполняется копирование.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Копирует ссылки на измененные строки в предоставленный массив.</summary>
      <param name="array">Массив объектов <see cref="T:System.Data.DataRow" />, в который выполняется копирование.</param>
      <param name="arrayIndex">Индекс в массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>Получает ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>Получает объект <see cref="T:System.Data.DataRow" />, отправленный с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary>Получает количество строк, обработанных в пакете обновленных записей.</summary>
      <returns>Объект <see langword="int" />, указывающий количество обработанных строк.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>Получает тип исполняемого оператора SQL.</summary>
      <returns>Тип исполняемого оператора SQL.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>Получает <see cref="T:System.Data.UpdateStatus" /> свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.UpdateStatus" />. Значение по умолчанию — <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>Получает объект <see cref="T:System.Data.Common.DataTableMapping" />, отправленный с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>Предоставляет данные для события RowUpdating поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" /> для метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">Команда <see cref="T:System.Data.IDbCommand" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Тип инструкции SQL для выполнения.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IDbCommand" /> для экземпляра этого класса.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения при применении метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary>Получает интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения во время операции <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения при применении метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>Получает ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>Получает объект <see cref="T:System.Data.DataRow" />, который будет отправлен на сервер в качестве части операции вставки, обновления или удаления.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>Получает тип оператора SQL для выполнения.</summary>
      <returns>Тип инструкции SQL для выполнения.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>Возвращает или задает значение <see cref="T:System.Data.UpdateStatus" /> свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.UpdateStatus" />. Значение по умолчанию — <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>Получает объект <see cref="T:System.Data.Common.DataTableMapping" /> для отправки с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary>Описывает метаданные столбца схемы для таблицы базы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary>Указывает, является ли допустимым значение <see langword="DBNull" />.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary>Определяет имя столбца в схеме таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary>Определяет имя схемы в схеме таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary>Определяет имя таблицы в схеме таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary>Определяет имя столбца в схеме таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary>Задает порядковый номер столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary>Задает размер столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary>Задает тип данных в столбце.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary>Указывает, является ли этот столбец псевдонимом.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary>Указывает, является ли этот столбец выражением.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary>Указывает, является ли этот столбец ключом для таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary>Указывает, содержит ли этот столбец большие объемы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary>Указывает, применяется ли уникальное ограничение к этому столбцу.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary>Задает зависящий от поставщика тип данных в столбце, которому не была присвоена версия.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary>Задает точность данных в столбце, если данные являются числовыми.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary>Задает масштаб данных в столбце, если данные являются числовыми.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary>Задает зависящий от поставщика тип данных в столбце.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary>Описывает дополнительные метаданные столбца схемы для таблицы базы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary>Указывает значение, при котором назначается ряд для новых столбцов идентификаторов.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary>Указывает увеличение между значениями в столбце идентификаторов.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary>Имя каталога, связанного с результатами последнего запроса.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary>Пространство имен столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary>Имя сервера столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary>Пространство имен для таблицы, содержащей данный столбец.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary>Указывает сопоставление для столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary>Значение по умолчанию для столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary>Выражение, используемое для вычисления столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary>Указывает, увеличиваются ли автоматически значения столбца в столбце.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary>Указывает, является ли этот столбец скрытым.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary>Указывает, является ли этот столбец доступным только для чтения.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary>Указывает, содержит ли данный столбец сведения о версии строки.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary>Задает зависящий от поставщика тип данных в столбце.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary>Указывает, какие типы операторов соединения Transact-SQL поддерживаются источником данных.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary>Источник данных поддерживает полные внешние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary>Источник данных поддерживает внутренние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary>Источник данных поддерживает левые внешние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary>Источник данных не поддерживает запросы соединений.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary>Источник данных поддерживает правые внешние соединения.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary>Указывает, каким образом конфликтующие изменения в источнике данных будут выявляться и разрешаться.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary>Операторы обновления и удаления будут включать все столбцы, по которым может осуществляться поиск, из таблицы в предложении WHERE. Это эквивалентно заданию <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary>Если в таблице имеются столбцы Timestamp, они используются в предложении WHERE для всех созданных операторов обновления. Это эквивалентно заданию <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary>Все операторы обновления и удаления включают только столбцы свойства <see cref="P:System.Data.DataTable.PrimaryKey" /> в предложении WHERE. Если не определено ни одно значение свойства <see cref="P:System.Data.DataTable.PrimaryKey" />, все столбцы, по которым может осуществляться поиск, включаются в предложение WHERE. Это эквивалентно <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>Описывает текущее состояние подключения к источнику данных.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>Подключение к источнику данных разорвано. Это может произойти только после открытия подключения. Подключение в этом режиме может быть закрыто, а затем повторно открыто. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>Соединение закрыто.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>Объект подключения подключается к источнику данных.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>Объект подключения выполняет команду. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>Объект подключения получает данные. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>Подключение открыто.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>Представляет ограничение, которое может быть применено к одному или более объектам <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary>Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</summary>
      <returns>Объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary>Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>Имя ограничения в <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns>Имя <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException">Именем <see cref="T:System.Data.Constraint" /> является значение NULL или пустая строка.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция <see cref="T:System.Data.ConstraintCollection" /> уже содержит <see cref="T:System.Data.Constraint" /> с тем же именем (сравнение выполняется без учета регистра.).</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>Возвращает коллекцию определенных пользователем свойств ограничений.</summary>
      <returns>Коллекция <see cref="T:System.Data.PropertyCollection" /> пользовательских сведений.</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary>Задает объект <see cref="T:System.Data.DataSet" /> ограничения.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, к которому применяется ограничение.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, к которому применяется ограничение.</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>Возвращает свойство <see cref="P:System.Data.Constraint.ConstraintName" />, если оно существует, в виде строки.</summary>
      <returns>Строковое значение свойства <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>Представляет коллекцию ограничений для <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.Constraint" /> в коллекцию.</summary>
      <param name="constraint">Добавляемый объект <see langword="Constraint" />.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="constraint" /> имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentException">Ограничение уже относится к этой или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит ограничение с таким именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Создает новое ограничение <see cref="T:System.Data.UniqueConstraint" /> с указанным именем, объект <see cref="T:System.Data.DataColumn" />, и значение, показывающее, является ли столбец первичным ключом, и добавляет его в коллекцию.</summary>
      <param name="name">Имя <see langword="UniqueConstraint" />.</param>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, к которому применяется ограничение.</param>
      <param name="primaryKey">Указывает, должен ли столбец являться первичным ключом. Если значение <see langword="true" />, столбец будет являться столбцом первичного ключа.</param>
      <returns>Новый объект <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException">Ограничение уже принадлежит к этой коллекции.  
 или  
 Ограничение уже принадлежит к другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит ограничение с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Создает новое ограничение <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем, родительский и дочерний столбцы и добавляет ограничение к коллекции.</summary>
      <param name="name">Имя <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn">Первичный ключ или родительский объект <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn">Внешний ключ или дочерний объект <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Новый объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Создает новое ограничение <see cref="T:System.Data.UniqueConstraint" /> с указанным именем, массивом объектов <see cref="T:System.Data.DataColumn" /> и значением, показывающим, является ли столбец первичным ключом, и добавляет его в коллекцию.</summary>
      <param name="name">Имя <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, для которого применяются ограничения.</param>
      <param name="primaryKey">Указывает, должен ли столбец являться первичным ключом. Если значение <see langword="true" />, столбец будет являться столбцом первичного ключа.</param>
      <returns>Новый объект <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException">Ограничение уже принадлежит к этой коллекции.  
 или  
 Ограничение уже принадлежит к другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит ограничение с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Создает новое ограничение <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным массивом родительских и дочерних столбцов и добавляет это ограничение к коллекции.</summary>
      <param name="name">Имя <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся столбцом первичного ключа или родительским столбцом.</param>
      <param name="foreignKeyColumns">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся столбцом внешнего ключа или дочерним столбцом.</param>
      <returns>Новый объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.ConstraintCollection" /> в конец коллекции.</summary>
      <param name="constraints">Массив объектов <see cref="T:System.Data.ConstraintCollection" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>Указывает, может ли быть удалено ограничение <see cref="T:System.Data.Constraint" />.</summary>
      <param name="constraint">Ограничение <see cref="T:System.Data.Constraint" />, которое требуется проверить на возможность удаления из коллекции.</param>
      <returns>Значение <see langword="true" />, если ограничение <see cref="T:System.Data.Constraint" /> может быть удалено из коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>Очищает коллекцию от объектов <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>Происходит всякий раз после изменения коллекции <see cref="T:System.Data.ConstraintCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>Указывает, существует ли в коллекции объект <see cref="T:System.Data.Constraint" />, указанный по имени.</summary>
      <param name="name">Свойство <see cref="P:System.Data.Constraint.ConstraintName" /> ограничения.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит указанное ограничение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary>Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="array">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>Получает индекс заданного ограничения <see cref="T:System.Data.Constraint" />.</summary>
      <param name="constraint">Объект <see cref="T:System.Data.Constraint" />, который требуется найти.</param>
      <returns>Индекс (с нуля) ограничения <see cref="T:System.Data.Constraint" />, если оно существует в коллекции; в противном случае -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>Получает индекс ограничения <see cref="T:System.Data.Constraint" />, заданного по имени.</summary>
      <param name="constraintName">Имя <see cref="T:System.Data.Constraint" />.</param>
      <returns>Индекс ограничения <see cref="T:System.Data.Constraint" />, если оно существует в коллекции; в противном случае -1.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>Получает объект <see cref="T:System.Data.Constraint" /> из коллекции по указанному индексу.</summary>
      <param name="index">Индекс ограничения, которое требуется вернуть.</param>
      <returns>Параметр <see cref="T:System.Data.Constraint" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>Получает объект <see cref="T:System.Data.Constraint" /> из коллекции с указанным именем.</summary>
      <param name="name">Свойство <see cref="P:System.Data.Constraint.ConstraintName" /> ограничения, которое требуется возвратить.</param>
      <returns>Ограничение <see cref="T:System.Data.Constraint" /> с указанным именем; в противном случае — значение null, если ограничение <see cref="T:System.Data.Constraint" /> не существует.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Constraint" /> из коллекции.</summary>
      <param name="constraint">Объект <see cref="T:System.Data.Constraint" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="constraint" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ограничение не принадлежит коллекции.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>Удаляет из коллекции ограничение <see cref="T:System.Data.Constraint" />, указанное по имени.</summary>
      <param name="name">Имя удаляемого объекта <see cref="T:System.Data.Constraint" />.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Constraint" /> по указанному индексу из коллекции.</summary>
      <param name="index">Индекс удаляемого объекта <see cref="T:System.Data.Constraint" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Коллекция не имеет ограничения по этому индексу.</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>Представляет исключение, которое вызывается при попытке действия, нарушающего ограничения.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" />. Это конструктор без параметров.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" /> с использованием указанного контекста потока и сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" /> с использованием заданной строки и внутреннего исключения.</summary>
      <param name="message">Строка, отображаемая при выдаче исключения.</param>
      <param name="innerException">Возвращает экземпляр объекта <see langword="Exception" />, который вызвал текущее исключение.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>Представляет схему столбца в <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> в качестве строкового типа.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> как строку типа с использованием указанного имени столбца.</summary>
      <param name="columnName">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени столбца и типа данных.</summary>
      <param name="columnName">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени, типа данных и выражения.</summary>
      <param name="columnName">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr">Выражение, используемое для создания этого столбца. Дополнительные сведения см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени, типа данных, выражения и значения, определяющего, является ли столбец атрибутом.</summary>
      <param name="columnName">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr">Выражение, используемое для создания этого столбца. Дополнительные сведения см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type">Одно из значений <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>Возвращает или задает значение, указывающее на допустимость нулевых значений в этом столбце для строк, принадлежащих таблице.</summary>
      <returns>
        <see langword="true" />значение, если разрешены значения NULL; в противном случае —. <see langword="false" /> Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>Возвращает или задает значение, показывающее, увеличивать ли автоматически значение столбца для новых строк, добавляемых в таблицу.</summary>
      <returns>
        <see langword="true" />, если значение столбца увеличивается автоматически; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Столбец является вычисляемым.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>Возвращает или задает начальное значение для столбца, свойству которого <see cref="P:System.Data.DataColumn.AutoIncrement" /> задано значение <see langword="true" />. Значение по умолчанию — 0.</summary>
      <returns>Начальное значение для функции <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>Возвращает или задает шаг приращения для столбца, свойству <see cref="P:System.Data.DataColumn.AutoIncrement" /> которого задано значение <see langword="true" />.</summary>
      <returns>Число, на которое автоматически увеличивается значение столбца. Значение по умолчанию — 1.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение равно нулю.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>Возвращает или задает заголовок для столбца.</summary>
      <returns>Заголовок столбца. Если не установлено, возвращает значение <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>Возвращает или задает <see cref="T:System.Data.MappingType" /> столбца.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>Возвращает или задает имя столбца в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Имя столбца.</returns>
      <exception cref="T:System.ArgumentException">Значение свойства равно <see langword="null" /> или пустой строке, и столбец принадлежит коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Столбец с таким именем уже существует в коллекции. Сравнение имени выполняется без учета регистра.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>Возвращает или задает тип данных, хранимых в столбце.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип данных столбца.</returns>
      <exception cref="T:System.ArgumentException">В столбце уже содержатся данные.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary>Возвращает или задает <see langword="DateTimeMode" /> для столбца.</summary>
      <returns>
        <see cref="T:System.Data.DataSetDateTime" /> для указанного столбца.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>Возвращает или задает значение по умолчанию для столбца при создании новых строк.</summary>
      <returns>Значение, соответствующее <see cref="P:System.Data.DataColumn.DataType" /> столбца.</returns>
      <exception cref="T:System.InvalidCastException">При добавлении строки значение по умолчанию не является экземпляром типа данных столбца.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>Возвращает или задает выражение, используемое для фильтрации строк, расчета значений в столбце либо для создания составного столбца.</summary>
      <returns>Выражение, используемое для расчета значений столбца либо создания составного столбца. Возвращаемый тип выражения определяется с помощью <see cref="P:System.Data.DataColumn.DataType" /> столбца.</returns>
      <exception cref="T:System.ArgumentException">Свойству <see cref="P:System.Data.DataColumn.AutoIncrement" /> или <see cref="P:System.Data.DataColumn.Unique" /> задано значение <see langword="true" />.</exception>
      <exception cref="T:System.FormatException">При использовании функции CONVERT выражение оценивает строку, но строка не содержит представление, которое может быть преобразовано в параметр типа.</exception>
      <exception cref="T:System.InvalidCastException">При использовании функции CONVERT запрошенное приведение типов невозможно. Подробные сведения о возможном приведении см. в описании функции преобразования, приведенном в следующем разделе.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">При использовании функции SUBSTRING аргумент начала находится вне диапазона.  
-или- 
При использовании функции SUBSTRING аргумент длины находится вне диапазона.</exception>
      <exception cref="T:System.Exception">При использовании функции LEN или TRIM выражение не выполняет вычисление строки. Это включает выражения, которое выполняет вычисление <see cref="T:System.Char" />.</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>Возвращает коллекцию пользовательских сведений, связанных с <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.PropertyCollection" /> пользовательских сведений.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>Возвращает или задает максимальную длину текстового столбца.</summary>
      <returns>Максимальная длина столбца в символах. Если длина столбца не максимальная, значение равно-1 (по умолчанию).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>Возвращает или задает пространство имен <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>Пространство имен <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException">Пространство имен уже содержит данные.</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="pcevent">Ссылка на параметр.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>Возвращает отсчитываемую от нуля позицию столбца в коллекции <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Положение столбца. Получает значение -1, если столбец не является членом коллекции.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>Возвращает или задает префикс XML, который является псевдонимом пространства имен класса <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Префикс XML для пространства имен <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="name">Ссылка на параметр.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>Возвращает или задает значение, указывающее на допустимость изменения столбца после добавления строки в таблицу.</summary>
      <returns>
        <see langword="true" />, если столбец предназначен только для чтения; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Свойству задано значение <see langword="false" /> в вычисляемом столбце.</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary>Изменяет порядковый номер или положение <see cref="T:System.Data.DataColumn" /> на указанный порядковый номер или положение.</summary>
      <param name="ordinal">Заданный порядковый номер.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>Возвращает <see cref="T:System.Data.DataTable" />, которому принадлежит столбец.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" />, к которой принадлежит <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>Возвращает свойство <see cref="P:System.Data.DataColumn.Expression" /> столбца, если оно существует.</summary>
      <returns>Значение <see cref="P:System.Data.DataColumn.Expression" />, если свойство задано; в противном случае — свойство <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>Возвращает или задает значение, указывающее, должны ли значения в каждой строке столбца быть уникальными.</summary>
      <returns>
        <see langword="true" />, если значение должно быть уникальным; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Столбец является вычисляемым.</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</param>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</summary>
      <returns>Объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>Возвращает или задает предложенное новое значение для столбца.</summary>
      <returns>Предложенное значение типа <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>Получает объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Data.DataColumn" /> для <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>Создает и добавляет указанный объект <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column">Добавляемый объект <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Столбец уже принадлежит данной или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем к <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Имя столбца.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем и типом в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Свойство <see cref="P:System.Data.DataColumn.ColumnName" />, используемое при создании столбца.</param>
      <param name="type">Свойство <see cref="P:System.Data.DataColumn.DataType" /> нового столбца.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем, типом и выражением в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Имя, используемое при создании столбца.</param>
      <param name="type">Свойство <see cref="P:System.Data.DataColumn.DataType" /> нового столбца.</param>
      <param name="expression">Выражение, назначаемое свойству <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.DataColumn" /> в конец коллекции.</summary>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>Проверяет, может ли быть удален из коллекции указанный столбец.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" /> в коллекции.</param>
      <returns>
        <see langword="true" /> если столбец можно удалить <see langword="false" /> если, 
– Параметр <paramref name="column" /> имеет значение <see langword="null" />.  
– Столбец не принадлежит этой коллекции.  
– Столбец является частью отношения.  
– Выражение другого столбца зависит от этого столбца.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="column" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Столбец не принадлежит этой коллекции.
-или-
Столбец является частью отношения.

или -

Выражение другого столбца зависит от этого столбца.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>Удаляет любой столбец из коллекции.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>Происходит, когда изменяется коллекция столбцов с помощью добавления или удаления столбца.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>Определяет, содержит ли коллекция столбец с указанным именем.</summary>
      <param name="name">Свойство <see cref="P:System.Data.DataColumn.ColumnName" /> столбца, поиск которого требуется выполнить.</param>
      <returns>Значение <see langword="true" />, если столбец с таким именем существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary>Копирует коллекцию целиком в существующий массив, начиная с указанного индекса в этом массиве.</summary>
      <param name="array">Массив объектов <see cref="T:System.Data.DataColumn" />, копируемых в коллекцию.</param>
      <param name="index">Индекс, с которого должна начаться операция.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>Получает индекс столбца, указанного по имени.</summary>
      <param name="column">Имя возвращаемого столбца.</param>
      <returns>Индекс столбца, указанного <paramref name="column" />, если он обнаружен; в противном случае — значение -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>Получает индекс столбца с указанным именем (имя без учета регистра).</summary>
      <param name="columnName">Имя столбца, который нужно найти.</param>
      <returns>Индекс (с нуля) столбца с заданным именем столбца, или значение -1, если столбец отсутствует в коллекции.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> из коллекции по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) возвращаемого столбца.</param>
      <returns>Параметр <see cref="T:System.Data.DataColumn" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> из коллекции с указанным именем.</summary>
      <param name="name">Свойство <see cref="P:System.Data.DataColumn.ColumnName" /> возвращаемого столбца.</param>
      <returns>Объект <see cref="T:System.Data.DataColumn" /> в коллекции с указанным значением свойства <see cref="P:System.Data.DataColumn.ColumnName" />; в противном случае — значение null, если <see cref="T:System.Data.DataColumn" /> не существует.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.DataColumn" /> из коллекции.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Столбец не принадлежит этой коллекции.  
 -или-  
 Столбец является частью отношения.  
 -или-  
 Выражение другого столбца зависит от этого столбца.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем из коллекции.</summary>
      <param name="name">Имя удаляемого столбца.</param>
      <exception cref="T:System.ArgumentException">Коллекция не содержит столбец с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>Удаляет столбец по указанному индексу из коллекции.</summary>
      <param name="index">Индекс удаляемого столбца.</param>
      <exception cref="T:System.ArgumentException">Коллекция не содержит столбец по указанному индексу.</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary>Представляет исключение, которое выдается при создании ошибок с помощью компонента ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" />. Это конструктор без параметров.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" /> с указанными сведениями о сериализации и контекстом.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" />, используя заданную строку и внутреннее исключение.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary>Предоставляет методы расширения для <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца в виде байта.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает указанное число байтов из указанного столбца, начиная с указанного индекса, и записывает их в буфер, начиная с указанной позиции в буфере.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <param name="dataOffset">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который копируются данные.</param>
      <param name="bufferOffset">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length">Максимальное число считываемых символов.</param>
      <returns>Число фактически считанных байтов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца в виде одного символа.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Считывает указанное число символов из указанного столбца, начиная с указанного индекса, и записывает их в буфер, начиная с указанной позиции.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <param name="dataOffset">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который копируются данные.</param>
      <param name="bufferOffset">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length">Максимальное число считываемых символов.</param>
      <returns>Число фактически считанных символов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает вложенный объект чтения данных для запрошенного столбца.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Средство чтения данных.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает имя типа данных заданного столбца.</summary>
      <param name="reader">Модуль чтения данных, откуда берется имя типа столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Имя типа данных.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой двойной точности.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает тип данных заданного столбца.</summary>
      <param name="reader">Модуль чтения данных, откуда берется тип поля.</param>
      <param name="name">Имя столбца.</param>
      <returns>Тип данных заданного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  
-или- 
Модуль чтения данных был закрыт во время получения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).  
-или-
Модуль чтения попытался считать ранее считанный столбец в последовательном режиме.  

или -

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Асинхронно возвращает значение указанного столбца в виде запрошенного типа.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <param name="cancellationToken">Необязательный токен для отмены асинхронной операции.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Задача, <see cref="P:System.Threading.Tasks.Task`1.Result" /> которой содержит значение заданного столбца.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  
-или-
Модуль чтения данных был закрыт во время получения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение <see langword="false" />).

или -

Сделана попытка чтения ранее считанного столбца в последовательном режиме.  

или -

Выполнялась асинхронная операция. Относится ко всем методам Get_*_ при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Значение, возвращенное базой данных, не соответствует типу <typeparamref name="T" /> или не может быть приведено к нему.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение заданного столбца в виде глобального уникального идентификатора (GUID).</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает тип заданного столбца, зависящий от поставщика.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Зависящий от поставщика тип .NET.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца как экземпляр зависящего от поставщика типа.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает поток для получения данных из указанного столбца.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Поток.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  

или -

Модуль чтения данных закрыт во время получения данных.  

или -

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

или -

Модуль чтения данных попытался считать ранее считанный столбец в последовательном режиме.  

или -

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Тип указанного столбца не является двоичным типом, поддерживающим чтение с помощью <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца как экземпляр <see cref="T:System.String" />.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary>Получает модуль чтения текста для извлечения данных из столбца.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Средство чтения текста.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  
-или-
Модуль чтения данных закрыт во время получения данных.  

или -

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

или -

Модуль чтения данных попытался считать ранее считанный столбец в последовательном режиме.  

или -

Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.InvalidCastException">Тип указанного столбца не является текстовым типом, поддерживающим чтение с помощью <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary>Возвращает значение, указывающее, содержатся ли в столбце несуществующие или отсутствующие значения.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <returns>Значение <see langword="true" />, если указанный столбец эквивалентен <see cref="T:System.DBNull" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Асинхронно получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="reader">Модуль чтения данных, из которого получается значение столбца.</param>
      <param name="name">Имя столбца.</param>
      <param name="cancellationToken">Необязательный токен для отмены асинхронной операции.</param>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> которого равно <see langword="true" />, если указанное значение столбца эквивалентно значению <see langword="DBNull" />, или <see langword="false" /> в противном случае.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение было удалено или закрыто во время получения данных.  
-или-
Модуль чтения данных закрыт во время получения данных.  

или -

Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  

или -

Попытка чтения ранее считанного столбца в последовательном режиме.  
-или- 
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>Представляет отношение "родительский-дочерний объект" между двумя объектами <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени <see cref="T:System.Data.DataRelation" /> и родительского и дочернего объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="relationName">Имя <see cref="T:System.Data.DataRelation" />. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumn">Родительский объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="childColumn">Дочерний объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют разные типы данных 
-или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени, родительского и дочернего объектов <see cref="T:System.Data.DataColumn" /> и значения, указывающего, нужно ли создавать ограничения.</summary>
      <param name="relationName">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumn">Родительский объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="childColumn">Дочерний объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="createConstraints">Значение, указывающее, создаются ли ограничения. Значение <see langword="true" />, если создаются ограничения. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют разные типы данных 
-или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени <see cref="T:System.Data.DataRelation" /> и соответствующих массивов родительских и дочерних объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="relationName">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns">Массив дочерних объектов <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Объекты <see cref="T:System.Data.DataColumn" /> имеют разные типы данных. 
-или- 
Один или оба массива не состоят из различных столбцов из той же таблицы.  
-или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени, родительского и дочернего объектов <see cref="T:System.Data.DataColumn" /> и значения, указывающего, нужно ли создавать ограничения.</summary>
      <param name="relationName">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns">Массив дочерних объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="createConstraints">Значение, указывающее, нужно ли создавать ограничения. Значение <see langword="true" />, если создаются ограничения. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют разные типы данных 
-или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Этот конструктор предназначен для поддержки режима разработки в среде Visual Studio.</summary>
      <param name="relationName">Имя <see cref="T:System.Data.DataRelation" />. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentTableName">Имя объекта <see cref="T:System.Data.DataTable" />, который является родительской таблицей в отношении.</param>
      <param name="parentTableNamespace">Имя пространства имен родительской таблицы.</param>
      <param name="childTableName">Имя объекта <see cref="T:System.Data.DataTable" />, который является дочерней таблицей в отношении.</param>
      <param name="childTableNamespace">Имя пространства имен дочерней таблицы.</param>
      <param name="parentColumnNames">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в родительском объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="childColumnNames">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в дочернем объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="nested">Значение, указывающее, являются ли отношения вложенными.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Этот конструктор предназначен для поддержки режима разработки в среде Visual Studio.</summary>
      <param name="relationName">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentTableName">Имя объекта <see cref="T:System.Data.DataTable" />, который является родительской таблицей в отношении.</param>
      <param name="childTableName">Имя объекта <see cref="T:System.Data.DataTable" />, который является дочерней таблицей в отношении.</param>
      <param name="parentColumnNames">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в родительском объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="childColumnNames">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в дочернем объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="nested">Значение, указывающее, являются ли отношения вложенными.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>Этот метод поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода.</summary>
      <exception cref="T:System.Data.DataException">Родительская и дочерняя таблицы принадлежат различным объектам <see cref="T:System.Data.DataSet" />.  
-или- 
Одна или несколько пар родительских и дочерних объектов <see cref="T:System.Data.DataColumn" /> имеют несовпадающие типы данных.  
-или- 
Родительский и дочерний объекты <see cref="T:System.Data.DataColumn" /> идентичны.</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>Возвращает дочерние объекты <see cref="T:System.Data.DataColumn" /> этого отношения.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>Возвращает <see cref="T:System.Data.ForeignKeyConstraint" /> для отношения.</summary>
      <returns>Объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>Возвращает дочернюю таблицу этого отношения.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, который является дочерней таблицей этого отношения.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит объект <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataSet" />, к которому принадлежит объект <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>Возвращает коллекцию, в которой хранятся настраиваемые свойства.</summary>
      <returns>Класс <see cref="T:System.Data.PropertyCollection" />, содержащий настраиваемые свойства.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>Возвращает или задает значение, которое указывает, являются ли объекты <see cref="T:System.Data.DataRelation" /> вложенными.</summary>
      <returns>Значение <see langword="true" />, если объекты <see cref="T:System.Data.DataRelation" /> являются вложенными, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="pcevent">Ссылка на параметр.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>Возвращает массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами объекта <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>Возвращает <see cref="T:System.Data.UniqueConstraint" />, которое обеспечивает уникальность значений в родительском столбце объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>
        <see cref="T:System.Data.UniqueConstraint" />, которое обеспечивает уникальность значений, содержащихся в родительском столбце.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>Возвращает родительский объект <see cref="T:System.Data.DataTable" /> этого объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, который является родительской таблицей этого отношения.</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="name">Ссылка на параметр.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>Возвращает или задает имя, используемое для извлечения <see cref="T:System.Data.DataRelation" /> из <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <returns>Имя <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException">Значение <see langword="null" /> или пустая строка ("") были переданы в объект <see cref="T:System.Data.DataColumn" />, который является отношением <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Объект <see cref="T:System.Data.DataRelation" /> принадлежит коллекции, которая уже содержит объект <see cref="T:System.Data.DataRelation" /> с тем же именем.</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>Возвращает <see cref="P:System.Data.DataRelation.RelationName" />, если он существует.</summary>
      <returns>Значение свойства <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Data.DataRelation" /> для <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Создает <see cref="T:System.Data.DataRelation" /> с указанными родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="parentColumn">Родительский столбец отношения.</param>
      <param name="childColumn">Дочерний столбец отношения.</param>
      <returns>Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Создает <see cref="T:System.Data.DataRelation" /> с указанными родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="parentColumns">Родительские столбцы отношения.</param>
      <param name="childColumns">Дочерние столбцы отношения.</param>
      <returns>Созданное соотношение.</returns>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="relation" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>Добавляет объект <see cref="T:System.Data.DataRelation" /> в коллекцию <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation">Параметр <see langword="DataRelation" /> для добавления в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relation" /> имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с указанным именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Создает отношение <see cref="T:System.Data.DataRelation" /> с указанным именем и родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="name">Имя отношения.</param>
      <param name="parentColumn">Родительский столбец отношения.</param>
      <param name="childColumn">Дочерний столбец отношения.</param>
      <returns>Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Создает отношение <see cref="T:System.Data.DataRelation" /> с указанным именем, родительскими и дочерними столбцами, с необязательными ограничениями в соответствии со значением параметра <paramref name="createConstraints" />, затем добавляет это отношение в коллекцию.</summary>
      <param name="name">Имя отношения.</param>
      <param name="parentColumn">Родительский столбец отношения.</param>
      <param name="childColumn">Дочерний столбец отношения.</param>
      <param name="createConstraints">
        <see langword="true" /> для создания ограничений; в противном случае — <see langword="false" />. (Значением по умолчанию является <see langword="true" />).</param>
      <returns>Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Создает <see cref="T:System.Data.DataRelation" /> с указанным именем и массивами родительских и дочерних столбцов и добавляет их к коллекции.</summary>
      <param name="name">Имя создаваемого элемента <see langword="DataRelation" />.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns">Массив дочерних объектов <see langword="DataColumn" />.</param>
      <returns>Созданный <see langword="DataRelation" />.</returns>
      <exception cref="T:System.ArgumentNullException">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Создает <see cref="T:System.Data.DataRelation" /> с указанным именем, массивами родительских и дочерних столбцов и значение, указывающее, создавать ли ограничения, и добавляет их к коллекции.</summary>
      <param name="name">Имя создаваемого элемента <see langword="DataRelation" />.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns">Массив дочерних объектов <see langword="DataColumn" />.</param>
      <param name="createConstraints">
        <see langword="true" /> для создания ограничения; в противном случае — <see langword="false" />.</param>
      <returns>Созданное соотношение.</returns>
      <exception cref="T:System.ArgumentNullException">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>Выполняет проверку таблицы.</summary>
      <param name="relation">Отношение для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значением отношения является null.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.DataRelation" /> в конец коллекции.</summary>
      <param name="relations">Массив объектов <see cref="T:System.Data.DataRelation" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>Проверяет, может ли быть удалено из коллекции указанное <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Отношение для выполнения проверки.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Data.DataRelation" /> может быть удалено; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>Удаляет отношения из коллекции.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>Происходит при изменении коллекции.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>Проверяет, существует ли в коллекции <see cref="T:System.Data.DataRelation" /> с указанным именем (без учета регистра).</summary>
      <param name="name">Имя отношения для поиска.</param>
      <returns>
        <see langword="true" />, если отношение с указанным именем существует; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary>Копирует коллекцию объектов <see cref="T:System.Data.DataRelation" />, начиная с указанного индекса.</summary>
      <param name="array">Массив объектов <see cref="T:System.Data.DataRelation" />, в который следует скопировать коллекцию.</param>
      <param name="index">Индекс, с которого должна начаться операция.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>Этот метод поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода.</summary>
      <returns>Набор данных DataSet, на который указывает ссылка.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>Возвращает индекс указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Отношение, которое нужно найти.</param>
      <returns>Начинающийся с нуля индекс отношения или значение -1, если отношение не найдено в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>Получает индекс ограничения <see cref="T:System.Data.DataRelation" />, заданного по имени.</summary>
      <param name="relationName">Имя отношения для поиска.</param>
      <returns>Индекс (индексация ведется от нуля) отношения с заданным именем или -1, если отношение не существует в коллекции.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.DataRelation" /> по указанному индексу.</summary>
      <param name="index">Индекс для поиска (индексация ведется от нуля).</param>
      <returns>Отношение <see cref="T:System.Data.DataRelation" /> или значение null, если указанное отношение <see cref="T:System.Data.DataRelation" /> не существует.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>Получает объект <see cref="T:System.Data.DataRelation" />, указанный именем.</summary>
      <param name="name">Имя отношения для поиска.</param>
      <returns>Именованное отношение <see cref="T:System.Data.DataRelation" /> или значение null, если указанное отношение <see cref="T:System.Data.DataRelation" /> не существует.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>Удаляет указанное отношение из коллекции.</summary>
      <param name="relation">Отношение для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException">Отношение не принадлежит коллекции.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>Отношение с указанным именем удаляется из коллекции.</summary>
      <param name="name">Имя столбца для удаления.</param>
      <exception cref="T:System.IndexOutOfRangeException">В коллекции нет отношения с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>Удаляет отношение с указанным индексом из коллекции.</summary>
      <param name="index">Индекс столбца для удаления.</param>
      <exception cref="T:System.ArgumentException">Коллекция не содержит отношение с указанным индексом.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>Выполняет проверку указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Объект <see langword="DataRelation" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Коллекция не содержит отношение с указанным индексом.</exception>
      <exception cref="T:System.ArgumentException">Указанное отношение не принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary>Представляет строку данных в <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary>Инициализирует новый экземпляр DataRow. Создает строку из построителя. Только для внутреннего использования.</summary>
      <param name="builder">построитель</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>Фиксирует все изменения, внесенные в эту строку со времени последнего вызова метода <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>Начинает операцию изменения объекта <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Метод был вызван в удаленную строку.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>Отменяет текущее изменение строки.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>Очищает ошибки для строки. Это относится к свойству <see cref="P:System.Data.DataRow.RowError" /> и ошибкам, установленным с помощью метода <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>Удаляет объект <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Объект <see cref="T:System.Data.DataRow" /> уже был удален.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>Прекращает изменение строки.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException">Изменение привело к нарушению ограничения.</exception>
      <exception cref="T:System.Data.ReadOnlyException">Строка принадлежит таблице, а при изменении была предпринята попытка изменить значение столбца, доступного только для чтения.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">При изменении была предпринята попытка поместить значение null в столбец, в котором свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>Получает дочерние строки этого объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значением отношения является <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">Используемое свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">Используемое свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>Получает описание ошибки указанного объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Текст описания ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>Получает описание ошибки для столбца, указанного по индексу.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <returns>Текст описания ошибки.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>Получает описание ошибки для столбца, указанного по имени.</summary>
      <param name="columnName">Имя столбца.</param>
      <returns>Текст описания ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>Получает массив столбцов с ошибками.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, содержащих ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relation" /> не принадлежит объекту <see cref="T:System.Data.DataTable" />.  

или -

Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Эта строка не принадлежит дочерней таблице объекта <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных.</param>
      <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
      <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.  

или -

Параметр <paramref name="relation" /> не принадлежит к родительским отношениям этой таблицы.</exception>
      <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений перечисления <see cref="T:System.Data.DataRowVersion" />.</param>
      <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Data.DataRelation" /> не принадлежит <see cref="T:System.Data.DataSet" /> этой строки.</exception>
      <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит <see cref="T:System.Data.DataTable" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Data.DataRelation" /> не принадлежит <see cref="T:System.Data.DataSet" /> этой строки.</exception>
      <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>Получает значение, показывающее, есть ли ошибки в строке.</summary>
      <returns>Значение <see langword="true" />, если строка содержит ошибку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>Получает значение, показывающее, существует ли указанная версия.</summary>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее версию строки.</param>
      <returns>Значение <see langword="true" />, если версия существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>Получает значение, показывающее, содержит ли указанный объект <see cref="T:System.Data.DataColumn" /> значение null.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Получает значение, показывающее, содержит ли указанные объекты <see cref="T:System.Data.DataColumn" /> и <see cref="T:System.Data.DataRowVersion" /> значение null.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <paramref name="version" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>Получает значение, показывающее, содержит ли столбец по указанному индексу значение null.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Нет столбца, который соответствует индексу, определяемому <paramref name="columnIndex" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>Получает значение, показывающее, содержит ли названный столбец значение null.</summary>
      <param name="columnName">Имя столбца.</param>
      <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="columnName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>Возвращает или задает данные, сохраненные в указанном объекте <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Значение типа <see cref="T:System.Data.DataColumn" />, содержащее данные.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.ArgumentException">Столбец не принадлежит этой таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="column" /> является null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Была предпринята попытка задать значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Получает указанную версию данных, сохраненных в указанном объекте <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, содержащий сведения о столбце.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.ArgumentException">Столбец не принадлежит этой таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Аргумент параметра <paramref name="column" /> содержит ноль.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>Возвращает или задает данные, сохраненные в столбце, указанном по индексу.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке задать значение в удаленной строке.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Происходит при задании значения, когда <see cref="T:System.Type" /> нового значения не совпадает со свойством <see cref="P:System.Data.DataColumn.DataType" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>Получает данные, сохраненные в столбце, указанном по индексу и версии извлекаемых данных.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Была предпринята попытка задать значение в удаленной строке.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>Возвращает или задает данные, сохраненные в столбце, указанном по имени.</summary>
      <param name="columnName">Имя столбца.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке задать значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException">Происходит при задании значения, когда <see cref="T:System.Type" /> нового значения не совпадает со свойством <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Возникает попытке вставки значения null в столбец, где для свойства <see cref="P:System.Data.DataColumn.AllowDBNull" /> задано значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>Получает указанную версию данных, сохраненных в именованном столбце.</summary>
      <param name="columnName">Имя столбца.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Строка была удалена.</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>Возвращает или задает все значения для этой строки с помощью массива.</summary>
      <returns>Массив типа <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException">Значение в массиве не соответствует его свойству <see cref="P:System.Data.DataColumn.DataType" /> в его соответствующем объекте <see cref="T:System.Data.DataColumn" />.</exception>
      <exception cref="T:System.Data.ConstraintException">Изменение привело к нарушению ограничения.</exception>
      <exception cref="T:System.Data.ReadOnlyException">При изменении была предпринята попытка изменить значение столбца, доступное только для чтения.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">При изменении была предпринята попытка значение null в столбец, у которого свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> объекта <see cref="T:System.Data.DataColumn" /> имеет значение <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Строка была удалена.</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>Отменяет все изменения, внесенные в строку после последнего вызова метода <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>Возвращает или задает настраиваемое описание ошибки для строки.</summary>
      <returns>Текст описания ошибки.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>Получает текущее состояние строки, относящееся к ее отношению к коллекции <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary>Изменяет значение свойства <see cref="P:System.Data.DataRow.RowState" /> объекта <see cref="T:System.Data.DataRow" /> на <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>Задает описание ошибки для столбца, указанного как <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, для которого задается описание ошибки.</param>
      <param name="error">Описание ошибки.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>Задает описание ошибки для столбца, указанного по индексу.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <param name="error">Описание ошибки.</param>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>Задает описание ошибки для столбца, указанного по имени.</summary>
      <param name="columnName">Имя столбца.</param>
      <param name="error">Описание ошибки.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary>Изменяет значение свойства <see cref="P:System.Data.DataRow.RowState" /> объекта <see cref="T:System.Data.DataRow" /> на <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>Задает значение null указанному параметру <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>Задает родительскую строку <see cref="T:System.Data.DataRow" /> с указанным новым родительским объектом <see cref="T:System.Data.DataRow" />.</summary>
      <param name="parentRow">Новый родительский объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>Задает родительскую строку <see cref="T:System.Data.DataRow" /> с указанными новыми родительскими объектами <see cref="T:System.Data.DataRow" /> и <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="parentRow">Новый родительский объект <see cref="T:System.Data.DataRow" />.</param>
      <param name="relation">Отношение <see cref="T:System.Data.DataRelation" /> для использования.</param>
      <exception cref="T:System.Data.RowNotInTableException">Одна из строк не принадлежит таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Одна из строк имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Отношение не принадлежит коллекции <see cref="T:System.Data.DataRelationCollection" /> объекта <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Дочернее отношение <see cref="T:System.Data.DataTable" /> не является таблицей, которой принадлежит эта строка.</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>Получает объект <see cref="T:System.Data.DataTable" />, для которого эта строка имеет схему.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, которому принадлежит эта строка.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>Описывает действие, выполняемое с объектом <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>Строка была добавлена в таблицу.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>Строка была изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary>Текущая и исходная версии строки были изменены.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary>Исходная версия строки изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>Изменения, внесенные в строку, были зафиксированы.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>Строка была удалена из таблицы.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>Строка не была изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>Выполнен откат последнего изменения строки.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary>Тип <see langword="DataRowBuilder" /> поддерживает инфраструктуру.NET Framework и не предназначен для использования непосредственно из кода.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>Предоставляет данные для событий <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> и <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" />, в отношении которого происходит действие.</param>
      <param name="action">Одно из значений перечисления <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>Возвращает действие, выполненное в отношении объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>Возвращает строку, в отношении которой произошло действие.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" />, в отношении которого происходит действие.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary>Представляет метод, обрабатывающий события <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> и <see cref="E:System.Data.DataTable.RowDeleted" /> объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>Представляет коллекцию строк для объекта <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>Добавляет заданный объект <see cref="T:System.Data.DataRow" /> в объект <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
      <exception cref="T:System.ArgumentNullException">Строка имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentException">Строка либо принадлежит другой таблице, либо уже принадлежит этой таблице.</exception>
      <exception cref="T:System.Data.ConstraintException">Добавление нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Добавление пытается поместить пустое значение в объект <see cref="T:System.Data.DataColumn" />, свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> которого имеет значение "false".</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>Создает строку с использованием заданных параметров и добавляет его в <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values">Массив значений, который используются для создания новой строки.</param>
      <returns>Отсутствует.</returns>
      <exception cref="T:System.ArgumentException">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException">Значение не соответствует соответствующему типу столбца.</exception>
      <exception cref="T:System.Data.ConstraintException">Добавление строки нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Попытка поместить значение NULL в столбец, где <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение "false".</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>Удаляет все строки из коллекции.</summary>
      <exception cref="T:System.Data.InvalidConstraintException">Свойство <see cref="T:System.Data.ForeignKeyConstraint" /> применяется для объекта <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>Возвращает значение, которое указывает, содержит ли первичный ключ любой из строк в коллекции указанное значение.</summary>
      <param name="key">Значение первичного ключа для проверки.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит <see cref="T:System.Data.DataRow" /> с указанным значением первичного ключа; в противном случае — значение<see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Таблица не имеет первичного ключа.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>Возвращает значение, которое указывает, содержат ли столбцы первичного ключа любой из строк в коллекции значение, указанное в массиве объектов.</summary>
      <param name="keys">Массив значений первичного ключа для проверки.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.DataRowCollection" /> содержит <see cref="T:System.Data.DataRow" /> с указанным значением ключа; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Таблица не имеет первичного ключа.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все объекты <see cref="T:System.Data.DataRow" /> из этой коллекции в заданный целевой массив, начиная с указанного индекса.</summary>
      <param name="ar">Одномерный массив для приема элементов, копируемых из <see langword="DataRowCollection" />. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary>Копирует все объекты <see cref="T:System.Data.DataRow" /> из этой коллекции в заданный целевой массив, начиная с указанного индекса.</summary>
      <param name="array">Одномерный массив для приема элементов, копируемых из <see langword="DataRowCollection" />. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary>Возвращает общее число объектов <see cref="T:System.Data.DataRow" /> в коллекции.</summary>
      <returns>Общее число объектов <see cref="T:System.Data.DataRow" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>Возвращает строку, указанную значением первичного ключа.</summary>
      <param name="key">Значение первичного ключа <see cref="T:System.Data.DataRow" /> для поиска.</param>
      <returns>Объект <see cref="T:System.Data.DataRow" />, содержащий указанное значение первичного ключа; в противном случае — значение NULL, если значение первичного ключа не существует в <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Таблица не имеет первичного ключа.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>Возвращает строку, которая содержит указанные значения первичного ключа.</summary>
      <param name="keys">Массив значений первичного ключа для поиска. Тип массива — <see langword="Object" />.</param>
      <returns>Объект <see cref="T:System.Data.DataRow" />, содержащий указанные значения первичного ключа; в противном случае — значение NULL, если значение первичного ключа отсутствует в <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Этому значению индекса не соответствуют никакие строки.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Таблица не имеет первичного ключа.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary>Возвращает <see cref="T:System.Collections.IEnumerator" /> для этой коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary>Возвращает индекс указанного объекта <see cref="T:System.Data.DataRow" />.</summary>
      <param name="row">Объект <see langword="DataRow" />, который требуется найти.</param>
      <returns>Отсчитываемый от нуля индекс строки или значение -1, если строка не найдена в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>Вставляет новую строку в коллекцию в указанное положение.</summary>
      <param name="row">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
      <param name="pos">Отсчитываемое от нуля расположение в коллекции, куда необходимо добавить строку <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Значение параметра <paramref name="pos" /> меньше 0.</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>Возвращает строку по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс строки для возвращения.</param>
      <returns>Указанный <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.DataRow" /> из коллекции.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" /> для удаления.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>Удаляет строку по указанному индексу из коллекции.</summary>
      <param name="index">Индекс строки для удаления.</param>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary>Возвращает одноэлементный экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary>Получает одноэлементный экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />. Это свойство доступно только для чтения.</summary>
      <returns>Экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary>Сравнивает два объекта <see cref="T:System.Data.DataRow" /> на эквивалентность путем использования сравнения на основе значений.</summary>
      <typeparam name="TRow">Тип сравниваемых объектов, обычно это <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary>Получает одноэлементный экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />. Это свойство доступно только для чтения.</summary>
      <returns>Экземпляр класса <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary>Сравнивает два объекта <see cref="T:System.Data.DataRow" /> путем использования сравнения по столбцам на основе значений.</summary>
      <param name="leftRow">Первый из сравниваемых объектов <see cref="T:System.Data.DataRow" />.</param>
      <param name="rightRow">Второй из сравниваемых объектов <see cref="T:System.Data.DataRow" />.</param>
      <returns>Значение <see langword="true" />, если два объекта <see cref="T:System.Data.DataRow" /> запросили наборы равных значений столбцов; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Один или оба исходных объекта <see cref="T:System.Data.DataRow" /> содержат <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary>Возвращает хэш-код указанного объекта <see cref="T:System.Data.DataRow" />.</summary>
      <param name="row">Строка <see cref="T:System.Data.DataRow" />, на основе которой следует вычислить хэш-код.</param>
      <returns>Возвращает значение <see cref="T:System.Int32" />, которое представляет хэш-код строки.</returns>
      <exception cref="T:System.ArgumentException">Исходные объекты <see cref="T:System.Data.DataRow" /> не принадлежат таблице <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">Исходные объекты <see cref="T:System.Data.DataRow" /> имеют значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary>Определяет методы расширения для класса <see cref="T:System.Data.DataRow" />. Этот класс является статическим.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="column">Объект входа <see cref="T:System.Data.DataColumn" />, в котором указывается столбец, значение которого следует возвратить.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="column" />.</returns>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Столбец, определенный именем <paramref name="column" />, не находится в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Значение null было назначено типу, не поддерживающему значения null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="column">Объект входа <see cref="T:System.Data.DataColumn" />, в котором указывается столбец, значение которого следует возвратить.</param>
      <param name="version">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="column" /> и <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Столбца, определенного именем <paramref name="column" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Значение null было назначено типу, не поддерживающему значения null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnIndex">Индекс столбца.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="columnIndex" />.</returns>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Столбца, определенного именем <paramref name="ordinal" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Значение null было назначено типу, не поддерживающему значения null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnIndex">Порядковый номер (начинающийся с нуля) столбца, значение которого следует возвратить.</param>
      <param name="version">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="ordinal" /> и <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Столбца, определенного именем <paramref name="ordinal" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Значение null было назначено типу, не поддерживающему значения null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnName">Имя столбца, значение которого следует возвратить.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="columnName" />.</returns>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Столбец, определенный именем <paramref name="columnName" />, не находится в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Значение <see langword="null" /> было назначено типу, не поддерживающему значения null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnName">Имя столбца, значение которого следует возвратить.</param>
      <param name="version">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
      <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="columnName" /> и <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Столбца, определенного именем <paramref name="columnName" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException">Значение null было назначено типу, не поддерживающему значения null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary>Задает новое значение для указанного столбца в <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="column">Входящий столбец <see cref="T:System.Data.DataColumn" /> определяет, какое значение строки следует извлечь.</param>
      <param name="value">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
      <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="column" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="column" /> является NULL.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке установить значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary>Задает новое значение для указанного столбца в вызванном методе <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnIndex">Порядковый номер (начинающийся с нуля) столбца, значение которого следует задать.</param>
      <param name="value">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке установить значение в удаленной строке.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="ordinal" /> вне диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary>Задает новое значение для указанного столбца в <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> также поддерживает типы, допускающие значения null.</summary>
      <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
      <param name="columnName">Имя столбца, значение которого следует задать.</param>
      <param name="value">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
      <typeparam name="T">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
      <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке установить значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>Получает состояние объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>Строка была добавлена в коллекцию <see cref="T:System.Data.DataRowCollection" /> и метод <see cref="M:System.Data.DataRow.AcceptChanges" /> не был вызван.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>Строка была удалена с помощью метода <see cref="M:System.Data.DataRow.Delete" /> объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>Строка была создана, но не является частью какой-либо <see cref="T:System.Data.DataRowCollection" />. Объект <see cref="T:System.Data.DataRow" /> имеет это состояние сразу после своего создания и перед добавлением в коллекцию, а также если он был удален из коллекции.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>Строка была изменена и объект <see cref="M:System.Data.DataRow.AcceptChanges" /> не был вызван.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>Строка не была изменена с момента последнего вызова <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>Описание версии <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>Строка содержит текущие значения.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>Версия <see cref="T:System.Data.DataRowState" /> по умолчанию. Для значения <see langword="DataRowState" /><see langword="Added" />, <see langword="Modified" /> или <see langword="Deleted" /> по умолчанию используется версия <see langword="Current" />. Для значения <see cref="T:System.Data.DataRowState" /><see langword="Detached" /> используется версия <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>Строка содержит исходные значения.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>Строка содержит предложенное значение.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>Представляет настраиваемое представление <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>Начинает процедуру изменения.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>Отменяет процедуру изменения.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным дочерним объектом <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Объект <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary>Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным <see cref="T:System.Data.DataRelation" /> и родительским объектом.</summary>
      <param name="relation">Объект <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">Родительский объект.</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException">Свойство <paramref name="relation" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным именем дочернего объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">Строка, содержащая имя <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary>Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным именем <see cref="T:System.Data.DataRelation" /> и родительским объектом.</summary>
      <param name="relationName">Строка, содержащая имя <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">
        <see langword="true" /> для сохранения синхронизации созданного дочернего представления с родительским; в противном случае — <see langword="false" />.</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>Получает объект <see cref="T:System.Data.DataView" />, которому принадлежит эта строка.</summary>
      <returns>Объект <see langword="DataView" />, которому принадлежит эта строка.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>Удаляет строку.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>Фиксирует изменения в базовом <see cref="T:System.Data.DataRow" /> и заканчивает сеанс редактирования, который был начат с <see cref="M:System.Data.DataRowView.BeginEdit" />.  Используйте метод <see cref="M:System.Data.DataRowView.CancelEdit" /> для отмены изменений, внесенных в объект <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>Возвращает значение,указывающее, идентичен ли текущий объект <see cref="T:System.Data.DataRowView" /> указанному объекту.</summary>
      <param name="other">Объект <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Значение <see langword="true" />, если <paramref name="object" /> является объектом <see cref="T:System.Data.DataRowView" /> и возвращает ту же строку, что и текущий объект <see cref="T:System.Data.DataRowView" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>Возвращает хэш-код объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Хэш-код (32-битное целое число со знаком) имеет значение 1, которое представляет логическое значение <see langword="true" />, если значение этого экземпляра является ненулевым; в противном случае целое число имеет значение 0, которое представляет логическое значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>Определяет, находится ли строка в режиме изменения.</summary>
      <returns>Значение <see langword="true" />, если строка находится в режиме изменения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>Указывает, является ли новым объект <see cref="T:System.Data.DataRowView" />.</summary>
      <returns>Значение <see langword="true" />, если строка является новой; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>Возвращает или задает значение в указанном столбце.</summary>
      <param name="ndx">Индекс столбца.</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.Data.DataException">
        <see cref="P:System.Data.DataRowView.DataView" /> не позволяет редактировать, и <see cref="T:System.Data.DataRowView" /> не является новым.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Этому значению индекса не соответствуют никакие столбцы.</exception>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>Возвращает или задает значение в указанном столбце.</summary>
      <param name="property">Строка, содержащая указанный столбец.</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.ArgumentException">Столбец или отношение с указанным именем не найдены.
-или-
<see cref="P:System.Data.DataRowView.DataView" /> не позволяет редактировать, и <see cref="T:System.Data.DataRowView" /> не является новым.</exception>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary>Событие, которое возникло, когда свойство <see cref="T:System.Data.DataRowView" /> было изменено.</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>Получает просматриваемый объект <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" />, просматриваемый в <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>Получает описание текущей версии объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Возможными значения для свойства <see cref="P:System.Data.DataRowView.RowVersion" /> являются <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns>AttributeCollection, содержащая атрибуты для данного объекта.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns>Имя класса для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя этого экземпляра компонента.</summary>
      <returns>Имя этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типов для этого экземпляра компонента.</summary>
      <returns>Преобразователь типов для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns>Событие по умолчанию для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns>Свойство по умолчанию для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор заданного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns>Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает события для этого экземпляра компонента.</summary>
      <returns>События для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает события для этого экземпляра компонента с заданными атрибутами.</summary>
      <param name="attributes">Атрибуты</param>
      <returns>События для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает свойства для этого экземпляра компонента.</summary>
      <returns>Свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает свойства для этого экземпляра компонента с заданными атрибутами.</summary>
      <param name="attributes">Атрибуты.</param>
      <returns>Свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает объект, содержащий свойство, описываемое заданным дескриптором свойства.</summary>
      <param name="pd">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, владельца которого требуется найти.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий владельца заданного свойства.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary>Получает сообщение, описывающее все ошибки проверки объекта.</summary>
      <returns>Ошибка проверки в объекте.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary>Возвращает сообщение об ошибке для свойства с заданным именем.</summary>
      <param name="colName">Имя свойства, для которого возвращается сообщение об ошибке.</param>
      <returns>Сообщение об ошибке для свойства. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>Представляет кэш данных в памяти.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />, содержащего заданные сведения о сериализации и контекст.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema">Логическое значение.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" /> с заданным именем.</summary>
      <param name="dataSetName">Имя <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>Сохраняет все изменения, внесенные в класс <see cref="T:System.Data.DataSet" /> после его загрузки или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>Начинает инициализацию <see cref="T:System.Data.DataSet" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>Возвращает или задает значение, определяющее, учитывается ли регистр при сравнении строк в объектах <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see langword="true" />значение, если при сравнении строк учитывается регистр; в противном случае —. <see langword="false" /> Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>Удаляет из класса <see cref="T:System.Data.DataSet" /> любые данные путем удаления всех строк во всех таблицах.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>Копирует структуру класса <see cref="T:System.Data.DataSet" />, включая все схемы, соотношения и ограничения объекта <see cref="T:System.Data.DataTable" />. Данные не копируются.</summary>
      <returns>Новый класс <see cref="T:System.Data.DataSet" />, имеющий ту же схему, что и текущий класс <see cref="T:System.Data.DataSet" />, но не содержащий данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>Копирует структуру и данные для <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Новый класс <see cref="T:System.Data.DataSet" />, имеющий ту же структуру (схемы таблиц, отношения и ограничения) и данные, что и класс <see cref="T:System.Data.DataSet" />.  
   
 Если эти классы являются подклассами, то и копия любого из них будет принадлежать соответствующему подклассу.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary>Возвращает объект <see cref="T:System.Data.DataTableReader" /> с одним результирующим набором для каждой последовательности <see cref="T:System.Data.DataTable" /> в той же последовательности, в которой таблицы отображаются в коллекции <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTableReader" />, содержащий один или несколько результирующих наборов, соответствующих экземплярам <see cref="T:System.Data.DataTable" />, содержащимся в исходном наборе данных <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary>Возвращает объект <see cref="T:System.Data.DataTableReader" /> с одним результирующим набором для каждой таблицы <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Массив таблиц DataTables, обеспечивающий последовательность результирующих наборов, которые будут возвращены в средстве чтения <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTableReader" />, содержащий один или несколько результирующих наборов, соответствующих экземплярам <see cref="T:System.Data.DataTable" />, содержащимся в исходном наборе данных <see cref="T:System.Data.DataSet" />. Возвращенные результирующие наборы находятся в последовательности, определенной в параметре <paramref name="dataTables" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>Возвращает или задает имя текущего <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Имя <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>Получает новое представление данных класса <see cref="T:System.Data.DataSet" /> для осуществления фильтрации, поиска или перехода с помощью настраиваемого класса <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Определяет <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, вместе с которым вызывается защищенный конструктор <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> набора данных <see langword="DataSet" /> во время десериализации в удаленных сценариях.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, вместе с которым вызывается защищенный конструктор <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> набора данных <see langword="DataSet" /> во время десериализации в удаленных сценариях.</param>
      <returns>Перечисление <see cref="T:System.Data.SchemaSerializationMode" />, которое указывает, следует ли исключать из передаваемых данных сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary>Определяет <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Экземпляр <see cref="T:System.Xml.XmlReader" />, который передается во время десериализации набора данных <see cref="T:System.Data.DataSet" />.</param>
      <returns>Перечисление <see cref="T:System.Data.SchemaSerializationMode" />, которое указывает, следует ли исключать из передаваемых данных сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>Завершает инициализацию <see cref="T:System.Data.DataSet" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>Возвращает или задает значение, определяющее соблюдение правил ограничения при попытке совершения операции обновления.</summary>
      <returns>
        <see langword="true" />значение, если правила применяются. в противном случае —. <see langword="false" /> Значение по умолчанию — <see langword="true" />.</returns>
      <exception cref="T:System.Data.ConstraintException">Невозможно наложить одно или несколько ограничений.</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>Возвращает коллекцию настраиваемых данных пользователя, связанных с <see langword="DataSet" />.</summary>
      <returns>Класс <see cref="T:System.Data.PropertyCollection" />, содержащий все настраиваемые данные пользователя.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>Получает копию класса <see cref="T:System.Data.DataSet" />, содержащую все изменения, внесенные после его загрузки или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
      <returns>Копия изменений из данного <see cref="T:System.Data.DataSet" />, с которой можно выполнять различные операции и позднее объединить с данными таблицы, используя метод <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если никакие строки не менялись, метод возвращает <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>Получает копию таблицы <see cref="T:System.Data.DataSet" />, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" /> и отфильтрованные по параметру <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Отфильтрованная копия класса <see cref="T:System.Data.DataSet" />, с которой можно работать, а затем вернуть в исходный класс с помощью метода <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если строки с требуемым типом <see cref="T:System.Data.DataRowState" /> отсутствуют, метод вернет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Получает копию <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для DataSet.</summary>
      <param name="schemaSet">Указанный набор схем.</param>
      <returns>Копия <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект сведений о сериализации данными, необходимыми для сериализации <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.Data.DataSet" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализуемого потока, связанного с объектом <see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>Возвращает сериализуемый экземпляр <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Десериализует данные таблицы из двоичного потока или XML-потока.</summary>
      <param name="info">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Контекст потоковой передачи.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>Возвращает XML-представление данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Строка, являющаяся представлением данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>Возвращает XML-схему для XML-представления данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Строка, которая является XML-схемой для XML-представления данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>Получает значение, определяющее наличие изменений в классе <see cref="T:System.Data.DataSet" />, включая добавление, удаление или изменение строк.</summary>
      <returns>Значение <see langword="true" />, если класс <see cref="T:System.Data.DataSet" /> был изменен, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>Получает значение, определяющее наличие изменений в классе <see cref="T:System.Data.DataSet" />, включая добавление, удаление или изменение строк, отфильтрованных по типу <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Одно из значений <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Значение <see langword="true" />, если класс <see cref="T:System.Data.DataSet" /> был изменен, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>Получает значение, определяющее наличие ошибок в любом из объектов <see cref="T:System.Data.DataTable" /> в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see langword="true" />Если какая бы то ни было таблица содержит ошибку; в противном случае —. <see langword="false" /></returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>Применяет XML-схему из указанного объекта <see cref="T:System.IO.Stream" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">Объект <see langword="Stream" />, из которого считывается схема.</param>
      <param name="nsArray">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>Применяет XML-схему из указанного объекта <see cref="T:System.IO.TextReader" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Объект <see langword="TextReader" />, из которого считывается схема.</param>
      <param name="nsArray">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>Применяет XML-схему из указанного файла к классу <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Имя файла (включая путь), из которого считывается схема.</param>
      <param name="nsArray">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>Применяет XML-схему из указанного объекта <see cref="T:System.Xml.XmlReader" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Объект <see langword="XMLReader" />, из которого считывается схема.</param>
      <param name="nsArray">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary>Происходит после инициализации таблицы <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary>Десериализует все данные таблицы DataSet из двоичного потока или XML-потока.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Анализирует формат сериализованного представления набора данных <see langword="DataSet" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> представляет набор данных <see langword="DataSet" />, сериализованному в двоичном формате; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary>Получает значение, указывающее, инициализирована ли таблица <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary>Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего массив экземпляров <see cref="T:System.Data.DataTable" /> для предоставления сведений о схеме и пространстве имен.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see cref="T:System.Data.DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="tables">Массив экземпляров <see cref="T:System.Data.DataTable" />, из которых метод <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> получает сведения об имени и пространстве имен. Каждая из этих таблиц должна являться членом коллекции <see cref="T:System.Data.DataTableCollection" />, находящейся в этом наборе данных <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary>Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего массив экземпляров <see cref="T:System.Data.DataTable" /> для предоставления сведений о схеме и пространстве имен.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see cref="T:System.Data.DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="errorHandler">Делегат <see cref="T:System.Data.FillErrorEventHandler" />, вызываемый при возникновении ошибки во время загрузки данных.</param>
      <param name="tables">Массив экземпляров <see cref="T:System.Data.DataTable" />, из которых метод <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> получает сведения об имени и пространстве имен.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary>Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, используя массив строк для предоставления имен таблиц в наборе данных <see langword="DataSet" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see langword="DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="tables">Массив строк, из которого метод <see langword="Load" /> получает сведения об именах таблиц.</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>Возвращает или задает сведения о языке, используемые для сравнения строк таблицы.</summary>
      <returns>Класс <see cref="T:System.Globalization.CultureInfo" />, содержащий данные о языковом стандарте, используемом пользователем на компьютере. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>Осуществляет слияние массива объектов <see cref="T:System.Data.DataRow" /> и текущего класса <see cref="T:System.Data.DataSet" />.</summary>
      <param name="rows">Массив объектов <see langword="DataRow" />, добавляемый в <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Осуществляет слияние массива объектов <see cref="T:System.Data.DataRow" /> и текущего объекта <see cref="T:System.Data.DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="rows">Массив объектов <see cref="T:System.Data.DataRow" />, добавляемый в <see langword="DataSet" />.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction">Одно из значений <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>Осуществляет слияние указанного объекта <see cref="T:System.Data.DataSet" /> и его схемы с текущим объектом <see langword="DataSet" />.</summary>
      <param name="dataSet">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <exception cref="T:System.Data.ConstraintException">Невозможно включить одно или более ограничений.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>Осуществляет слияние указанного класса <see cref="T:System.Data.DataSet" /> и его схемы с текущим объектом <see langword="DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> в соответствии с заданным аргументом.</summary>
      <param name="dataSet">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Осуществляет слияние указанного класса <see cref="T:System.Data.DataSet" /> и его схемы с текущим набором данных <see langword="DataSet" />, сохраняя или удаляя любые изменения в текущем наборе данных <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="dataSet">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>Осуществляет слияние указанного объекта <see cref="T:System.Data.DataTable" /> и его схемы с текущим объектом <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, данные и схема которого подлежат слиянию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="table" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Осуществляет слияние указанного класса <see cref="T:System.Data.DataTable" /> и его схемы с текущим объектом <see langword="DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="table">Объект <see langword="DataTable" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction">Значение <see langword="true" />, если необходимо сохранить изменения в объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>Происходит, если значения первичного ключа конечного и основного объектов <see cref="T:System.Data.DataRow" /> совпадают, а свойство <see cref="P:System.Data.DataSet.EnforceConstraints" /> имеет значение true.</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>Возвращает или задает пространство имен <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Пространство имен <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException">Пространство имен уже содержит данные.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Вызывает событие <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>Происходит при удалении объекта <see cref="T:System.Data.DataRelation" /> из <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation">Удаляемый объект <see cref="T:System.Data.DataRelation" />.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>Происходит при удалении объекта <see cref="T:System.Data.DataTable" /> из <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">Удаляемый объект <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>Возвращает или задает префикс XML, который является псевдонимом пространства имен класса <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Префикс XML для пространства имен <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>Посылает уведомление об изменении указанного свойства <see cref="T:System.Data.DataSet" />.</summary>
      <param name="name">Имя свойства, которое нужно изменить.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Производный объект от класса <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.IO.Stream" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="stream">Класс <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Объект <see langword="TextReader" />, из которого считывается схема и данные.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader">Класс <see cref="T:System.IO.TextReader" />, из которого выполняется чтение.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный файл.</summary>
      <param name="fileName">Имя файла (включая путь), из которого производится чтение.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный файл и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="fileName">Имя файла (включая путь), из которого производится чтение.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.Xml.XmlReader" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>Считывает XML-схему из указанного класса <see cref="T:System.IO.Stream" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">Класс <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>Считывает XML-схему из указанного класса <see cref="T:System.IO.TextReader" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Класс <see cref="T:System.IO.TextReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>Считывает XML-схему из указанного файла в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Имя файла (включая путь), из которого производится чтение.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Считывает XML-схему из указанного класса <see cref="T:System.Xml.XmlReader" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Игнорирует атрибуты и возвращает пустой DataSet.</summary>
      <param name="reader">Указанное средство чтения XML.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>Отменяет все изменения, внесенные в класс <see cref="T:System.Data.DataSet" /> после его создания или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>Получает коллекцию соотношений, связывающих таблицы и позволяющих переходить от родительских таблиц к дочерним.</summary>
      <returns>Объект <see cref="T:System.Data.DataRelationCollection" />, содержащий коллекцию объектов <see cref="T:System.Data.DataRelation" />. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary>Возвращает или задает объект <see cref="T:System.Data.SerializationFormat" /> для набора данных <see cref="T:System.Data.DataSet" />, который используется для удаленного взаимодействия.</summary>
      <returns>Объект <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>Очищает все таблицы и удаляет все связи, внешние ограничения и таблицы из <see cref="T:System.Data.DataSet" />. Для восстановления исходного состояния класса <see cref="M:System.Data.DataSet.Reset" /> необходимо переопределить метод <see cref="T:System.Data.DataSet" /> в подклассах.</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary>Возвращает или задает объект <see cref="T:System.Data.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Объект <see cref="T:System.Data.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>Получает значение, определяющее необходимость сохранения значения свойства <see cref="P:System.Data.DataSet.Relations" />.</summary>
      <returns>Значение <see langword="true" />, если значение свойства было изменено (относительно своего значения по умолчанию); в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>Получает значение, определяющее необходимость сохранения значения свойства <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns>Значение <see langword="true" />, если значение свойства было изменено (относительно своего значения по умолчанию); в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>Возвращает или задает тип <see cref="T:System.ComponentModel.ISite" /> для объекта <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Интерфейс <see cref="T:System.ComponentModel.ISite" /> для <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>Возвращает коллекцию таблиц класса <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataTableCollection" />, содержащаяся в этом наборе данных <see cref="T:System.Data.DataSet" />. Если отсутствуют объекты <see cref="T:System.Data.DataTable" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>Записывает текущие данные для <see cref="T:System.Data.DataSet" /> с помощью указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.IO.Stream" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>Записывает текущие данные для <see cref="T:System.Data.DataSet" /> с помощью указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>Записывает текущие данные для <see cref="T:System.Data.DataSet" /> в указанный файл.</summary>
      <param name="fileName">Имя файла (включая путь), в который производится запись.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="fileName">Имя файла (включая путь), в который производится запись.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>Записывает текущие данные для <see cref="T:System.Data.DataSet" /> в указанный класс <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, с помощью которого осуществляется запись.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, с помощью которого осуществляется запись.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в виде схемы XML для указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в файл.</summary>
      <param name="fileName">Имя файла (включая путь), в который производится запись.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary>Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в файл.</summary>
      <param name="fileName">Имя файла для записи.</param>
      <param name="multipleTargetConverter">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в виде схемы XML для указанного объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary>Описывает формат сериализации для столбцов <see cref="T:System.DateTime" /> в объекте <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary>
        <see langword="DateTime" /> всегда хранится в Local. Если значение <see cref="F:System.Data.DataSetDateTime.Utc" /> или <see cref="F:System.Data.DataSetDateTime.Unspecified" /> назначено столбцу в этом режиме, оно сначала преобразуется в Local. Сериализация в этом режиме всегда выполняется в Local. В процессе сериализации имеется смещение.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary>
        <see langword="DateTime" /> всегда хранится в Unspecified. Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Utc" /> назначено столбцу в этом режиме, оно сначала преобразуется в <see cref="F:System.Data.DataSetDateTime.Unspecified" />. Сериализация в этом режиме не вызывает смещения.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary>
        <see langword="DateTime" /> хранится в Unspecified. Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Utc" /> назначено столбцу в этом режиме, оно сначала преобразуется в <see cref="F:System.Data.DataSetDateTime.Unspecified" />. Сериализация в этом режиме вызывает смещение. Это поведение по умолчанию, обладающее обратной совместимостью. Этот параметр следует рассматривать как Unspecified в хранилище, однако применение смещения аналогично <see cref="F:System.Data.DataSetDateTime.Local" /> в процессе сериализации.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary>Значение <see langword="DateTime" /> хранится в UTC (Universal Coordinated Time). Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Unspecified" /> назначено столбцу в этом режиме, оно сначала преобразуется в формат <see langword="Utc" />. Сериализация в этом режиме всегда выполняется в <see langword="Utc" />. В процессе сериализации смещение отсутствует.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>Помечает свойство, событие или расширитель с описанием. Это описание может быть отображено визуальным конструктором при обновлении элемента.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSysDescriptionAttribute" /> с помощью указанной строки описания.</summary>
      <param name="description">Строка описания.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>Получает текст описания.</summary>
      <returns>Строка описания.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>Представляет одну таблицу данных в памяти.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" />, не передавая ему никаких аргументов.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> с указанным именем таблицы.</summary>
      <param name="tableName">Имя, задаваемое таблице. Если значение параметра <paramref name="tableName" /> — <see langword="null" /> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> с заданными именем таблицы и пространством имен.</summary>
      <param name="tableName">Имя, задаваемое таблице. Если значение параметра <paramref name="tableName" /> — <see langword="null" /> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace">Пространство имен для XML-представления данных, хранящихся в <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>Фиксирует все изменения, внесенные в таблицу после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>Начинает инициализацию <see cref="T:System.Data.DataTable" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>Отключает уведомления, ведение индексов и ограничения в процессе загрузки данных.</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>Показывает, учитывается ли регистр при сравнении строк в таблице.</summary>
      <returns>Значение <see langword="true" />, если при сравнении регистр учитывается; в противном случае — значение <see langword="false" />. Значение по умолчанию устанавливается равным значению свойства <see cref="T:System.Data.DataSet" /> родительского объекта <see cref="P:System.Data.DataSet.CaseSensitive" />, или значение <see langword="false" />, если объект <see cref="T:System.Data.DataTable" /> создавался независимо от класса <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>Получает коллекцию дочерних отношений для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataRelationCollection" />, содержащая дочерние отношения для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>Очищает <see cref="T:System.Data.DataTable" /> от всех данных.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>Копирует структуру объекта <see cref="T:System.Data.DataTable" />, включая все схемы и ограничения <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Новый класс <see cref="T:System.Data.DataTable" />, имеющий ту же схему, что и текущий класс <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>Происходит после изменения значения указанного объекта <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>Происходит при изменении значения указанного объекта <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>Получает коллекцию столбцов, принадлежащих данной таблице.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataColumnCollection" />, содержащая коллекцию объектов <see cref="T:System.Data.DataColumn" /> для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataColumn" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>Вычисляет заданное выражение для текущих строк, отвечающих условию фильтра.</summary>
      <param name="expression">Вычисляемое выражение.</param>
      <param name="filter">Фильтр, ограничивающий число строк, используемых выражением.</param>
      <returns>Класс <see cref="T:System.Object" />, которому задан результат сравнения. Если выражение имеет значение null, возвращаемое значение будет <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>Получает коллекцию ограничений, содержащихся в данной таблице.</summary>
      <returns>Коллекция <see cref="T:System.Data.ConstraintCollection" />, содержащая коллекцию объектов <see cref="T:System.Data.Constraint" /> для таблицы. Если отсутствуют объекты <see cref="T:System.Data.Constraint" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>Копирует структуру и данные для <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Новый класс <see cref="T:System.Data.DataTable" />, имеющий ту же структуру (схемы таблиц и ограничения) и данные, что и класс <see cref="T:System.Data.DataTable" />.  
Если эти классы являются производными, то и копия также будет таким же производным классом.  
 <see cref="M:System.Data.DataTable.Copy" /> создает новый <see cref="T:System.Data.DataTable" /> с той же структурой и данными, как и оригинальный <see cref="T:System.Data.DataTable" />. Чтобы скопировать структуру в новый <see cref="T:System.Data.DataTable" />, но не данные, используйте <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary>Возвращает объект <see cref="T:System.Data.DataTableReader" />, соответствующий данным в этой таблице <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTableReader" />, содержащий один набор результатов, который соответствует исходному экземпляру <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary>Создает новый экземпляр <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Новое выражение.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>Получает класс <see cref="T:System.Data.DataSet" />, к которому принадлежит данная таблица.</summary>
      <returns>Набор <see cref="T:System.Data.DataSet" />, к которому принадлежит данная таблица.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>Получает настраиваемое представление таблицы, которая может включать в себя представление с фильтром или положение курсора.</summary>
      <returns>Объект <see cref="T:System.Data.DataView" />, связанный с объектом <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>Возвращает или задает выражение, возвращающее значение, используемое для представления таблицы в пользовательском интерфейсе. Свойство <see langword="DisplayExpression" /> позволяет отображать имя этой таблицы в пользовательском интерфейсе.</summary>
      <returns>Строка отображения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>Завершает инициализацию <see cref="T:System.Data.DataTable" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>Включает уведомления, ведение индексов и ограничения после загрузки данных.</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>Получает коллекцию настраиваемых пользовательских сведений.</summary>
      <returns>Класс <see cref="T:System.Data.PropertyCollection" />, содержащий настраиваемые данные пользователя.</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>Проверяет, выполняется ли инициализация. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее загрузки или после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns>Копия изменений из данного объекта <see cref="T:System.Data.DataTable" /> или значение <see langword="null" />, если изменения не найдены.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" /> и отфильтрованные по параметру <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Отфильтрованная копия таблицы <see cref="T:System.Data.DataTable" />, с которой можно работать и позднее объединить обратно с <see cref="T:System.Data.DataTable" />, используя метод <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если строки с требуемым типом <see cref="T:System.Data.DataRowState" /> отсутствуют, метод вернет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Этот метод возвращает экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий язык описания веб-служб (WSDL), который описывает объект <see cref="T:System.Data.DataTable" /> для веб-служб.</summary>
      <param name="schemaSet">Экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>Получает массив объектов <see cref="T:System.Data.DataRow" />, содержащих ошибки.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> с ошибками.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект сведений о сериализации данными, необходимыми для сериализации <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные, связанные с объектом <see cref="T:System.Data.DataTable" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализованного потока, связанного с объектом <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="info" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>Получает тип строки.</summary>
      <returns>Тип <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>Получает значение, указывающее наличие ошибок в строках таблиц класса <see cref="T:System.Data.DataSet" />, к которому принадлежат таблицы.</summary>
      <returns>Значение <see langword="true" />, если ошибки есть; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>Копирует объект <see cref="T:System.Data.DataRow" /> в <see cref="T:System.Data.DataTable" />, сохраняя все параметры свойств, а также текущие и исходные значения.</summary>
      <param name="row">Импортируемый объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary>Происходит после инициализации таблицы <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary>Получает значение, указывающее, инициализирована ли таблица <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary>Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />. Если объект <see cref="T:System.Data.DataTable" /> уже содержит строки, входящие данные из источника данных объединяются с существующими строками.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий набор результатов.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary>Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />. Если объект <see langword="DataTable" /> уже содержит строки, поступающие данные из источника данных объединяются с существующими строками согласно значению параметра <paramref name="loadOption" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое показывает способ комбинирования строк, уже находящихся в таблице <see cref="T:System.Data.DataTable" />, с поступающими строками, которые совместно используют один и тот же первичный ключ.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего делегат для обработки ошибок.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий набор результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое показывает способ комбинирования строк, уже находящихся в таблице <see cref="T:System.Data.DataTable" />, с поступающими строками, которые совместно используют один и тот же первичный ключ.</param>
      <param name="errorHandler">Делегат <see cref="T:System.Data.FillErrorEventHandler" />, вызываемый при возникновении ошибки во время загрузки данных.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>Находит и обновляет конкретную строку. Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</summary>
      <param name="values">Массив значений, используемых для создания новой строки.</param>
      <param name="fAcceptChanges">Значение <see langword="true" /> — принять изменения; в противном случае — значение <see langword="false" />.</param>
      <returns>Новый объект <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException">Значение не отвечает соответствующему типу столбца.</exception>
      <exception cref="T:System.Data.ConstraintException">Добавление строки нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Попытка поместить значение null в столбец, у которого <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение "false".</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary>Находит и обновляет конкретную строку. Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</summary>
      <param name="values">Массив значений, используемых для создания новой строки.</param>
      <param name="loadOption">Используется для определения способа применения значений массива к соответствующим значениям в существующей строке.</param>
      <returns>Новый объект <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>Возвращает или задает сведения о языке, используемые для сравнения строк таблицы.</summary>
      <returns>Класс <see cref="T:System.Globalization.CultureInfo" />, содержащий данные о языковом стандарте, используемом пользователем на компьютере. Значением по умолчанию является языковый стандарт <see cref="T:System.Data.DataSet" /> объекта <see cref="T:System.Globalization.CultureInfo" /> (возвращаемый свойством <see cref="P:System.Data.DataSet.Locale" />), к которому принадлежит таблица <see cref="T:System.Data.DataTable" />; если таблица не принадлежит набору <see cref="T:System.Data.DataSet" />, значением по умолчанию является языковый стандарт <see cref="T:System.Globalization.CultureInfo" /> текущей системы.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary>Объединяет заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, объединяемый с текущим объектом <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary>Объедините заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see langword="DataTable" />, указав, следует ли сохранить изменения в контейнере данных <see langword="DataTable" />.</summary>
      <param name="table">Объект <see langword="DataTable" />, объединяемый с текущим объектом <see langword="DataTable" />.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataTable" />; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Объедините заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see langword="DataTable" />, указав, следует ли сохранить изменения и способ обработки отсутствующей схемы в текущем контейнере данных <see langword="DataTable" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, объединяемый с текущим объектом <see cref="T:System.Data.DataTable" />.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see cref="T:System.Data.DataTable" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>Возвращает или задает начальный размер таблицы.</summary>
      <returns>Начальный размер (в строках) этой таблицы. Значение по умолчанию — 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>Возвращает или задает пространство имен для представления данных объекта <see cref="T:System.Data.DataTable" /> в формате XML.</summary>
      <returns>Пространство имен <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>Создает новый класс <see cref="T:System.Data.DataRow" />, имеющий ту же схему, что и таблица.</summary>
      <returns>Класс <see cref="T:System.Data.DataRow" />, имеющий ту же схему, что и класс <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary>Возвращает массив <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size">Значение <see cref="T:System.Int32" />, описывающее размер массива.</param>
      <returns>Новый массив.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>Создает новую строку из существующей строки.</summary>
      <param name="builder">Объект <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns>Производный класс <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>Сообщает классу <see cref="T:System.Data.DataTable" /> об удалении объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Удаляемый объект <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataTableNewRowEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>Получает коллекцию родительских отношений для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataRelationCollection" />, содержащая родительские отношения для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>Возвращает или задает пространство имен для представления данных объекта <see cref="T:System.Data.DataTable" /> в формате XML.</summary>
      <returns>Префикс объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>Возвращает или задает массив столбцов, которые являются столбцами первичного ключа для таблицы данных.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DataException">Ключ является внешним ключом.</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />, используя указанный класс <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Производный объект от класса <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />, используя указанный класс <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Объект <see cref="T:System.IO.TextReader" />, используемый для чтения данных.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary>Читает данные и схему XML в <see cref="T:System.Data.DataTable" /> из указанного файла.</summary>
      <param name="fileName">Имя файла, из которого читаются данные.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary>Читает данные и схему XML в <see cref="T:System.Data.DataTable" />, используя указанное средство чтения <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения данных.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary>Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный поток.</summary>
      <param name="stream">Поток, используемый для чтения схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary>Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный объект <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Средство чтения <see cref="T:System.IO.TextReader" />, используемое для чтения сведений схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary>Считывает XML-схему из указанного файла в таблицу <see cref="T:System.Data.DataTable" />.</summary>
      <param name="fileName">Имя файла, из которого считываются сведения схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный объект <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения сведений схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Считывает из XML-потока.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>Выполняется откат всех изменений, внесенных в таблицу с момента ее загрузки или после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary>Возвращает или задает формат сериализации.</summary>
      <returns>Перечисление <see cref="T:System.Data.SerializationFormat" />, задающее сериализацию типа <see langword="Binary" /> или <see langword="Xml" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" /> в исходное состояние. Сброс удаляет все данные, индексы, связи и столбцы таблицы. Если набор данных содержит таблицы данных, то таблица по-прежнему будет частью набора данных после того, как таблица будет сброшена.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>Происходит после успешного изменения <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>Происходит при изменении объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>Происходит после удаления строки таблицы.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>Происходит перед удалением строки таблицы.</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>Получает коллекцию строк, принадлежащих данной таблице.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataRowCollection" />, содержащая объекты <see cref="T:System.Data.DataRow" />; в противном случае — значение null, если нет ни одного объекта <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>Получает массив всех объектов <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра.</summary>
      <param name="filterExpression">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра, согласно указанному порядку сортировки.</summary>
      <param name="filterExpression">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <param name="sort">Строка, задающая столбец и порядок его сортировки.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />, отвечающих выражению для фильтра.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра, согласно порядку сортировки, соответствующему указанному состоянию.</summary>
      <param name="filterExpression">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <param name="sort">Строка, задающая столбец и порядок его сортировки.</param>
      <param name="recordStates">Одно из значений <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>Возвращает или задает тип <see cref="T:System.ComponentModel.ISite" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Интерфейс <see cref="T:System.ComponentModel.ISite" /> для <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>Значение <see langword="true" />, если коллекция является коллекцией объектов <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IList" />, который можно привязать к источнику данных из объекта.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">XmlWriter.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary>Происходит после очистки <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary>Происходит, когда очищается таблица <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Имя <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException">Передается значение <see langword="null" /> или пустая строка (""), а таблица принадлежит коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Таблица принадлежит коллекции, которая уже содержит таблицу с таким же именем. (При сравнении учитывается регистр).</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary>Происходит, когда вставляется новая строка <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>Получает свойства <see cref="P:System.Data.DataTable.TableName" /> и <see cref="P:System.Data.DataTable.DisplayExpression" />, если существует сцепленная строка.</summary>
      <returns>Строка, состоящая из значений свойств <see cref="P:System.Data.DataTable.TableName" /> и <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Поток, в который записываются данные.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.Stream" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream">Поток, в который записываются данные.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="stream">Поток, в который записываются данные.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream">Поток, в который записываются данные.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> — используется для записи содержимого.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.TextWriter" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> — используется для записи содержимого.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer">Класс <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">Класс <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary>Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML, используя указанный файл.</summary>
      <param name="fileName">Файл, в который записываются XML-данные.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary>Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML, используя указанный файл. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName">Файл, в который записываются XML-данные.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" />, используя указанный файл и заданное перечисление <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="fileName">Имя файла, в который записываются данные.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" />, используя указанный файл и заданное перечисление <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName">Имя файла, в который записываются данные.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlWriter" />, с помощью которого записывается содержимое.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlWriter" />, с помощью которого записывается содержимое.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный поток.</summary>
      <param name="stream">Поток, в который записывается XML-схема.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный поток. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream">Поток, в который записывается XML-схема.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Класс <see cref="T:System.IO.TextWriter" />, с помощью которого осуществляется запись.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.IO.TextWriter" />. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">Класс <see cref="T:System.IO.TextWriter" />, с помощью которого осуществляется запись.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный файл.</summary>
      <param name="fileName">Имя используемого файла.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный файл. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName">Имя используемого файла.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Используемый <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.Xml.XmlWriter" />. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary>Предоставляет данные для метода <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, строки которого очищаются.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary>Возвращает таблицу, строки которой очищаются.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, строки которого очищаются.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary>Возвращает имя таблицы, строки которой очищаются.</summary>
      <returns>Значение <see cref="T:System.String" />, указывающее имя таблицы.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary>Возвращает пространство имен таблицы, строки которой очищаются.</summary>
      <returns>Значение <see cref="T:System.String" />, указывающее имя пространства имен.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary>Представляет метод, обрабатывающий метод <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>Представляет коллекцию таблиц для <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>Создает новый объект <see cref="T:System.Data.DataTable" />, используя имя по умолчанию, и добавляет его в коллекцию.</summary>
      <returns>Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>Добавляет указанный параметр <see langword="DataTable" /> в коллекцию.</summary>
      <param name="table">Добавляемый объект <see langword="DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением, заданным для таблицы, является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Таблица уже принадлежит данной или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Таблица в коллекции имеет такое же имя. Сравнение выполняется без учета регистра.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>Создает объект <see cref="T:System.Data.DataTable" />, используя заданное имя, и добавляет его в коллекцию.</summary>
      <param name="name">Имя, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Таблица в коллекции имеет такое же имя. (Сравнение выполняется без учета регистра).</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary>Создает объект <see cref="T:System.Data.DataTable" />, используя заданное имя, и добавляет его в коллекцию.</summary>
      <param name="name">Имя, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace">Пространство имен, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Таблица в коллекции имеет такое же имя. (Сравнение выполняется без учета регистра).</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.DataTable" /> в конец коллекции.</summary>
      <param name="tables">Массив объектов <see cref="T:System.Data.DataTable" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>Проверяет возможность удаления указанного объекта <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table">Объект <see langword="DataTable" /> в коллекции, для которого производится проверка.</param>
      <returns>Значение <see langword="true" />, если таблицу можно удалить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>Очищает коллекцию от всех объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>Происходит после изменения коллекции <see cref="T:System.Data.DataTableCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>Происходит при изменении коллекции <see cref="T:System.Data.DataTableCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>Получает значение, показывающее, существует ли объект <see cref="T:System.Data.DataTable" /> с указанным именем в коллекции.</summary>
      <param name="name">Имя объекта <see cref="T:System.Data.DataTable" />, который необходимо найти.</param>
      <returns>Значение <see langword="true" />, если указанная таблица существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary>Получает значение, показывающее, существует ли объект <see cref="T:System.Data.DataTable" /> с указанным именем и пространство имен для таблицы в коллекции.</summary>
      <param name="name">Имя объекта <see cref="T:System.Data.DataTable" />, который необходимо найти.</param>
      <param name="tableNamespace">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns>Значение <see langword="true" />, если указанная таблица существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.DataTableCollection" /> в одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы текущего объекта <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="index">Индекс целевого массива <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>Получает индекс указанного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Объект <see langword="DataTable" />, который требуется найти.</param>
      <returns>Индекс (с нуля) таблицы или значение -1, если таблица не найдена в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>Получает индекс объекта <see cref="T:System.Data.DataTable" /> с указанным именем в коллекции.</summary>
      <param name="tableName">Имя искомого объекта <see langword="DataTable" />.</param>
      <returns>Индекс (с нуля) объекта <see langword="DataTable" /> с указанным именем или -1, если таблица не существует в коллекции.  
   
 Возвращает значение -1, когда два или более столбцов имеют одно и то же имя, но различные пространства имен. Вызов не последует, если имеется какая-либо неопределенность при сопоставлении имени таблицы точно одной таблице.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary>Получает индекс указанного объекта <see cref="T:System.Data.DataTable" /> в коллекции.</summary>
      <param name="tableName">Имя искомого объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns>Индекс (с нуля) объекта <see cref="T:System.Data.DataTable" /> с указанным именем или -1, если таблица не существует в коллекции.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" /> по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) объекта <see cref="T:System.Data.DataTable" />, который требуется найти.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> с указанным индексом; в <see langword="null" /> противном <see cref="T:System.Data.DataTable" /> случае, если объект не существует.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>Получает объект <see cref="T:System.Data.DataTable" /> с указанным именем.</summary>
      <param name="name">Имя объекта <see langword="DataTable" />, который необходимо найти.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> с указанным именем; в противном случае — значение <see langword="null" />, если объект <see cref="T:System.Data.DataTable" /> не существует.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary>Получает объект <see cref="T:System.Data.DataTable" /> с указанным именем в указанном пространстве имен.</summary>
      <param name="name">Имя объекта <see langword="DataTable" />, который необходимо найти.</param>
      <param name="tableNamespace">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> с указанным именем; в противном случае — значение <see langword="null" />, если объект <see cref="T:System.Data.DataTable" /> не существует.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table">Объект <see langword="DataTable" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Значением, заданным для таблицы, является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Таблица не принадлежит этой коллекции.  

или -  

 Таблица является частью отношения.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.DataTable" /> с указанным именем из коллекции.</summary>
      <param name="name">Имя удаляемого объекта <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentException">В коллекции нет таблицы с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.DataTable" /> с указанным именем из коллекции.</summary>
      <param name="name">Имя удаляемого объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <exception cref="T:System.ArgumentException">В коллекции нет таблицы с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.DataTable" /> по указанному индексу из коллекции.</summary>
      <param name="index">Индекс удаляемого объекта <see langword="DataTable" />.</param>
      <exception cref="T:System.ArgumentException">В коллекции нет таблицы по указанному индексу.</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary>Определяет методы расширения для класса <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTableExtensions" /> является статическим классом.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary>Создает и возвращает объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</summary>
      <param name="table">Исходный объект <see cref="T:System.Data.DataTable" />, на основе которого создается объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary>Создает и возвращает объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ, представляющий запрос LINQ to DataSet.</summary>
      <param name="source">Исходный запрос LINQ to DataSet, на основе которого создается объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</param>
      <typeparam name="T">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.DataView" /> с поддержкой LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary>Возвращает объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />. Этот объект может использоваться в выражении LINQ или запросе метода.</summary>
      <param name="source">Исходный объект <see cref="T:System.Data.DataTable" />, который требуется сделать перечисляемым.</param>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException">Исходный объект <see cref="T:System.Data.DataTable" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, содержащий копии объектов <see cref="T:System.Data.DataRow" /> при заданном входном объекте <see cref="T:System.Collections.Generic.IEnumerable`1" /> и универсальном параметре <paramref name="T" />, равном <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="T">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий входную последовательность как тип объектов <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" /> имеет значение <see langword="null" /> и создание новой таблицы невозможно.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности находится в состоянии <see cref="F:System.Data.DataRowState.Deleted" />.  
Исходная последовательность не содержит объектов <see cref="T:System.Data.DataRow" />.  
Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary>Копирует объекты <see cref="T:System.Data.DataRow" /> в указанный объект <see cref="T:System.Data.DataTable" /> с заданным входным объектом <see cref="T:System.Collections.Generic.IEnumerable`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> — объект назначения.</param>
      <param name="options">Перечисление <see cref="T:System.Data.LoadOption" />, указывающее параметры загрузки <see cref="T:System.Data.DataTable" />.</param>
      <typeparam name="T">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Копируемые объекты <see cref="T:System.Data.DataRow" /> не соответствуют схеме объекта назначения <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" /> имеет значение <see langword="null" /> либо конечный объект <see cref="T:System.Data.DataTable" /> равен <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности находится в состоянии <see cref="F:System.Data.DataRowState.Deleted" />.  
Исходная последовательность не содержит объектов <see cref="T:System.Data.DataRow" />.  
Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Копирует объекты <see cref="T:System.Data.DataRow" /> в указанный объект <see cref="T:System.Data.DataTable" /> с заданным входным объектом <see cref="T:System.Collections.Generic.IEnumerable`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> — объект назначения.</param>
      <param name="options">Перечисление <see cref="T:System.Data.LoadOption" />, указывающее параметры загрузки <see cref="T:System.Data.DataTable" />.</param>
      <param name="errorHandler">Делегат <see cref="T:System.Data.FillErrorEventHandler" />, представляющий метод, который будет обрабатывать ошибки.</param>
      <typeparam name="T">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Копируемые объекты <see cref="T:System.Data.DataRow" /> не соответствуют схеме объекта назначения <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">Исходная последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" /> имеет значение <see langword="null" /> либо конечный объект <see cref="T:System.Data.DataTable" /> равен <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности находится в состоянии <see cref="F:System.Data.DataRowState.Deleted" />.  

или - 
Исходная последовательность не содержит объектов <see cref="T:System.Data.DataRow" />.  

или - 
Объект <see cref="T:System.Data.DataRow" /> в исходной последовательности имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary>Предоставляет данные для метода <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary>Получает добавляемую строку.</summary>
      <returns>Добавляемый объект <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary>Представляет метод, обрабатывающий метод <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.DataTableNewRowEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary>Объект <see cref="T:System.Data.DataTableReader" /> получает содержимое одного или нескольких объектов <see cref="T:System.Data.DataTable" /> в виде одного или нескольких однопроходных результирующих наборов, доступных только для чтения.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />, с использованием данных из заданного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, из которого новый объект <see cref="T:System.Data.DataTableReader" /> получает свой результирующий набор.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />, используя указанный массив объектов <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Массив объектов <see cref="T:System.Data.DataTable" />, который предоставляет результаты для нового объекта <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary>Закрывает текущий объект <see cref="T:System.Data.DataTableReader" />.</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary>Глубина вложенности для текущей строки объекта <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Глубина вложенности для текущей строки; всегда равна нулю.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary>Возвращает количество столбцов в текущей строке.</summary>
      <returns>Значение 0, если метод не находится внутри допустимого набора записей; в обратном случае — число столбцов в текущей строке.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка извлечения значения количества полей в закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде байта.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит данных с типом byte.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает поток байтов с заданного смещения столбца в буфер в виде массива, который начинается с конкретного смещения буфера.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex">Индекс в буфере, начиная с которого будут помещаться данные.</param>
      <param name="length">Максимальная длина для копирования в буфер.</param>
      <returns>Число фактически считанных байтов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит массива данных с типом byte.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде символа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Заданное поле не содержит знака.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Возвращает значение указанного столбца в виде массива символов.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который необходимо считать поток данных с типом char.</param>
      <param name="bufferIndex">Индекс в буфере, начиная с которого будут помещаться данные.</param>
      <param name="length">Максимальная длина для копирования в буфер.</param>
      <returns>Число фактически считанных символов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит массива знаков.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary>Получает строку, представляющую тип данных в указанном столбце.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Строка, представляющая имя типа данных в столбце.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения DateTime.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения <see langword="Decimal" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде числа с плавающей запятой с двойной точностью.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит числа с плавающей запятой с двойной точностью.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary>Возвращает перечислитель, который может использоваться для перемещения по коллекции элементов.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию элементов.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary>Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит числа с плавающей запятой с одинарной точностью.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде глобально-уникального идентификатора GUID.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит GUID.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 16-разрядное целое число со знаком.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 32-разрядное целое число со знаком.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 64-разрядное целое число со знаком.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.String" />.</summary>
      <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
      <returns>Имя заданного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца при наличии заданного имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Порядковый номер столбца (от нуля).</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.ArgumentException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Возвращает тип указанного столбца в формате конкретного поставщика.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary>Возвращает значение указанного столбца в формате конкретного поставщика.</summary>
      <param name="ordinal">Номер столбца (с нуля), значение которого извлекается.</param>
      <returns>Значение указанного столбца в формате конкретного поставщика.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary>Заполняет предоставленный массив данными с типом конкретного поставщика для всех столбцов в объекте <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values">Массив объектов, заполненный данными типа для столбцов в объекте <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>Число значений столбцов, копируемое в этот массив.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.DataTableReader" /> закрыт.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде строки.</summary>
      <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит данных с типом string.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary>Возвращает значение заданного столбца в его исходном формате.</summary>
      <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
      <returns>Значение указанного столбца. Этот метод возвращает значение с типом <see langword="DBNull" /> для столбцов со значениями null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбцов закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к ним.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values">Массив типа <see cref="T:System.Object" />, в который будут скопированы значения столбцов из объекта <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>Число значений столбцов, копируемое в этот массив.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary>Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.DataTableReader" /> одну или несколько строк.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.DataTableReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка извлечения сведений о закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary>Получает значение, указывающее, закрыт ли объект <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.DataTableReader" /> закрыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary>Получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
      <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary>Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary>Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.ArgumentException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary>Перемещает <see cref="T:System.Data.DataTableReader" /> к следующему результирующему набору (при его наличии).</summary>
      <returns>Значение <see langword="true" /> при наличии другого результирующего набора; в обратном случае – значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка перемещения в закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary>Перемещает <see cref="T:System.Data.DataTableReader" /> к следующей записи.</summary>
      <returns>Значение <see langword="true" /> при наличии другой строки для чтения; в обратном случае – значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary>Получает количество строк, которые были изменены, вставлены или удалены при выполнении оператора SQL.</summary>
      <returns>Объект <see cref="T:System.Data.DataTableReader" /> не поддерживает это свойство и всегда возвращает значение 0.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary>Представляет допускающее привязку данных, настраиваемое представление <see cref="T:System.Data.DataTable" /> для сортировки, фильтрации, поиска, изменения и навигации. <see cref="T:System.Data.DataView" /> не сохраняет данные, а представляет связанное представление соответствующего <see cref="T:System.Data.DataTable" />. Изменения данных <see cref="T:System.Data.DataView" /> повлияют на <see cref="T:System.Data.DataTable" />. Изменения данных <see cref="T:System.Data.DataTable" /> повлияют на все связанные с ним <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" /> указанным значением <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Таблица <see cref="T:System.Data.DataTable" />, добавляемая в представление <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" /> заданными свойствами <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> и <see cref="T:System.Data.DataViewRowState" />.</summary>
      <param name="table">Таблица <see cref="T:System.Data.DataTable" />, добавляемая в представление <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter">Объект <see cref="P:System.Data.DataView.RowFilter" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort">Объект <see cref="P:System.Data.DataView.Sort" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState">Объект <see cref="T:System.Data.DataViewRowState" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>Добавляет новую строку в <see cref="T:System.Data.DataView" />.</summary>
      <returns>Новый объект <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>Получает или задает значение, указывающее, разрешено ли удаление.</summary>
      <returns>Значение <see langword="true" />, если удаление разрешено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>Возвращает или задает значение, указывающее, разрешено ли внесение изменений.</summary>
      <returns>Значение <see langword="true" />, если изменение разрешено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>Получает или задает значение, указывающее, можно ли добавлять новые строки с помощью метода <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns>Значение <see langword="true" />, если новые строки можно добавить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>Возвращает или задает значение, указывающее, следует ли использовать сортировку по умолчанию. По умолчанию сортировка (по возрастанию) по всем первичными ключам, как определено <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns>Значение <see langword="true" />, если используется сортировка по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>Запускает инициализацию <see cref="T:System.Data.DataView" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>Закрывает объект <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Происходит после успешного изменения <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы в массив. Только для интерфейсов веб-форм.</summary>
      <param name="array">Массив для копирования данных.</param>
      <param name="index">Начальный индекс.</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>Получает число записей в <see cref="T:System.Data.DataView" /> после применения свойств <see cref="P:System.Data.DataView.RowFilter" /> и <see cref="P:System.Data.DataView.RowStateFilter" />.</summary>
      <returns>Количество записей в списке <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>Возвращает объект <see cref="T:System.Data.DataViewManager" />, связанный с этим представлением.</summary>
      <returns>
        <see langword="DataViewManager" />, который создал данное представление. Если это <see cref="T:System.Data.DataView" /> по умолчанию для <see cref="T:System.Data.DataTable" />, свойство <see langword="DataViewManager" /> возвращает <see langword="DataViewManager" /> по умолчанию для <see langword="DataSet" />. В противном случае, если <see langword="DataView" /> был создан без <see langword="DataViewManager" />, это свойство имеет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>Удаляет строку с заданным индексом.</summary>
      <param name="index">Индекс удаляемой строки.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>Освобождает все используемые объектом <see cref="T:System.Data.DataView" /> ресурсы, кроме памяти.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>Завершает инициализацию <see cref="T:System.Data.DataView" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary>Определяет, считаются ли равными указанные экземпляры <see cref="T:System.Data.DataView" />.</summary>
      <param name="view">Выражение <see cref="T:System.Data.DataView" /> для сравнения.</param>
      <returns>Значение <see langword="true" />, если два экземпляра <see cref="T:System.Data.DataView" /> равны, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>Находит строку в <see cref="T:System.Data.DataView" /> по указанному значению ключа сортировки.</summary>
      <param name="key">Объект, который нужно найти.</param>
      <returns>Индекс строки в <see cref="T:System.Data.DataView" />, содержащий указанное значение ключа сортировки; в противном случае — значение -1, если значение ключа не существует.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>Находит строку в <see cref="T:System.Data.DataView" /> по указанным значениям ключа сортировки.</summary>
      <param name="key">Массив значений с типом <see cref="T:System.Object" />.</param>
      <returns>Индекс позиции первой строки в <see cref="T:System.Data.DataView" />, совпадающий с указанными значениями ключа сортировки; в противном случае — значение -1, если совпадающие значения ключа сортировки отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>Возвращает массив объектов <see cref="T:System.Data.DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки.</summary>
      <param name="key">Значение столбца с типом <see cref="T:System.Object" />, которое нужно найти.</param>
      <returns>Массив объектов <see langword="DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки; пустой массив <see langword="DataRowView" />, если строки, содержащие указанное значение ключа сортировки, отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>Возвращает массив объектов <see cref="T:System.Data.DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки.</summary>
      <param name="key">Массив значений столбца с типом <see cref="T:System.Object" />, которые нужно найти.</param>
      <returns>Массив объектов <see langword="DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки; пустой массив <see langword="DataRowView" />, если строки, содержащие указанное значение ключа сортировки, отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>Возвращает перечислитель для данной коллекции <see cref="T:System.Data.DataView" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для перехода по списку.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>Происходит после успешного изменения <see cref="T:System.Data.DataView" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary>Происходит при завершении инициализации <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary>Возвращает значение, указывающее, был ли инициализирован компонент.</summary>
      <returns>Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>Получает значение, определяющее, открыт ли сейчас источник данных, а также представления проектных данных в объекте <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Значение <see langword="true" />, если источник открыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>Получает строку данных из указанной таблицы.</summary>
      <param name="recordIndex">Индекс записи в <see cref="T:System.Data.DataTable" />.</param>
      <returns>Объект <see cref="T:System.Data.DataRowView" /> нужной строки.</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>Происходит при изменении списка, управляемого объектом <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>Открывает <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>Зарезервировано только для внутреннего использования.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>Возвращает или задает выражение, используемое для выбора строк, просматриваемых в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns>Строка, задающая способ фильтрации строк.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>Возвращает или задает фильтр состояния строк, применяемый в <see cref="T:System.Data.DataView" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>Возвращает или задает столбец или столбцы для сортировки, а затем — порядок сортировки для <see cref="T:System.Data.DataView" />.</summary>
      <returns>Строка, содержащая имя столбца, за которым следует "ASC" (по возрастанию) или "DESC" (по убыванию). Столбцы сортируются по возрастанию по умолчанию. Несколько столбцов могут быть разделены запятыми.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Значение <see cref="T:System.Int32" />.</param>
      <param name="value">Вставляемое значение <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex">Значение <see cref="T:System.Int32" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">Значение <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Элемент, который нужно добавить в список.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction">Объект <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key">Значение <see cref="T:System.Object" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts">Объект <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, которые ищутся в коллекции как пригодные для привязки. Это может быть <see langword="null" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>Возвращает или задает исходный объект <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, предоставляющий данные для этого представления.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary>Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary>Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="distinct">При значении <see langword="true" /> возвращенный объект <see cref="T:System.Data.DataTable" /> содержит строки с различными значениями для всех столбцов. Значение по умолчанию — <see langword="false" />.</param>
      <param name="columnNames">Массив строк, содержащий список имен столбцов, которые должны быть включены в возвращенный объект <see cref="T:System.Data.DataTable" />. Объект <see cref="T:System.Data.DataTable" />, содержащий указанные столбцы в том порядке, в каком они отображаются внутри массива.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary>Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="tableName">Имя возвращенного объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary>Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="tableName">Имя возвращенного объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="distinct">При значении <see langword="true" /> возвращенный объект <see cref="T:System.Data.DataTable" /> содержит строки с различными значениями для всех столбцов. Значение по умолчанию — <see langword="false" />.</param>
      <param name="columnNames">Массив строк, содержащий список имен столбцов, которые должны быть включены в возвращенный объект <see cref="T:System.Data.DataTable" />. Объект <see langword="DataTable" />, содержащий указанные столбцы в том порядке, в каком они отображаются внутри массива.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>Зарезервировано только для внутреннего использования.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>Зарезервировано только для внутреннего использования.</summary>
      <param name="force">Зарезервировано только для внутреннего использования.</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>Содержит значение по умолчанию <see cref="T:System.Data.DataViewSettingCollection" /> для каждого <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataViewManager" /> для указанного объекта <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Имя используемого объекта <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>Создает объект <see cref="T:System.Data.DataView" /> для указанного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Имя объекта <see cref="T:System.Data.DataTable" />, используемого в объекте <see cref="T:System.Data.DataView" />.</param>
      <returns>Объект <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>Возвращает или задает объект <see cref="T:System.Data.DataSet" /> для использования с коллекцией <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>Используемый <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>Возвращает или задает значение, используемое для сохраняемости кода.</summary>
      <returns>Значение, используемое для сохраняемости кода.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>Получает коллекцию <see cref="T:System.Data.DataViewSettingCollection" /> для каждого объекта <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataViewSettingCollection" /> для каждого объекта <see langword="DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>Происходит после добавления или удаления строки из объекта <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> при добавлении или удалении объекта <see cref="T:System.Data.DataRelation" /> из коллекции <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary>Добавляет элемент в коллекцию <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, добавляемый в список <see cref="T:System.Collections.IList" />.</param>
      <returns>Позиция, на которую вставлен новый элемент.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary>Определяет, содержит ли коллекция <see cref="T:System.Collections.IList" /> указанное значение.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.IList" />.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Object" /> найден в <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary>Определяет индекс заданного элемента в списке <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.IList" />.</param>
      <returns>Индекс <paramref name="value" />, если он найден в списке; в противном случае — значение -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Вставляет элемент в список <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</param>
      <param name="value">Объект <see cref="T:System.Object" />, вставляемый в <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary>Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Элемент <see cref="T:System.Object" />, который требуется удалить из <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Удаляет элемент <see cref="T:System.Collections.IList" />, расположенный по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Добавляет дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> к индексам, используемым для поиска.</summary>
      <param name="property">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, добавляемый к индексам, используемым для поиска.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Сортирует список, используя дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> и направление <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> для сортировки.</param>
      <param name="direction">Одно из значений перечисления <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Возвращает индекс строки с данным дескриптором <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="property">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> для поиска.</param>
      <param name="key">Значение параметра property, используемое для поиска.</param>
      <returns>Индекс строки с данным дескриптором <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Удаляет дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> из индексов, используемых для поиска.</summary>
      <param name="property">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, удаляемый из индексов, используемых для поиска.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Удаляет любую сортировку, выполненную с использованием метода <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Возвращает <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства каждого элемента, используемого для привязки данных.</summary>
      <param name="listAccessors">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, которые ищутся в коллекции как пригодные для привязки. Это может быть <see langword="null" />.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства каждого элемента, используемого для привязки данных.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Возвращает имя списка.</summary>
      <param name="listAccessors">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, для которых возвращается имя списка. Это может быть <see langword="null" />.</param>
      <returns>Имя списка.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> при добавлении или удалении объекта <see cref="T:System.Data.DataTable" /> из коллекции <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>Описывает версию данных в объекте <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>Новая строка.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>Текущие строки, включая неизмененные, новые и измененные строки. По умолчанию <see cref="T:System.Data.DataViewRowState" /> имеет значение CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>Удаленная строка.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>Текущая версия исходных данных, которые были изменены (см. <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>Версия исходной строки измененных данных. (Хотя данные были изменены, они доступны как <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>Отсутствует.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>Исходные строки, включая неизмененные и удаленные.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>Неизменившаяся строка.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>Представляет параметры по умолчанию для свойств <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> и <see cref="P:System.Data.DataView.Table" /> для объекта DataView, созданного из <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>Возвращает или задает значение, определяющее необходимость использования сортировки по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если используется сортировка по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>Получает объект <see cref="T:System.Data.DataViewManager" />, в который входит этот экземпляр <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>Возвращает или задает фильтр, применяемый в объекте <see cref="T:System.Data.DataView" />. Пример кода с RowFilter см. в разделе <see cref="P:System.Data.DataView.RowFilter" />.</summary>
      <returns>Строка, содержащая применяемый фильтр.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>Возвращает или задает значение, определяющее необходимость отображения строк Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged или отсутствие строк в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns>Значение, определяющее строку, которую нужно отобразить.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>Возвращает или задает значение, определяющее сортировку, применяемую в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns>Сортировка, применяемая в объекте <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>Получает объект <see cref="T:System.Data.DataTable" />, к которому нужно применить свойства объекта <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>Содержит доступную только для чтения коллекцию объектов <see cref="T:System.Data.DataViewSetting" /> для каждого объекта <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="ar">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary>Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="ar">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>Возвращает количество объектов <see cref="T:System.Data.DataViewSetting" /> в коллекции <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>Количество объектов <see cref="T:System.Data.DataViewSetting" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.DataViewSettingCollection" /> доступной только для чтения.</summary>
      <returns>Всегда возвращает <see langword="true" /> , чтобы указать, что коллекция доступна только для чтения.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Data.DataViewSettingCollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>Это свойство всегда имеет значение <see langword="false" />, если оно не переопределено производным классом.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>Возвращает объекты <see cref="T:System.Data.DataViewSetting" /> указанного класса <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table">Искомый объект <see cref="T:System.Data.DataTable" />.</param>
      <returns>Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>Возвращает объекты <see cref="T:System.Data.DataViewSetting" /> класса <see cref="T:System.Data.DataTable" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс объекта <see cref="T:System.Data.DataTable" />, который требуется найти.</param>
      <returns>Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.DataViewSetting" /> класса <see cref="T:System.Data.DataTable" />, заданный по его имени.</summary>
      <param name="tableName">Имя объекта <see cref="T:System.Data.DataTable" />, который необходимо найти.</param>
      <returns>Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>Исключение, которое вызывается объектом <see cref="T:System.Data.Common.DataAdapter" /> во время выполнения операции вставки, обновления или удаления, не затронувшей ни одной строки.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Текстовая строка с подробными сведениями об исключении.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Текстовая строка с подробными сведениями об исключении.</param>
      <param name="inner">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="inner">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
      <param name="dataRows">Массив, содержащий объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary>Копирует объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения, в указанный массив объектов <see cref="T:System.Data.DataRow" />.</summary>
      <param name="array">Одномерный массив объектов <see cref="T:System.Data.DataRow" />, в который копируются объекты <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Копирует объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения, в указанный массив объектов <see cref="T:System.Data.DataRow" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array">Одномерный массив объектов <see cref="T:System.Data.DataRow" />, в который копируются объекты <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex">Индекс целевого массива, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заносит в объект сведений о сериализации данные, необходимые для сериализации <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="si">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализуемого потока, связанного с объектом <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="info" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Data.DataRow" />, вызвавшего <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns>Значение <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary>Возвращает количество строк, обновление которых завершилось сбоем, и создает это исключение.</summary>
      <returns>Целое число, содержащее количество строк, обновление которых завершилось со сбоем.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary>Указывает тип данных поля, свойства или объекта <see langword="Parameter" /> поставщика данных .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>Поток переменной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>Поток фиксированной длины из символов, не принадлежащих кодировке Юникод.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>Поток переменной длины из двоичных данных, имеющий длину от 1 до 8000 байт.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>Простой тип для представления логических значений <see langword="true" /> и <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>8-разрядное целое число без знака, которое может принимать значения от 0 до 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>Значение типа currency, лежащее в диапазоне от -2 63 (или -922 337 203 685 477,5808) до 2 63 -1 (или +922 337 203 685 477,5807) и имеющее точность до одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>Тип, представляющий значение даты.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>Тип, представляющий значение даты и времени.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary>Данные даты и времени. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary>Данные даты и времени с учетом часового пояса. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Часовые пояса могут находиться в диапазоне от -14:00 до +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>Простой тип для представления значений в диапазоне от 1,0 x 10 -28 до приблизительно 7,9 x 10 28 с 28–29 значимыми цифрами.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>Тип для представления значений с плавающей запятой в диапазоне от 5,0 x 10 -324 до приблизительно 1,7 x 10 308 с точностью до 15–16 знаков.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>Глобальный уникальный идентификатор (GUID).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>Целочисленный тип для представления 16-разрядных целых чисел со знаком в диапазоне от -32768 до 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>Целочисленный тип для представления 32-разрядных целых чисел со знаком в диапазоне от -2147483648 до 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>Целочисленный тип для представления 64-разрядных целых чисел со знаком в диапазоне от -9223372036854775808 до 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>Общий тип для представления всех значений и ссылок, которые не могут быть представлены ни одним другим значением <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>Целочисленный тип для представления 8-разрядных целых чисел со знаком в диапазоне от -128 до 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>Тип для представления значений с плавающей запятой в диапазоне от 1,5 x 10 -45 до приблизительно 3,4 x 10 38 с точностью до 7знаков.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>Тип, представляющий символьные строки в Юникоде.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>Строка фиксированной длины из символов Юникода.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>Тип, представляющий значение <see langword="DateTime" /> SQL Server. Если нужно использовать значение <see langword="time" /> SQL Server, необходимо воспользоваться <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>Целочисленный тип для представления 16-разрядных целых чисел без знака в диапазоне от 0 до 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>Целочисленный тип для представления 32-разрядных целых чисел со значениями от 0 до 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>Целочисленный тип для представления 64-разрядных целых чисел со значениями от 0 до 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>Числовое значение переменной длины.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary>Проанализированное представление фрагмента или документа XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>Представляет исключение, которое выдается при попытке выполнить действие с удаленным объектом <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>Представляет исключение, которое выдается, если при добавлении строк в объект, относящийся к <see cref="T:System.Data.DataSet" />, нарушается уникальность имен объектов базы данных.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> с заданной строкой и внутренним исключением.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Data.DataRow" />, возвращаемых из запроса LINQ to DataSet. Данный API поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из кода.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель для коллекции объектов <see cref="T:System.Data.DataRow" />. Данный API поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из кода.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра коллекции объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary>Представляет коллекцию объектов <see cref="T:System.Data.DataRow" />, возвращаемых из запроса.</summary>
      <typeparam name="TRow">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary>Возвращает перечислитель для коллекции включенных объектов строк.</summary>
      <returns>Строго типизированный перечислитель <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для перемещения по коллекции объектов <paramref name="TRow" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель для коллекции объектов <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра коллекции объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary>Содержит методы расширений для классов коллекции строк данных.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary>Преобразовывает элементы объекта <see cref="T:System.Data.EnumerableRowCollection" /> в заданный тип.</summary>
      <param name="source">Объект <see cref="T:System.Data.EnumerableRowCollection" />, содержащий преобразуемые элементы.</param>
      <typeparam name="TResult">Тип, в который преобразуются элементы источника.</typeparam>
      <returns>
        <see cref="T:System.Data.EnumerableRowCollection" /> — содержит все элементы исходной последовательности, преобразованные в указанный тип.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Элемент последовательности не может быть приведен к типу <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Сортирует строки объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке возрастания по заданному ключу.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Сортирует строки объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке возрастания по указанному ключу и компаратору.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Сортирует строки объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке убывания по указанному ключу.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Сортирует строки объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке убывания в соответствии с указанным ключом и компаратором.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Проецирует каждый элемент <see cref="T:System.Data.EnumerableRowCollection`1" /> в новую форму.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection`1" />, содержащая элементы <see cref="T:System.Data.DataRow" />, для которых будет вызвана функция преобразования.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S">Тип, в который будет преобразован объект <paramref name="TRow" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.EnumerableRowCollection`1" />, элементы которого получены в результате вызова функции преобразования для каждого элемента последовательности <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Выполняет вторичную сортировку строк объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке возрастания по заданному ключу.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Выполняет вторичную сортировку строк объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке возрастания по заданному ключу и компаратору.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Выполняет вторичную сортировку строк объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке убывания по заданному ключу.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Выполняет вторичную сортировку строк объекта <see cref="T:System.Data.EnumerableRowCollection" /> в порядке убывания по заданному ключу и компаратору.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат упорядочению.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary>Выполняет фильтрацию последовательности строк на основе указанного предиката.</summary>
      <param name="source">Коллекция <see cref="T:System.Data.EnumerableRowCollection" />, элементы <see cref="T:System.Data.DataRow" /> которой подлежат фильтрации.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, содержащий строки входной последовательности, которые удовлетворяют условию.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>Представляет исключение, которое выдается, когда невозможно найти значение свойства <see cref="P:System.Data.DataColumn.Expression" /> класса <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источника и назначение конкретного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.Common.DataAdapter.FillError" /> объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable">Обновляемая таблица <see cref="T:System.Data.DataTable" />.</param>
      <param name="values">Значения обновляемой строки.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>Возвращает или задает значение, указывающее, должна ли операция заполнения продолжиться, несмотря на возникновение ошибки.</summary>
      <returns>Значение <see langword="true" />, если операция должна продолжаться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>Получает таблицу <see cref="T:System.Data.DataTable" />, которая обновлялась в момент возникновения ошибки.</summary>
      <returns>Обновляемая таблица <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>Получает обрабатываемые ошибки.</summary>
      <returns>Обрабатываемые ошибки.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>Получает значения строки, которая обновлялась в момент возникновения ошибки.</summary>
      <returns>Значения обновляемой строки.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Data.Common.DataAdapter.FillError" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.FillErrorEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>Представляет ограничение, установленное для набора столбцов в отношении "первичный ключ/внешний ключ", на действия, выполняемые при удалении или обновлении значения или строки.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="parentColumn">Родительский объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumn">Дочерний объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> указанным родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumns">Массив дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем и родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="constraintName">Имя ограничения.</param>
      <param name="parentColumn">Родительский объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumn">Дочерний объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем и массивами родительских и дочерних объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="constraintName">Имя <see cref="T:System.Data.ForeignKeyConstraint" />. Если значением является <see langword="null" /> или пустая строка, то при добавлении этого ограничения в коллекцию ему будет присвоено имя по умолчанию.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumns">Массив дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Этот конструктор предназначен для поддержки времени разработки в среде Visual Studio. Объекты <see cref="T:System.Data.ForeignKeyConstraint" />, созданные с помощью этого конструктора, должны затем добавляться в коллекцию при помощи метода <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Таблицы и столбцы с указанными именами должны существовать во время вызова метода; если же метод <see cref="M:System.Data.DataTable.BeginInit" /> был вызван до вызова этого конструктора, таблицы и столбцы с указанными именами должны существовать во время вызова метода <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName">Имя ограничения.</param>
      <param name="parentTableName">Имя родительского объекта <see cref="T:System.Data.DataTable" />, который содержит родительские объекты <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="parentTableNamespace">Имя <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames">Массив имен родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumnNames">Массив имен дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="acceptRejectRule">Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" /> и <see langword="Default" />.</param>
      <param name="deleteRule">Одно из значений <see cref="T:System.Data.Rule" />, используемое при удалении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <param name="updateRule">Одно из значений <see cref="T:System.Data.Rule" />, используемое при обновлении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Этот конструктор предназначен для поддержки времени разработки в среде Visual Studio. Объекты <see cref="T:System.Data.ForeignKeyConstraint" />, созданные с помощью этого конструктора, должны затем добавляться в коллекцию при помощи метода <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Таблицы и столбцы с указанными именами должны существовать во время вызова метода; если же метод <see cref="M:System.Data.DataTable.BeginInit" /> был вызван до вызова этого конструктора, таблицы и столбцы с указанными именами должны существовать во время вызова метода <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName">Имя ограничения.</param>
      <param name="parentTableName">Имя родительского объекта <see cref="T:System.Data.DataTable" />, который содержит родительские объекты <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="parentColumnNames">Массив имен родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumnNames">Массив имен дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="acceptRejectRule">Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" /> и <see langword="Default" />.</param>
      <param name="deleteRule">Одно из значений <see cref="T:System.Data.Rule" />, используемое при удалении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <param name="updateRule">Одно из значений <see cref="T:System.Data.Rule" />, используемое при обновлении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>Указывает действие, которое должно быть выполнено в связи с этим ограничением при вызове метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" /> и <see langword="Cascade" />. Значение по умолчанию — <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>Возвращает дочерние столбцы этого ограничения.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся дочерними столбцами в ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>Возвращает или задает действие, которое происходит в пределах этого ограничения при удалении строки.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.Rule" />. Значение по умолчанию — <see langword="Cascade" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>Возвращает значение,указывающее, идентичен ли текущий объект <see cref="T:System.Data.ForeignKeyConstraint" /> указанному объекту.</summary>
      <param name="key">Объект, с которым сравнивается объект <see cref="T:System.Data.ForeignKeyConstraint" />. Два объекта <see cref="T:System.Data.ForeignKeyConstraint" /> равны, если они накладывают ограничения на одни и те же столбцы.</param>
      <returns>Значение <see langword="true" />, если объекты одинаковы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>Возвращает хэш-код этого экземпляра объекта <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>Родительские столбцы этого ограничения.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами в ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>Возвращает родительскую таблицу этого ограничения.</summary>
      <returns>Родительский объект <see cref="T:System.Data.DataTable" /> этого ограничения.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>Возвращает дочернюю таблицу этого ограничения.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, являющийся дочерней таблицей в этом ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>Возвращает или задает действие, которое происходит в пределах этого ограничения при обновлении строки.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.Rule" />. Значение по умолчанию — <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>Связывает столбец источника данных со столбцом объекта <see cref="T:System.Data.DataSet" />. Этот интерфейс реализуется классом <see cref="T:System.Data.Common.DataColumnMapping" />, который совместно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>Возвращает или задает имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <returns>Имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления. Имя без учета регистра.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>Возвращает или задает имя столбца в источнике данных для сопоставления. Имя указано с учетом регистра.</summary>
      <returns>Имя столбца в источнике данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>Содержит коллекцию объектов DataColumnMapping. Этот интерфейс реализуется классом <see cref="T:System.Data.Common.DataColumnMappingCollection" />, который совместно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>Добавляет объект ColumnMapping к коллекции ColumnMapping, используя имена столбца-источника и столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">Зависящее от регистра имя исходного столбца.</param>
      <param name="dataSetColumnName">Имя столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns>Объект ColumnMapping, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>Возвращает значение, указывающее, содержится ли в коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца-источника.</summary>
      <param name="sourceColumnName">Зависящее от регистра имя исходного столбца.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца-источника существует; в обратном случае – значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Возвращает объект ColumnMapping, соответствующий указанному имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumnName">Имя столбца <see cref="T:System.Data.DataSet" /> в коллекции.</param>
      <returns>Объект ColumnMapping, соответствующий указанному имени <see langword="DataSet" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>Возвращает расположение объекта <see cref="T:System.Data.Common.DataColumnMapping" />, соответствующего указанному имени столбца-источника. Имя указано с учетом регистра.</summary>
      <param name="sourceColumnName">Зависящее от регистра имя исходного столбца.</param>
      <returns>Расположение объекта <see langword="DataColumnMapping" />, соответствующего указанному имени столбца-источника (отсчет ведется с нуля).</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</summary>
      <param name="index">Имя <see langword="SourceColumn" /> для искомого объекта <see langword="IColumnMapping" />.</param>
      <returns>Объект <see langword="IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see cref="P:System.Data.IColumnMapping.SourceColumn" /> из коллекции.</summary>
      <param name="sourceColumnName">Имя <see langword="SourceColumn" /> с учетом регистра.</param>
      <exception cref="T:System.IndexOutOfRangeException">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем <see langword="SourceColumn" /> не существует.</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>Позволяет объекту реализовать DataAdapter и представляет набор методов и соответствующие свойства, связанные с операциями, для заполнения и обновления объекта <see cref="T:System.Data.DataSet" /> и обновления источника данных.  
 Экземпляры <see cref="T:System.Data.IDbDataAdapter" /> — для источников данных, которые являются или напоминают реляционные базы данных с текстуальными командами (например, Transact-SQL), а экземпляры <see cref="T:System.Data.IDataAdapter" /> могут использовать любой тип источника данных.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>Добавляет или обновляет строки в объект <see cref="T:System.Data.DataSet" /> для получения соответствия со строками в источнике данных, используя имя объекта <see cref="T:System.Data.DataSet" /> и создает объект <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> с именем Table в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанного значения типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, который необходимо заполнить сведениями схемы из источника данных.</param>
      <param name="schemaType">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns>Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>Указывает, будут ли несопоставленные столбцы-источники или таблицы-источники передаваться со своими исходными именами, чтобы пройти через фильтр или вызвать ошибку.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />. Значение по умолчанию — <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение не является одним из значений <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>Указывает или задает значение, определяющее, будут ли отсутствующие исходные таблицы, столбцы и их отношения добавляться в схему набора данных, игнорироваться или вызывать ошибку.</summary>
      <returns>Одно из значений <see cref="T:System.Data.MissingSchemaAction" />. Значение по умолчанию — <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение не является одним из значений <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>Указывает, как исходная таблица сопоставлена с таблицей набора данных.</summary>
      <returns>Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>Вызывает соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном объекте <see cref="T:System.Data.DataSet" /> из объекта <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>Представляет параметр, относящийся к объекту Command, и при необходимости его сопоставление со столбцами <see cref="T:System.Data.DataSet" />. Реализация осуществляется с помощью поставщиков данных .NET Framework, которые обращаются к источникам данных.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойству не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>Возвращает или задает значение, определяющее, предназначен ли параметр только для ввода, только для вывода, является ли он двунаправленным или возвращается хранимой процедурой.</summary>
      <returns>Одно из значений <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.ParameterDirection" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>Получает значение, определяющее, может ли параметр принимать значения null.</summary>
      <returns>
        <see langword="true" />, если допускаются значения null. В противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns>Имя <see cref="T:System.Data.IDataParameter" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>Возвращает или задает имя исходного столбца, сопоставленного с <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>Имя исходного столбца, сопоставленного с <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" /> при загрузке <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>Возвращает или задает значение параметра.</summary>
      <returns>Объект <see cref="T:System.Object" />, который является значением параметра. Значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>Собирает все параметры, относящиеся к объекту Command, и их сопоставления со столбцами <see cref="T:System.Data.DataSet" />. Реализация осуществляют поставщики данных .NET Framework, которые обращаются к источникам данных.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>Возвращает значение, которое показывает, имеет ли параметр в коллекции указанное имя.</summary>
      <param name="parameterName">Имя параметра.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит параметр. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>Возвращает расположение элемента <see cref="T:System.Data.IDataParameter" /> в коллекции.</summary>
      <param name="parameterName">Имя параметра.</param>
      <returns>Отсчитываемое от нуля расположение элемента <see cref="T:System.Data.IDataParameter" /> в коллекции.</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>Возвращает или задает параметр по указанному индексу.</summary>
      <param name="parameterName">Имя получаемого параметра.</param>
      <returns>Элемент <see cref="T:System.Object" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.IDataParameter" /> из коллекции.</summary>
      <param name="parameterName">Имя параметра.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>Предоставляет средства чтения одного или нескольких прямонаправленных потоков наборов результатов, полученных вследствие выполнения команды в источнике данных. Реализацию осуществляют поставщики данных .NET Framework, которые имеют доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>Закрывает объект <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>Возвращает значение, показывающее глубину вложенности для текущей строки.</summary>
      <returns>Уровень вложенности.</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.IDataReader" /> закрыт.</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>Возвращает значение, которое указывает, является ли модуль чтения закрытым.</summary>
      <returns>
        <see langword="true" />, если модуль чтения данных закрытый. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>Перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций SQL.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>Перемещает <see cref="T:System.Data.IDataReader" /> к следующей записи.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>Предоставляет доступ к значениям столбцов в каждой строке для <see langword="DataReader" />. Реализация осуществляют поставщики данных .NET Framework, которые обращаются к реляционным базам данных.</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>Возвращает число столбцов в текущей строке.</summary>
      <returns>Если отсутствует в допустимом наборе записей 0. В противном случае — число столбцов в текущей записи. Значение по умолчанию — -1.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>Возвращает 8-битное целое число без знака для указанного столбца.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>8-битное целое число без знака для указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает поток байтов из указанного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="fieldOffset">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferoffset">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Число фактически считанных байтов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>Возвращает значение символа для указанного столбца.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение символа указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Считывает поток символов из указанного смещения столбца в буфер как массив, начиная с заданного смещения буфера.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="fieldoffset">Индекс в строке, с которого начинается операция считывания.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferoffset">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Число фактически считанных символов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>Возвращает <see cref="T:System.Data.IDataReader" /> для указанного порядкового номера столбца.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>
        <see cref="T:System.Data.IDataReader" /> для указанного порядкового номера столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>Возвращает сведения о типе данных для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Сведения о типе данных для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>Возвращает значение даты и времени для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Значение даты и времени данных для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>Возвращает числовое значение с фиксированным расположением для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Числовое значение с фиксированным расположением для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>Возвращает число с плавающей запятой двойной точности для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Число с плавающей запятой двойной точности для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>Возвращает сведения <see cref="T:System.Type" /> о типе <see cref="T:System.Object" />, который будет возвращен из <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Сведения <see cref="T:System.Type" /> о типе <see cref="T:System.Object" />, который будет возвращен из <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>Возвращает число с плавающей запятой одиночной точности для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Число с плавающей запятой одиночной точности для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>Возвращает значение GUID указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Значение GUID указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>Возвращает 16-битное целое число со знаком для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>16-битное целое число со знаком для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>Возвращает 32-битное целое число со знаком для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>32-битное целое число со знаком для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>Возвращает 64-битное целое число со знаком для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>64-битное целое число со знаком для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>Возвращает имя для поля, которое необходимо найти.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Имя поля или пустая строка (""), если возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>Возвращает индекс именованного поля.</summary>
      <param name="name">Имя искомого поля.</param>
      <returns>Индекс именованного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>Получает значение строки заданного ключа.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Значение строки заданного ключа.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>Возвращает значение указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>
        <see cref="T:System.Object" /> — будет содержать возвращаемое значение поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей записи.</summary>
      <param name="values">Массив <see cref="T:System.Object" />, в который нужно копировать поля атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>Возвращает логическое значение, показывающее, имеет ли указанное поле значение null.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Значение <see langword="true" />, если для указанного поля задано значение null. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>Возвращает столбец, находящийся по указанному индексу.</summary>
      <param name="i">Отсчитываемый от нуля индекс возвращаемого столбца.</param>
      <returns>Столбец, находящийся по указанному индексу, например <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>Возвращает столбец с указанным именем.</summary>
      <param name="name">Имя столбца, который нужно найти.</param>
      <returns>Столбец с указанным именем в качестве <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Столбец с указанным именем не найден.</exception>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary>Представляет инструкцию SQL, выполняемую при подключении к источнику данных, которую реализуют поставщики данных платформы NET Framework, имеющие доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary>Пытается отменить выполнение <see cref="T:System.Data.IDbCommand" />.</summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary>Возвращает или задает текстовую команду, выполняемую применительно к источнику данных.</summary>
      <returns>Текстовая команда для выполнения. Значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary>Возвращает или задает время ожидания перед завершением попытки выполнить команду и созданием ошибки.</summary>
      <returns>Время (в секундах) ожидания выполнения команды. Значение по умолчанию - 30 секунды.</returns>
      <exception cref="T:System.ArgumentException">Присвоенное значение свойства меньше 0.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary>Указывает или определяет способ интерпретации свойства <see cref="P:System.Data.IDbCommand.CommandText" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.CommandType" />. Значение по умолчанию — <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IDbConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>Подключение к источнику данных.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns>Объект <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary>Выполняет инструкцию SQL для объекта <see langword="Connection" /> поставщика данных .NET Framework и возвращает число задействованных строк.</summary>
      <returns>Число обработанных строк.</returns>
      <exception cref="T:System.InvalidOperationException">Подключение не существует.  
 -или-  
 Подключение не открыто.</exception>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary>Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> в <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> применительно к объекту <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" /> с помощью одного из значений <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary>Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом. Дополнительные столбцы или строки не обрабатываются.</summary>
      <returns>Первый столбец или первая строка в результирующем наборе.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary>Возвращает набор <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary>Создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> не указывается.  

или - 
Значением параметра <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> не является <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary>Возвращает или задает транзакцию, в пределах которой выполняется объект <see langword="Command" /> поставщика данных .NET Framework.</summary>
      <returns>выполняется объект <see langword="Command" /> поставщика данных .NET Framework. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary>Возвращает или задает способы применения результатов команд к объекту <see cref="T:System.Data.DataRow" /> при использовании метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.UpdateRowSource" />. Значение по умолчанию — <see langword="Both" />, если команда не создается автоматически. Значение по умолчанию — <see langword="None" />.</returns>
      <exception cref="T:System.ArgumentException">Введенное значение не являлось одним из значений <see cref="T:System.Data.UpdateRowSource" />.</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>Представляет открытое подключение к источнику данных и реализуется поставщиками данных платформы NET Framework, которые имеют доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>Начинает транзакцию базы данных.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных с указанным значением <see cref="T:System.Data.IsolationLevel" />.</summary>
      <param name="il">Одно из значений <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>Изменяет текущую базу данных для открытого объекта <see langword="Connection" />.</summary>
      <param name="databaseName">Имя базы данных, которая предназначена для использования вместо текущей базы данных.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>Закрывает соединение с базой данных.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>Получает или задает строку, используемую для открытия базы данных.</summary>
      <returns>Строка, содержащая параметры подключения.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>Получает время ожидания при попытке установки подключения, по истечении которого попытка подключения завершается и создается ошибка.</summary>
      <returns>Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию - 15 секунды.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary>Создает и возвращает объект Command, связанный с подключением.</summary>
      <returns>Объект Command, связанный с подключением.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
      <returns>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>Устанавливает подключение к базе данных с параметрами, указанными в свойстве <see langword="ConnectionString" /> объекта Connection для определенного поставщика.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>Возвращает текущее состояние подключения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>Представляет набор связанных с командой свойств, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных, реализуемый поставщиками данных .NET Framework, осуществляющими доступ к реляционным базам данных.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary>Возвращает или задает оператор SQL для удаления записей из набора данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary>Возвращает или задает оператор SQL для вставки новых записей в источник данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary>Возвращает или задает оператор SQL для выбора записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary>Возвращает или задает оператор SQL для обновления записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>Используется в конструкторах данных Visual Basic .NET для представления параметра в объект Command и при необходимости его сопоставления со столбцами <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>Указывает точность числовых параметров.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства Value объекта Parameter поставщика данных. Значение по умолчанию — 0. Оно указывает, что точность значения Value задает поставщик данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>Указывает масштаб числовых параметров.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>Размер параметра.</summary>
      <returns>Максимальная длина данных (в байтах) в столбце. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>Представляет транзакцию, выполняемую с источником данных; реализуется поставщиками данных платформы NET Framework, у которых есть доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>Фиксирует транзакцию базы данных.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  
 -или-  
 Соединение закрыто.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>Указывает объект Connection для связывания с транзакцией.</summary>
      <returns>Объект Connection для связывания с транзакцией.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>Указывает <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</summary>
      <returns>
        <see cref="T:System.Data.IsolationLevel" /> для этой транзакции. Значение по умолчанию — <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>Откатывает транзакцию из состояния ожидания.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  
 -или-  
 Соединение закрыто.</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>Представляет исключение, которое выдается при вызове метода <see cref="M:System.Data.DataRow.EndEdit" /> в событии <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>Предоставляет базовую функциональность для создания коллекций.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы текущего объекта <see cref="T:System.Data.InternalDataCollectionBase" /> в одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
      <param name="ar">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы текущего объекта <see cref="T:System.Data.InternalDataCollectionBase" />.</param>
      <param name="index">Индекс целевого массива <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>Возвращает общее число элементов в коллекции.</summary>
      <returns>Общее число элементов в коллекции.</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.InternalDataCollectionBase" /> доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.InternalDataCollectionBase" /> синхронизированной.</summary>
      <returns>Значение <see langword="true" />, если коллекция синхронизирована; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>Возвращает элементы коллекции в виде списка.</summary>
      <returns>Объект <see cref="T:System.Collections.ArrayList" />, содержащий коллекцию.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>Возвращает объект, который можно использовать для синхронизации коллекции.</summary>
      <returns>Объект <see cref="T:System.Object" />, который используется для синхронизации коллекции.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>Представляет исключение, возникающее при неправильной попытке создания отношения или доступа к нему.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>Представляет собой исключение, возникающее при попытке добавления столбца <see cref="T:System.Data.DataColumn" />, содержащего недопустимое выражение <see cref="P:System.Data.DataColumn.Expression" />, к коллекции <see cref="T:System.Data.DataColumnCollection" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>Задает поведение при блокировке транзакции для подключения.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>Ожидающие изменения более изолированных транзакций не могут быть перезаписаны.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>В процессе чтения данных совмещаемые блокировки сохраняются, чтобы избежать чтения "грязных" данных, однако данные могут быть изменены до окончания транзакции, что может стать причиной неповторяемого чтения или появления фиктивных данных.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>Чтение "грязных" данных возможно, что означает отсутствие совмещаемых и монопольных блокировок.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>Блокировки помещаются на все данные, используемые в запросе, что предотвращает обновление данных другими пользователями. Предотвращает неповторяемое чтение, однако появление фиктивных строк остается возможным.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>Блокировка диапазона устанавливается для объекта <see cref="T:System.Data.DataSet" />, что предотвращает обновление или ставку строк другими пользователями в набор данных до завершения транзакции.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary>Уменьшает блокировку, сохраняя версию данных, которую приложение может считывать в то время, когда другое приложение изменяет те же самые данные. Указывает, что из одной транзакции пользователь не может просматривать изменения, сделанные в других транзакциях, даже если он запросит их повторно.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>Используется уровень изоляции, отличный от указанного, однако этот уровень не может быть определен.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>Связывает исходную таблицу с таблицей в <see cref="T:System.Data.DataSet" /> и реализуется классом <see cref="T:System.Data.Common.DataTableMapping" />, который обычно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>Получает производной коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>Возвращает или задает имя таблицы в <see cref="T:System.Data.DataSet" /> без учета регистра.</summary>
      <returns>Имя таблицы в <see cref="T:System.Data.DataSet" /> без учета регистра.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>Возвращает или задает имя исходной таблицы с учетом регистра.</summary>
      <returns>Имя исходной таблицы с учетом регистра.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>Содержит коллекцию объектов TableMapping и реализуется коллекцией <see cref="T:System.Data.Common.DataTableMappingCollection" />, которая обычно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>Добавляет сопоставление таблицы в коллекцию.</summary>
      <param name="sourceTableName">Имя исходной таблицы с учетом регистра.</param>
      <param name="dataSetTableName">Имя таблицы <see cref="T:System.Data.DataSet" />.</param>
      <returns>Ссылка на вновь сопоставленный объект <see cref="T:System.Data.ITableMapping" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>Получает значение, указывающее на наличие в коллекции сопоставления таблицы с указанным именем исходной таблицы.</summary>
      <param name="sourceTableName">Имя исходной таблицы с учетом регистра.</param>
      <returns>Значение <see langword="true" />, если сопоставление таблицы с указанным именем исходной таблицы существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Получает объект TableMapping с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTableName">Имя таблицы <see langword="DataSet" /> в коллекции.</param>
      <returns>Объект TableMapping с указанным именем таблицы <see langword="DataSet" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>Получает местоположение объекта <see cref="T:System.Data.ITableMapping" /> в коллекции.</summary>
      <param name="sourceTableName">Имя исходной таблицы с учетом регистра.</param>
      <returns>Получает местоположение объекта <see cref="T:System.Data.ITableMapping" /> в коллекции (отсчет ведется от нуля).</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>Возвращает или задает экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" />.</summary>
      <param name="index">Имя <see langword="SourceTable" /> объекта <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see langword="SourceTable" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" /> из коллекции.</summary>
      <param name="sourceTableName">Имя <see langword="SourceTable" /> с учетом регистра.</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary>Определяет список параметров строки подключения, определяемых свойством <see langword="KeyRestrictions" />, которые могут быть разрешены или запрещены.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary>По умолчанию. Определяет только разрешенные дополнительные параметры строки подключения.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary>Определяет запрещенные дополнительные параметры строки подключения.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary>Управляет применением значений из источника данных в существующих строках при использовании метода <see cref="Overload:System.Data.DataTable.Load" /> или <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary>Входные значения для этой строки будут записаны как в текущее значение, так и в исходное значение данных для каждого столбца.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary>Входные значения для этой строки будут записаны в исходные значения данных для каждого столбца. Текущая версия данных в столбце не изменяется.  Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary>Входные значения для этой строки будут записаны в текущее значение данных для каждого столбца. Исходная версия данных в столбце не изменяется.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>Указывает на порядок сопоставления <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>Столбец сопоставляется с атрибутом XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>Столбец сопоставляется с элементом XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>Столбец сопоставляется с внутренней структурой.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>Столбец сопоставляется с узелом <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>Происходит, если целевой и исходный объекты <see langword="DataRow" /> имеют одинаковое значение первичного ключа и если свойство <see cref="P:System.Data.DataSet.EnforceConstraints" /> имеет значение true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MergeFailedEventArgs" /> с <see cref="T:System.Data.DataTable" /> и описанием конфликта слияния.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict">Описание конфликта слияния.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>Возвращает описание конфликта слияния.</summary>
      <returns>Описание конфликта слияния.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.DataSet.MergeFailed" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Данные для события.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>Определяет действие, которое выполняется при отсутствии сопоставления в исходной таблице или исходном столбце.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>Если отсутствует сопоставление указанного столбца, создается исключение <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>Столбец или таблица, для которых сопоставление отсутствует, игнорируются. Возвращает <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>Создается исходный столбец или исходная таблица, которая добавляется к <see cref="T:System.Data.DataSet" /> с использованием исходного имени.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>Представляет собой исключение, выдаваемое при попытке доступа к строке таблицы, не имеющей первичного ключа.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>Определяет действие, выполняемое при добавлении данных к <see cref="T:System.Data.DataSet" />, если необходимые объекты <see cref="T:System.Data.DataTable" /> или <see cref="T:System.Data.DataColumn" /> отсутствуют.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>Добавляет необходимые столбцы для завершения схемы.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>Добавляет необходимые столбцы и сведения о первичном ключе для завершения схемы. Дополнительные сведения о порядке добавления сведений о первичном ключе к <see cref="T:System.Data.DataTable" /> см. в описании метода <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Для правильного функционирования <see langword="AddWithKey" /> с поставщиком данных .NET Framework для Microsoft OLE DB необходимо, чтобы собственный поставщик Microsoft OLE DB получил необходимые сведения о первичном ключе путем задания свойства DBPROP_UNIQUEROWS и определил столбцы первичного ключа с помощью проверки свойства DBCOLUMN_KEYCOLUMN в IColumnsRowset. В качестве альтернативного варианта пользователь может явно задать ограничения первичного ключа для каждого объекта <see cref="T:System.Data.DataTable" />. Это гарантирует, что при добавлении записей, соответствующих уже имеющимся записям, они будут обновляться, а не дописываться в конец. При использовании метода <see langword="AddWithKey" /> поставщик данных .NET Framework для SQL Server добавляет предложение FOR BROWSE к выполняемому оператору. Пользователь должен быть осведомлен о возможных побочных эффектах, например о проблемах, возникающих при использовании операторов SET FMTONLY ON. Дополнительные сведения см. в разделе SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>Если отсутствует сопоставление указанного столбца, создается исключение <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>Игнорирует лишние столбцы.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>Представляет исключение, выдаваемое при попытке вставки значения null в столбец, где для свойства <see cref="P:System.Data.DataColumn.AllowDBNull" /> задано значение <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary>Представляет упорядоченную коллекцию объектов <see cref="T:System.Data.DataRow" />, возвращенных запросом.</summary>
      <typeparam name="TRow">Тип объектов в исходной последовательности, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>Указывает тип параметра в запросе к объекту <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>Параметр является входным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>Параметр может быть как входным, так и выходным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>Параметр является выходным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>Параметр представляет значение, возвращаемое как результат операции, например хранимой процедуры, встроенной функции или определяемой пользователем функции.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>Представляет коллекцию свойств, которые можно добавить в объекты <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary>Создает неполную копию объекта <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns>Возвращает <see cref="T:System.Object" />, неполную копию объекта <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>Представляет исключение, которое выдается при попытке изменить значение столбца, доступное только для чтения.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>Представляет исключение, которое выдается при попытке выполнить действие с объектом <see cref="T:System.Data.DataRow" />, который не содержится в объекте <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary>Указывает действие, которое должно быть выполнено для обеспечения ограничения <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>Удалить или обновить связанные строки. Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>К связанным строкам действия не применялись.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>Задайте связанным строкам значения, содержащиеся в свойстве <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>Задайте связанным строкам значение <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary>Указывает режим схемы сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary>Пропускает схему сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary>Включает схему сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />. По умолчанию.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>Указывает, как будут обрабатываться существующие сопоставления схемы при выполнении операции <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>Все существующие сопоставления таблиц будут применяться к входящей схеме. При конфигурировании <see cref="T:System.Data.DataSet" /> будет использоваться преобразованная схема.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>Все сопоставления таблиц в DataAdapter будут игнорироваться. При конфигурировании <see cref="T:System.Data.DataSet" /> будет использоваться непреобразованная входящая схема.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary>Определяет формат сериализации для объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary>Сериализация в качестве двоичного содержимого. Доступна только в ADO.NET 2.0.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary>Сериализация в качестве XML-содержимого. Это значение используется по умолчанию.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>Указывает относящийся к SQL Server тип данных поля или свойства для использования в <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />. 64-разрядное целое число со знаком.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток фиксированной длины из двоичных данных, имеющий длину от 1 до 8000 байтов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />. Числовое значение без знака, которое может быть равно 0, 1 или <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />. Поток фиксированной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />. Значение даты и времени, лежащее в диапазоне от 1 января 1753 года до 31 декабря 9999 года и имеющее точность 3.33 миллисекунды.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>Данные даты и времени. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>Данные даты и времени с учетом часового пояса. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Часовые пояса могут находиться в диапазоне от -14:00 до +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />. Числовое значение с фиксированной точностью и масштабом в диапазоне от –10 38 –1 до 10 38 –1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />. Числовое значение с плавающей запятой, лежащее в диапазоне от -1.79E +308 до 1.79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток переменной длины из двоичных данных, имеющий длину от 0 до 2 31 –1 (или 2 147 483 647) байтов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />. 32-разрядное знаковое целое число.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />. Значение типа currency, лежащее в диапазоне от –2 63 (или –9 223 372 036 854 775 808) до 2 63 –1 (или +9 223 372 036 854 775 807) и имеющее точность до одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />. Поток фиксированной длины из символов кодировки Юникод. В нем может быть от 1 до 4 000 символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />. Поток переменной длины из данных Юникод, максимальная длина которого равна 2 30 – 1 (или 1 073 741 823) символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />. Поток переменной длины из символов кодировки Юникод. В нем может быть от 1 до 4 000 символов. Неявное преобразование не может быть выполнено, если длина строки превышает 4 000 символов. Поэтому при работе со строками длиннее 4 000 символов нужно явно задавать значение этого объекта. Используйте <see cref="F:System.Data.SqlDbType.NVarChar" />, если столбец базы данных имеет тип <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />. Числовое значение с плавающей запятой, лежащее в диапазоне от -3,40E +38 до 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />. Значение даты и времени, лежащее в диапазоне от 1 января 1900 года до 6 июня 2079 года, точность которого равна одной минуте.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />. 16-разрядное знаковое целое число.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />. Денежная сумма в диапазоне от -214 748,3648 до +214 748,3647 с точностью, равной одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>Специальный тип данных для определения структурированных данных, содержащихся в параметрах табличных значений.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />. Поток переменной длины из символов, не принадлежащих кодировке Юникод, максимальная длина которого равна 2 31 –1 (или 2 147 483 647) символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>Данные времени в 24-часовом формате. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Соответствует значению <see langword="time" /> SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Автоматически создаваемые двоичные числа, которые гарантированно являются уникальными в пределах базы данных. Значения <see langword="timestamp" /> обычно используются для отметки версий строк таблицы. Размер при хранении — 8 байт.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />. 8-разрядное целое число без знака.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>Пользовательский тип (UDT) SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />. Глобальный уникальный идентификатор (GUID).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток переменной длины из двоичных данных, имеющий длину от 1 до 8000 байт. Неявное преобразование не может быть выполнено, если длина массива превышает 8 000 байтов. Поэтому при работе с массивами байтов, состоящими из более чем 8000 байтов, нужно явно задать значение этого объекта.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />. Поток переменной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов. Используйте <see cref="F:System.Data.SqlDbType.VarChar" />, если столбец базы данных имеет тип <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />. Специальный тип данных, который может содержать числовые, строковые, двоичные данные, даты, а также значения Empty и Null, относящиеся к SQL Server. Если ни один тип не объявлен, считается, что данные имеют этот тип.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>Значение XML. Получает XML как строку с помощью метода <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> или свойства <see cref="P:System.Data.SqlTypes.SqlXml.Value" />, или в качестве средства чтения <see cref="T:System.Xml.XmlReader" /> путем вызова метода <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>Во всех объектах и структурах <see cref="N:System.Data.SqlTypes" /> реализован интерфейс <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>Показывает, является ли структура неопределенной. Это свойство доступно только для чтения.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" />, если значение этого объекта равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
      <param name="e">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>Представляет поток двоичных данных переменной длины, сохраняемый в базе данных или извлекаемый из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, задавая в качестве значения свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержимое предоставленного массива байтов.</summary>
      <param name="value">Сохраняемый или извлекаемый массив байтов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сцепляет два заданных значения <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />, представляющая собой сцепленное значение, составленное из x и y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlBinary" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> для сравнения с этой структурой <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Число со знаком, представляющее относительные значения данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Значение этого объекта <see cref="T:System.Data.SqlTypes.SqlBinary" /> меньше, чем данный объект.  

  Нуль 
  Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> совпадает с объектом.  

  Больше нуля 
  Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> больше, чем объект.  

- или - 
Объект является пустой ссылкой.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> с предоставленным объектом и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Объект, который необходимо сравнить с этой структурой <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Число со знаком, представляющее относительные значения данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Значение этого объекта <see cref="T:System.Data.SqlTypes.SqlBinary" /> меньше, чем данный объект.  

  Нуль 
  Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> совпадает с объектом.  

  Больше нуля 
  Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> больше, чем объект.  

-или- 
Объект является пустой ссылкой.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сцепляет две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Сцепленные значения параметров <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, совпадают ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlBinary" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>Возвращает хэш-код данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlBinary" /> значение null. Это свойство доступно только для чтения.</summary>
      <returns>
        <see langword="true" /> если <see langword="null" />. В противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>Получает один байт из свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />, расположенный в позиции, на которую указывает целочисленный параметр <paramref name="index" />. Если <paramref name="index" /> указывает на позицию за пределами массива байтов, появится <see cref="T:System.Data.SqlTypes.SqlNullValueException" />. Это свойство доступно только для чтения.</summary>
      <param name="index">Позиция извлекаемого байта.</param>
      <returns>Байт, расположенный в позиции, на которую указывает целочисленный параметр.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Свойство читается, когда свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.  

или - 
Параметр <paramref name="index" /> указывает на позицию за пределами длины массива байтов, указанной в свойстве <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>Получает длину в байтах для свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Это свойство доступно только для чтения.</summary>
      <returns>Длина массива двоичных данных в свойстве <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> читается, когда свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> на неравенство.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сцепляет два параметра <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Сцепленные значения параметров <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, совпадают ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBinary" /> в массив <see cref="T:System.Byte" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Массив <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>Преобразует массив байтов в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Преобразуемый массив байтов.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />, которая представляет преобразованный массив байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> на неравенство.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Экземпляр <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlBinary" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>Преобразует этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> в строку.</summary>
      <returns>Строка, содержащая <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> типа <see cref="T:System.Data.SqlTypes.SqlBinary" />. Если <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> пусто, строка будет содержать "NULL".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> читается, когда свойство содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>Представляет целое значение 1 или 0, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с использованием предоставленного логического значения.</summary>
      <param name="value">Значение для новой структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />; или <see langword="true" />, или <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с использованием заданного целого значения.</summary>
      <param name="value">Целое число, значение которого требуется использовать для новой структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Вычисляет результат битовой операции логического умножения для двух указанных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результат операции логического умножения.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в виде байта.</summary>
      <returns>Байт, представляющий значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlBoolean" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Сравниваемый объект <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> или пустая ссылка (<see langword="Nothing" /> в Visual Basic).</param>
      <returns>Число со знаком, представляющее относительные значения экземпляра и значения.  
  Значение 
  Описание 
  Отрицательное целое число 
  Этот экземпляр меньше параметра <paramref name="value" />.  

  Нуль 
  Этот экземпляр и параметр <paramref name="value" /> равны.  

  Положительное целое число 
  Этот экземпляр больше параметра <paramref name="value" />.  

-или- 
 Параметр <paramref name="value" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с заданным объектом и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Сравниваемый объект или пустая ссылка (<see langword="Nothing" /> в Visual Basic).</param>
      <returns>Число со знаком, представляющее относительные значения экземпляра и значения.  
  Значение 
  Описание 
  Отрицательное целое число 
  Этот экземпляр меньше параметра <paramref name="value" />.  

  Нуль 
  Этот экземпляр и параметр <paramref name="value" /> равны.  

  Положительное целое число 
  Этот экземпляр больше параметра <paramref name="value" />.  

-или- 
 Параметр <paramref name="value" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, совпадают ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>Сравнивает параметр предоставленного объекта с <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>Представляет значение ЛОЖЬ, которое может быть присвоено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>Показывает, задано ли для текущего свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see langword="Value" /> имеет значение <see langword="False" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlBoolean" /> значение null.</summary>
      <returns>
        <see langword="true" />значение ,<see langword="false" />если структура пуста. в противном случае — значение. <see cref="T:System.Data.SqlTypes.SqlBoolean" /></returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>Получает значение, указывающее имеет ли данный <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see langword="Value" /> имеет значение <see langword="true" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше или равен второму экземпляру; в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает на равенство два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>Представляет значение единицы, которое может быть назначено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет операцию дополнения до единицы для предоставленных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Дополнение до единицы предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Вычисляет результат битовой операции логического умножения для двух указанных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результат операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Вычисляет результат битовой операции логического сложения операндов.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результаты операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает на равенство два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет побитовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результат операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>Преобразует значение <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в логическое значение.</summary>
      <param name="x">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которое требуется преобразовать.</param>
      <returns>Логическое значение, установленное для <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlByte" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlDouble" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlInt16" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlInt32" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlInt64" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlMoney" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlSingle" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlString" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>Оператор false может использоваться для проверки свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, имеет ли оно значение FALSE.</summary>
      <param name="x">Проверяемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see langword="true" />, если предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет значение <see langword="false" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует предоставленное значение байта в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Значение байта, преобразуемое в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlBoolean" />, содержащее 0 или 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с целью проверить, что они не равны.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет операцию логического отрицания со структурой <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, для которой будет выполняться операция логического отрицания.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если аргумент имел значение TRUE, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, если аргумент имел значение NULL; в противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет операцию дополнения до единицы для предоставленных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Дополнение до единицы предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>Оператор true может использоваться для проверки свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> для структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, имеет ли оно значение TRUE.</summary>
      <param name="x">Проверяемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see langword="true" />, если предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет значение <see langword="true" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет битовую операцию ИЛИ с двумя указанными структурами <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, значение которой является результатом битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>Преобразует заданное представление логического значения <see cref="T:System.String" /> в его эквивалент <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="s">Преобразуемая структура <see cref="T:System.String" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, содержащая анализируемое значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlByte" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see langword="SqlInt16" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt16" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see langword="SqlInt32" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt32" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see langword="SqlInt64" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt64" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется 1. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="false" />, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> не равняется ни 1, ни 0, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> со значением 1 или 0.  
Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равно TRUE, значение новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно 1; в противном случае значение новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlString" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> — <see langword="true" />, то значение структуры <see cref="T:System.Data.SqlTypes.SqlString" /> — 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlString" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в строку.</summary>
      <returns>Строка, содержащая значение <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если данное значение равно NULL, строка будет содержать "NULL".</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>Представляет значение ИСТИНА, которое может быть присвоено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет тип <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Для свойства задано значение NULL.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результат операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>Представляет 8-разрядное целое число без знака в диапазоне от 0 до 255, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> с использованием заданного байтового значения.</summary>
      <param name="value">Байтовое значение, сохраняемое в свойстве <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see langword="Value" /> которой содержит результаты сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает данный экземпляр с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlByte" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Сравниваемый объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр с предоставленным объектом <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Делит свой первый операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlByte" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр <see cref="T:System.Object" /> со свойством <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlByte" /> значение NULL.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Делит одно значение <see cref="T:System.Data.SqlTypes.SqlByte" />на другое и возвращает остаток.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" /> с целью проверить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>Оператор дополнения до единицы выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит дополнение до единицы параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, в свойстве <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержится сумма двух операндов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Делит свой первый операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" />, преобразуемый в <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> предоставленного параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в байт.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, преобразуемая в байт.</param>
      <returns>Байт, значение которого равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see langword="SqlMoney" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Экземпляр класса <see langword="SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно числовому значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see langword="SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное значение байта в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Значение байта, преобразуемое в <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно предоставленному параметру.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" /> с целью проверить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>Оператор дополнения до единицы выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит дополнение до единицы параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 8-разрядное целое число без знака.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, содержащая 8-разрядное число, представленное параметром <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Структура <see langword="SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Структура <see langword="SqlDouble" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Структура <see langword="SqlInt16" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>Преобразует <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Структура <see langword="SqlInt32" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Структура <see langword="SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Структура <see langword="SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Структура <see langword="SqlSingle" />, имеющая то же <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see langword="SqlString" />, содержащая строковое представление <see cref="T:System.Data.SqlTypes.SqlByte" /> структуры <see cref="P:System.Data.SqlTypes.SqlByte.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.String" />.</summary>
      <returns>Строка, содержащая <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> типа <see cref="T:System.Data.SqlTypes.SqlByte" />. Если <see langword="Value" /> равно NULL, <see langword="String" /> будет пустой строкой.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>Представляет изменяемый ссылочный тип, служащий оболочкой для <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> или <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе заданного массива байтов.</summary>
      <param name="buffer">Массив байтов без знака.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе указанного значения <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Значение <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе указанного значения <see cref="T:System.IO.Stream" />.</summary>
      <param name="s">Объект <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>Возвращает ссылку на внутренний буфер.</summary>
      <returns>Ссылка на внутренний буфер. Для экземпляров <see cref="T:System.Data.SqlTypes.SqlBytes" />, созданных поверх неуправляемых указателей, возвращает управляемую копию внутреннего буфера.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see langword="XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" /> значение NULL.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.SqlTypes.SqlBytes" /> имеет значение NULL; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>Получает или задает экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" /> по указанному индексу.</summary>
      <param name="offset">Значение <see cref="T:System.Int64" />.</param>
      <returns>Значение <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>Получает длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Значение <see cref="T:System.Int64" />, представляющее длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.  
Возвращает -1, если для экземпляра нет доступного буфера или если значение равно NULL.  
Возвращает <see cref="P:System.IO.Stream.Length" /> для экземпляра, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>Получает максимальную длину значения внутреннего буфера данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Число типа long, представляющее максимальную длину значения внутреннего буфера. Возвращает –1 для экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>Получает пустой экземпляр данного объекта <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Экземпляр, свойство <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> которого возвращает <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBinary" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBytes" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Копирует байты из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в буфер передачи и возвращает количество скопированных байтов.</summary>
      <param name="offset">Смещение типа long <see cref="T:System.Int64" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">Буфер массива байтов, в который будет выполняться копирование.</param>
      <param name="offsetInBuffer">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count">Целое число <see cref="T:System.Int32" />, представляющее количество байтов для копирования.</param>
      <returns>Значение типа long <see cref="T:System.Int64" />, представляющее число скопированных байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>Задает длину данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">Значение типа long <see cref="T:System.Int64" />, представляющее длину.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>Задает для данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> значение NULL.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary>Возвращает сведения о состоянии хранения данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Перечисление <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>Возвращает или задает данные этого экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в виде потока.</summary>
      <returns>Поток, содержащий данные SqlBytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Получает сведения о сериализации со всеми данными, необходимыми для повторного создания данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info">Объект, для которого будут заполнены сведения о сериализации.</param>
      <param name="context">Контекст назначения сериализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>Формирует и возвращает <see cref="T:System.Data.SqlTypes.SqlBinary" /> из данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> из данного экземпляра.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>Возвращает управляемую копию значения, которое содержится в данном объекте <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Значение данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в виде массива байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Копирует байты из буфера передачи в этот экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset">Смещение типа long <see cref="T:System.Int64" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">Буфер массива байтов, в который будет выполняться копирование.</param>
      <param name="offsetInBuffer">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count">Целое число <see cref="T:System.Int32" />, представляющее количество байтов для копирования.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> —изменяемый ссылочный тип, служащий оболочкой для массива <see cref="T:System.Char" /> или экземпляра <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" /> на основе заданного массива знаков.</summary>
      <param name="buffer">Массив <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" /> на основе указанного значения <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>Возвращает ссылку на внутренний буфер.</summary>
      <returns>Ссылка на внутренний буфер. Для экземпляров <see cref="T:System.Data.SqlTypes.SqlChars" />, созданных поверх неуправляемых указателей, возвращает управляемую копию внутреннего буфера.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> значение NULL.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Data.SqlTypes.SqlChars" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>Получает или задает экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> по указанному индексу.</summary>
      <param name="offset">Значение <see cref="T:System.Int64" />.</param>
      <returns>Значение <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>Получает длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Значение <see cref="T:System.Int64" />, указывающее длину (в символах) значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.  
Возвращает -1, если для экземпляра нет доступного буфера или если значение равно NULL.  
Возвращает <see cref="P:System.IO.Stream.Length" /> для экземпляра, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>Получает максимальную длину значения, которое может содержаться во внутреннем буфере, в двухбайтовых знаках.</summary>
      <returns>Значение <see cref="T:System.Int64" />, представляющее максимальную длину значения внутреннего буфера в двухбайтовых знаках.  
Возвращает –1 для экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>Возвращает пустой экземпляр данного объекта <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Экземпляр, свойство <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> которого возвращает <see langword="true" />. Дополнительные сведения см. в разделе Обработка значений NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlChars" /> в структуру <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в структуру <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Копирует знаки из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> в буфер передачи и возвращает количество скопированных знаков.</summary>
      <param name="offset">Смещение значения <see cref="T:System.Int64" /><see langword="long" /> в значение, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">Буфер массива знаков для копирования.</param>
      <param name="offsetInBuffer">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count">Целое число <see cref="T:System.Int32" />, представляющее количество знаков для копирования.</param>
      <returns>Значение <see cref="T:System.Int64" /><see langword="long" />, представляющее число скопированных байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>Задает длину данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">Значение <see cref="T:System.Int64" /><see langword="long" />, представляющее длину.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>Задает для данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> значение NULL.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary>Возвращает сведения о состоянии хранения данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Перечисление <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Получает сведения о сериализации со всеми данными, необходимыми для повторного создания данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info">Объект, для которого будут заполнены сведения о сериализации.</param>
      <param name="context">Контекст назначения сериализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>Преобразует данный экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> в эквивалентное представление <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Представление <see cref="T:System.Data.SqlTypes.SqlString" /> данного типа.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>Возвращает управляемую копию значения, которое содержится в данном объекте <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Значение данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> в виде массива знаков.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Копирует знаки из буфера передачи в этот экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset">Смещение значения <see langword="long" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">Буфер массива знаков для копирования.</param>
      <param name="offsetInBuffer">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count">Целое число <see cref="T:System.Int32" />, представляющее количество знаков для копирования.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>Задает значения параметров сравнения для структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>Выполняет двоичную сортировку.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>Указывает, что при выполнении сравнения объектов <see cref="T:System.Data.SqlTypes.SqlString" /> не должен учитываться регистр.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>Задает игнорирование типа японской азбуки при сравнении объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />. Типы японской азбуки Каны обозначают символы хираганы и катаканы, представляющие звуки японского языка. Хирагана используется для японских выражений и слов, а катакана — для слов, заимствованных из других языков, например "компьютер" и "Интернет". Для обозначения любого звука может быть использована как хирагана, так и катакана. Если выбрано это значение, знаки хирагана и катакана для одного и того же звука считаются равными.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>Задает игнорирование несамостоятельных знаков (например, диакритических) при сравнении объектов типа  <see cref="T:System.Data.SqlTypes.SqlString" />. В стандарте Юникод несамостоятельные знаки определяются как знаки, которые в сочетании с основными знаками образуют новый знак. Несамостоятельные знаки при отображении не занимают место знака. Дополнительные сведения о несамостоятельных знаках без пробелов см. на веб-сайте стандарта Юникод по адресу https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>Задает игнорирование ширины знака при сравнении объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />. Например, японские знаки катакана могут быть представлены в полную ширину или в половину ширины. Если выбрано это значение, знаки катакана, написанные в полную ширину, считаются равными знакам, написанным в половину ширины.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>Задает параметры по умолчанию для сравнения объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>Представляет сохраняемые в базе данных или извлекаемые из нее данные о дате и времени в диапазоне значений от 1 января 1753 г. до 31 декабря 9999 г. с точностью 3,33 миллисекунды. Базовая структура данных структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> отличается от соответствующего типа платформы .NET Framework, <see cref="T:System.DateTime" />, который может представлять любое время между 00:00:00 01.01.0001 и 23:59:59 31.12.9999 с точностью 100 наносекунд. В объекте <see cref="T:System.Data.SqlTypes.SqlDateTime" /> фактически хранится разница относительно 00:00:00 01.01.1900. Поэтому в результате преобразования "00:00:00 01.01.1900" в целое число будет возвращен 0.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием заданного значения <see cref="T:System.DateTime" />.</summary>
      <param name="value">Структура <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием предоставленных параметров.</summary>
      <param name="dayTicks">Целое значение, представляющее дату как число импульсов.</param>
      <param name="timeTicks">Целое значение, представляющее время как число импульсов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием предоставленных параметров для инициализации года, месяца, дня.</summary>
      <param name="year">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Целое значение, представляющее номер дня в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты и секунды новой структуры.</summary>
      <param name="year">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Целое число, представляющее день месяца в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты, секунды и миллисекунды новой структуры.</summary>
      <param name="year">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Целое число, представляющее день месяца в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond">Значение типа double, представляющее миллисекунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты, секунды и микросекунды новой структуры.</summary>
      <param name="year">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Целое значение, представляющее день в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond">Целое число, представляющее микросекунду (одну тысячную миллисекунды) в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Добавляет объект <see cref="T:System.Data.SqlTypes.SqlDateTime" /> к указанному объекту <see langword="TimeSpan" />.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Значение <see langword="Timespan" />.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с предоставленной структурой <see cref="T:System.Data.SqlTypes.SqlDateTime" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше параметра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

  Нуль 
  Данный экземпляр равен <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

  Больше нуля 
  Данный экземпляр больше, чем <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

-или- 
 Параметр <see cref="T:System.Data.SqlTypes.SqlDateTime" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>Получает число импульсов, представляющее дату данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Число импульсов, представляющее дату, которая содержится в свойстве <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlDateTime" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>Представляет максимальное допустимое значение даты для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>Представляет минимальное допустимое значение даты для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Добавляет период времени, указанный предоставленным параметром <see cref="T:System.TimeSpan" />, <paramref name="t" />, к предоставленной структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Структура <see cref="T:System.TimeSpan" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Если один из аргументов имеет значение <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, новый объект <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в структуру <see cref="T:System.DateTime" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Объект <see cref="T:System.DateTime" />, свойства <see cref="P:System.DateTime.Date" /> и <see cref="P:System.DateTime.TimeOfDay" /> которого содержат те же значения даты и времени, что и свойство <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, значение свойства <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> которой равно дате и времени, представленным параметром <see cref="T:System.Data.SqlTypes.SqlString" />. Если <see cref="T:System.Data.SqlTypes.SqlString" /> равно NULL, <see langword="Value" /> созданной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> будет равно NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>Преобразует структуру <see cref="T:System.DateTime" /> в структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Структура <see langword="DateTime" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> которой равно объединенным свойствам <see cref="P:System.DateTime.Date" /> и <see cref="P:System.DateTime.TimeOfDay" /> предоставленной структуры <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Вычитает предоставленную структуру <see cref="T:System.TimeSpan" />, <paramref name="t" />, из предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Структура <see cref="T:System.TimeSpan" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, представляющая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>Преобразует заданное представление даты и времени <see cref="T:System.String" /> в его эквивалент для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="s">Представление <see langword="string" />, которое необходимо проанализировать.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, эквивалентная дате и времени, которые представлены заданной <see langword="string" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>Константа, значение которой представляет собой число импульсов, эквивалентное одному часу.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>Константа, значение которой представляет собой число импульсов, эквивалентное одной минуте.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>Константа, значение которой представляет собой число импульсов, эквивалентное одной секунде.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Вычитает указанное значение  <see langword="Timespan" /> из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Значение <see langword="Timespan" />.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>Получает число импульсов, представляющее время данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Число импульсов, представляющее время данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see langword="SqlString" />, значением которой является строка, представляющая дату и время, содержащиеся в данной структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.String" />.</summary>
      <returns>
        <see langword="String" /> представляет свойство <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>Представляет числовое значение с фиксированной точностью и масштабом в диапазоне от - 10^38 +1 и 10^38 - 1.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленных параметров.</summary>
      <param name="bPrecision">Максимальное число цифр, используемое для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">Число десятичных разрядов, для которых будет осуществляться разрешение свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Логическое значение, указывающее, представляет ли новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> положительное или отрицательное число.</param>
      <param name="data1">32-разрядное целое число без знака, объединяемое с data2, data3 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2">32-разрядное целое число без знака, объединяемое с data1, data3 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3">32-разрядное целое число без знака, объединяемое с data1, data2 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4">32-разрядное целое число без знака, объединяемое с data1, data2 и data3 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленных параметров.</summary>
      <param name="bPrecision">Максимальное число цифр, используемое для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">Число десятичных разрядов, для которых будет осуществляться разрешение свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Логическое значение, указывающее, представляет ли новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> положительное или отрицательное число.</param>
      <param name="bits">128-разрядное целое число без знака, предоставляющее значение новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с помощью предоставленного значения <see cref="T:System.Decimal" />.</summary>
      <param name="value">Значение <see cref="T:System.Decimal" />, сохраняемое как структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленного параметра типа double.</summary>
      <param name="dVal">Значение типа double для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленного целого значения.</summary>
      <param name="value">Предоставленное целое число, используемое в качестве значения новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с помощью предоставленного длинного целого значения.</summary>
      <param name="value">Предоставленное длинное целое число, используемое в качестве значения новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>Метод Abs получает абсолютное значение параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит число без знака, представляющее абсолютное значение параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Вычисляет сумму двух операторов <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, у которой свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> содержит сумму.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>Масштаб операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> будет согласован с количеством цифр, указанным в параметре digits. В зависимости от значения параметра fRound данное значение или округляется до соответствующего числа цифр, или усекается.</summary>
      <param name="n">Настраиваемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="digits">Число цифр в настраиваемой структуре.</param>
      <param name="fRound">Если этот параметр имеет значение <see langword="true" />, новое значение округляется, если <see langword="false" /> — значение усекается.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит настроенное число.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>Получает двоичное представление значения данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в виде массива байтов.</summary>
      <returns>Массив байтов, содержащий двоичное представление значения структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>Возвращает наименьшее целое число, превышающее значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> или равное ему.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой необходимо рассчитать предельное значение.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />, представляющее наименьшее целое число, превышающее значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> или равное ему.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>Сравнивает данный экземпляр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlDecimal" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlDecimal" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>Настраивает значение операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> для достижения указанной точности и масштаба.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой требуется настроить.</param>
      <param name="precision">Точность для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale">Масштаб для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой настроено для достижения точности и масштаба, указанных в данных параметрах.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>Получает двоичное представление данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в виде массива целых чисел.</summary>
      <returns>Массив целых чисел, содержащий двоичное представление данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор деления вычисляет результаты деления первого операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если хотя бы один из экземпляров имеет значение NULL, значение <see langword="SqlDecimal" /> будет равно NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр <see cref="T:System.Object" /> со свойством <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> экземпляра  <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> и они равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>Округляет заданное число <see cref="T:System.Data.SqlTypes.SqlDecimal" /> до ближайшего меньшего целого числа.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой необходимо рассчитать наименьшее значение.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая целую часть числа данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, больше ли первая структура, чем вторая.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если данная структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>Указывает, больше ли нуля <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>
        <see langword="true" />, если для <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> назначено значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, меньше ли первая структура, чем вторая.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, равны ли они, или же первый параметр меньше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>Константа, представляющая наибольшее возможное значение для свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>Константа, представляющая максимальное значение для свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>Константа, представляющая максимальное значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>Константа, представляющая минимальное значение для структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Вычисляет сумму двух операторов <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, у которой свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> содержит сумму.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор деления вычисляет результаты деления первого операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Decimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see langword="Decimal" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемый объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует параметр <see cref="T:System.Double" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Double" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой равно значению параметра <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, больше ли первая структура, чем вторая.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в SqlDecimal.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует операнд <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует значение <see cref="T:System.Decimal" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемое значение <see cref="T:System.Decimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению параметра <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Int64" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Int64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению параметра <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, меньше ли первая структура, чем вторая.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, равны ли они, или же первый параметр меньше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Вычисляет результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство Value которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор "унарный минус" меняет знак параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой выполняется инверсия.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой содержит инвертированный результат.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>Преобразует представление числа типа <see cref="T:System.String" /> в эквивалентное ему значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>Возводит значение заданной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в заданную экспоненциальную степень.</summary>
      <param name="n">Возводимая в степень структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="exp">Значение типа double, указывающее степень, в которую необходимо возвести число.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая результаты.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>Получает максимальное число цифр, используемых для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns>Максимальное число цифр, используемых для представления <see langword="Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Получает ближайшее к заданному значению структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> число с заданной точностью.</summary>
      <param name="n">Округляемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="position">Количество значащих цифр дробной части числа (точность) возвращаемого значения.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая результаты операции округления.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>Получает число десятичных разрядов для разрешения <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns>Число десятичных разрядов, используемых для разрешения свойства <see langword="Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>Получает значение, определяющее в структуре <see cref="T:System.Data.SqlTypes.SqlDecimal" /> знак свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, в которой необходимо определить знак.</param>
      <returns>Число, указывающее знак структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Вычисляет результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство Value которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>Возвращает число типа double, равное содержимому свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> данного экземпляра.</summary>
      <returns>Десятичное представление свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> равняется <see langword="true" />, значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 1. В противном случае значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, значение которой является строкой, представляющей значение, содержащееся в данной структуре <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.String" />.</summary>
      <returns>Новый объект <see cref="T:System.String" />, содержащий строковое представление свойства <see cref="T:System.Data.SqlTypes.SqlDecimal" />, относящегося к структуре <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Усекает значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> до требуемой позиции.</summary>
      <param name="n">Усекаемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="position">Десятичный разряд, до которого усекается число.</param>
      <returns>Для усечения данного значения до соответствующего разряда слева от десятичной запятой следует предоставить для параметра <paramref name="position" /> отрицательное значение.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Это свойство доступно только для чтения.</summary>
      <returns>Число в диапазоне от -79 228 162 514 264 337 593 543 950 335 до 79 228 162 514 264 337 593 543 950 335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>Представляет число с плавающей запятой в диапазоне от -1,79E + 308 до 1,79E + 308, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> с использованием предоставленного параметра типа double для настройки нового свойства <see cref="T:System.Data.SqlTypes.SqlDouble" /> структуры <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />.</summary>
      <param name="value">Значение типа double для новой структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор сложения вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Сумма двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlDouble" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlDouble" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Сравниваемый шаблон <see cref="T:System.Object" />.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор деления делит первый операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>Возвращает хэш-код данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>Возвращает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> значение NULL.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>Константа, представляющая максимальное значение для структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>Константа, представляющая минимальное возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор умножения вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор сложения вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Сумма двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор деления делит первый операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно 0 или 1 в зависимости от свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если значение <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равно <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в тип double.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Эквивалент типа double для значения заданной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно значению числа, представленного объектом <see cref="T:System.Data.SqlTypes.SqlString" />. Если значение <see cref="T:System.Data.SqlTypes.SqlString" /> равно <see cref="F:System.Data.SqlTypes.SqlString.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />. Если значение <see cref="T:System.Data.SqlTypes.SqlByte" /> равно <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Если значение <see cref="T:System.Data.SqlTypes.SqlDecimal" /> равно <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt16" /> равно <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt32" /> равно <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt64" /> равно <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />. Если значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равно <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />. Если значение <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленное значение типа double в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Преобразуемое значение типа double.</param>
      <returns>Параметр типа <see cref="T:System.Data.SqlTypes.SqlDouble" /> с тем же значением, что и у заданного параметра типа double.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" /> с целью проверить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор умножения вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор вычитания вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Результаты операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>Возвращает инвертированное значение заданной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в его эквивалент в виде числа с плавающей запятой с удвоенной точностью.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащий значение, представленное параметром типа <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор вычитания вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Результаты операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Схема XML, используемая платформой .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Структура <see langword="SqlBoolean" />, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> которой будет равно <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если для структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /><see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> не равно нулю, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если <see cref="T:System.Data.SqlTypes.SqlDouble" /> равно нулю, и <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, если структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> имеет значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see langword="SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see langword="SqlDecimal" />, преобразованное значение которой равно округленному значению данной структуры <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see langword="SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see langword="SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see langword="SqlString" />, представляющая <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в строку.</summary>
      <returns>Строка, представляющая <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>Представляет код GUID, сохраняемый в базе данных или извлекаемый из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием предоставленного параметра в виде массива байтов.</summary>
      <param name="value">Массив байтов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданного параметра <see cref="T:System.Guid" />.</summary>
      <param name="g">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданных значений.</summary>
      <param name="a">Первые четыре байта структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b">Следующие два байта структуры  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c">Следующие два байта структуры  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданного параметра <see cref="T:System.String" />.</summary>
      <param name="s">Объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlGuid" /> и возвращает сведения об их относительных значениях. Сравнивает не только последние 6 байтов, но последние 6 байтов считаются наиболее важными при выполнении сравнения.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlGuid" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше, чем объект.  

  Нуль 
  Этот экземпляр равен объекту.  

  Больше нуля 
  Этот экземпляр больше, чем объект, 
- или - 
объект является пустой ссылкой (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>Сравнивает эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> с предоставленным объектом и возвращает сведения об их относительных значениях. Сравнивает не только последние 6 байтов, но последние 6 байтов считаются наиболее важными при выполнении сравнения.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше, чем объект.  

  Нуль 
  Этот экземпляр равен объекту.  

  Больше нуля 
  Этот экземпляр больше, чем объект, 
- или - 
объект является пустой ссылкой (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlGuid" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>Возвращает хэш-код данной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlGuid" /> значение NULL.</summary>
      <returns>
        <see langword="true" /> если <see langword="null" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlBinary" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Объект <see langword="SqlBinary" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Guid" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Новая структура <see cref="T:System.Guid" />, равная <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Guid" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Объект <see cref="T:System.Guid" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которого равен параметру <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>Преобразует заданную структуру <see cref="T:System.String" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlGuid" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в массив байтов.</summary>
      <returns>Массив байтов, представляющий <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Структура <see langword="SqlBinary" />, содержащая байты структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, содержащая строковое представление структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.String" />.</summary>
      <returns>Структура <see cref="T:System.String" />, содержащая строковое представление структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />. Это свойство доступно только для чтения.</summary>
      <returns>Структура <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>Представляет 16-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> с использованием предоставленного параметра типа короткого целого.</summary>
      <param name="value">Короткое целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt16" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt16" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlInt16" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt16" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Делит первый операнд <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt16" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>Сравнивает заданный объект со свойством <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see cref="T:System.String" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />. Дополнительные сведения см. в разделе Обработка значений NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt16" />на другое и возвращает остаток.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>Оператор ~ выполняет битовую операцию дополнения до единицы над операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит дополнение заданной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Делит первый операнд <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в короткое целое число.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Короткое целое число, значение которого является значением параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> предоставленного параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленный объект <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно значению, представленному параметром объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленное короткое целое число в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Короткое целое число.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> со значением, равным заданному короткому целому числу.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>Оператор ~ выполняет битовую операцию дополнения до единицы над операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит дополнение заданной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>Оператор "унарный минус" меняет знак <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 16-разрядное целое число со знаком.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>16-разрядное целое число со знаком, эквивалентное значению указанной строки <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Схема XML, используемая платформой .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt16" /> меньше 0 или больше 255, происходит <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> этого экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> этого экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>Получает значение этого экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />. Это свойство доступно только для чтения.</summary>
      <returns>Короткое целое число, представляющее значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, содержащая результаты операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>Представляет 32-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> с использованием предоставленного целого значения.</summary>
      <param name="value">Преобразуемое целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит сумму заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет поразрядную операцию логического сложения заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt32" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt32" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlInt32" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt32" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt32" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй, или равным ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> значение null.</summary>
      <returns>Это свойство имеет значение <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй, или равным ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt32" />на другое и возвращает остаток.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию дополнения до единицы над заданной структурой <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты операции дополнения до единицы.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит сумму заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет поразрядную операцию логического сложения заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию исключающего логического сложения с заданными структурами <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в целое число.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Преобразованное целое значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленный объект <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй, или равным ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное свойство <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное целое число в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Целочисленное значение.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство Value которой равно целочисленному параметру.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй, или равным ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию дополнения до единицы над заданной структурой <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты операции дополнения до единицы.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>Отрицает <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 32-разрядное целое число со знаком.</summary>
      <param name="s">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns>Эквивалент 32-разрядного целого числа со знаком значению, содержащемуся в заданном <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />. Если значение <see langword="SqlInt32" /> меньше 0 или больше 255, происходит <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlString" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.String" />.</summary>
      <returns>Структура <see cref="T:System.String" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />. Это свойство доступно только для чтения.</summary>
      <returns>Целое число, представляющее значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Данное свойство содержит <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию исключающего логического сложения с заданными структурами <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>Представляет 64-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> с использованием предоставленного длинного целого значения.</summary>
      <param name="value">Длинное целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно сумме двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt64" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlInt64" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt64" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> значение NULL.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>Константа, представляющая наибольшее возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>Константа, представляющая наименьшее возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt64" />на другое и возвращает остаток.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Значение <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно произведению двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров SqlInt64 с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно дополнению до единицы параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно сумме двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в значение типа LONG.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новое значение типа LONG, равное <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит целую часть параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемый объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует параметр типа LONG в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Длинное целое значение.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно значению параметра типа LONG.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров SqlInt64 с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно произведению двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно дополнению до единицы параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно результатам операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>Оператор "унарный минус" меняет знак <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно инвертированному <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 64-разрядное целое число со знаком.</summary>
      <param name="s">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns>Эквивалент 64-разрядного целого числа со знаком значению, содержащемуся в заданном <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно результатам операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />. Это свойство доступно только для чтения.</summary>
      <returns>Длинное целое число, представляющее значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>Представляет значение валюты в диапазоне от –2 63 (или –922 337 203 685 477,5808) до 2 63 –1 (или +922 337 203 685 477,5807) с точностью до десятитысячных единицы валюты, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> заданным значением <see cref="T:System.Decimal" />.</summary>
      <param name="value">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным значением типа double.</summary>
      <param name="value">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным целым значением.</summary>
      <param name="value">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным значением типа длинное целое.</summary>
      <param name="value">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlMoney" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlMoney" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор деления делит первый параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlMoney" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>Значение <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> и они равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>Возвращает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> значение NULL.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, равны ли они, или же первый параметр меньше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>Представляет максимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>Представляет минимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор деления делит первый параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Decimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Decimal" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот оператор преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемый объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Преобразует параметр <see cref="T:System.Decimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемое значение <see cref="T:System.Decimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению параметра <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Int64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Int64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению параметра <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, равны ли они, или же первый параметр меньше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор вычитания вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор "унарный минус" меняет знак параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, для которой выполняется инверсия.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты отрицания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>Преобразует представление числа типа <see cref="T:System.String" /> в эквивалентное ему значение <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlMoney" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор вычитания вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>Преобразует значение этого экземпляра <see cref="T:System.Data.SqlTypes.SqlMoney" /> как структуру <see cref="T:System.Decimal" />.</summary>
      <returns>Структура <see cref="T:System.Decimal" />, значение которой равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Double" />.</summary>
      <returns>Структура типа double со значением, равным этой структуре <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Int32" />.</summary>
      <returns>32-разрядное целое число, значение которого равно целой части этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>Преобразует значение этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Int64" />.</summary>
      <returns>64-разрядное целое число, значение которого равно целой части этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> равно нулю, значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, значение которой является строкой, представляющей значение данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в строку.</summary>
      <returns>Строка, значение которой является строковым представлением значения данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>Получает денежное значение экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />. Это свойство доступно только для чтения.</summary>
      <returns>Денежное значение экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Для свойства задано значение NULL.</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>Представляет нулевое значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
      <param name="e">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="e">Исключение, которое является причиной текущего исключения. Если значение параметра <c>innerException</c> не равно <see langword="null" />, текущее исключение возникает в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>Представляет число с плавающей запятой в диапазоне от -3,40E +38 до 3,40E +38, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> с использованием предоставленного параметра типа double.</summary>
      <param name="value">Значение типа double, которое будет использоваться в качестве <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Число с плавающей десятичной запятой, которое будет использоваться в качестве <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlSingle" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlSingle" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlSingle" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlSingle" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Делит первую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> на вторую.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see langword="SqlInt64" />, содержащая результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlSingle" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> и они равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первая больше второй или равна ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" />, чтобы определить, равны ли они, или же первый параметр меньше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>Представляет максимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>Представляет минимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычисляет произведение двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Делит первую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> на вторую.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров SqlSingle с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>Этот неявный оператор преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемый параметр <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в число с плавающей запятой.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlSingle" />, преобразуемое в число с плавающей запятой.</param>
      <returns>Число с плавающей запятой, содержащее значение структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемый объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равен значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первая больше второй или равна ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>Этот неявный оператор преобразует параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, свойство <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует заданное значение с плавающей десятичной запятой в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Значение с плавающей десятичной запятой, преобразуемое в структуру <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая значение заданного числа с плавающей запятой.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" />, чтобы определить, равны ли они, или же первый параметр меньше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычисляет произведение двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычитает вторую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> из первой.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>Инвертирует <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> заданной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>Преобразует заданную структуру <see cref="T:System.String" /> в структуру <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlSingle" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычитает вторую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> из первой.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равняется <see langword="true" />, значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 1. В противном случае значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see langword="SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see langword="SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see langword="SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.String" />.</summary>
      <returns>Объект <see langword="String" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение с плавающей десятичной запятой в диапазоне от -3,40E+38 до 3,40E+38.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>Представляет нулевое значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>Представляет поток символов переменной длины, сохраняемый в базе данных или извлекаемый из нее. <see cref="T:System.Data.SqlTypes.SqlString" /> имеет базовую структуру данных, отличную от соответствующего типа данных <see cref="T:System.String" /> платформы .NET Framework.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданных кода языка, параметров сравнения и данных.</summary>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Массив данных для хранения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Массив данных для хранения.</param>
      <param name="fUnicode">
        <see langword="true" />, если используется кодировка Юникод. В противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Массив данных для хранения.</param>
      <param name="index">Начальный индекс в массиве.</param>
      <param name="count">Число символов из индекса для копирования.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Массив данных для хранения.</param>
      <param name="index">Начальный индекс в массиве.</param>
      <param name="count">Число символов из индекса для копирования.</param>
      <param name="fUnicode">
        <see langword="true" />, если используется кодировка Юникод. В противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданной строки.</summary>
      <param name="data">Строка, которую необходимо сохранить.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданной строки и значений кода языка.</summary>
      <param name="data">Строка, которую необходимо сохранить.</param>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданных строки, кода языка и значений параметров сравнения.</summary>
      <param name="data">Строка, которую необходимо сохранить.</param>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Сцепляет два заданных значения <see cref="T:System.Data.SqlTypes.SqlString" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, представляющая собой сцепленное значение, составленное из <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>Создает копию данного объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, в котором все значения свойств аналогичны значениям свойств исходного объекта.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>Получает объект <see cref="T:System.Globalization.CompareInfo" />, который определяет способ сравнения строк для этой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Объект <see langword="CompareInfo" />, который определяет сравнение строк для этой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Получает эквивалент перечисления <see cref="T:System.Globalization.CompareOptions" /> указанного значения <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />.</summary>
      <param name="compareOptions">Значение <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />, которое описывает параметры сравнения для данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение <see langword="CompareOptions" />, которое соответствует <see langword="SqlCompareOptions" /> для данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlString" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlString" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlString" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlString" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Сцепляет две указанные структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, которая содержит новое сцепленное значение, представляющее собой содержимое двух параметров <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>Получает структуру <see cref="T:System.Globalization.CultureInfo" />, которая представляет сведения о языке и региональных параметрах этого объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see cref="T:System.Globalization.CultureInfo" />, в которой приводятся сведения о языке и региональных параметрах этой структуры SqlString, в том числе об именах, системе письма и календаре, а также о доступе к характерным объектам, предоставляющим методы для выполнения распространенных операций, таких как форматирование даты и сортировка строк.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, равны ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlString" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlString.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>Значение <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlString" /> и они равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>Получает массив байтов, в который помещено содержимое <see cref="T:System.Data.SqlTypes.SqlString" /> в формате ANSI.</summary>
      <returns>Массив байтов с содержимым <see cref="T:System.Data.SqlTypes.SqlString" /> в формате ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>Получает массив байтов, в который помещено содержимое <see cref="T:System.Data.SqlTypes.SqlString" /> в формате Юникод.</summary>
      <returns>Массив байтов с содержимым <see cref="T:System.Data.SqlTypes.SqlString" /> в формате Юникод.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый больше второго или равен ему.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>Задает игнорирование регистра при выполнении сравнения <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>Задает игнорирование типа японской азбуки при сравнении строк.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>Задает игнорирование несамостоятельных знаков (например, диакритических) при сравнении строк.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>Задает игнорирование ширины знака при сравнении строк.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlString" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Data.SqlTypes.SqlString.Value" /> имеет значение <see cref="F:System.Data.SqlTypes.SqlString.Null" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>Задает региональные параметры и язык для структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Код языка для строки, хранящейся в свойстве <see cref="P:System.Data.SqlTypes.SqlString.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый меньше второго или равен ему.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Сцепляет две указанные структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, которая содержит новое сцепленное значение, представляющее собой содержимое двух параметров <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, равны ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see langword="SqlDecimal" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, значение которого является строковым представлением заданной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура SqlInt32.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>Преобразует <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.String" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Объект <see langword="String" />, содержимое которого совпадает со свойством <see cref="P:System.Data.SqlTypes.SqlString.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый больше второго или равен ему.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует параметр <see cref="T:System.String" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.String" />.</param>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий значение указанного параметра <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый меньше второго или равен ему.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>Сочетание одного или нескольких значений перечисления <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />, представляющее способ сравнения <see cref="T:System.Data.SqlTypes.SqlString" /> с другими структурами <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Значение, указывающее способ сравнения <see cref="T:System.Data.SqlTypes.SqlString" /> с другими структурами <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlString.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Новая структура <see langword="SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно числу, представленному данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Новая структура <see langword="SqlDateTime" />, содержащая значение даты, представленное данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая значение данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, свойство <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой имеет значение <see langword="Guid" />, представленное данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>Преобразует объект <see cref="T:System.Data.SqlTypes.SqlString" /> в объект <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" /> имеет то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>Получает строку, которая хранится в данной структуре <see cref="T:System.Data.SqlTypes.SqlString" />. Это свойство доступно только для чтения.</summary>
      <returns>Хранимая строка.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Значением строки является <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>Исключение, генерируемое в том случае, когда в структуре <see cref="N:System.Data.SqlTypes" /> задается значение, которое было бы усечено.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> с указанным сообщением об ошибке и ссылкой на <see cref="T:System.Exception" />.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="e">Ссылка на внутреннее <see cref="T:System.Exception" />.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>Базовый класс исключений для <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> с сериализованными данными.</summary>
      <param name="si">Объект, содержащий сериализованные данные объекта.</param>
      <param name="sc">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="e">Исключение, которое является причиной текущего исключения. Если значение параметра <c>innerException</c> не равно <see langword="null" />, текущее исключение возникает в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>Представляет XML-данные, сохраняемые на сервере или извлекаемые с него.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" />, получая XML-значение из полученного производного экземпляра <see cref="T:System.IO.Stream" />.</summary>
      <param name="value">Производный экземпляр <see cref="T:System.IO.Stream" /> (например, <see cref="T:System.IO.FileStream" />), из которого следует загрузить XML-содержимое экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" /> и связывает его с содержимым предоставленного <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="value">Экземпляр производного класса, полученного из <see cref="T:System.Xml.XmlReader" />, который требуется использовать в качестве значения нового экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>Получает значение XML-содержимого данного экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" /> в формате <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Производный экземпляр, полученный из <see cref="T:System.Xml.XmlReader" /> и содержащий XML-данные. Фактический тип может меняться (например, возвращаемое значение может быть в формате <see cref="T:System.Xml.XmlTextReader" />) в зависимости от внутреннего способа представления данных на сервере.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Предпринята попытка получить доступ к этому свойству в неопределенном экземпляре <see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Строка, указывающая определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>Показывает, представляет ли данный экземпляр неопределенное значение <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>
        <see langword="true" />, если <see langword="Value" /> равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>Представляет неопределенный экземпляр типа <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Неопределенный экземпляр типа <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r">XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">XmlWriter.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>Получает строковое представление XML-содержимого данного экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Строковое представление XML-содержимого.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary>Перечисление <see cref="T:System.Data.SqlTypes.StorageState" /> не предназначено для использования в качестве самостоятельного компонента; оно является перечислением, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary>Размер буфера.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary>Поток.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary>Неуправляемый буфер.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>Предоставляет данные для события изменения состояния поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StateChangeEventArgs" /> при данном исходном и текущем состоянии объекта.</summary>
      <param name="originalState">Одно из значений <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState">Одно из значений <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>Получает новое состояние подключения. Объект подключения будет уже в новом состоянии, когда событие запущено.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>Получает текущее состояние подключения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.StateChangeEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>Предоставляет дополнительные сведения для события <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount">Указывает количество строк, на которые повлиял оператор, применение которого вызвало событие <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>Указывает количество строк, на которые повлиял оператор, применение которого вызвало событие <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <returns>Число обработанных строк.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>Тип делегата для обработчиков событий, относящихся к событию <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Данные для события.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>Задает тип SQL запроса для использования в классах <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> или <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary>SQL-запрос, являющийся пакетным оператором.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>SQL-запрос, являющийся оператором DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>SQL-запрос, являющийся оператором INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>SQL-запрос, являющийся оператором SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>SQL-запрос, являющийся оператором UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>Исключение, которое выдается строго типизированным объектом <see cref="T:System.Data.DataSet" />, когда пользователь получает доступ к значению <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />, используя заданную информацию сериализации и контекст потоков.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" /> с заданной строкой.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />, используя заданную строку и внутреннее исключение.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>Предоставляет исключение, возникающее, когда свойство <see cref="P:System.Data.DataColumn.Expression" /> объекта <see cref="T:System.Data.DataColumn" /> содержит синтаксическую ошибку.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение определенного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary>Этот тип используется как базовый класс для создания объектов с типом <see cref="T:System.Data.DataTable" /> Visual Studio и инструмента .NET Framework XSD.exe; тип не предназначен для непосредственного использования из кода.</summary>
      <typeparam name="T">Тип объектов в исходной последовательности, представленной таблицей; как правило, <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Data.TypedTableBase`1" />. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот тип не предназначен для непосредственного использования в коде.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый объект <see cref="T:System.Data.TypedTableBase`1" />. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот метод не предназначен для непосредственного использования в коде.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные для создания объекта.</param>
      <param name="context">Потоковый контекст для десериализуемого объекта.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary>Преобразует элементы <see cref="T:System.Data.TypedTableBase`1" /> в указанный тип. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот метод не предназначен для непосредственного использования в коде.</summary>
      <typeparam name="TResult" />
      <returns>
        <see cref="T:System.Data.EnumerableRowCollection" /> — содержит все элементы исходной последовательности, преобразованные в указанный тип.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary>Возвращает перечислитель для типизированной строки <see cref="T:System.Data.DataRow" />. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот метод не предназначен для непосредственного использования в коде.</summary>
      <returns>Объект, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель для типизированной строки <see cref="T:System.Data.DataRow" />. Этот метод поддерживает создание типизированного объекта <see cref="T:System.Data.DataTable" /> с помощью Visual Studio и средства .NET Framework XSD.exe. Этот метод не предназначен для непосредственного использования в коде.</summary>
      <returns>Объект, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary>Содержит методы расширения для класса <see cref="T:System.Data.TypedTableBase`1" />.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary>Перечисляет элементы строки данных <see cref="T:System.Data.TypedTableBase`1" /> и возвращает объект <see cref="T:System.Data.EnumerableRowCollection`1" />, в котором универсальный параметр <paramref name="T" /> равен <see cref="T:System.Data.DataRow" />. Этот объект может использоваться в выражении LINQ или запросе метода.</summary>
      <param name="source">Исходный объект <see cref="T:System.Data.TypedTableBase`1" />, который требуется сделать перечисляемым.</param>
      <typeparam name="TRow">Тип, в который преобразуются элементы источника.</typeparam>
      <returns>Объект <see cref="T:System.Data.EnumerableRowCollection`1" />, где универсальный параметр <paramref name="T" /> имеет значение <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary>Возвращает элемент в указанной строке в последовательности или значение по умолчанию, если строка вне допустимого диапазона.</summary>
      <param name="source">Перечисляемый объект, из которого требуется возвратить элемент.</param>
      <param name="index">Отсчитываемый от нуля индекс извлекаемого элемента.</param>
      <typeparam name="TRow">Тип элементов или строки.</typeparam>
      <returns>Элемент, расположенный в указанной строке в последовательности.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Сортирует строки объекта <see cref="T:System.Data.TypedTableBase`1" /> в порядке возрастания по заданному ключу.</summary>
      <param name="source">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий упорядочиваемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Сортирует строки объекта <see cref="T:System.Data.TypedTableBase`1" /> в порядке возрастания по указанному ключу и компаратору.</summary>
      <param name="source">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий упорядочиваемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Сортирует строки объекта <see cref="T:System.Data.TypedTableBase`1" /> в порядке убывания по указанному ключу.</summary>
      <param name="source">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий упорядочиваемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого сортируются по заданному ключу.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Сортирует строки объекта <see cref="T:System.Data.TypedTableBase`1" /> в порядке убывания в соответствии с указанным ключом и компаратором.</summary>
      <param name="source">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий упорядочиваемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="keySelector">Функция, извлекающая ключ из элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, элементы которого отсортированы по указанному ключу и компаратору.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Проецирует каждый элемент <see cref="T:System.Data.TypedTableBase`1" /> в новую форму.</summary>
      <param name="source">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий элементы <see cref="T:System.Data.DataRow" />, для которых будет вызвана функция преобразования.</param>
      <param name="selector">Функция преобразования, применяемая к каждому элементу.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" />
      <returns>Объект <see cref="T:System.Data.EnumerableRowCollection`1" />, элементы которого получены в результате вызова функции преобразования для каждого элемента последовательности <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary>Выполняет фильтрацию последовательности строк на основе указанного предиката.</summary>
      <param name="source">Объект <see cref="T:System.Data.TypedTableBase`1" />, содержащий фильтруемые элементы <see cref="T:System.Data.DataRow" />.</param>
      <param name="predicate">Функция для проверки каждого элемента на соответствие условию.</param>
      <typeparam name="TRow">Тип элементов строки в объекте <paramref name="source" />, обычно <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Объект <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, содержащий строки входной последовательности, которые удовлетворяют условию.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>Предоставляет ограничение на набор столбцов, в которых все значения должны быть уникальными.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> указанным значением <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> объектом <see cref="T:System.Data.DataColumn" />, который необходимо ограничить, и значением, определяющим, является ли ограничение первичным ключом.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" />, используя заданный массив объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем и объектом <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, объектом <see cref="T:System.Data.DataColumn" />, который необходимо ограничить, и значением, определяющим, является ли ограничение первичным ключом.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем и массивом объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="columnNames">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>Получает массив столбцов, на которые влияет это ограничение.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>Сравнивает это ограничение со вторым, чтобы определить, являются ли они идентичными.</summary>
      <param name="key2">Объект, с которым сравнивается объект <see cref="T:System.Data.UniqueConstraint" />.</param>
      <returns>Значение <see langword="true" />, если ограничения одинаковы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>Возвращает хэш-код этого экземпляра объекта <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>Получает значение, указывающее, является ли ограничение первичным ключом.</summary>
      <returns>Значение <see langword="true" />, если ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>Получает таблицу, к которой относится это ограничение.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, которому принадлежит данное ограничение.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>Задает способ применения к обновляемой строке результатов команды запроса.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>Выходные параметры и первая возвращаемая строка отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>Данные первой возвращаемой строки отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>Все возвращаемые параметры или строки игнорируются.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>Выходные параметры отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>Указывает действия, предпринимаемые в отношении текущей строки и остальных строк во время выполнения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>Класс <see cref="T:System.Data.Common.DataAdapter" /> продолжает обработку строк.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>Обработчик событий сообщает, что обновление будет рассматриваться как ошибка.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>Текущая строка и все остальные строки не обновляются.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>Текущая строка не обновляется.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>Предоставляет исключение, возникающее при попытке возврата версии объекта <see cref="T:System.Data.DataRow" />, который был удален.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>Указывает, как считывать XML-данные и реляционную схему в объект <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>Режим чтения по умолчанию.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>Считывает DiffGram, применяя изменения из DiffGram к объекту <see cref="T:System.Data.DataSet" />. Семантика идентична семантике операции <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Как и в случае операции <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, значения <see cref="P:System.Data.DataRow.RowState" /> сохраняются. Входные данные метода <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> с DiffGrams могут быть получены только с использованием выходных данных метода <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> в виде DiffGram.
Целевой объект <see cref="T:System.Data.DataSet" /> должен иметь ту же схему, что и <see cref="T:System.Data.DataSet" />, для которого <see cref="Overload:System.Data.DataSet.WriteXml" /> вызывается как DiffGram. В противном случае происходит сбой операции слияния DiffGram и возникает исключение.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>Считывает XML-фрагменты, которые созданы при выполнении запросов FOR XML к экземпляру SQL Server. Когда для режима <see cref="T:System.Data.XmlReadMode" /> задано значение <see langword="Fragment" />, пространство имен по умолчанию читается как встроенная схема.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>Пропускает любую встроенную схему и считывает данные в существующую схему <see cref="T:System.Data.DataSet" />. Если какие-либо данные не соответствуют существующей схеме, они удаляются (включая данные из разных пространств имен, определенных для объекта <see cref="T:System.Data.DataSet" />). Если данные являются DiffGram, значение <see langword="IgnoreSchema" /> имеет такую же функциональность, что и <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>Игнорирует все встроенные схемы, выводит схему из данных и загружает их. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, текущая схема расширяется за счет добавления новых таблиц или столбцов в существующие таблицы. Если добавляемая таблица уже существует, но с другим пространством имен, или если добавляемые столбцы конфликтуют с существующими, выдается исключение.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary>Игнорирует все встроенные схемы, выводит строго типизированную схему из данных и загружает их. Если тип не может быть выведен из данных, он интерпретируется как строковые данные. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, текущая схема расширяется за счет добавления либо новых таблиц, либо столбцов в существующие таблицы. Если добавляемая таблица уже существует, но с другим пространством имен, или если добавляемые столбцы конфликтуют с существующими, выдается исключение.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>Считывает любую встроенную схему и загружает данные. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, новая таблица может быть в нее добавлена, но если какая-либо таблица во внутренней схеме уже существует в объекте <see cref="T:System.Data.DataSet" />, выдается исключение.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>Указывает, как записывать XML-данные и реляционную схему из объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>Записывает весь <see cref="T:System.Data.DataSet" /> как DiffGram, включая исходные и текущие значения. Для создания формата DiffGram, содержащего только измененные значения, следует вызвать метод <see cref="M:System.Data.DataSet.GetChanges" />, а затем — метод <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> как DiffGram для возвращенного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>Записывает текущее содержимое объекта <see cref="T:System.Data.DataSet" /> как XML-данные без схемы XSD. Если никакие данные не загружены в объект <see cref="T:System.Data.DataSet" />, запись не производится.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>Записывает текущее содержимое объекта <see cref="T:System.Data.DataSet" /> в виде XML-данных с реляционной структурой как встроенную схему XSD. Если объект <see cref="T:System.Data.DataSet" /> имеет только схему без данных, записывается только встроенная схема. Если объект <see cref="T:System.Data.DataSet" /> не имеет текущей схемы, запись не производится.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary>Обеспечивает хранение, получение и управление структурированными данными с использованием реляционного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" /> указанным значением <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataset">Объект <see langword="DataSet" /> для загрузки в <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary>Создает дубликат текущего узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Создает элемент с помощью указанных <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix">Префикс нового элемента. Если значение String.Empty или <see langword="null" />, префикс отсутствует.</param>
      <param name="localName">Локальное имя нового элемента.</param>
      <param name="namespaceURI">Уникальный код ресурса пространства имен нового элемента. Если значение String.Empty или <see langword="null" />, URI пространства имен отсутствует.</param>
      <returns>Новый объект <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</summary>
      <param name="name">Имя ссылки на сущность.</param>
      <returns>Объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</returns>
      <exception cref="T:System.NotSupportedException">Вызов этого метода.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе. Объект <see langword="XPathNavigator" /> находится в узле, заданном в параметре <paramref name="node" />.</summary>
      <param name="node">Узел <see cref="T:System.Xml.XmlNode" />, который будет служить исходной позицией навигатора.</param>
      <returns>Объект <see langword="XPathNavigator" />, используемый для перехода по документу.</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary>Получает объект <see cref="T:System.Data.DataSet" />, обеспечивающий реляционное представление данных в <see langword="XmlDataDocument" />.</summary>
      <returns>Объект <see langword="DataSet" />, который можно использовать для доступа к данным в <see langword="XmlDataDocument" /> с помощью реляционной модели.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary>Возвращает элемент <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором. Этот метод не поддерживается классом <see cref="T:System.Xml.XmlDataDocument" />. При вызове этого метода возникает исключение.</summary>
      <param name="elemId">Идентификатор атрибута для сопоставления.</param>
      <returns>Объект <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором.</returns>
      <exception cref="T:System.NotSupportedException">Вызов этого метода.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary>Получает объект <see cref="T:System.Xml.XmlElement" />, связанный с указанным объектом <see cref="T:System.Data.DataRow" />.</summary>
      <param name="r">Объект <see langword="DataRow" />, связанный с которым объект <see langword="XmlElement" /> необходимо получить.</param>
      <returns>Объект <see langword="XmlElement" />, содержащий представление заданного объекта <see langword="DataRow" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary>Возвращает значение <see cref="T:System.Xml.XmlNodeList" />, содержащее список всех элементов-потомков, соответствующих указанному имени <see cref="P:System.Xml.XmlDocument.Name" />.</summary>
      <param name="name">Сопоставляемое полное имя. Оно противопоставляется свойству <see cref="P:System.Xml.XmlDocument.Name" /> соответствующего узла. Специальное значение "*" соответствует всем тегам.</param>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary>Получает объект <see cref="T:System.Data.DataRow" />, связанный с указанным объектом <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="e">Объект <see langword="XmlElement" />, связанный с которым объект <see langword="DataRow" /> необходимо получить.</param>
      <returns>Объект <see langword="DataRow" />, содержащий представление <see langword="XmlElement" />; значение <see langword="null" />, если отсутствует объект <see langword="DataRow" />, связанный с <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary>Загружает <see langword="XmlDataDocument" /> из указанного потока.</summary>
      <param name="inStream">Поток, содержащий загружаемый документ XML.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary>Загружает объект <see langword="XmlDataDocument" /> из указанного объекта <see cref="T:System.IO.TextReader" />.</summary>
      <param name="txtReader">
        <see langword="TextReader" />, используемый для передачи данных XML в документ.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary>Загружает объект <see langword="XmlDataDocument" /> по указанному URL-адресу.</summary>
      <param name="filename">Универсальный код ресурса (URI) файла, содержащего загружаемый XML-документ.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary>Загружает объект <see langword="XmlDataDocument" /> из указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Объект <see langword="XmlReader" />, содержащий загружаемый XML-документ.</param>
      <exception cref="T:System.NotSupportedException">Загружаемый XML содержит ссылки на сущность, и средство чтения не может разрешить сущности.</exception>
    </member>
  </members>
</doc>