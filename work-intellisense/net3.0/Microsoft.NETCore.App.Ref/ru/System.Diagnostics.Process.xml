<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Process</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <summary>Предоставляет управляемую программу-оболочку для дескриптора процесса.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> на основе заданного дескриптора и указывает, необходимо ли освободить дескриптор на этапе завершения.</summary>
      <param name="existingHandle">Инкапсулируемый дескриптор.</param>
      <param name="ownsHandle">Значение <see langword="true" />, чтобы гарантированно позволить <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> освободить дескриптор на стадии завершения; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeProcessHandle.IsInvalid" />
    <member name="T:System.Diagnostics.DataReceivedEventArgs">
      <summary>Предоставляет данные для событий <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> и <see cref="E:System.Diagnostics.Process.ErrorDataReceived" />.</summary>
    </member>
    <member name="P:System.Diagnostics.DataReceivedEventArgs.Data">
      <summary>Возвращает строку символов, записанную в перенаправленный поток вывода <see cref="T:System.Diagnostics.Process" />.</summary>
      <returns>Строка, записанная соответствующим процессом <see cref="T:System.Diagnostics.Process" /> в перенаправленный поток <see cref="P:System.Diagnostics.Process.StandardOutput" /> или <see cref="P:System.Diagnostics.Process.StandardError" />.</returns>
    </member>
    <member name="T:System.Diagnostics.DataReceivedEventHandler">
      <summary>Предоставляет метод, обрабатывающий событие <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> или событие <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> объекта <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Diagnostics.DataReceivedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Diagnostics.MonitoringDescriptionAttribute">
      <summary>Задает описание для свойства или события.</summary>
    </member>
    <member name="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.MonitoringDescriptionAttribute" />, используя заданное описание.</summary>
      <param name="description">Текст описания, определяемый приложением.</param>
    </member>
    <member name="P:System.Diagnostics.MonitoringDescriptionAttribute.Description">
      <summary>Получает описание текста, связанного с наблюдаемым элементом.</summary>
      <returns>Описание, определяемое приложением.</returns>
    </member>
    <member name="T:System.Diagnostics.Process">
      <summary>Предоставляет доступ к локальным и удаленным процессам и позволяет запускать и останавливать локальные системные процессы.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Process" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.BasePriority">
      <summary>Получает базовый приоритет связанного процесса.</summary>
      <returns>Базовый приоритет, который вычисляется свойством <see cref="P:System.Diagnostics.Process.PriorityClass" /> связанного процесса.</returns>
      <exception cref="T:System.InvalidOperationException">Процесс завершен.  
 -или-  
 Процесс не запущен, поэтому нет идентификатора процесса.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginErrorReadLine">
      <summary>Начинает операции асинхронного чтения с перенаправленного потока <see cref="P:System.Diagnostics.Process.StandardError" /> приложения.</summary>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> — <see langword="false" />.  

или - 
Асинхронная операция чтения уже выполняется в потоке <see cref="P:System.Diagnostics.Process.StandardError" />.  

или - 
Поток <see cref="P:System.Diagnostics.Process.StandardError" /> используется синхронной операцией чтения.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginOutputReadLine">
      <summary>Начинает операции асинхронного чтения с перенаправленного потока <see cref="P:System.Diagnostics.Process.StandardOutput" /> приложения.</summary>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> — <see langword="false" />.  

или - 
Асинхронная операция чтения уже выполняется в потоке <see cref="P:System.Diagnostics.Process.StandardOutput" />.  

-или- 
Поток <see cref="P:System.Diagnostics.Process.StandardOutput" /> используется синхронной операцией чтения.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelErrorRead">
      <summary>Отменяет операцию асинхронного чтения в перенаправленном потоке <see cref="P:System.Diagnostics.Process.StandardError" /> приложения.</summary>
      <exception cref="T:System.InvalidOperationException">Поток <see cref="P:System.Diagnostics.Process.StandardError" /> не включен для асинхронных операций чтения.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelOutputRead">
      <summary>Отменяет операцию асинхронного чтения в перенаправленном потоке <see cref="P:System.Diagnostics.Process.StandardOutput" /> приложения.</summary>
      <exception cref="T:System.InvalidOperationException">Поток <see cref="P:System.Diagnostics.Process.StandardOutput" /> не включен для асинхронных операций чтения.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Close">
      <summary>Освобождает все ресурсы, связанные с этим компонентом.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.CloseMainWindow">
      <summary>Закрывает процесс, имеющий пользовательский интерфейс, посылая сообщение о закрытии главному окну процесса.</summary>
      <returns>Значение <see langword="true" />, если сообщение о закрытии было успешно отправлено; <see langword="false" />, если связанный процесс не имеет главного окна или если главное окно отключено (например, если отображается модальное диалоговое окно).</returns>
      <exception cref="T:System.InvalidOperationException">Этот процесс уже завершился.  

или - 
Нет процессов, связанных с этим объектом <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Dispose(System.Boolean)">
      <summary>Освобождает все ресурсы, используемые этим процессом.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Diagnostics.Process.EnableRaisingEvents">
      <summary>Получает или задает значение, указывающее, следует ли вызывать событие <see cref="E:System.Diagnostics.Process.Exited" /> при прекращении процесса.</summary>
      <returns>Значение<see langword="true" /> , если событие <see cref="E:System.Diagnostics.Process.Exited" /> должно быть вызвано при завершении связанного процесса (выход или вызов метода <see cref="M:System.Diagnostics.Process.Kill" />); в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />. Обратите внимание <see cref="E:System.Diagnostics.Process.Exited" /> , что событие возникает даже в том случае <see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /> , если во время или до завершения процесса пользователем <see cref="P:System.Diagnostics.Process.HasExited" /> проверки возникло значение <see langword="false" /> .</returns>
    </member>
    <member name="M:System.Diagnostics.Process.EnterDebugMode">
      <summary>Помещает компонент <see cref="T:System.Diagnostics.Process" /> в состояние взаимодействия с работающим системным процессом, выполняющимся в специальном режиме путем включения встроенного свойства <see langword="SeDebugPrivilege" /> в данном потоке.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.ErrorDataReceived">
      <summary>Происходит, когда приложение выполняет запись в свой перенаправленный поток <see cref="P:System.Diagnostics.Process.StandardError" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitCode">
      <summary>Получает значение, заданное связанным процессом при завершении.</summary>
      <returns>Код, который задал связанный процесс при завершении.</returns>
      <exception cref="T:System.InvalidOperationException">Процесс не был завершен.  
-или- 
Процесс <see cref="P:System.Diagnostics.Process.Handle" /> не является допустимым.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.ExitCode" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="E:System.Diagnostics.Process.Exited">
      <summary>Происходит при завершении процесса.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitTime">
      <summary>Получает время завершения связанного процесса.</summary>
      <returns>Класс <see cref="T:System.DateTime" />, показывающий время завершения связанного процесса.</returns>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.ExitTime" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetCurrentProcess">
      <summary>Получает новый компонент <see cref="T:System.Diagnostics.Process" /> и связывает его с активным в данный момент процессом.</summary>
      <returns>Новый компонент <see cref="T:System.Diagnostics.Process" />, связанный с ресурсом выполняющегося процесса в вызывающем приложении.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
      <summary>Возвращает новый компонент <see cref="T:System.Diagnostics.Process" />, по заданному идентификатору процесса на локальном компьютере.</summary>
      <param name="processId">Уникальный в системе идентификатор ресурса процесса.</param>
      <returns>Компонент <see cref="T:System.Diagnostics.Process" />, связанный с локальным ресурсом процесса, определенного параметром <paramref name="processId" />.</returns>
      <exception cref="T:System.ArgumentException">Процесс, указанный параметром <paramref name="processId" />, не выполняется. Возможно, истек срок действия идентификатора.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс не был запущен этим объектом.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
      <summary>Возвращает новый компонент <see cref="T:System.Diagnostics.Process" /> по заданному идентификатору процесса и имени компьютера в сети.</summary>
      <param name="processId">Уникальный в системе идентификатор ресурса процесса.</param>
      <param name="machineName">Имя компьютера в сети.</param>
      <returns>Компонент <see cref="T:System.Diagnostics.Process" />, связанный с удаленным ресурсом процесса, определенного параметром <paramref name="processId" />.</returns>
      <exception cref="T:System.ArgumentException">Процесс, указанный параметром <paramref name="processId" />, не выполняется. Возможно, истек срок действия идентификатора.  

или - 
Недопустимый синтаксис параметра <paramref name="machineName" />. Возможно, имя имеет нулевую длину (0).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="machineName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс не был запущен этим объектом.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses">
      <summary>Создает новый компонент <see cref="T:System.Diagnostics.Process" /> для каждого ресурса процесса на локальном компьютере.</summary>
      <returns>Массив типа <see cref="T:System.Diagnostics.Process" />, представляющий все ресурсы процесса, выполняющегося на локальном компьютере.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses(System.String)">
      <summary>Создает новый компонент <see cref="T:System.Diagnostics.Process" /> для каждого ресурса процесса на указанном компьютере.</summary>
      <param name="machineName">Компьютер, из которого читается список процессов.</param>
      <returns>Массив типа <see cref="T:System.Diagnostics.Process" />, представляющий все ресурсы процесса, выполняющегося на указанном компьютере.</returns>
      <exception cref="T:System.ArgumentException">Недопустимый синтаксис параметра <paramref name="machineName" />. Он может иметь нулевую длину (0).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="machineName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Платформа операционной системы не поддерживает эту операцию на удаленных компьютерах.</exception>
      <exception cref="T:System.InvalidOperationException">Существуют проблемы при доступе к API счетчиков производительности, которые используются для получения сведений о процессе. Это исключение характерно для Windows NT, Windows 2000 и Windows XP.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Возникла проблема при доступе к базовому системному API.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
      <summary>Создает массив из новых компонентов <see cref="T:System.Diagnostics.Process" /> и связывает их со всеми ресурсами процесса на локальном компьютере, для которых заданное имя процесса является общедоступным.</summary>
      <param name="processName">Понятное имя процесса.</param>
      <returns>Массив типа <see cref="T:System.Diagnostics.Process" />, представляющий ресурсы процесса, выполняющего указанное приложение или файл.</returns>
      <exception cref="T:System.InvalidOperationException">Существуют проблемы при доступе к API счетчиков производительности, которые используются для получения сведений о процессе. Это исключение характерно для Windows NT, Windows 2000 и Windows XP.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
      <summary>Создает массив из новых компонентов <see cref="T:System.Diagnostics.Process" /> и связывает их со всеми ресурсами процесса на удаленном компьютере, для которых заданное имя процесса является общедоступным.</summary>
      <param name="processName">Понятное имя процесса.</param>
      <param name="machineName">Имя компьютера в сети.</param>
      <returns>Массив типа <see cref="T:System.Diagnostics.Process" />, представляющий ресурсы процесса, выполняющего указанное приложение или файл.</returns>
      <exception cref="T:System.ArgumentException">Недопустимый синтаксис параметра <paramref name="machineName" />. Он может иметь нулевую длину (0).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="machineName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Платформа операционной системы не поддерживает эту операцию на удаленных компьютерах.</exception>
      <exception cref="T:System.InvalidOperationException">Попытка подключиться к <paramref name="machineName" /> завершилась ошибкой.

или - 
Существуют проблемы при доступе к API счетчиков производительности, которые используются для получения сведений о процессе. Это исключение характерно для Windows NT, Windows 2000 и Windows XP.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Возникла проблема при доступе к базовому системному API.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Handle">
      <summary>Получает собственный дескриптор связанного процесса.</summary>
      <returns>Дескриптор, присвоенный процессу операционной системой при запуске. Система использует этот дескриптор для хранения атрибутов процесса.</returns>
      <exception cref="T:System.InvalidOperationException">Процесс не был запущен или был завершен. Невозможно прочитать свойство <see cref="P:System.Diagnostics.Process.Handle" />, поскольку ни один процесс не связан с этим экземпляром <see cref="T:System.Diagnostics.Process" />.  
-или- 
Экземпляр <see cref="T:System.Diagnostics.Process" /> был присоединен к запущенному процессу, но у вас нет необходимых разрешений для получения маркера с полными правами доступа.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.Handle" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.HandleCount">
      <summary>Получает число дескрипторов, открытых процессом.</summary>
      <returns>Число дескрипторов операционной системы, открытых процессом.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.HasExited">
      <summary>Получает значение, определяющее завершение связанного процесса.</summary>
      <returns>Значение <see langword="true" />, если процесс операционной системы, на который ссылается компонент <see cref="T:System.Diagnostics.Process" />, был завершен; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">С объектом не связаны никакие процессы.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удалось получить код выхода для процесса.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.HasExited" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Id">
      <summary>Получает уникальный идентификатор связанного процесса.</summary>
      <returns>Созданный системой уникальный идентификатор, на который ссылается этот экземпляр <see cref="T:System.Diagnostics.Process" />.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Diagnostics.Process.Id" /> процесса не задано.  
-или- 
С этим объектом <see cref="T:System.Diagnostics.Process" /> никакие процессы не связаны.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill">
      <summary>Немедленно останавливает связанный процесс.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Связанный процесс не может быть завершен.  

или -  

 Выполняется завершение процесса.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь вызвать метод <see cref="M:System.Diagnostics.Process.Kill" /> для процесса, выполняющегося на удаленном компьютере. Этот метод доступен только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Этот процесс уже завершился.  
-или- 
С этим объектом <see cref="T:System.Diagnostics.Process" /> никакие процессы не связаны.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill(System.Boolean)">
      <summary>Немедленно останавливает связанный процесс и, при необходимости, его дочерние процессы.</summary>
      <param name="entireProcessTree">
        <see langword="true" /> для уничтожения связанного процесса и его потомков; <see langword="false" /> для уничтожения только связанного процесса.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">Связанный процесс не может быть завершен.  

или -  

 Выполняется завершение процесса.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь вызвать метод <see cref="M:System.Diagnostics.Process.Kill" /> для процесса, выполняющегося на удаленном компьютере. Этот метод доступен только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Этот процесс уже завершился.  

или - 
С этим объектом <see cref="T:System.Diagnostics.Process" /> не связаны никакие процессы.

или -


Вызывающий процесс является членом дерева потомков связанного процесса.</exception>
      <exception cref="T:System.AggregateException">Не все процессы в дереве потомков связанного процесса могут быть завершены.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.LeaveDebugMode">
      <summary>Выбирает компонент <see cref="T:System.Diagnostics.Process" /> из состояния, позволяющего ему взаимодействовать с процессами операционной системы, запущенными в специальном режиме.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.MachineName">
      <summary>Получает имя компьютера, на котором выполняется связанный процесс.</summary>
      <returns>Имя компьютера, на котором выполняется связанный процесс.</returns>
      <exception cref="T:System.InvalidOperationException">С этим объектом <see cref="T:System.Diagnostics.Process" /> никакие процессы не связаны.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainModule">
      <summary>Получает главный модуль связанного процесса.</summary>
      <returns>Модуль <see cref="T:System.Diagnostics.ProcessModule" />, который был использован для запуска процесса.</returns>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.MainModule" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">32-разрядный процесс пытается получить доступ к модулям 64-разрядного процесса.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс <see cref="P:System.Diagnostics.Process.Id" /> недоступен.  

или - 
Процесс завершен.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowHandle">
      <summary>Получает дескриптор главного окна связанного процесса.</summary>
      <returns>Созданный системой дескриптор главного окна связанного процесса.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> не определено, так как процесс завершился.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowTitle">
      <summary>Получает заголовок главного окна процесса.</summary>
      <returns>Заголовок главного окна процесса.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> не определено, так как процесс завершился.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MaxWorkingSet">
      <summary>Получает или задает максимальный допустимый размер рабочего множества (в байтах) для связанного процесса.</summary>
      <returns>Максимальный размер рабочего множества в байтах, доступного в памяти для процесса.</returns>
      <exception cref="T:System.ArgumentException">Максимальный размер рабочего множества является недопустимым. Это значение должно быть больше минимального размера рабочего множества или равно ему.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается получить сведения о рабочем множестве из ресурса связанного процесса.  
 -или-  
 Идентификатор или дескриптор процесса равен нулю, так как процесс не запущен.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс <see cref="P:System.Diagnostics.Process.Id" /> недоступен.  

или - 
Процесс завершен.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MinWorkingSet">
      <summary>Возвращает или задает минимальный допустимый размер рабочего множества (в байтах) для связанного процесса.</summary>
      <returns>Минимальный размер рабочего множества в байтах, требуемый в памяти для процесса.</returns>
      <exception cref="T:System.ArgumentException">Минимальный размер рабочего множества является недопустимым. Это значение должно быть не больше максимального размера рабочего множества.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается получить сведения о рабочем множестве из ресурса связанного процесса.  

или -  

 Идентификатор или дескриптор процесса равен нулю, так как процесс не запущен.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> процесса, запущенного на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс <see cref="P:System.Diagnostics.Process.Id" /> недоступен.  
-или- 
Процесс завершен.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Modules">
      <summary>Получает модули, которые были загружены связанным процессом.</summary>
      <returns>Массив объектов типа <see cref="T:System.Diagnostics.ProcessModule" />, который предоставляет модули, загруженные связанным процессом.</returns>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.Modules" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс <see cref="P:System.Diagnostics.Process.Id" /> недоступен.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.Modules" /> системного или бездействующего процесса. Эти процессы не имеют модулей.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
      <summary>Возвращает объем невыгружаемой системной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Объем памяти в байтах, выделенной системой для связанного процесса, который нельзя записать в файл подкачки виртуальной памяти.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
      <summary>Возвращает объем невыгружаемой системной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Количество системной памяти в байтах, выделенной для связанного процесса, которую нельзя записать в файл подкачки виртуальной памяти.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.OnExited">
      <summary>Вызывает событие <see cref="E:System.Diagnostics.Process.Exited" />.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.OutputDataReceived">
      <summary>Происходит, когда приложение записывает строку в свой перенаправленный поток <see cref="P:System.Diagnostics.Process.StandardOutput" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize">
      <summary>Возвращает объем выгружаемой системной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Объем памяти в байтах, выделенной связанным процессом, который можно записать в файл подкачки виртуальной памяти.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize64">
      <summary>Возвращает объем выгружаемой системной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Объем памяти в байтах, выделенной в файле подкачки виртуальной памяти для связанного процесса.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize">
      <summary>Возвращает объем выгружаемой системной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Объем памяти в байтах, выделенной системой для связанного процесса, который можно записать в файл подкачки виртуальной памяти.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize64">
      <summary>Возвращает объем выгружаемой системной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Количество системной памяти в байтах, выделенной для связанного процесса, которую можно записать в файл подкачки виртуальной памяти.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize">
      <summary>Получает максимальный объем памяти в байтах в файле подкачки виртуальной памяти, используемой связанным процессом.</summary>
      <returns>Максимальный объем памяти в байтах, выделенной связанным процессом, который можно записать в файл подкачки виртуальной памяти.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize64">
      <summary>Получает максимальный объем памяти в байтах в файле подкачки виртуальной памяти, используемой связанным процессом.</summary>
      <returns>Максимальное количество памяти в байтах, выделенной в файле подкачки виртуальной памяти для связанного процесса с момента его запуска.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize">
      <summary>Получает максимальный объем виртуальной памяти (в байтах), используемой связанным процессом.</summary>
      <returns>Максимальный объем виртуальной памяти в байтах, запрошенной связанным процессом.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
      <summary>Получает максимальный объем виртуальной памяти (в байтах), используемой связанным процессом.</summary>
      <returns>Максимальное количество виртуальной памяти в байтах, выделенной для связанного процесса с момента его запуска.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet">
      <summary>Возвращает максимальный размер рабочего множества для связанного процесса (в байтах).</summary>
      <returns>Максимальный объем физической памяти, запрошенной связанным процессом одновременно (в байтах).</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet64">
      <summary>Получает максимальный объем физической памяти (в байтах), используемой связанным процессом.</summary>
      <returns>Максимальный объем физической памяти в байтах, выделенной для связанного процесса с момента его запуска.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityBoostEnabled">
      <summary>Возвращает или задает значение, указывающее, должна ли операционная система временно увеличить приоритет связанного процесса, когда основное окно процесса получит фокус.</summary>
      <returns>Значение <see langword="true" />, если требуется динамическое увеличение приоритета процесса, когда процесс выходит из состояния ожидания; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается получить информацию о повышении приоритета от связанного ресурса процесса.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Идентификатор процесса или дескриптор процесса равен нулю. (Процесс не был запущен.)</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс <see cref="P:System.Diagnostics.Process.Id" /> недоступен.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityClass">
      <summary>Возвращает или задает общую категорию приоритета для процесса.</summary>
      <returns>Категория приоритета для связанного процесса, из которой вычисляется свойство <see cref="P:System.Diagnostics.Process.BasePriority" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается задать или получить сведения о приоритете процесса от связанного ресурса процесса.  

или -  

 Идентификатор процесса или дескриптор процесса равен нулю. (Процесс не был запущен.)</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.PriorityClass" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс <see cref="P:System.Diagnostics.Process.Id" /> недоступен.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Невозможно задать класс приоритета, поскольку он не использует допустимое значение, как определено в перечислении <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize">
      <summary>Получает объем закрытой системной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Число байтов, выделенных связанным процессом, которые не могут быть доступны другим процессам.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize64">
      <summary>Получает объем закрытой системной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Объем памяти в байтах, выделенное для связанного процесса, которое не может быть доступно другим процессам.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivilegedProcessorTime">
      <summary>Получает права доступа на время процессора для этого процесса.</summary>
      <returns>Класс <see cref="T:System.TimeSpan" />, показывающий количество времени, которое процесс потратил на выполнение кода внутри ядра операционной системы.</returns>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessName">
      <summary>Получает имя процесса.</summary>
      <returns>Имя, которое использует система для идентификации процесса для пользователя.</returns>
      <exception cref="T:System.InvalidOperationException">Процесс не имеет идентификатора, или нет процесса, связанного с <see cref="T:System.Diagnostics.Process" />.  

или - 
Связанный процесс завершился.</exception>
      <exception cref="T:System.NotSupportedException">Процесс отсутствует на этом компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessorAffinity">
      <summary>Возвращает или задает процессоры, на которых может быть запланировано выполнение потоков данного процесса.</summary>
      <returns>Битовая маска, представляющая процессоры, на которых могут выполняться потоки связанного процесса. По умолчанию маска зависит от числа процессоров в компьютере. Значение по умолчанию — 2 n – 1, где n — число процессоров.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается задать или получить сведения о <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> от связанного ресурса процесса.  

или - 
Идентификатор процесса или дескриптор процесса равен нулю. (Процесс не был запущен.)</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс <see cref="P:System.Diagnostics.Process.Id" /> недоступен.  

или - 
Процесс завершен.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Refresh">
      <summary>Удаляет любые кэшированные внутри компонента процесса сведения о связанном процессе.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.Responding">
      <summary>Получает значение, указывающее, отвечает или нет пользовательский интерфейс.</summary>
      <returns>Значение <see langword="true" />, если пользовательский интерфейс связанного процесса отвечает системе; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">С этим объектом <see cref="T:System.Diagnostics.Process" /> никакие процессы не связаны.</exception>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.Responding" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SafeHandle">
      <summary>Возвращает собственный дескриптор процесса.</summary>
      <returns>Собственный дескриптор процесса.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.SessionId">
      <summary>Получает идентификатор сеанса служб терминалов для связанного процесса.</summary>
      <returns>Идентификатор сеанса служба терминалов для связанного процесса.</returns>
      <exception cref="T:System.NullReferenceException">С этим процессом никакие сеансы не связаны.</exception>
      <exception cref="T:System.InvalidOperationException">С этим идентификатором сеанса не связаны никакие процессы.  

или -  

 На этом компьютере нет связанного процесса.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardError">
      <summary>Получает поток, используемый для чтения вывода ошибок приложения.</summary>
      <returns>Объект <see cref="T:System.IO.StreamReader" />, используемый для чтения стандартного потока ошибок приложения.</returns>
      <exception cref="T:System.InvalidOperationException">Поток <see cref="P:System.Diagnostics.Process.StandardError" /> не был определен для переадресации. Убедитесь, что для <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> задано <see langword="true" />, а для <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> — <see langword="false" />.  
-или- 
Поток <see cref="P:System.Diagnostics.Process.StandardError" /> был открыт для асинхронных операций чтения с <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardInput">
      <summary>Получает поток, используемый для записи ввода приложения.</summary>
      <returns>Объект <see cref="T:System.IO.StreamWriter" />, используемый для записи стандартного входного потока приложения.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.StandardInput" /> Поток не был определен, так как для <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /> установлено значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardOutput">
      <summary>Получает поток, используемый для чтения текстовых выходных данных приложения.</summary>
      <returns>Объект <see cref="T:System.IO.StreamReader" />, используемый для чтения стандартного потока вывода приложения.</returns>
      <exception cref="T:System.InvalidOperationException">Поток <see cref="P:System.Diagnostics.Process.StandardOutput" /> не был определен для переадресации. Убедитесь, что для <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> задано <see langword="true" />, а для <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> — <see langword="false" />.  
-или- 
Поток <see cref="P:System.Diagnostics.Process.StandardOutput" /> был открыт для асинхронных операций чтения с <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start">
      <summary>Запускает (или повторно использует) ресурс процесса, определенный свойством <see cref="P:System.Diagnostics.Process.StartInfo" /> этого компонента <see cref="T:System.Diagnostics.Process" />, и связывает его с компонентом.</summary>
      <returns>Значение <see langword="true" />, если ресурс процесса запущен; значение <see langword="false" />, если новый ресурс процесса не был запущен (например, при повторном использовании существующего процесса).</returns>
      <exception cref="T:System.InvalidOperationException">Имя файла не было указано в свойстве <see cref="P:System.Diagnostics.Process.StartInfo" /> компонента <see cref="T:System.Diagnostics.Process" />.

или- Член <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> свойства <see cref="P:System.Diagnostics.Process.StartInfo" /> имеет значение <see langword="true" />, тогда как <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> или <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> имеет значение <see langword="true" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при открытии связанного файла.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект процесса уже удален.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Метод не поддерживается в операционных системах без поддержки оболочки, таких как Nano Server (только в .NET Core).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
      <summary>Запускает ресурс процесса, определенный параметром, содержащим стартовую информацию процесса (например, имя файла запускаемого процесса), и связывает ресурс с новым компонентом <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="startInfo">Объект <see cref="T:System.Diagnostics.ProcessStartInfo" />, который содержит информацию, использующуюся для запуска процесса, включая имя файла и все аргументы командной строки.</param>
      <returns>Новый процесс <see cref="T:System.Diagnostics.Process" />, связанный с ресурсом процесса, или <see langword="null" />, если ресурс процесса не запущен. Обратите внимание, что новый процесс, запущенный наряду с уже выполняющимися экземплярами того же процесса, будет независимым от других. Кроме того, метод Start может вернуть ненулевой тип Process, свойство <see cref="P:System.Diagnostics.Process.HasExited" /> которого равно <see langword="true" />. В этом случае запущенный процесс может активировать существующий экземпляр самого себя, а затем завершить работу.</returns>
      <exception cref="T:System.InvalidOperationException">Имя файла не было указано в свойстве <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> параметра <paramref name="startInfo" />.  

или - 
Свойство <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> параметра<paramref name="startInfo" /> имеет значение <see langword="true" /> и <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> или свойство <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> также имеет значение <see langword="true" />.  

или - 
Свойство <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> параметра <paramref name="startInfo" /> имеет значение <see langword="true" />, и свойство <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> не равно <see langword="null" /> или не является пустым или свойство <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> не равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="startInfo" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект процесса уже удален.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, указанный в свойстве <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> параметра <paramref name="startInfo" />, не найден.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Возникла ошибка при открытии связанного файла.  

или -  

 Сумма длины аргументов и длины полного пути к процессу превышает 2080. Сообщение об ошибке, связанной с этим исключением, может иметь следующую формулировку: "Область данных, переданная системному вызову, слишком мала". или "Отказано в доступе".</exception>
      <exception cref="T:System.PlatformNotSupportedException">Метод не поддерживается в операционных системах без поддержки оболочки, таких как Nano Server (только в .NET Core).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String)">
      <summary>Запускает ресурс процесса путем указания имени документа или файла приложения и связывает ресурс с новым компонентом <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">Имя документа или файла приложения для запуска в процессе.</param>
      <returns>Новый процесс <see cref="T:System.Diagnostics.Process" />, связанный с ресурсом процесса, или <see langword="null" />, если ресурс процесса не запущен. Обратите внимание, что новый процесс, запущенный наряду с уже выполняющимися экземплярами того же процесса, будет независимым от других. Кроме того, метод Start может вернуть ненулевой тип Process, свойство <see cref="P:System.Diagnostics.Process.HasExited" /> которого равно <see langword="true" />. В этом случае запущенный процесс может активировать существующий экземпляр самого себя, а затем завершить работу.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Возникла ошибка при открытии связанного файла.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект процесса уже удален.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Переменная среды PATH содержит строку с кавычками.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String)">
      <summary>Запускает ресурс процесса путем указания имени приложения и набора аргументов командной строки и связывает ресурс с новым компонентом <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">Имя файла приложения для запуска в процессе.</param>
      <param name="arguments">Аргументы командной строки для передачи при запуске процесса.</param>
      <returns>Новый процесс <see cref="T:System.Diagnostics.Process" />, связанный с ресурсом процесса, или <see langword="null" />, если ресурс процесса не запущен. Обратите внимание, что новый процесс, запущенный наряду с уже выполняющимися экземплярами того же процесса, будет независимым от других. Кроме того, метод Start может вернуть ненулевой тип Process, свойство <see cref="P:System.Diagnostics.Process.HasExited" /> которого равно <see langword="true" />. В этом случае запущенный процесс может активировать существующий экземпляр самого себя, а затем завершить работу.</returns>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="fileName" /> или параметра <paramref name="arguments" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Возникла ошибка при открытии связанного файла.  

или -  

 Сумма длины аргументов и длины полного пути к процессу превышает 2080. Сообщение об ошибке, связанной с этим исключением, может иметь следующую формулировку: "Область данных, переданная системному вызову, слишком мала". или "Отказано в доступе".</exception>
      <exception cref="T:System.ObjectDisposedException">Объект процесса уже удален.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Переменная среды PATH содержит строку с кавычками.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
      <summary>Запускает ресурс процесса путем указания имени приложения, имени пользователя, пароля и домена и связывает ресурс с новым компонентом <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">Имя файла приложения для запуска в процессе.</param>
      <param name="userName">Имя пользователя, используемое при запуске процесса.</param>
      <param name="password">Объект <see cref="T:System.Security.SecureString" />, содержащий пароль для использования при запуске процесса.</param>
      <param name="domain">Домен, используемый при запуске процесса.</param>
      <returns>Новый процесс <see cref="T:System.Diagnostics.Process" />, связанный с ресурсом процесса, или <see langword="null" />, если ресурс процесса не запущен. Обратите внимание, что новый процесс, запущенный наряду с уже выполняющимися экземплярами того же процесса, будет независимым от других. Кроме того, метод Start может вернуть ненулевой тип Process, свойство <see cref="P:System.Diagnostics.Process.HasExited" /> которого равно <see langword="true" />. В этом случае запущенный процесс может активировать существующий экземпляр самого себя, а затем завершить работу.</returns>
      <exception cref="T:System.InvalidOperationException">Не указано имя файла.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Произошла ошибка при открытии связанного файла.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект процесса уже удален.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Этот элемент не поддерживается в Linux или macOS (только в .NET Core).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
      <summary>Запускает ресурс процесса путем указания имени приложения, набора аргументов командной строки, имени пользователя, пароля и домена и связывает ресурс с новым компонентом <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">Имя файла приложения для запуска в процессе.</param>
      <param name="arguments">Аргументы командной строки для передачи при запуске процесса.</param>
      <param name="userName">Имя пользователя, используемое при запуске процесса.</param>
      <param name="password">Объект <see cref="T:System.Security.SecureString" />, содержащий пароль для использования при запуске процесса.</param>
      <param name="domain">Домен, используемый при запуске процесса.</param>
      <returns>Новый процесс <see cref="T:System.Diagnostics.Process" />, связанный с ресурсом процесса, или <see langword="null" />, если ресурс процесса не запущен. Обратите внимание, что новый процесс, запущенный наряду с уже выполняющимися экземплярами того же процесса, будет независимым от других. Кроме того, метод Start может вернуть ненулевой тип Process, свойство <see cref="P:System.Diagnostics.Process.HasExited" /> которого равно <see langword="true" />. В этом случае запущенный процесс может активировать существующий экземпляр самого себя, а затем завершить работу.</returns>
      <exception cref="T:System.InvalidOperationException">Не указано имя файла.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Возникла ошибка при открытии связанного файла.  

или -  

 Сумма длины аргументов и длины полного пути к соответствующему файлу превышает 2080. Сообщение об ошибке, связанной с этим исключением, может иметь следующую формулировку: "Область данных, переданная системному вызову, слишком мала". или "Отказано в доступе".</exception>
      <exception cref="T:System.ObjectDisposedException">Объект процесса уже удален.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Этот элемент не поддерживается в Linux или macOS (только в .NET Core).</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartInfo">
      <summary>Получает или задает свойства для передачи их методу <see cref="M:System.Diagnostics.Process.Start" /> объекта <see cref="T:System.Diagnostics.Process" />.</summary>
      <returns>Класс <see cref="T:System.Diagnostics.ProcessStartInfo" />, который представляет данные для запуска процесса. Эти аргументы включают имя исполняемого файла или документа, использованного для запуска процесса.</returns>
      <exception cref="T:System.ArgumentNullException">Значение, указывающее <see cref="P:System.Diagnostics.Process.StartInfo" />, равняется <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Diagnostics.Process.Start" /> не использовался для запуска процесса.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartTime">
      <summary>Получает время запуска связанного процесса.</summary>
      <returns>Объект, показывающий время запуска процесса. Если процесс не выполняется, возникает исключение.</returns>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.StartTime" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.InvalidOperationException">Процесс завершен.  

или -  

 Процесс не был запущен.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">В вызове функции Windows произошла ошибка.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SynchronizingObject">
      <summary>Получает или задает объект, используемый для маршалинга вызовов обработчика событий, происходящих в результате события завершения процесса.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, используемый для маршалинга вызовов обработчика событий, возникающих в результате события <see cref="E:System.Diagnostics.Process.Exited" /> в процессе.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.Threads">
      <summary>Получает множество потоков, выполняющихся в связанном процессе.</summary>
      <returns>Массив объектов типа <see cref="T:System.Diagnostics.ProcessThread" />, представляющий потоки операционной системы, которые в настоящий момент выполняются в связанном процессе.</returns>
      <exception cref="T:System.SystemException">Процесс не имеет <see cref="P:System.Diagnostics.Process.Id" />, или нет процесса, связанного с экземпляром <see cref="T:System.Diagnostics.Process" />.  

или - 
Связанный процесс завершился.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.ToString">
      <summary>Преобразует имя процесса в строку, объединенную с родительским типом компонента, если это применимо.</summary>
      <returns>Свойство <see cref="P:System.Diagnostics.Process.ProcessName" />, объединенное с возвращаемым значением метода <see cref="M:System.Object.ToString" /> базового компонента.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.TotalProcessorTime">
      <summary>Получает полное время процессора для этого процесса.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, указывающий количество времени, потраченного процессом на загрузку ЦП. Это значение является суммой значений свойств <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> и <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />.</returns>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.UserProcessorTime">
      <summary>Получает пользовательское время процессора для этого процесса.</summary>
      <returns>Класс <see cref="T:System.TimeSpan" />, показывающий количество времени, которое связанный процесс потратил на выполнение кода внутри приложения (не внутри ядра операционной системы).</returns>
      <exception cref="T:System.NotSupportedException">Вы пытаетесь получить доступ к свойству <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> процесса, выполняющегося на удаленном компьютере. Это свойство доступно только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize">
      <summary>Получает размер виртуальной памяти процесса (в байтах).</summary>
      <returns>Объем виртуальной памяти в байтах, запрошенной связанным процессом.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize64">
      <summary>Возвращает объем виртуальной памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Возвращает количество виртуальной памяти в байтах, выделенной для связанного процесса.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit">
      <summary>Дает компоненту <see cref="T:System.Diagnostics.Process" /> команду ожидать завершения связанного процесса в течение неограниченного времени.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Нет доступа к параметру ожидания.</exception>
      <exception cref="T:System.SystemException">Не задан <see cref="P:System.Diagnostics.Process.Id" /> процесса, и <see cref="P:System.Diagnostics.Process.Handle" />, из которого можно определить свойство <see cref="P:System.Diagnostics.Process.Id" />, не существует.  

или - 
С этим объектом <see cref="T:System.Diagnostics.Process" /> не связаны никакие процессы.  

или - 
Вы пытаетесь вызвать метод <see cref="M:System.Diagnostics.Process.WaitForExit" /> для процесса, выполняющегося на удаленном компьютере. Этот метод доступен только для процессов, запущенных на локальном компьютере.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
      <summary>Дает компоненту <see cref="T:System.Diagnostics.Process" /> команду ожидать завершения связанного процесса в течение указанного времени в миллисекундах.</summary>
      <param name="milliseconds">Количество времени в миллисекундах для ожидания завершения связанного процесса. Максимальным является наибольшее возможное 32-битное целое число, которое представляет для операционной системы бесконечность.</param>
      <returns>Значение <see langword="true" />, если связанный процесс завершился; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Нет доступа к параметру ожидания.</exception>
      <exception cref="T:System.SystemException">Не задан <see cref="P:System.Diagnostics.Process.Id" /> процесса, и <see cref="P:System.Diagnostics.Process.Handle" />, из которого можно определить свойство <see cref="P:System.Diagnostics.Process.Id" />, не существует.  

или - 
С этим объектом <see cref="T:System.Diagnostics.Process" /> не связаны никакие процессы.  

или - 
Вы пытаетесь вызвать метод <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> для процесса, выполняющегося на удаленном компьютере. Этот метод доступен только для процессов, запущенных на локальном компьютере.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="milliseconds" /> является отрицательным числом, отличным от –1, что означает бесконечное время ожидания.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle">
      <summary>Дает компоненту <see cref="T:System.Diagnostics.Process" /> команду ожидать перехода связанного процесса в состояние простоя в течение неограниченного времени. Эта перегрузка применяется только к процессам с пользовательским интерфейсом и, следовательно, с циклом сообщений.</summary>
      <returns>Значение <see langword="true" />, если связанный процесс достиг состояния простоя.</returns>
      <exception cref="T:System.InvalidOperationException">Процесс не имеет графического интерфейса.  
-или- 
Произошла неизвестная ошибка. Процессу не удалось перейти в состояние бездействия.  

или - 
Этот процесс уже завершился.  

или - 
Нет процессов, связанных с этим объектом <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
      <summary>Дает компоненту <see cref="T:System.Diagnostics.Process" /> команду ожидать входа связанного процесса в состояние простоя в течение указанного времени в миллисекундах. Эта перегрузка применяется только к процессам с пользовательским интерфейсом и, следовательно, с циклом сообщений.</summary>
      <param name="milliseconds">Значение от 1 до <see cref="F:System.Int32.MaxValue" />, определяющее количество времени в миллисекундах, в течение которого ожидается переход связанного процесса в состояние простоя. Значение "0" указывает немедленный возврат, а значение "-1" указывает неопределенно долгое ожидание.</param>
      <returns>Значение <see langword="true" />, если связанный процесс достиг состояния простоя; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Процесс не имеет графического интерфейса.  

или - 
Произошла неизвестная ошибка. Процессу не удалось перейти в состояние бездействия.  

-или- 
Этот процесс уже завершился.  

или - 
Нет процессов, связанных с этим объектом <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet">
      <summary>Возвращает использование физической памяти связанного процесса (в байтах).</summary>
      <returns>Полное количество физической памяти в байтах, которое использует связанный процесс.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet64">
      <summary>Получает объем физической памяти в байтах, выделенной для связанного процесса.</summary>
      <returns>Объем физической памяти в байтах, выделенной для связанного процесса.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModule">
      <summary>Представляет DLL- или EXE-файл, который загружается в определенный процесс.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.BaseAddress">
      <summary>Возвращает адрес памяти, в которую был загружен модуль.</summary>
      <returns>Адрес загрузки модуля.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.EntryPointAddress">
      <summary>Возвращает адрес памяти для функции, которая выполняется, когда система загружает и запускает модуль.</summary>
      <returns>Точка входа модуля.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileName">
      <summary>Получает полный путь к модулю.</summary>
      <returns>Полный путь, определяющий расположение модуля.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileVersionInfo">
      <summary>Возвращает сведения о версии модуля.</summary>
      <returns>Свойство <see cref="T:System.Diagnostics.FileVersionInfo" />, содержащее сведения о версии модуля.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleMemorySize">
      <summary>Возвращает объем памяти, необходимый для загрузки модуля.</summary>
      <returns>Размер памяти (в байтах), необходимый для модуля.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleName">
      <summary>Получает имя модуля процесса.</summary>
      <returns>Имя модуля.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModule.ToString">
      <summary>Преобразует имя модуля в строку.</summary>
      <returns>Значение свойства <see cref="P:System.Diagnostics.ProcessModule.ModuleName" />.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModuleCollection">
      <summary>Содержит строго типизированную коллекцию объектов <see cref="T:System.Diagnostics.ProcessModule" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ProcessModuleCollection" /> без использования связанных экземпляров <see cref="T:System.Diagnostics.ProcessModule" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ProcessModuleCollection" />, используя указанный массив экземпляров <see cref="T:System.Diagnostics.ProcessModule" />.</summary>
      <param name="processModules">Массив экземпляров <see cref="T:System.Diagnostics.ProcessModule" />, с помощью которого инициализируется экземпляр <see cref="T:System.Diagnostics.ProcessModuleCollection" />.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)">
      <summary>Определяет, существует ли в коллекции указанный модуль процесса.</summary>
      <param name="module">Экземпляр <see cref="T:System.Diagnostics.ProcessModule" />, указывающий на искомый модуль в коллекции.</param>
      <returns>Значение <see langword="true" />, если модуль присутствует в коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)">
      <summary>Копирует в коллекцию массив экземпляров <see cref="T:System.Diagnostics.ProcessModule" /> по указанному индексу.</summary>
      <param name="array">Массив экземпляров <see cref="T:System.Diagnostics.ProcessModule" /> для добавления в коллекцию.</param>
      <param name="index">Место, куда добавляются новые экземпляры.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
      <summary>Предоставляет расположение указанного модуля в коллекции.</summary>
      <param name="module">Класс <see cref="T:System.Diagnostics.ProcessModule" />, чей индекс извлекается.</param>
      <returns>Отсчитываемый от нуля индекс, по которому определяется место модуля в коллекции <see cref="T:System.Diagnostics.ProcessModuleCollection" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)">
      <summary>Возвращает индекс для выполнения итерации по набору модулей процесса.</summary>
      <param name="index">Отсчитываемое от нуля индексное значение модуля в коллекции.</param>
      <returns>Класс <see cref="T:System.Diagnostics.ProcessModule" />, который индексирует модули в коллекции.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessPriorityClass">
      <summary>Указывает приоритет, который система связывает с процессом. Это значение вместе со значением приоритета каждого потока процесса определяет базовый уровень приоритета каждого потока.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.AboveNormal">
      <summary>Указывает, что приоритет процесса выше <see langword="Normal" /> и ниже <see langword="High" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.BelowNormal">
      <summary>Указывает, что значение приоритета процесса находится между <see langword="Idle" /> и <see langword="Normal" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.High">
      <summary>Указывает, что процесс выполняет срочные задачи, которые должны быть выполнены немедленно, например диалоговое окно <see langword="Task List" />, которое должно быстро отвечать при вызове пользователя независимо от загрузки операционной системы. Потоки процесса выгружают потоки процессов с нормальными или низкими приоритетами. Указывайте для класса приоритета процесса значение <see langword="High" /> только в исключительных случаях, так как приложение с классом высокого приоритета может использовать почти все доступные ресурсы процессора.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Idle">
      <summary>Указывает, что потоки этого процесса выполняются, только когда система не занята. Примером может служить программа-заставка. Потоки данного процесса выгружаются потоками любых процессов с более высоким приоритетом. Этот класс приоритета наследуется дочерними процессами.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Normal">
      <summary>Указывает, что у процесса нет особых запланированных потребностей.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.RealTime">
      <summary>Указывает, что процесс обладает максимально высоким приоритетом. Потоки процесса с приоритетом <see langword="RealTime" /> прерывают потоки всех других процессов, в том числе процессов операционной системы, выполняющих важные задачи. То есть процесс с приоритетом <see langword="RealTime" />, который выполняется достаточно продолжительное время, может стать причиной того, что кэши дисков не будут очищаться или перестанет реагировать мышь.</summary>
    </member>
    <member name="T:System.Diagnostics.ProcessStartInfo">
      <summary>Задает набор значений, используемых при запуске процесса.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ProcessStartInfo" />, не указывая имени файла, вместе с которым должен запускаться процесс.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ProcessStartInfo" /> и задает имя файла, например приложение или документ, вместе с которым должен запускаться процесс.</summary>
      <param name="fileName">Приложение или документ, вместе с которыми запускается процесс.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ProcessStartInfo" />, задает имя файла приложения, вместе с которым должен запускаться процесс, и указывает передаваемые в приложение аргументы командной строки.</summary>
      <param name="fileName">Приложение, с которым запускается процесс.</param>
      <param name="arguments">Аргументы командной строки, передаваемые в приложение при запуске процесса.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ArgumentList">
      <summary>Возвращает коллекцию аргументов командной строки, используемых при запуске приложения.</summary>
      <returns>Коллекция аргументов командной строки.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Arguments">
      <summary>Возвращает или задает набор аргументов командной строки, используемых при запуске приложения.</summary>
      <returns>Одна строка, содержащая аргументы для передачи в целевое приложение, указанное в свойстве <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> . Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow">
      <summary>Возвращает или задает значение, позволяющее определить, нужно ли запускать процесс в новом окне.</summary>
      <returns>Значение <see langword="true" /> для процесс должен быть запущен без создания для него нового окна; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Domain">
      <summary>Возвращает или задает значение, позволяющее домен, используемый при запуске процесса. Если это значение равно <see langword="null" />, свойство <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> должно быть указано в формате имени субъекта-пользователя.</summary>
      <returns>Домен Active Directory, используемый при запуске процесса. Если это значение равно <see langword="null" />, свойство <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> должно быть указано в формате имени субъекта-пользователя.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Environment">
      <summary>Возвращает переменные среды, относящиеся к этому процессу и его дочерним процессам.</summary>
      <returns>Универсальный словарь, содержащий переменные среды, относящиеся к этому процессу и его дочерним процессам. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
      <summary>Возвращает пути поиска файлов, каталоги временных файлов, параметры данного приложения и другие аналогичные сведения.</summary>
      <returns>Словарь строк, предоставляющий переменные среды, применимые к этому процессу и дочерним процессам. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialog">
      <summary>Возвращает или задает значение, позволяющее определить, будет ли отображаться диалоговое окно сообщения об ошибке в случае невозможности запуска процесса.</summary>
      <returns>Значение <see langword="true" />, если диалоговое окно сообщения об ошибке должно отображаться на экране при невозможности запуска процесса; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle">
      <summary>Возвращает или задает дескриптор окна, используемый при отображении диалогового окна сообщения об ошибке в случае невозможности запустить процесс.</summary>
      <returns>Указатель на дескриптор диалогового окна сообщения об ошибке, возникшего в результате сбоя при запуске процесса.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.FileName">
      <summary>Возвращает или задает приложение или документ для запуска.</summary>
      <returns>Имя запускаемого приложения или имя документа, тип файла которого связан с приложением, для которых доступно действие при открытии по умолчанию. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile">
      <summary>Возвращает или задает значение, позволяющее определить, следует ли загружать профиль пользователя Windows из реестра.</summary>
      <returns>Значение <see langword="true" />, если должен быть загружен профиль пользователя Windows; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Password">
      <summary>Возвращает или задает параметр безопасности, в котором содержится пароль пользователя, используемый при запуске процесса.</summary>
      <returns>Пароль пользователя, используемый при запуске процесса.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText">
      <summary>Возвращает или задает пароль пользователя в виде открытого текста, который будет использоваться при запуске процесса.</summary>
      <returns>Пароль пользователя в виде открытого текста.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError">
      <summary>Возвращает или задает значение, позволяющее определить, записываются ли выходные данные об ошибках в поток <see cref="P:System.Diagnostics.Process.StandardError" />.</summary>
      <returns>Значение <see langword="true" />, если выходные сообщения об ошибках должны записываться в <see cref="P:System.Diagnostics.Process.StandardError" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput">
      <summary>Возвращает или задает значение, позволяющее определить, будут ли считываться входные данные приложения из потока <see cref="P:System.Diagnostics.Process.StandardInput" />.</summary>
      <returns>Значение <see langword="true" />, если входные данные должны считываться из <see cref="P:System.Diagnostics.Process.StandardInput" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput">
      <summary>Позволяет получить или задать значение для определения того, записываются ли текстовые выходные данные приложения в поток <see cref="P:System.Diagnostics.Process.StandardOutput" />.</summary>
      <returns>Значение <see langword="true" />, если выходные данные должны записываться в <see cref="P:System.Diagnostics.Process.StandardOutput" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
      <summary>Возвращает или задает предпочтительную кодировку для вывода ошибок.</summary>
      <returns>Объект, представляющий предпочтительную кодировку для вывода ошибок. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
      <summary>Возвращает или задает предпочтительную кодировку для стандартного вывода.</summary>
      <returns>Объект, представляющий предпочтительную кодировку для стандартного вывода. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UserName">
      <summary>Получает или задает имя пользователя, которое следует использовать при запуске процесса. Если используется формат имени субъекта-пользователя, <paramref name="user" /> @ <paramref name="DNS_domain_name" />, свойство <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> должно иметь значение <see langword="null" />.</summary>
      <returns>Имя пользователя, используемое при запуске процесса. Если используется формат имени субъекта-пользователя, <paramref name="user" /> @ <paramref name="DNS_domain_name" />, свойство <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> должно иметь значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UseShellExecute">
      <summary>Возвращает или задает значение, позволяющее определить, нужно ли использовать оболочку операционной системы для запуска процесса.</summary>
      <returns>Значение <see langword="true" />, если оболочка должна использоваться при запуске процесса; значение <see langword="false" />, если процесс должен создаваться непосредственно из исполняемого файла. Значение по умолчанию — <see langword="true" /> в .NET Framework приложениях и <see langword="false" /> в приложениях .NET Core.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Выполняется попытка задать значение для <see langword="true" /> в приложениях универсальной платформы Windows (UWP).</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verb">
      <summary>Возвращает или задает команду, которую необходимо использовать при открытии приложения или документа, указанного в свойстве <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</summary>
      <returns>Действие, которое надо выполнить с файлом, который открывается данным процессом. Значение по умолчанию — пустая строка (""), что означает "никаких действий".</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verbs">
      <summary>Возвращает набор команд, которые связаны с типом файла, заданным в свойстве <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</summary>
      <returns>Действия, которые система может применить к файлу, заданному в свойстве <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WindowStyle">
      <summary>Возвращает или задает состояние окна, используемое при запуске процесса.</summary>
      <returns>Одно из значений перечисления, позволяющее определить состояние окна, в котором был запущен процесс: во весь экран, свернутое, обычное (ни полноэкранное, ни свернутое) или невидимое. Значение по умолчанию — <see langword="Normal" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Стиль окна не является одним из членов перечисления <see cref="T:System.Diagnostics.ProcessWindowStyle" />.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
      <summary>Если свойство <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> имеет значение <see langword="false" />, получает или задает рабочую папку для процесса для запуска. Если параметру <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> присвоено значение <see langword="true" />, получает или задает каталог, содержащий процесс, который требуется запустить.</summary>
      <returns>Если <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> — <see langword="true" />, Полное имя каталога, в котором содержится запускаемый процесс. Если свойство <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> имеет значение <see langword="false" />, рабочая папка для процесса для запуска. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessThread">
      <summary>Представляет поток процесса операционной системы.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.BasePriority">
      <summary>Возвращает базовый приоритет потока.</summary>
      <returns>Базовый приоритет потока, вычисляемый операционной системой путем совмещения класса приоритета процесса с уровнем приоритета соответствующего потока.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.CurrentPriority">
      <summary>Возвращает текущий приоритет потока.</summary>
      <returns>Текущий приоритет потока, который может отклоняться от базового, в зависимости от способа планирования потока в операционной системе. Для активного потока приоритет может быть временно увеличен.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.Id">
      <summary>Возвращает уникальный идентификатор потока.</summary>
      <returns>Уникальный идентификатор связан с конкретным потоком.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.IdealProcessor">
      <summary>Устанавливает предпочтительный процессор для выполнения этого потока.</summary>
      <returns>Предпочтительный процессор для потока, используемый при планировании потока системой для определения процессора, на котором будет выполняться поток.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Системе не удалось задать поток для запуска на указанном процессоре.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled">
      <summary>Возвращает или задает значение, указывающее, должна ли операционная система временно увеличивать приоритет соответствующего потока всякий раз, когда основное окно процесса, которому принадлежит данный поток, получает фокус.</summary>
      <returns>Значение <see langword="true" /> для увеличения приоритета потока при взаимодействии пользователя с интерфейсом процесса или значение <see langword="false" /> в противном случае. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается извлечь информацию о повышении приоритета.  

или -  

 Не удается задать информацию о повышении приоритета.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityLevel">
      <summary>Возвращает или задает уровень приоритета потока.</summary>
      <returns>Одно из значений <see cref="T:System.Diagnostics.ThreadPriorityLevel" />, задающих диапазон, который ограничивает приоритет потока.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается извлечь информацию об уровне приоритета потока.  
 -или-  
 Не удается задать информацию об уровне приоритета потока.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime">
      <summary>Возвращает количество времени, затрачиваемое потоком на выполнение кода внутри ядра операционной системы.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, указывающий количество времени, которое поток потратил на выполнение кода внутри ядра операционной системы.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удалось извлечь затраченное потоком время.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ProcessorAffinity">
      <summary>Задает процессоры, на которых может выполняться соответствующий поток.</summary>
      <returns>Объект <see cref="T:System.IntPtr" />, указывающий на набор битов, каждый из которых представляет процессор, где может выполняться поток.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается задать сходство процессоров.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="M:System.Diagnostics.ProcessThread.ResetIdealProcessor">
      <summary>Отменяет идеальный процессор для данного потока, указывая тем самым на отсутствие единственного идеального процессора. Другими словами, для потока идеален любой процессор.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удается сбросить идеальный процессор.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartAddress">
      <summary>Возвращает адрес функции в памяти, которая была вызвана операционной системой и запустила этот поток.</summary>
      <returns>Начальный адрес потока, указывающий на определенную приложением функцию, которую выполняет данный поток.</returns>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartTime">
      <summary>Возвращает время запуска потока операционной системой.</summary>
      <returns>Класс <see cref="T:System.DateTime" />, представляющий системное время запуска потока операционной системой.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удалось извлечь затраченное потоком время.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ThreadState">
      <summary>Возвращает текущее состояние данного потока.</summary>
      <returns>Объект <see cref="T:System.Diagnostics.ThreadState" />, указывающий на состояние выполнения потока, например, выполняется, ожидает или прекращен.</returns>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.TotalProcessorTime">
      <summary>Возвращает общее количество времени, которое потратил поток на обработку процессором.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, указывающий количество времени, на протяжении которого поток контролировал процессор.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удалось извлечь затраченное потоком время.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.UserProcessorTime">
      <summary>Возвращает количество времени, которое поток потратил на выполнение кода внутри приложения.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, указывающий количество времени, которое поток потратил на выполнение кода внутри приложения, в отличие от выполнения в ядре операционной системы.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Не удалось извлечь затраченное потоком время.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.WaitReason">
      <summary>Возвращает причину, по которой поток находится в состоянии ожидания.</summary>
      <returns>Объект <see cref="T:System.Diagnostics.ThreadWaitReason" />, представляющий причину нахождения потока в состоянии ожидания.</returns>
      <exception cref="T:System.InvalidOperationException">Поток не находится в состоянии ожидания.</exception>
      <exception cref="T:System.NotSupportedException">Данный процесс выполняется на удаленном компьютере.</exception>
    </member>
    <member name="T:System.Diagnostics.ProcessThreadCollection">
      <summary>Содержит строго типизированную коллекцию объектов <see cref="T:System.Diagnostics.ProcessThread" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ProcessThreadCollection" /> без использования связанных экземпляров <see cref="T:System.Diagnostics.ProcessThread" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ProcessThreadCollection" />, используя указанный массив экземпляров <see cref="T:System.Diagnostics.ProcessThread" />.</summary>
      <param name="processThreads">Массив экземпляров <see cref="T:System.Diagnostics.ProcessThread" />, с помощью которого инициализируется экземпляр <see cref="T:System.Diagnostics.ProcessThreadCollection" />.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)">
      <summary>Добавляет поток процесса в коллекцию.</summary>
      <param name="thread">Поток, который требуется добавить в коллекцию.</param>
      <returns>Отсчитываемый с нуля индекс потока в коллекции.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)">
      <summary>Определяет, существует ли указанный поток процесса в коллекции.</summary>
      <param name="thread">Экземпляр <see cref="T:System.Diagnostics.ProcessThread" />, указывающий на искомый поток в коллекции.</param>
      <returns>Значение<see langword="true" /> , если поток присутствует в коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)">
      <summary>Копирует в коллекцию массив экземпляров <see cref="T:System.Diagnostics.ProcessThread" /> по указанному индексу.</summary>
      <param name="array">Массив экземпляров <see cref="T:System.Diagnostics.ProcessThread" /> для добавления в коллекцию.</param>
      <param name="index">Место, куда добавляются новые экземпляры.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
      <summary>Предоставляет место указанного потока в коллекции.</summary>
      <param name="thread">Класс <see cref="T:System.Diagnostics.ProcessThread" />, чей индекс извлекается.</param>
      <returns>Отсчитываемый с нуля индекс, который определяет место потока в коллекции <see cref="T:System.Diagnostics.ProcessThreadCollection" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)">
      <summary>Вставляет поток процесса в указанное место в коллекции.</summary>
      <param name="index">Отсчитываемый с нуля индекс, указывающий на место, в которое должен быть вставлен поток.</param>
      <param name="thread">Поток, вставляемый в коллекцию.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
      <summary>Получает индекс для итерационного перебора набора потоков процесса.</summary>
      <param name="index">Отсчитываемое с нуля значение потока в коллекции.</param>
      <returns>Класс <see cref="T:System.Diagnostics.ProcessThread" />, который индексирует потоки в коллекции.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
      <summary>Удаляет поток процесса из коллекции.</summary>
      <param name="thread">Поток, который нужно удалить из коллекции.</param>
    </member>
    <member name="T:System.Diagnostics.ProcessWindowStyle">
      <summary>Указано, каким образом должно выглядеть новое окно при запуске процесса системой.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Hidden">
      <summary>Скрытый стиль окна. Окно может быть видимым или скрытым. Система отображает скрытое окно, не прорисовывая его. Если окно скрыто, оно эффективно отключено. Скрытое окно может обрабатывать сообщения от системы или от других окон, но не может обрабатывать ввод от пользователя или отображать вывод. Часто, приложение может держать новое окно скрытым, пока приложение определит внешний вид окна, а затем сделать стиль окна <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />. Чтобы использовать значение <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" />, свойство <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> должно иметь значение <see langword="true" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Maximized">
      <summary>Полноэкранный стиль окна. По умолчанию система расширяет полноэкранное окно, и оно занимает весь экран или, если это дочернее окно, клиентскую область родительского окна. Если окно имеет строку заголовка, система автоматически переместит окно наверх экрана или вверху клиентской области родительского окна. Также система отключает границу установки размера окна и способность строки заголовка позиционировать окно, так что пользователь не может двигать окно перетаскиванием за строку заголовка.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Minimized">
      <summary>Минимизированный стиль окна. По умолчанию система уменьшает минимизированное окно до размеров кнопки панели задач и перемещает его на панель задач.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Normal">
      <summary>Нормальный, видимый стиль окна. Система отображает окно на экране со стилем <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" /> в положении по умолчанию. Если окно видимое, пользователь может производить ввод в окно и видеть вывод окна. Часто приложение может инициализировать новое окно стилем <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" />, пока приложение определит внешний вид окна, а затем сделать стиль окна <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadPriorityLevel">
      <summary>Задает уровень приоритета потока.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal">
      <summary>Задает приоритет на один уровень выше нормального для связанного <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal">
      <summary>Задает приоритет на один уровень ниже нормального для связанного <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Highest">
      <summary>Задает высший приоритет. Он на два уровня выше нормального приоритета для связанного <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Idle">
      <summary>Задает приоритет простоя. Это самое низкое из возможных значений приоритета всех потоков, независимо от значения связанного <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Lowest">
      <summary>Задает низший приоритет. Он на два уровня ниже нормального приоритета для связанного <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Normal">
      <summary>Задает нормальный приоритет для связанного <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical">
      <summary>Задает критичный по времени приоритет. Это самый высокий приоритет всех потоков, независимо от значения связанного <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadState">
      <summary>Задает текущее состояние выполнения потока.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Initialized">
      <summary>Состояние, указывающее, что поток инициализирован, но еще не запущен.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Ready">
      <summary>Состояние, указывающее, что поток ожидает освобождения процессора. Поток готов к выполнению на следующем доступном процессоре.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Running">
      <summary>Состояние, указывающее, что поток в данный момент использует процессор.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Standby">
      <summary>Состояние, указывающее, что поток приступает к использованию процессора. В каждый момент времени в этом состоянии может быть только один поток.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Terminated">
      <summary>Состояние, указывающее, что выполнение потока завершено и он выполнил выход.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Transition">
      <summary>Состояние, указывающее, что поток ожидает ресурс (не процессор), необходимый для его выполнения. Например, он может ожидать считывания с диска стека его выполнения.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Unknown">
      <summary>Состояние потока неизвестно.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Wait">
      <summary>Состояние, указывающее, что поток не готов использовать процессор, поскольку ожидает завершения внешней операции или освобождения ресурса. Когда поток становится готовым, его выполнение планируется повторно.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadWaitReason">
      <summary>Указывает причину, по которой поток находится в состоянии ожидания.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairHigh">
      <summary>Поток ожидает старшую составляющую пары события.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairLow">
      <summary>Поток ожидает младшую составляющую пары события.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay">
      <summary>Выполнение потока отложено.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Executive">
      <summary>Поток ожидает планировщик.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.FreePage">
      <summary>Поток ожидает свободную страницу виртуальной памяти.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReceive">
      <summary>Поток ожидает поступления вызова локальной процедуры.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReply">
      <summary>Поток ожидает поступления ответа на вызов локальной процедуры.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageIn">
      <summary>Поток ожидает поступления страницы виртуальной памяти в память.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageOut">
      <summary>Поток ожидает записи страницы виртуальной памяти на диск.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Suspended">
      <summary>Выполнение потока приостановлено.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.SystemAllocation">
      <summary>Поток ожидает системных ресурсов.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Unknown">
      <summary>Причина ожидания потока неизвестна.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.UserRequest">
      <summary>Поток ожидает запроса пользователя.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.VirtualMemory">
      <summary>Поток ожидает выделения системой виртуальной памяти.</summary>
    </member>
  </members>
</doc>