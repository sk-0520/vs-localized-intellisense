<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.StackTrace</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.StackFrame">
      <summary>Предоставляет сведения об объекте <see cref="T:System.Diagnostics.StackFrame" />, который представляет вызов функции в стеке вызовов для текущего потока.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" /> и дополнительно может собирать сведения об источнике.</summary>
      <param name="fNeedFileInfo">Значение <see langword="true" />, чтобы зафиксировать имя файла, номер строки и номер столбца кадра стека; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />, соответствующий кадру, который расположен над текущим кадром стека.</summary>
      <param name="skipFrames">Количество пропускаемых кадров вверх по стеку.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />, соответствующий кадру, который расположен над текущим кадром стека и дополнительно может собирать сведения об источнике.</summary>
      <param name="skipFrames">Количество пропускаемых кадров вверх по стеку.</param>
      <param name="fNeedFileInfo">Значение <see langword="true" />, чтобы зафиксировать имя файла, номер строки и номер столбца кадра стека; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />, содержащий только заданное имя файла и номер строки.</summary>
      <param name="fileName">Имя файла.</param>
      <param name="lineNumber">Номер строки в указанном файле.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackFrame" />, содержащий только заданное имя файла, номер строки и номер столбца.</summary>
      <param name="fileName">Имя файла.</param>
      <param name="lineNumber">Номер строки в указанном файле.</param>
      <param name="colNumber">Номер столбца в указанном файле.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
      <summary>Получает номер столбца в файле, содержащем выполняемый код. Эти сведения обычно извлекаются из символов отладки для исполняемого файла.</summary>
      <returns>Номер столбца в файле или 0 (нуль), если номер столбца в файле определить не удалось.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileLineNumber">
      <summary>Получает номер строки в файле, содержащем выполняемый код. Эти сведения обычно извлекаются из символов отладки для исполняемого файла.</summary>
      <returns>Номер строки в файле или 0 (нуль), если номер строки в файле определить не удалось.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileName">
      <summary>Получает имя файла, содержащего выполняемый код. Эти сведения обычно извлекаются из символов отладки для исполняемого файла.</summary>
      <returns>Имя файла или <see langword="null" />, если имя файла определить не удалось.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetILOffset">
      <summary>Получает смещение от начала кода на языке MSIL для выполняемого метода. Это смещение может быть приблизительным, в зависимости от того, создает ли JIT-компилятор код отладки. Управление созданием этих сведений отладки осуществляется классом <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns>Смещение от начала кода на языке MSIL для выполняемого метода.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetMethod">
      <summary>Получает метод, в котором выполняется кадр.</summary>
      <returns>Метод, в котором выполняется кадр.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetNativeOffset">
      <summary>Получает смещение от начала исходного, скомпилированного JIT-компилятором кода для исполняемого метода. Управление созданием этих сведений отладки осуществляется классом <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns>Смещение от начала кода, скомпилированного JIT-компилятором для выполняемого метода.</returns>
    </member>
    <member name="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
      <summary>Определяет значение, возвращаемое методом <see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" />, или <see cref="M:System.Diagnostics.StackFrame.GetILOffset" />, если смещение в исходном коде или коде на языке MSIL неизвестно. Это поле является константой.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.ToString">
      <summary>Создает доступное для чтения представление трассировки стека.</summary>
      <returns>Доступное для чтения представление трассировки стека.</returns>
    </member>
    <member name="T:System.Diagnostics.StackFrameExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Diagnostics.StackFrame" />, который представляет вызов функции в стеке вызовов для текущего потока.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
      <summary>Возвращает указатель на базовый адрес собственного образа, который выполняется в этом кадре стека.</summary>
      <param name="stackFrame">Кадр стека.</param>
      <returns>Указатель на базовый адрес собственного образа или <see cref="F:System.IntPtr.Zero" />, если целевой платформой является .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
      <summary>Получает указатель интерфейса на начало машинного код для выполняющегося метода.</summary>
      <param name="stackFrame">Кадр стека.</param>
      <returns>Указатель интерфейса на начало машинного кода для выполняющегося метода или <see cref="F:System.IntPtr.Zero" />, если целевой платформой является .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
      <summary>Указывает, доступно ли смещение от начала кода на языке IL для выполняемого метода.</summary>
      <param name="stackFrame">Кадр стека.</param>
      <returns>
        <see langword="true" />, если смещение доступно; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
      <summary>Указывает, доступны ли сведения о методе, в котором выполняется заданный кадр.</summary>
      <param name="stackFrame">Кадр стека.</param>
      <returns>Значение <see langword="true" />, если доступны сведения о методе, в котором выполняется текущий; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
      <summary>Указывает, доступен ли собственный образ для указанного кадра стека.</summary>
      <param name="stackFrame">Кадр стека.</param>
      <returns>
        <see langword="true" />, если собственный образ доступен для этого кадра стека; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
      <summary>Указывает, доступен ли файл, содержащий код, который выполняется в указанном кадре стека.</summary>
      <param name="stackFrame">Кадр стека.</param>
      <returns>
        <see langword="true" />, если доступен код, который выполняется в указанном кадре стека; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.StackTrace">
      <summary>Представляет трассировку стека — упорядоченный набор из одного или нескольких кадров стека.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> из фрагмента вызывающего оператора.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> из фрагмента вызывающего оператора и дополнительно может собирать сведения об источнике.</summary>
      <param name="fNeedFileInfo">Значение <see langword="true" /> для извлечения имени файла, номера строки и номера столбца, в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" />, содержащий один фрагмент.</summary>
      <param name="frame">Фрагмент, который должен содержаться в объекте <see cref="T:System.Diagnostics.StackTrace" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> с использованием предоставленного объекта исключения.</summary>
      <param name="e">Объект исключения, на основе которого создается трассировка стека.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="e" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> с использованием предоставленного объекта исключения и дополнительно может собирать сведения об источнике.</summary>
      <param name="exception">Объект исключения, на основе которого создается трассировка стека.</param>
      <param name="needFileInfo">Значение <see langword="true" /> для извлечения имени файла, номера строки и номера столбца, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="e" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> с использованием предоставленного объекта, пропуская указанное число фрагментов.</summary>
      <param name="e">Объект исключения, на основе которого создается трассировка стека.</param>
      <param name="skipFrames">Количество фрагментов вверх по стеку, с которого начинается трассировка.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="e" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="skipFrames" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> с использованием предоставленного объекта исключения, пропуская заданное число фрагментов и дополнительно собирая сведения об источнике.</summary>
      <param name="e">Объект исключения, на основе которого создается трассировка стека.</param>
      <param name="skipFrames">Количество фрагментов вверх по стеку, с которого начинается трассировка.</param>
      <param name="fNeedFileInfo">Значение <see langword="true" /> для извлечения имени файла, номера строки и номера столбца, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="e" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="skipFrames" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> из фрагмента вызывающего оператора, пропуская заданное число фрагментов.</summary>
      <param name="skipFrames">Количество фрагментов вверх по стеку, с которого начинается трассировка.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="skipFrames" /> имеет отрицательное значение.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.StackTrace" /> из фрагмента вызывающего оператора, пропуская заданное число фрагментов и дополнительно собирая сведения об источнике.</summary>
      <param name="skipFrames">Количество фрагментов вверх по стеку, с которого начинается трассировка.</param>
      <param name="fNeedFileInfo">Значение <see langword="true" /> для извлечения имени файла, номера строки и номера столбца, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="skipFrames" /> имеет отрицательное значение.</exception>
    </member>
    <member name="P:System.Diagnostics.StackTrace.FrameCount">
      <summary>Возвращает число фрагментов в трассировке стека.</summary>
      <returns>Число кадров в трассировке стека.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
      <summary>Возвращает указанный кадр стека.</summary>
      <param name="index">Индекс запрашиваемого кадра стека.</param>
      <returns>Указанный кадр стека.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrames">
      <summary>Возвращает копию всех кадров стека в текущей трассировке стека.</summary>
      <returns>Массив типа <see cref="T:System.Diagnostics.StackFrame" />, представляющий вызовы функции в трассировке стека.</returns>
    </member>
    <member name="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
      <summary>Определяет значение по умолчанию для числа методов, которые нужно пропустить в трассировке стека. Это поле является константой.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.ToString">
      <summary>Создает доступное для чтения представление трассировки стека.</summary>
      <returns>Доступное для чтения представление трассировки стека.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder">
      <summary>Представляет привязку символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader(System.Int32,System.String,System.String)">
      <summary>Получает интерфейс средства чтения символов для текущего файла.</summary>
      <param name="importer">Интерфейс импорта метаданных.</param>
      <param name="filename">Имя файла, для которого требуется интерфейс средства чтения.</param>
      <param name="searchPath">Путь поиска, используемый для поиска файла символов.</param>
      <returns>Интерфейс <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> для чтения символов отладки.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder1">
      <summary>Представляет привязку символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)">
      <summary>Получает интерфейс средства чтения символов для текущего файла.</summary>
      <param name="importer">Объект <see cref="T:System.IntPtr" />, ссылающийся на интерфейс импорта метаданных.</param>
      <param name="filename">Имя файла, для которого требуется интерфейс средства чтения.</param>
      <param name="searchPath">Путь поиска, используемый для поиска файла символов.</param>
      <returns>Интерфейс <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> для чтения символов отладки.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocument">
      <summary>Представляет документ, на который ссылается хранилище символов.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.CheckSumAlgorithmId">
      <summary>Возвращает идентификатор алгоритма подсчета контрольной суммы.</summary>
      <returns>Идентификатор GUID алгоритма подсчета контрольной суммы. Все значения равны нулю, если контрольная сумма отсутствует.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.DocumentType">
      <summary>Получает тип текущего документа.</summary>
      <returns>Тип текущего документа.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.FindClosestLine(System.Int32)">
      <summary>Возвращает ближайшую строку, являющуюся точкой следования, для заданной строки документа, которая может являться или не являться точкой следования.</summary>
      <param name="line">Заданная строка в документе.</param>
      <returns>Ближайшая строка, являющаяся точкой следования.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetCheckSum">
      <summary>Возвращает контрольную сумму.</summary>
      <returns>Контрольная сумма.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Получает внедренный источник документа для указанного диапазона.</summary>
      <param name="startLine">Начальная строка текущего документа.</param>
      <param name="startColumn">Начальный столбец текущего документа.</param>
      <param name="endLine">Конечная строка текущего документа.</param>
      <param name="endColumn">Конечный столбец текущего документа.</param>
      <returns>Источник документа для указанного диапазона.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.HasEmbeddedSource">
      <summary>Проверяет, хранится ли текущий документ в хранилище символов.</summary>
      <returns>Возвращает значение <see langword="true" />, если текущий документ хранится в хранилище символов; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.Language">
      <summary>Получает язык текущего документа.</summary>
      <returns>Язык текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.LanguageVendor">
      <summary>Получает поставщика языка текущего документа.</summary>
      <returns>Поставщик языка текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.SourceLength">
      <summary>Возвращает длину внедренного источника в байтах.</summary>
      <returns>Длина источника текущего документа.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.URL">
      <summary>Получает URL-адрес текущего документа.</summary>
      <returns>URL-адрес текущего документа.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
      <summary>Представляет документ, на который ссылается хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])">
      <summary>Задает сведения о контрольной сумме.</summary>
      <param name="algorithmId">Идентификатор GUID, представляющий идентификатор алгоритма.</param>
      <param name="checkSum">Контрольная сумма.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])">
      <summary>Сохраняет необработанный источник документа в хранилище символов.</summary>
      <param name="source">Источник документа, представленный байтами без знака.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolMethod">
      <summary>Представляет метод в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace">
      <summary>Получает пространство имен, в котором определен текущий метод.</summary>
      <returns>Пространство имен, в котором определен текущий метод.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Получает смещение на языке MSIL в методе, соответствующее заданной позиции.</summary>
      <param name="document">Документ, для которого запрашивается смещение.</param>
      <param name="line">Строка документа, соответствующая смещению.</param>
      <param name="column">Столбец документа, соответствующий смещению.</param>
      <returns>Смещение в заданном документе.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters">
      <summary>Получает параметры текущего метода.</summary>
      <returns>Массив параметров текущего метода.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Получает массив пар начального и конечного смещения, соответствующих диапазонам на языке MSIL, занимаемым данной позицией в этом методе.</summary>
      <param name="document">Документ, для которого запрашивается смещение.</param>
      <param name="line">Строка документа, соответствующая этим диапазонам.</param>
      <param name="column">Столбец документа, соответствующий этим диапазонам.</param>
      <returns>Массив пар начального и конечного смещения.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)">
      <summary>Для заданного смещения в методе возвращает наиболее узкую внешнюю лексическую область.</summary>
      <param name="offset">Смещение в байтах лексической области в методе.</param>
      <returns>Наиболее узкая внешняя лексическая область для заданного смещения в байтах в методе.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Получает точки следования для текущего метода.</summary>
      <param name="offsets">Массив смещений в байтах от начала метода для точек следования.</param>
      <param name="documents">Массив документов, в которых находятся точки следования.</param>
      <param name="lines">Массив строк в документах, в которых находятся точки следования.</param>
      <param name="columns">Массив столбцов в документах, в которых находятся точки следования.</param>
      <param name="endLines">Массив строк в документах, в которых заканчиваются точки следования.</param>
      <param name="endColumns">Массив столбцов в документах, в которых заканчиваются точки следования.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
      <summary>Получает начальную и конечную позицию для исходных документов текущего метода.</summary>
      <param name="docs">Начальный и конечный исходные документы.</param>
      <param name="lines">Начальная и конечная строки соответствующих исходных документов.</param>
      <param name="columns">Начальный и конечный столбцы соответствующих исходных документов.</param>
      <returns>Значение <see langword="true" />, если эти позиции определены; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope">
      <summary>Получает корневую лексическую область для текущего метода. Эта область включает весь метод.</summary>
      <returns>Корневая лексическая область, которая заключает весь метод.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount">
      <summary>Получает число точек следования в методе.</summary>
      <returns>Число точек следования в методе.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.Token">
      <summary>Получает объект <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />, содержащий метаданные для текущего метода.</summary>
      <returns>маркер метаданных для текущего метода.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolNamespace">
      <summary>Представляет пространство имен в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetNamespaces">
      <summary>Получает дочерние члены текущего пространства имен.</summary>
      <returns>Дочерние члены текущего пространства имен.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetVariables">
      <summary>Получает все переменные, определенные в глобальной области в текущем пространстве имен.</summary>
      <returns>Переменные, определенные в глобальной области в текущем пространстве имен.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolNamespace.Name">
      <summary>Получает текущее пространство имен.</summary>
      <returns>Текущее пространство имен.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolReader">
      <summary>Представляет средство чтения символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>Получает документ на основании заданного языка, поставщика и типа.</summary>
      <param name="url">URL-адрес, предназначенный для идентификации документа.</param>
      <param name="language">Язык документа. Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor">Идентификатор поставщика языка документа. Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType">Тип документа. Этому параметру можно присвоить значение <see cref="F:System.Guid.Empty" />.</param>
      <returns>Заданный документ.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments">
      <summary>Получает массив всех документов, определенных в хранилище символов.</summary>
      <returns>Массив всех документов, определенных в хранилище символов.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables">
      <summary>Получает все глобальные переменные в модуле.</summary>
      <returns>Массив всех глобальных переменных в модуле.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Получает объект метода средства чтения символов для заданного идентификатора метода.</summary>
      <param name="method">маркер метаданных метода.</param>
      <returns>Объект метода средства чтения символов для заданного идентификатора метода.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
      <summary>Получает объект метода средства чтения символов для заданных идентификатора метода и его версии в режиме "Изменить и продолжить".</summary>
      <param name="method">маркер метаданных метода.</param>
      <param name="version">Версия в режиме "Изменить и продолжить" этого метода.</param>
      <returns>Объект метода средства чтения символов для заданного идентификатора метода.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Получает объект метода средства чтения символов, содержащий указанную позицию в документе.</summary>
      <param name="document">Документ, в котором находится метод.</param>
      <param name="line">Позиция строки в документе. Нумерация строк начинается с 1.</param>
      <param name="column">Позиция столбца в документе. Нумерация столбцов начинается с 1.</param>
      <returns>Объект метода средства чтения для заданной позиции в документе.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces">
      <summary>Получает пространства имен, определенные в глобальной области в текущем хранилище символов.</summary>
      <returns>Пространства имен, определенные в глобальной области в текущем хранилище символов.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
      <summary>Получает значение атрибута для заданного имени атрибута.</summary>
      <param name="parent">маркер метаданных объекта, для которого запрашивается этот атрибут.</param>
      <param name="name">Имя атрибута.</param>
      <returns>Значение атрибута.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Получает переменные, не являющиеся локальными, для заданного родительского объекта.</summary>
      <param name="parent">маркер метаданных типа, для которого запрашиваются эти переменные.</param>
      <returns>Массив переменных для родительского объекта.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint">
      <summary>Получает маркер метаданных для метода, заданного в качестве точки входа пользователя для модуля (если существует).</summary>
      <returns>маркер метаданных для метода, который является точкой входа пользователя для модуля.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolScope">
      <summary>Представляет лексическую область в объекте <see cref="T:System.Diagnostics.SymbolStore.ISymbolMethod" />, обеспечивая доступ к начальному и конечному смещениям этой области, а также к ее дочерним и родительской областям.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.EndOffset">
      <summary>Получает конечное смещение текущей лексической области.</summary>
      <returns>Конечное смещение текущей лексической области.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetChildren">
      <summary>Получает дочерние лексические области текущей лексической области.</summary>
      <returns>Дочерние лексические области текущей лексической области.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetLocals">
      <summary>Получает локальные переменные в текущей лексической области.</summary>
      <returns>Локальные переменные в текущей лексической области.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces">
      <summary>Получает пространства имен, используемые в текущей области.</summary>
      <returns>Пространства имен, используемые в текущей области.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Method">
      <summary>Получает метод, содержащий текущую лексическую область.</summary>
      <returns>Метод, содержащий текущую лексическую область.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Parent">
      <summary>Получает родительскую лексическую область текущей области.</summary>
      <returns>Родительская лексическая область текущей области.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.StartOffset">
      <summary>Получает начальное смещение текущей лексической области.</summary>
      <returns>Начальное смещение текущей лексической области.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolVariable">
      <summary>Представляет переменную в хранилище символов.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1">
      <summary>Получает первый адрес переменной.</summary>
      <returns>Первый адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2">
      <summary>Получает второй адрес переменной.</summary>
      <returns>Второй адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3">
      <summary>Получает третий адрес переменной.</summary>
      <returns>Третий адрес переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind">
      <summary>Возвращает значение <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />, описывающее тип адреса.</summary>
      <returns>Тип адреса. Одно из значений перечисления <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Attributes">
      <summary>Получает атрибуты переменной.</summary>
      <returns>Атрибуты переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset">
      <summary>Получает конечное смещение переменной в области этой переменной.</summary>
      <returns>Конечное смещение переменной.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature">
      <summary>Получает подпись переменной.</summary>
      <returns>Подпись переменной в виде непрозрачного большого двоичного объекта.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Name">
      <summary>Получает имя переменной.</summary>
      <returns>Имя переменной.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset">
      <summary>Получает начальное смещение переменной в области этой переменной.</summary>
      <returns>Начальное смещение переменной.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolWriter">
      <summary>Представляет интерфейс записи символов для управляемого кода.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
      <summary>Закрывает интерфейс <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> и сохраняет символы в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
      <summary>Закрывает текущий метод.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
      <summary>Закрывает последнее пространство имен.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
      <summary>Закрывает текущую лексическую область видимости.</summary>
      <param name="endOffset">точки после последней инструкции в области.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>Определяет исходный документ.</summary>
      <param name="url">URL-адрес, предназначенный для идентификации документа.</param>
      <param name="language">Язык документа. Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor">Идентификатор поставщика языка документа. Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType">Тип документа. Этот параметр может иметь значение <see cref="F:System.Guid.Empty" />.</param>
      <returns>Объект, представляющий документ.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Определяет поле в типе или глобальное поле.</summary>
      <param name="parent">Тип метаданных или маркер метода.</param>
      <param name="name">Имя поля.</param>
      <param name="attributes">Побитовое сочетание атрибутов полей.</param>
      <param name="signature">Подпись поля.</param>
      <param name="addrKind">Типы адресов <paramref name="addr1" /> и <paramref name="addr2" />.</param>
      <param name="addr1">Первый адрес для спецификации поля.</param>
      <param name="addr2">Второй адрес для спецификации поля.</param>
      <param name="addr3">Третий адрес для спецификации поля.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Определяет одну глобальную переменную.</summary>
      <param name="name">Имя глобальной переменной.</param>
      <param name="attributes">Побитовое сочетание атрибутов глобальной переменной.</param>
      <param name="signature">Подпись глобальной переменной.</param>
      <param name="addrKind">Типы адресов <paramref name="addr1" />, <paramref name="addr2" /> и <paramref name="addr3" />.</param>
      <param name="addr1">Первый адрес для спецификации глобальной переменной.</param>
      <param name="addr2">Второй адрес для спецификации глобальной переменной.</param>
      <param name="addr3">Третий адрес для спецификации глобальной переменной.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Определяет одну переменную в текущей лексической области видимости.</summary>
      <param name="name">Имя локальной переменной.</param>
      <param name="attributes">Побитовое сочетание атрибутов локальной переменной.</param>
      <param name="signature">Подпись локальной переменной.</param>
      <param name="addrKind">Типы адресов <paramref name="addr1" />, <paramref name="addr2" /> и <paramref name="addr3" />.</param>
      <param name="addr1">Первый адрес для спецификации локальной переменной.</param>
      <param name="addr2">Второй адрес для спецификации локальной переменной.</param>
      <param name="addr3">Третий адрес для спецификации локальной переменной.</param>
      <param name="startOffset">Начальное смещение для переменной. Если этот параметр равен нулю, он не обрабатывается и переменная определяется для всей области. Если параметр имеет ненулевое значение, переменная находится в границах смещений текущей области.</param>
      <param name="endOffset">Конечное смещение для переменной. Если этот параметр равен нулю, он не обрабатывается и переменная определяется для всей области. Если параметр имеет ненулевое значение, переменная находится в границах смещений текущей области.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Определяет один параметр в текущем методе. Тип каждого параметра извлекается из подписи метода в соответствии с его положением.</summary>
      <param name="name">Имя параметра.</param>
      <param name="attributes">Побитовое сочетание атрибутов параметра.</param>
      <param name="sequence">Подпись параметра.</param>
      <param name="addrKind">Типы адресов <paramref name="addr1" />, <paramref name="addr2" /> и <paramref name="addr3" />.</param>
      <param name="addr1">Первый адрес для спецификации параметра.</param>
      <param name="addr2">Второй адрес для спецификации параметра.</param>
      <param name="addr3">Третий адрес для спецификации параметра.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Определяет группу точек следования в текущем методе.</summary>
      <param name="document">Объект документа, для которого определяются точки следования.</param>
      <param name="offsets">Смещения точек следования определяются от начала методов.</param>
      <param name="lines">Строки документа для точек следования.</param>
      <param name="columns">Позиции в документе для точек следования.</param>
      <param name="endLines">Конечные строки документа для точек следования.</param>
      <param name="endColumns">Конечные позиции документа для точек следования.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
      <summary>Задает интерфейс включения метаданных, который требуется связать со средством записи.</summary>
      <param name="emitter">Интерфейс включения метаданных.</param>
      <param name="filename">Имя файла, для которого записываются символы отладки. Имя файла требуется не для всех средств записи. Если имя файла задано для модуля записи, который не использует имена файлов, этот параметр пропускается.</param>
      <param name="fFullBuild">Значение <see langword="true" /> указывает, что это полное перестроение; <see langword="false" /> — что это добавочная компиляция.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Открывает метод для размещения символьной информации.</summary>
      <param name="method">маркер метаданных для открываемого метода.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
      <summary>Открывает новое пространство имен.</summary>
      <param name="name">Имя нового пространства имен.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
      <summary>Открывает новую лексическую область видимости в текущем методе.</summary>
      <param name="startOffset">Смещение в байтах от начала метода до первой инструкции в лексической области.</param>
      <returns>Непрозрачный идентификатор области, который можно использовать с методом <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> для определения начального и конечного смещений области в дальнейшем. В этом случае смещения, переданные методам <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /> и <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" />, пропускаются. Идентификатор области действителен только в текущем методе.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
      <summary>Указывает истинные начало и конец метода в исходном файле. Метод <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /> следует использовать для задания длины метода независимо от точек следования, имеющихся в методе.</summary>
      <param name="startDoc">Документ, в котором находится начальная позиция.</param>
      <param name="startLine">Номер начальной строки.</param>
      <param name="startColumn">Начальный столбец.</param>
      <param name="endDoc">Документ, в котором находится конечная позиция.</param>
      <param name="endLine">Номер конечной строки.</param>
      <param name="endColumn">Номер конечного столбца.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
      <summary>Определяет диапазон смещений для заданной лексической области видимости.</summary>
      <param name="scopeID">Идентификатор лексической области.</param>
      <param name="startOffset">Смещение начала лексической области в байтах.</param>
      <param name="endOffset">Смещение конца лексической области в байтах.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
      <summary>Определяет атрибут для заданного имени и значения атрибута.</summary>
      <param name="parent">маркер метаданных, для которого определяется атрибут.</param>
      <param name="name">Имя атрибута.</param>
      <param name="data">Значение атрибута.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
      <summary>Задает основной интерфейс <see langword="ISymUnmanagedWriter" /> (соответствующий неуправляемый интерфейс), который используется управляемым интерфейсом <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> для генерации символов.</summary>
      <param name="underlyingWriter">Указатель на код, представляющий основное средство записи.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Идентифицирует пользовательский метод в качестве точки входа для текущего модуля.</summary>
      <param name="entryMethod">маркер метаданных для метода, который является пользовательской точкой входа.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
      <summary>Указывает, что в открытой лексической области используется заданное полное имя пространства имен.</summary>
      <param name="fullName">Полное имя пространства имен.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymAddressKind">
      <summary>Задает типы адресов локальных переменных, параметров и полей в методах <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />, <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> и <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> интерфейса <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.BitField">
      <summary>Битовое поле. Параметр <paramref name="addr1" /> представляет позицию, с которой начинается поле, а параметр <paramref name="addr2" /> — длину поля.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.ILOffset">
      <summary>Смещение на языке MSIL. Параметр <paramref name="addr1" /> представляет индекс локальной переменной или параметра языка MSIL.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset">
      <summary>Исходное смещение. Параметр <paramref name="addr1" /> — это смещение от начала родительского объекта.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister">
      <summary>Адрес машинного регистра. Параметр <paramref name="addr1" /> — это регистр, в котором хранится переменная.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister">
      <summary>Относительный адрес регистра. Параметр <paramref name="addr1" /> — младший регистр, параметр <paramref name="addr2" /> — старший регистр.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative">
      <summary>Относительный адрес регистра. Параметр <paramref name="addr1" /> — регистр, параметр <paramref name="addr2" /> — смещение.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack">
      <summary>Относительный адрес регистра. Параметр <paramref name="addr1" /> — младший регистр, параметр <paramref name="addr2" /> — регистр стека, а параметр <paramref name="addr3" /> — смещение от указателя стека до старшей части значения.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA">
      <summary>Исходный относительный виртуальный адрес (RVA). Параметр <paramref name="addr1" /> — RVA-адрес в модуле.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset">
      <summary>Исходное смещение раздела. Параметр <paramref name="addr1" /> представляет раздел, а параметр <paramref name="addr2" /> — смещение.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister">
      <summary>Относительный адрес регистра. Параметр <paramref name="addr1" /> — регистр стека, параметр <paramref name="addr2" /> — смещение от указателя стека до младшей части значения, параметр <paramref name="addr3" /> — старший регистр.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymbolToken">
      <summary>Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> — это объектное представление маркера, представляющего символьные данные.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> для заданного значения.</summary>
      <param name="val">Значение, используемое для маркера.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Определяет, равен ли объект <paramref name="obj" /> данному экземпляру.</summary>
      <param name="obj">Проверяемый элемент <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns>Значение <see langword="true" />, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)">
      <summary>Определяет, является ли объект <paramref name="obj" /> экземпляром класса <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> и равен ли этому экземпляру.</summary>
      <param name="obj">Объект для проверки.</param>
      <returns>Значение <see langword="true" />, если объект <paramref name="obj" /> является экземпляром класса <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> и равен этому экземпляру, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetHashCode">
      <summary>Создает хэш-код для текущего маркера.</summary>
      <returns>Хэш-код для текущего маркера.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetToken">
      <summary>Получает значение текущего маркера.</summary>
      <returns>Значение текущего маркера.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Возвращает значение, показывающее, равны ли два объекта <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</summary>
      <param name="a">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns>Значение <see langword="true" />, если <paramref name="a" /> и <paramref name="b" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Возвращает значение, показывающее, являются ли два объекта <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> неравными.</summary>
      <param name="a">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b">Структура <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns>Значение <see langword="true" />, если <paramref name="a" /> и <paramref name="b" /> не равны друг другу; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocumentType">
      <summary>Хранит открытые идентификаторы GUID типов документов, используемые в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentType.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymDocumentType" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymDocumentType.Text">
      <summary>Задает идентификатор GUID типа документов, используемый в хранилище символов.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageType">
      <summary>Хранит открытые идентификаторы GUID для типов языков, используемые в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageType.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymLanguageType" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Basic">
      <summary>Задает идентификатор GUID для типа языка Basic, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.C">
      <summary>Задает идентификатор GUID для типа языка C, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Cobol">
      <summary>Задает идентификатор GUID для типа языка Cobol, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CPlusPlus">
      <summary>Задает идентификатор GUID для типа языка C++, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CSharp">
      <summary>Задает идентификатор GUID для типа языка C#, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.ILAssembly">
      <summary>Задает идентификатор GUID для типа языка ILAssembly, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Java">
      <summary>Задает идентификатор GUID для типа языка Java, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.JScript">
      <summary>Задает идентификатор GUID для типа языка JScript, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.MCPlusPlus">
      <summary>Задает идентификатор GUID для типа языка C++, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Pascal">
      <summary>Задает идентификатор GUID для типа языка Pascal, используемый в хранилище символов.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.SMC">
      <summary>Задает идентификатор GUID для типа языка SMC, используемый в хранилище символов.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageVendor">
      <summary>Хранит открытые идентификаторы GUID поставщиков языков, используемые в хранилище символов.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageVendor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.SymbolStore.SymLanguageVendor" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageVendor.Microsoft">
      <summary>Задает идентификатор GUID поставщика языка Microsoft.</summary>
    </member>
  </members>
</doc>