<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">Определяет различные параметры, которые применяются при создании типов платформы .NET Framework, используемых с веб-службой XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">Включение привязки данных.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">Создание событий для асинхронного вызова веб-методов.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">Создание методов Begin и End для асинхронного вызова веб-методов.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">Создание кода сериализации в явно заданном порядке в соответствии со свойством <see langword="Order" /><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> и атрибутами <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">Представление простых типов по свойствам.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">Представление простых типов по полям и по типам пространств имен <see cref="N:System" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">Предоставляет статические методы для преобразования входного текста в имена для сущностей кода.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.CodeIdentifier" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">Создает из входных строк строку из слов с прописной буквы без пробелов.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Имя сущности кода, например, параметра метода, которое обычно берется из XML-элемента или имени атрибута.</param>
      <returns vsli:raw="A camel-case version of the parameter string.">Версия строки параметра в стиле Camel.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">Создает из входной строки строку стиля Pascal.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Имя сущности кода, например, параметра метода, которое обычно берется из XML-элемента или имени атрибута.</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">Версия строки параметра в стиле Pascal.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">Создает из входной строки допустимое имя сущности кода.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Имя сущности кода, например, параметра метода, которое обычно берется из XML-элемента или имени атрибута.</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">Строка, которую можно использовать в качестве программного идентификатора, например, имя параметра метода.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">Поддерживает группу имен для связанных сущностей кода или сопоставлений типов, сгенерированных инфраструктурой сериализации XML платформы .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> и определяет, чувствительны ли идентификаторы кода к регистру.</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если идентификаторы чувствительны к регистру; в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Добавляет именованную сущность кода или сопоставление типа к области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">Имя, используемое для индексации сущности кода.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">Информация по сущности кода или сопоставлению типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Предотвращает использование указанного имени в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Имя, которое будет недоступно в пределах области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">Добавляет именованную сущность кода или сопоставление типа к области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, обеспечивая уникальность имени в рамках области.</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">Допустимое имя, используемое для индексации сущности кода.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">Информация по сущности кода или сопоставлению типа.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">Значение параметра идентификатора или измененная строка, если возникает коллизия имени.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Удаляет все сущности кода и сопоставления типов, включая их имена, из области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Определяет, используется ли указанное имя в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Имя для проверки на предмет использования в области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если имя уже используется; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">Обеспечивает правильный регистр ввода путем изменения имени в соответствии со значением свойства <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />.</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">Имя для возможного изменения.</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">Строка, аналогичная входящему идентификатору или с измененным регистром первой буквы.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">Определяет конфликтует ли входящее имя с другим именем в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> и, если конфликтует, выполняется генерирование измененной строки.</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">Имя для изменения, если оно не является уникальным.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">Значение параметра идентификатора или измененная строка, если возникает коллизия имени.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">Удаляет из области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> сущность кода или сопоставление типа, идентифицированное входящим именем.</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">Информация имени сущности кода или сопоставления типа для удаления.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">Удаляет входящую строку из зарезервированных имен экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Имя, которое будет доступно в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Возвращает массив сущностей кода или сопоставлений типов в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">Тип всех сущностей кода или сопоставлений типа для экземпляра.</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">Массив сущностей кода или сопоставлений типа, сохраненный объектом <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">Получает или задает значение, указывающее, использует ли экземпляр верхний регистр.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">
        <see langword="true" /> для обозначения использования экземпляром верхнего регистра, <see langword="false" /> для указания использования экземпляром регистра Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">Описывает контекст, в котором набор схемы связан с кодовыми сущностями .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.ImportContext" /> для данных идентификаторов кода с данным параметром совместного использования типа.</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">Кодовые сущности, к которым применяется данный контекст.</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">Значение <see cref="T:System.Boolean" />, определяющее наличие в схеме общих пользовательских типов.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">Получает значение, определяющее наличие общих пользовательских типов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если в схеме есть общие пользовательские типы, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">Получает набор кодовых сущностей, к которым применяется данный контекст.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, выявляющий кодовые сущности, к которым применяется данный контекст.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">Получает коллекцию предупреждений, создаваемых при импортировании описаний кодовых сущностей.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">
        <see cref="T:System.Collections.Specialized.StringCollection" />, содержащие предупреждения, созданные при импортировании описаний кодовых сущностей.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">Задает свойство <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> для использования в инфраструктуре платформы .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">Получает или задает значение, указывающее, будет ли использоваться нормализация пробельных символов и значений атрибутов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если пробелы и значения атрибутов будут нормализоваться, в противном случае —<see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">Получает или задает способ обработки пробелов при анализе XML-кода.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">Член перечисления <see cref="T:System.Xml.WhitespaceHandling" />, описывающий способ обработки пробелов при анализе XML-кода.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">Описывает импортера схемы.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">Указывает, что класс <see cref="T:System.Xml.Serialization.XmlSerializer" /> должен сериализовать член класса как кодированный атрибут SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> с использованием заданного значения в качестве имени атрибута XML.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">Имя XML-атрибута.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Получает или задает имя атрибута XML, созданного объектом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">Имя XML-атрибута. По умолчанию используется идентификатор члена</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Получает или задает тип данных языка XSD для атрибута SOAP, созданного объектом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="An XML Schema data type.">Тип данных схемы XML.</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">Указанный тип данных XML-схемы не может иметь соответствия в типах данных .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">Возвращает или задает пространство имен XML для XML-атрибута.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">Пространство имен XML для XML-атрибута.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">Позволяет переопределять атрибуты, примененные к свойствам, полям и классам, при использовании <see cref="T:System.Xml.Serialization.XmlSerializer" /> для сериализации или десериализации объекта как кодированного элемента SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Добавляет <see cref="T:System.Xml.Serialization.SoapAttributes" /> в коллекцию <see cref="T:System.Xml.Serialization.SoapAttributes" /> объектов, содержащихся в <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. Параметр <paramref name="type" /> указывает объект, подлежащий переопределению при помощи <see cref="T:System.Xml.Serialization.SoapAttributes" />. Параметр <paramref name="member" /> указывает имя переопределяемого члена.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">
        <see cref="T:System.Type" /> объекта для переопределения.</param>
      <param name="member" vsli:raw="The name of the member to override.">Имя члена для переопределения.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">Объект <see cref="T:System.Xml.Serialization.SoapAttributes" />, представляющий переопределяемые атрибуты.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">Добавляет <see cref="T:System.Xml.Serialization.SoapAttributes" /> в коллекцию объектов <see cref="T:System.Xml.Serialization.SoapAttributes" />. Параметр <paramref name="type" />, указывающий объект, подлежащий переопределению при помощи <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">
        <see cref="T:System.Type" /> переопределяемого объекта.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">Объект <see cref="T:System.Xml.Serialization.SoapAttributes" />, представляющий переопределяемые атрибуты.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">Получает объект, связанный с указанным типом (базового класса).</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">Базовый класс <see cref="T:System.Type" />, связанный с коллекцией извлекаемых атрибутов.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />, который представляет коллекцию переопределяемых атрибутов.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">Получает объект, связанный с указанным типом (базового класса). Параметр <paramref name="member" /> указывает переопределенный член базового класса.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">Базовый класс <see cref="T:System.Type" />, связанный с коллекцией атрибутов, которые требуется переопределить.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">Имя переопределяемого члена, указывающего <see cref="T:System.Xml.Serialization.SoapAttributes" />, который необходимо вернуть.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />, который представляет коллекцию переопределяемых атрибутов.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">Представляет коллекцию объектов атрибута, контролирующих, как <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует и десериализует методы SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapAttributes" /> при помощи указанного пользовательского типа.</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">Любой объект, реализующий интерфейс <see cref="T:System.Reflection.ICustomAttributeProvider" />, например класс <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">Получает или задает <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> для переопределения.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />, переопределяющий поведение <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации члена.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Получает или задает значение по умолчанию XML-элемента или атрибута.</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">Объект, представляющий значение по умолчанию XML-элемента или атрибута.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">Получает или задает <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> для переопределения.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> для переопределения.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">Получает или задает объект, указывающий, как <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление SOAP.</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Объект, указывающий, как объект <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполняет сериализацию члена перечисления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">Получает или задает значение, определяющее, сериализует ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> общее поле или свойство как закодированное SOAP XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> не должен сериализовать поле или свойство; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">Получает или задает объект, указывающий <see cref="T:System.Xml.Serialization.XmlSerializer" />, как сериализовать тип объекта в закодированный SOAP XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />, который либо переопределяет <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />, применяемый к объявлению класса, либо сам применяется к объявлению класса.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">Указывает, что данный общий член будет сериализован посредством <see cref="T:System.Xml.Serialization.XmlSerializer" /> как кодированный XML-элемент SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> и указывает имя элемента XML.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Имя XML-элемента сериализованного члена.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">Получает или задает тип данных языка определения схемы XML (XSD) созданного XML-элемента.</summary>
      <returns vsli:raw="One of the XML Schema data types.">Один из типов данных XML-схемы.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Получает или задает имя созданного XML-элемента</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Имя созданного XML-элемента. По умолчанию используется идентификатор члена</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">Получает или задает значение, указывающее, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена с заданным для атрибута <see langword="xsi:null" /> значением "1".</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут <see langword="xsi:null" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Управляет тем, как <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует член перечисления.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> с помощью заданного имени элемента.</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Имя элемента XML, созданное <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">Получает или задает значения, созданного в документе XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление, или значения, распознаваемого при десериализации члена перечисления.</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">Значение, созданное в документе XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление, или значение, распознаваемое при десериализации члена перечисления.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">Инструктирует метод <see cref="T:System.Xml.Serialization.XmlSerializer" /> не сериализовывать значение открытого поля или открытого свойства чтения/записи.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">Позволяет <see cref="T:System.Xml.Serialization.XmlSerializer" /> распознавать тип при сериализации или десериализации объекта согласно кодированию SOAP XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />, используя указанный тип.</summary>
      <param name="type" vsli:raw="The type of the object to include.">Тип включаемого объекта.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">Получает или задает тип объекта для использования при сериализации или десериализации объекта.</summary>
      <returns vsli:raw="The type of the object to include.">Тип включаемого объекта.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">Генерирует сопоставления с SOAP-кодированными сообщениями из типов .NET Framework или информации метода веб-службы.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, указывающий пространство имен XML по умолчанию для сопоставлений импортированного типа.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Пространство имен XML по умолчанию, используемое для сопоставлений импортированного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, указывающий переопределения для сериализации XML.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Объект <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />, переопределяющий способ сериализации классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> сопоставленных типов с помощью кодирования SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, указывающий переопределения сериализации XML и пространства имен XML по умолчанию.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Объект <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />, переопределяющий способ сериализации классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> сопоставленных типов с помощью кодирования SOAP.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Пространство имен XML по умолчанию, используемое для сопоставлений импортированного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Имя XML-элемента, созданного из метода веб-службы.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Пространство имен XML-элемента, созданного из метода веб-службы.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Массив сущностей кода .NET Framework, принадлежащий методу веб-службы.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Сопоставления внутреннего типа.NET Framework с частями элементов определения сообщения WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Имя XML-элемента, созданного из метода веб-службы.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Пространство имен XML-элемента, созданного из метода веб-службы.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Массив сущностей кода .NET Framework, принадлежащий методу веб-службы.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что элементы, соответствующие частям сообщения WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP; в противном случае — значение <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">Значение <see langword="true" /> для указания привязки веб-службы в стиле RPC-сервиса, значение <see langword="false" /> для указания документного стиля привязки веб-службы или заголовка SOAP.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Сопоставления внутреннего типа.NET Framework с частями элементов определения сообщения WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Имя XML-элемента, созданного из метода веб-службы.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Пространство имен XML-элемента, созданного из метода веб-службы.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Массив сущностей кода .NET Framework, принадлежащий методу веб-службы.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что элементы, соответствующие частям сообщения WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP; в противном случае — значение <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">Значение <see langword="true" /> для указания привязки веб-службы в стиле RPC-сервиса, значение <see langword="false" /> для указания документного стиля привязки веб-службы или заголовка SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" /> для указания того, что сгенерированный десериализатор должен быть проверен на предмет ожидаемого полного имени элемента упаковки; в противном случае — значение <see langword="false" />. Данное значение параметра релевантно только тогда, когда параметр <paramref name="hasWrapperElement" /> принимает значение <see langword="true" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Сопоставления внутреннего типа.NET Framework с частями элементов определения сообщения WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Имя XML-элемента, созданного из метода веб-службы.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Пространство имен XML-элемента, созданного из метода веб-службы.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Массив сущностей кода .NET Framework, принадлежащий методу веб-службы.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания того, что элементы, соответствующие частям сообщения WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP; в противном случае — значение <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">Значение <see langword="true" /> для указания привязки веб-службы в стиле RPC-сервиса, значение <see langword="false" /> для указания документного стиля привязки веб-службы или заголовка SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">Значение <see langword="true" /> для указания того, что сгенерированный десериализатор должен быть проверен на предмет ожидаемого полного имени элемента упаковки; в противном случае — значение <see langword="false" />. Данное значение параметра релевантно только тогда, когда параметр <paramref name="hasWrapperElement" /> принимает значение <see langword="true" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">Одно из значений перечисления <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Сопоставления внутреннего типа.NET Framework с частями элементов определения сообщения WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Генерирует сопоставление с элементом схемы XML для типа платформы .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Тип .NET Framework, для которого требуется сгенерировать сопоставления типа.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Генерирует сопоставление с элементом схемы XML для типа платформы .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Тип .NET Framework, для которого требуется сгенерировать сопоставления типа.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Используемое по умолчанию пространство имен XML.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Размещает сопоставления для типа в контексте экземпляра <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> для последующего использования при импорте вызванных методов.</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">Тип .NET Framework, для которого требуется сохранить информацию о сопоставлении типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Размещает сопоставления для производных типов в контексте экземпляра <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> для последующего использования при импорте вызванных методов.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">Объект отражения <see cref="T:System.Reflection.ICustomAttributeProvider" />, содержащий пользовательские атрибуты, являющиеся производными от атрибута <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">Представляет некоторые атрибуты элемента XSD &lt;<see langword="part" />&gt; в документе WSDL для создания классов на основе этого документа.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapSchemaMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">Возвращает или задает значение, соответствующее имени атрибута WSDL-элемента part.</summary>
      <returns vsli:raw="The element name.">Имя элемента.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">Возвращает или задает значение, соответствующее типу атрибута WSDL-элемента part.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">
        <see cref="T:System.Xml.XmlQualifiedName" />, соответствующий данному типу XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">Управляет схемой, сгенерированной <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса в качестве SOAP-кодированного XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> и задает имя типа XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Имя типа XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса (и определении при десериализации экземпляра класса).</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> и указывает имя и пространство имен XML типа.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Имя типа XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса (и определении при десериализации экземпляра класса).</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">Пространство имен XML типа.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">Получает или задает значение, указывающее, включается ли тип в SOAP-кодированные документы схемы XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> для включения типа в SOAP-кодированный документ схемы XML, в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Возвращает или задает пространство имен типа XML.</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">Пространство имен типа XML. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Возвращает или задает имя типа XML.</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">Имя типа XML. По умолчанию имя класса.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">Предоставляет данные для известного, но не неиспользованного объекта, обнаруженного в кодированном SOAP потоке XML во время десериализации.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o" vsli:raw="The unreferenced object.">Объект без ссылки.</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">Уникальная строка, используемая для идентификации объекта без ссылки.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">Получает идентификатор объекта.</summary>
      <returns vsli:raw="The ID of the object.">Идентификатор объекта.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">Получает десериализованный, но не использованный объект.</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">Десериализованный, но не использованный объект.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Представляет метод, обрабатывающий событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">Объект класса <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Представляет коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">Добавляет <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> в коллекцию.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">Добавляемый объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Индекс только что добавленного объекта <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">Получает значение, которое указывает, содержится ли заданный объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> в коллекции.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">Интересуемый <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> содержится в коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">Копирует коллекцию целиком в совместимый одномерный массив объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, начиная с заданного индекса целевого массива.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">Одномерный массив объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, который является конечным объектом копирования элементов коллекции. Индексация в массиве должна вестись с нуля.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Получает индекс заданного ограничения <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> с нужным индексом.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Индекс указанного объекта <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">Вставляет объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> в коллекцию по заданному индексу.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">Индекс вставки элемента <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">Вставляемый объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Возвращает или задает объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> с заданным индексом.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Индекс объекта <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> по заданному индексу.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">Удаляет указанный объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> из коллекции.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> для удаления.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">Указывает, что <see cref="T:System.Xml.Serialization.XmlSerializer" /> необходимо выполнить сериализацию конкретного члена класса в качестве массива XML-элементов.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> и указывает имя XML-элемента, созданного в экземпляре XML-документа.</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">Получает или задает имя XML-элемента, присвоенное сериализованному массиву.</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">Имя XML-элемента сериализованного массива. По умолчанию используется имя члена, которому назначается <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">Получает или задает значение, которое показывает, является ли имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />, квалифицированным или неквалифицированным.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Xml.Schema.XmlSchemaForm" />. Значение по умолчанию — <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Получает или задает значение, которое показывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнить сериализацию члена как пустого тега XML с атрибутом <see langword="xsi:nil" />, для которого установлено значение <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут <see langword="xsi:nil" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">Получает или задает пространство имен XML-элемента.</summary>
      <returns vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Возвращает или задает явный порядок сериализации или десериализации элементов.</summary>
      <returns vsli:raw="The order of the code generation.">Порядок генерирования кода.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">Представляет атрибут, который определяет производные типы, которые могут быть размещены <see cref="T:System.Xml.Serialization.XmlSerializer" /> в сериализованном массиве.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и указывает имя элемента XML, сгенерированного в документе XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Имя элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и определяет имя элемента XML, сгенерированного в документе XML, и <see cref="T:System.Type" />, который может быть вставлен в сгенерированный документ XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Имя элемента XML.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">Тип <see cref="T:System.Type" /> сериализуемого объекта.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и определяет <see cref="T:System.Type" />, который может быть вставлен в сериализованный массив.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">Тип <see cref="T:System.Type" /> сериализуемого объекта.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">Возвращает или задает тип данных XML сгенерированного элемента XML.</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">Тип данных определения схемы XML (XSD).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Получает или задает имя созданного XML-элемента</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Имя созданного XML-элемента. По умолчанию используется идентификатор члена</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">Возвращает или задает значение, которое указывает, является ли имя сгенерированного элемента XML полным.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />. Значение по умолчанию — <see langword="XmlSchemaForm.None" />.</returns>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">Свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> имеет значение <see langword="XmlSchemaForm.Unqualified" />, а свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> задано.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Получает или задает значение, которое показывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнить сериализацию члена как пустого тега XML с атрибутом <see langword="xsi:nil" />, для которого установлено значение <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> генерирует атрибут <see langword="xsi:nil" />, в противном случае <see langword="false" />, а экземпляр не генерируется. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">Возвращает или задает пространство имен сгенерированного элемента XML.</summary>
      <returns vsli:raw="The namespace of the generated XML element.">Пространство имен сгенерированного элемента XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">Возвращает или задает уровень в иерархии элементов XML, на который воздействует <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">Индекс, начинающийся с нуля, набора индексов в массиве массивов.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">Возвращает или задает тип, допустимый в массиве.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">
        <see cref="T:System.Type" />, допустимый в массиве.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Представляет коллекцию объектов <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">Добавляет <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> в коллекцию.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">Параметр <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для добавления в коллекцию.</param>
      <returns vsli:raw="The index of the added item.">Индекс добавляемого элемента.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">Определяет, содержит ли коллекция указанный объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для проверки.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если коллекция содержит заданный объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">Копирует в коллекцию массив <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />, начиная с заданного индекса целевого объекта.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">Массив объектов <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для копирования в коллекцию.</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">Индекс, по которому будут расположены скопированные атрибуты.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Возвращает отсчитываемый от нуля индекс первого вхождения заданного <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> в коллекции либо значение -1, если атрибут не обнаружен в коллекции.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для поиска в коллекции.</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Первый индекс объекта <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> в коллекции или значение -1, если атрибут не обнаружен в коллекции.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">Вставляет объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> в коллекцию по заданному индексу.</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">Индекс, по которому вставлен атрибут.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">Вставляемый объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">Возвращает или устанавливает элемент с указанным индексом.</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">Начинающийся с нуля индекс полученного или заданного члена коллекции.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">Параметр <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> по указанному индексу.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">Удаляет объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> из коллекции, если он содержится в ней.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для удаления.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">Предоставляет данные для события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">Получает объект, представляющий неизвестный атрибут XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">
        <see cref="T:System.Xml.XmlAttribute" />, представляющий неизвестный атрибут XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">Получает разделенный запятыми список имен атрибутов XML ожидаемых в экземпляре документа XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Разделенный запятыми список имен атрибутов XML. Каждое имя представлено в следующем формате: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">Получает номер строки неизвестного атрибута XML.</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">Номер строки неизвестного атрибута XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">Получает положение в строке неизвестного атрибута XML.</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">Номер позиции неизвестного атрибута XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Возвращает десериализуемый объект.</summary>
      <returns vsli:raw="The object being deserialized.">Десериализуемый объект.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">Представляет метод, обрабатывающий <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /></summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">Объект класса <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">Позволяет переопределять атрибуты свойства, поля и класса при использовании <see cref="T:System.Xml.Serialization.XmlSerializer" /> для сериализации или десериализации объекта.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Добавляет объект <see cref="T:System.Xml.Serialization.XmlAttributes" /> в коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAttributes" />. Параметр <paramref name="type" /> указывает объект для переопределения. Параметр <paramref name="member" /> указывает имя переопределяемого члена.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">
        <see cref="T:System.Type" /> объекта для переопределения.</param>
      <param name="member" vsli:raw="The name of the member to override.">Имя члена для переопределения.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Объект <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий переопределяемые атрибуты.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">Добавляет объект <see cref="T:System.Xml.Serialization.XmlAttributes" /> в коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAttributes" />. Параметр <paramref name="type" /> указывает объект для переопределения объектом <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">
        <see cref="T:System.Type" /> переопределяемого объекта.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Объект <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий переопределяемые атрибуты.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">Возвращает объект, связанный с указанным типом базового класса.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">Базовый класс <see cref="T:System.Type" />, связанный с коллекцией извлекаемых атрибутов.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий коллекцию атрибутов переопределения.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">Возвращает объект, связанный с указанным типом (базового класса). Параметр члена указывает имя переопределяемого члена базового класса.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">Базовый класс <see cref="T:System.Type" />, связанный с требуемой коллекцией атрибутов.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">Имя переопределенного члена, указывающего <see cref="T:System.Xml.Serialization.XmlAttributes" /> для возврата.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий коллекцию атрибутов переопределения.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Представление коллекции объектов атрибутов, управляющих сериализацией и десериализацией объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" /> и настройка сериализации и десериализации объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">Класс, представляющий альтернативный вариант реализации атрибутов, управляющих сериализацией XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">Получает или задает <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">Получение коллекции объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> для переопределения.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />, представляющий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">Получает или задает коллекцию объектов, определяющих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для элементов, которые вставлены в массив, возвращенный открытым полем или свойством чтения/записи.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Список <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />, в котором содержится коллекция объектов <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как атрибута XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, управляющий сериализацией открытого поля или свойства чтения/записи как атрибута XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">Получает или задает объект, позволяющий определиться с выбором.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />, который можно применить к члену класса, который сериализуется как элемент <see langword="xsi:choice" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Получает или задает значение по умолчанию XML-элемента или атрибута.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">Объект <see cref="T:System.Object" />, представляющей значение по умолчанию элемента XML или атрибута.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">Получение коллекции объектов, задающих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как элемента XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" />, содержащий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">Получает или задает значение, задающее то, будет ли выполнена сериализация с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или открытого свойства чтения/записи.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> не должен сериализовать поле или свойство; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">Возвращает и задает значение, определяющее, стоит ли сохранить все объявления пространств имен, если объект с членом, возвращающим объект <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, переопределен.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объявления пространств имен следует сохранить, иначе <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса как корневого элемента XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, переопределяющий класс с атрибутами корневого элемента XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">Получает или задает объект, указывающий <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализовать открытое поле или свойство чтения/записи как текст XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" />, переопределяющий сериализацию по умолчанию для открытого свойства или поля.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса, к которому был применен <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, который переопределяет <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, примененный к объявлению класса.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">Указывает, что член может быть обнаружен посредством перечисления.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">Имя члена, возвращающего перечисление, используемое для определения выбора.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">Получает или задает имя поля, возвращающего перечисление для использования при определении типов.</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">Имя поля, возвращающего перечисление.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Содержит поля, которые могут быть использованы для передачи делегатов событий в потокобезопасный метод <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> из <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Получает или задает объект, представляющий метод обработки события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />, указывающий на обработчик событий.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Получает или задает объект, представляющий метод обработки события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />, указывающий на обработчик событий.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Получает или задает объект, представляющий метод обработки события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />, указывающий на обработчик событий.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Получает или задает объект, представляющий метод обработки события <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />, указывающий на обработчик событий.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">Представляет коллекцию объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, используемую <see cref="T:System.Xml.Serialization.XmlSerializer" /> для переопределения способа сериализации класса, используемого по умолчанию.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">Добавляет <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> в коллекцию.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">Добавляемый объект <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
      <returns vsli:raw="The zero-based index of the newly added item.">Отсчитываемый от нуля индекс вновь добавленного элемента.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">Определяет, содержит ли коллекция указанный объект.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">Объект <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, который нужно найти.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект существует в коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">Полностью или частично копирует <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> в одномерный массив.</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">Массив <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> для хранения скопированных элементов.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Получает индекс заданного ограничения <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, индекс которого требуется извлечь.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Начинающийся с нуля индекс параметра <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">Вставляет <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> в коллекцию.</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">Отсчитываемый от нуля индекс для вставки члена.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">Вставляемый объект <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns vsli:raw="The element at the specified index.">Элемент, расположенный по указанному индексу.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> не является допустимым индексом в <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">Свойство задано, и список <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">Удаляет указанный объект из коллекции.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">Объект <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, который требуется удалить из коллекции.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">Предоставляет данные для события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">Возвращает объект, представляющий неизвестный XML- элемент.</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">Объект, представляющий неизвестный XML- элемент.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">Получает разделенный запятыми список имен XML-элементов, ожидаемых в экземпляре XML-документа.</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Разделенный запятыми список имен XML-элементов. Каждое имя представлено в следующем формате: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Если в качестве средства чтения XML используется <see cref="T:System.Xml.XmlTextReader" />возвращает номер строки, в которой был обнаружен неизвестный элемент.</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Если для в качестве средства чтения XML используется <see cref="T:System.Xml.XmlTextReader" />номер строки, в которой был обнаружен неизвестный элемент; в остальных случаях –1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Если в качестве средства чтения XML используется <see cref="T:System.Xml.XmlTextReader" />возвращает позицию в строке, на которой был обнаружен неизвестный элемент.</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Если в качестве средства чтения XML используется <see cref="T:System.Xml.XmlTextReader" />номер строки, в которой был обнаружен неизвестный элемент; в остальных случаях –1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">Возвращает объект, десериализуемый <see cref="T:System.Xml.Serialization.XmlSerializer" /></summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Объект, десериализуемый <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Представляет метод, обрабатывающий событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">Объект <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">Позволяет <see cref="T:System.Xml.Serialization.XmlSerializer" /> распознавать тип в процессе сериализации или десериализации объекта.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">
        <see cref="T:System.Type" /> объекта, который необходимо включить.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">Получает или задает тип объекта, который необходимо включить.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">
        <see cref="T:System.Type" /> объекта, который необходимо включить.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">Поддерживает сопоставление типов платформе .NET Framework и типов данных схемы XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">Возвращает имя сопоставленного элемента.</summary>
      <returns vsli:raw="The name of the mapped element.">Имя сопоставленного элемента.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">Возвращает пространство имен сопоставленного элемента.</summary>
      <returns vsli:raw="The namespace of the mapped element.">Пространство имен сопоставленного элемента.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">Задает ключ для выполнения поиска в сопоставлении.</summary>
      <param name="key" vsli:raw="The lookup key.">Ключ уточняющего запроса.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">Возвращает имя XSD-элемента сопоставления.</summary>
      <returns vsli:raw="The XSD element name.">Имя XSD-элемента.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">Указывает на чтение, запись или на оба процесса для сопоставления.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">Генерируются оба метода чтения и записи.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">Генерируются методы чтения.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">Генерируются методы записи.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">Сопоставляет сущность кода в методе веб-службы .NET Framework с элементом в сообщении языка описания веб-служб (WSDL).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">Получает или задает значение, указывающее соответствие типа платформы .NET Framework элементу XML или атрибуту любого типа.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если тип соответствует любому элементу или атрибуту XML, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">Получает значение, которое указывает, определено ли значение для сопроводительного поля в типе платформы .NET Framework.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если для сопроводительного поля значение задано, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">Получает неполное имя объявления элемента XML, применяемое к данному сопоставлению.</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">Неполное имя объявления элемента XML, применяемое к данному сопоставлению.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">Получает имя члена метода веб-службы, представленного данным сопоставлением.</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">Имя члена метода веб-службы, представленного данным сопоставлением.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">Получает пространство имен XML, применяемое к данному сопоставлению.</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">Пространство имен XML, применяемое к данному сопоставлению.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">Получает полное имя типа платформы .NET Framework для данного сопоставления.</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">Полное имя типа платформы .NET Framework для данного сопоставления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">Получает имя типа платформы .NET Framework для данного сопоставления.</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">Имя типа платформы .NET Framework для данного сопоставления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">Получает пространство имен типа платформы .NET Framework для данного сопоставления.</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">Пространство имен типа платформы .NET Framework для данного сопоставления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">Получает имя элемента XML согласно его отображению в документе описания службы.</summary>
      <returns vsli:raw="The XML element name.">Имя элемента XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Предоставляет сопоставления методов веб-служб .NET Framework и сообщений языка описания веб-служб (WSDL), заданных для веб-служб SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">Получает число сущностей кода .NET Framework, принадлежащего методу веб-службы, с которым сопоставляется сообщение SOAP.</summary>
      <returns vsli:raw="The number of mappings in the collection.">Число сопоставлений в коллекции.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">Получает элемент, содержащий информацию внутреннего сопоставления типа для сущности кода .NET Framework, принадлежащей методу веб-службы, который сопоставляется с сообщением SOAP.</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">Индекс сопоставления для возврата.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">Запрошенный <see cref="T:System.Xml.Serialization.XmlMemberMapping" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Получает имя типа платформы .NET Framework, сопоставляемого с типом данных элемента схемы XML, представляющего сообщение SOAP.</summary>
      <returns vsli:raw="The name of the .NET type.">Имя типа платформы .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Получает пространство имен типа платформы .NET Framework, сопоставляемого с типом данных элемента схемы XML, представляющего сообщение SOAP.</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">Пространство имен .NET Framework сопоставления.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">Предоставляет данные для события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">Возвращает номер строки неизвестного узла XML.</summary>
      <returns vsli:raw="The line number of the unknown XML node.">Номер строки неизвестного узла XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">Возвращает позицию в строке неизвестного узла XML.</summary>
      <returns vsli:raw="The position number of the unknown XML node.">Номер положения неизвестного узла XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">Возвращает локальное имя XML десериализуемого узла XML.</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">Локальное имя XML десериализуемого узла XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">Возвращает имя десериализуемого узла XML.</summary>
      <returns vsli:raw="The name of the node being deserialized.">Имя десериализуемого узла.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">Возвращает пространство имен URI, связанное с десериализуемым узелом XML.</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">Пространство имен URI, связанное с десериализуемым узелом XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">Возвращает тип десериализуемого узла XML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">
        <see cref="T:System.Xml.XmlNodeType" />, представляющий десериализуемый узел XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Возвращает десериализуемый объект.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> десериализуется.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">Возвращает текст десериализуемого узла XML.</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">Текст десериализуемого узла XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Представляет метод, обрабатывающий событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Источник события.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">Объект класса <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">Генерирует сопоставления с объявлениями элемента схемы XML, включая литерал частей сообщения определения схемы XML (XSD) в документе языка описания веб-служб (WSDL), для типов платформе .NET Framework или информации метода веб-службы.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />, используя указанное пространство имен XML.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Пространство имен XML по умолчанию, используемое для сопоставлений импортированного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />, используя указанные переопределения сериализаций XML.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Объект, переопределяющий способ сериализации сопоставленных типов классом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> с помощью указанных переопределений сериализаций XML и пространства имен XML по умолчанию.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Объект, переопределяющий способ сериализации сопоставленных типов классом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Пространство имен XML по умолчанию, используемое для сопоставлений импортированного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Имя XML-элемента, созданного из метода веб-службы.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Пространство имен XML-элемента, созданного из метода веб-службы.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Массив объектов <see cref="T:System.Xml.Serialization.XmlReflectionMember" />, содержащий сущности кода .NET Framework, принадлежащие методу веб-службы.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элементы, которые соответствуют частям сообщения языка описания веб-служб WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> с сопоставлением с частями элемента определения сообщения WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Возвращает сопоставления внутреннего типа с помощью информации, собранной из метода веб-службы, а также позволяет указать имя XML-элемента, пространство имен XML и другие параметры.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Имя XML-элемента, созданного из метода веб-службы.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Пространство имен XML-элемента, созданного из метода веб-службы.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Массив объектов <see cref="T:System.Xml.Serialization.XmlReflectionMember" />, содержащий сущности кода .NET Framework, принадлежащие методу веб-службы.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элементы, которые соответствуют частям сообщения языка описания веб-служб WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP; в противном случае — значение <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод является удаленным вызовом процедур; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, содержащий сопоставления.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Возвращает сопоставления внутреннего типа с помощью информации, собранной из метода веб-службы, а также позволяет указать имя XML-элемента, пространство имен XML и другие параметры.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Имя XML-элемента, созданного из метода веб-службы.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Пространство имен XML-элемента, созданного из метода веб-службы.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Массив объектов <see cref="T:System.Xml.Serialization.XmlReflectionMember" />, содержащий сущности кода .NET Framework, принадлежащие методу веб-службы.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элементы, которые соответствуют частям сообщения языка описания веб-служб WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP; в противном случае — значение <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод является удаленным вызовом процедур; в противном случае — значение <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания, что сгенерированный тип схемы будет помечен элементом <see langword="&lt;xs:anyAttribute&gt;" />; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, содержащий сопоставления.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Имя XML-элемента, созданного из метода веб-службы.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Пространство имен XML-элемента, созданного из метода веб-службы.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Массив объектов <see cref="T:System.Xml.Serialization.XmlReflectionMember" />, содержащий сущности кода .NET Framework, принадлежащие методу веб-службы.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элементы, которые соответствуют частям сообщения языка описания веб-служб WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP; в противном случае — значение <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод является удаленным вызовом процедур; в противном случае — значение <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для указания, что сгенерированный тип схемы будет помечен элементом <see langword="&lt;xs:anyAttribute&gt;" />; в противном случае — значение <see langword="false" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">Одно из значений перечисления <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. Значение по умолчанию — <see langword="None" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, содержащий сопоставления.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">Генерирует сопоставление элемента схемы XML для указанного типа платформы .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Тип .NET Framework, для которого требуется сгенерировать сопоставления типа.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">Генерирует сопоставление элемента схемы XML для указанного типа платформы .NET Framework с помощью указанных типа и пространства имен.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Тип .NET Framework, для которого требуется сгенерировать сопоставления типа.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Используемое по умолчанию пространство имен XML.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">Генерирует сопоставление элемента схемы XML для указанного типа платформы .NET Framework с помощью указанных типа и атрибута.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Тип .NET Framework, для которого требуется сгенерировать сопоставления типа.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Атрибут <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, применяемый к типу.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, представляющий сопоставление типа платформы .NET Framework с элементом схемы XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">Генерирует сопоставление элемента схемы XML для указанного типа платформы .NET Framework с помощью указанных типа, атрибута и пространства имен.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Тип .NET Framework, для которого требуется сгенерировать сопоставления типа.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Атрибут <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, применяемый к типу.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Используемое по умолчанию пространство имен XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, содержащий внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">Включает сопоставления для типа для последующего использования при вызове методов импорта.</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">Тип .NET Framework, для которого требуется сохранить информацию о сопоставлении типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">Включает сопоставления для производных типов для последующего использования при вызове методов импорта.</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">Экземпляр класса <see cref="T:System.Reflection.ICustomAttributeProvider" />, содержащий пользовательские атрибуты, унаследованные от атрибута <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Обеспечивает сопоставление между объектами кода в методах веб-служб .NET Framework и содержимым сообщений WSDL, определенных для веб-служб SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlReflectionMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">Получает или задает значение, которое указывает, представляет ли объект <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> возвращаемое значение метода веб-службы, в противоположность выходному параметру.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если член представляет возвращаемое значение веб-службы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">Получает или задает имя члена метода веб-службы для данного сопоставления.</summary>
      <returns vsli:raw="The name of the Web service method.">Имя метода веб-службы.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">Получает или задает объект кода члена метода веб-службы, представленного данным сопоставлением.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">Значение <see cref="T:System.Type" /> для объекта кода члена метода веб-службы, представленного данным сопоставлением.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">Возвращает или задает значение, которое указывает, что атрибут <c>isNullable</c> соответствующего определения XML-элемента имеет значение <see langword="false" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для переопределения свойства <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">Получает или задает объект <see cref="T:System.Xml.Serialization.SoapAttributes" /> с коллекцией атрибутов SOAP, примененных к этому объекту кода члена.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">Объект <see cref="T:System.Xml.Serialization.SoapAttributes" />, содержащий объекты, которые представляют атрибуты SOAP, примененные к данному члену.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">Получает или задает объект <see cref="T:System.Xml.Serialization.XmlAttributes" /> с коллекцией атрибутов <see cref="T:System.Xml.Serialization.XmlSerializer" />, примененных к этому объекту кода члена.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">Объект <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий атрибуты XML, которые были применены к данному коду члена.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Обеспечивает итерацию над коллекцией объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">Объект <see cref="T:System.Xml.Serialization.XmlSchemas" />, над которым требуется выполнить итерацию.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Получает текущий элемент в коллекции.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">Текущий объект <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекции.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">Освобождает все ресурсы, занятые модулем <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">Переводит перечисление к следующему элементу в коллекции.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> при успешном перемещении, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Возвращает текущий элемент в коллекции объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Текущий элемент в коллекции объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Устанавливает перечислитель в исходное положение перед первым элементом коллекции объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">Заполняет объекты <see cref="T:System.Xml.Schema.XmlSchema" /> объявлениями элементов схемы XML, обнаруженными в объектах сопоставления типов.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />, к которой добавляются обнаруженные объявления элементов из сопоставления типов.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">Экспортирует элемент &lt;any&gt; в объект <see cref="T:System.Xml.Schema.XmlSchema" />, определяемый указанным пространством имен.</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">Пространство имен для документа схемы XML, в которое необходимо добавить элемент &lt;any&gt;.</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">Произвольное имя, присваиваемое объявлению элемента &lt;any&gt;.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Добавляет объявление элемента для объекта или типа к сообщению SOAP или к объекту <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">Объект <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, содержащий сопоставления для экспорта.</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">Строка "any" с добавленным целым числом.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">Добавляет объявление элемента к применимой <see cref="T:System.Xml.Schema.XmlSchema" /> для каждой из частей элементов литерального определения сообщения SOAP.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Сопоставления внутреннего типа платформы .NET Framework для частей элементов определения сообщения языка описания веб-служб (WSDL).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">Добавляет объявление элемента к применимой <see cref="T:System.Xml.Schema.XmlSchema" /> для каждой из частей элементов литерального определения сообщения SOAP, а также указывает необходимость включения заключенных элементов.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">Внутреннее сопоставление между типом .NET Framework и элементом схемы XML.</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если элементы схемы, которые заключаются в схеме, требуется включить; в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">Добавляет объявление элемента к применимому объекту <see cref="T:System.Xml.Schema.XmlSchema" /> для одной части элементов литерального определения сообщения SOAP.</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Сопоставления внутреннего типа платформы .NET Framework для частей элементов определения сообщения языка описания веб-служб (WSDL).</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий полное имя XML, экспортированного объявления элемента.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Добавляет объявление элемента для типа платформы .NET Framework к применимому объекту <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">Внутреннее сопоставление между типом .NET Framework и элементом схемы XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">Создает внутренние сопоставления типам .NET Framework для объявлений элементов XML-схемы, включая части литеральных XSD-сообщений в документе WSDL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, принимая коллекцию объектов <see cref="T:System.Xml.Schema.XmlSchema" />, представляющих XML-схемы, используемые литеральными SOAP сообщениями, определенными в документе WSDL.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, принимая коллекцию объектов <see cref="T:System.Xml.Schema.XmlSchema" />, представляющих XML-схемы, используемые литеральными SOAP сообщениями, и классы, создаваемые для привязок, определенных в документе WSDL.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">Объект <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">Объект <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, указывающий коллекцию классов, создаваемых для привязок, определенных в документе WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">Создает сведения о внутреннем сопоставлении типа для одноэлементной литеральной (SOAP) части, определенной в документе WSDL.</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает имя типа элемента, для которого создается тип .NET Framework.</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">Имя элемента части в документе WSDL.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> представляет сопоставление типа платформы .NET Framework для одноэлементной части определения сообщения WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Создает сведения о внутреннем сопоставлении типов для элемента, определенного в документе схемы XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает имя элемента, определенного в документе XML-схемы.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Базовый тип для типа платформы .NET Framework, создаваемый для соответствия типу XSD-элемента.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> представляет сведения о сопоставлении типа платформы .NET Framework для элемента XML-схемы.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">Создает сведения о внутреннем сопоставлении типа для элемента, определенного в документе XML-схемы, или являющегося частью документа WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает имя элемента, определенного в документе XML-схемы.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Базовый тип для типа платформы .NET Framework, создаваемый для соответствия типу XSD-элемента.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если тип, соответствующий XSD-элементу, может косвенно наследовать от базового типа; в противном случае, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Сведения о сопоставлении типа платформы .NET Framework для элемента XML-схемы.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Создает сведения о внутреннем сопоставлении типа для частей элементов литерального SOAP сообщения, определенного в документе WSDL.</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">Имя элемента, для которого создается сопоставление.</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">Пространство имен элемента, для которого создается сопоставление.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">Массив экземпляров <see cref="T:System.Xml.Serialization.SoapSchemaMember" />, указывающий члены элемента, для которого создается сопоставление.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> содержит сведения о сопоставлении типа.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">Создает сведения о внутреннем сопоставлении типа для одноэлементной части литерального SOAP сообщения, определенного в документе WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">
        <see cref="T:System.Xml.XmlQualifiedName" /> определяет имя части сообщения.</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">Сопоставление типа платформы .NET Framework для определения сообщения WSDL, содержащего одноэлементную часть.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Создает сведения о внутреннем сопоставлении типа для частей элементов литерального SOAP сообщения, определенного в документе WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Массив типа <see cref="T:System.Xml.XmlQualifiedName" />, указывающий имена частей сообщения.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> представляет сопоставления типа платформы .NET Framework для частей элементов определения сообщения WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Создает сведения о внутреннем сопоставлении типа для частей элементов литерального SOAP сообщения, определенного в документе WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Массив типа <see cref="T:System.Xml.XmlQualifiedName" />, указывающий имена частей сообщения.</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">Базовый тип для всех типов .NET Framework, создаваемых для соответствия частям сообщения.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если тип, соответствующий части сообщения, может косвенно наследовать от базового типа; в противном случае <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">Сопоставления типа платформы .NET Framework для частей элементов определения сообщения WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Создает сведения о внутреннем сопоставлении типов для элемента, определенного в документе схемы XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает XML-элемент.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Объект <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, описывающий сопоставление типа.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Создает сведения о внутреннем сопоставлении типов для элемента, определенного в документе схемы XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает XML-элемент.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Объект <see cref="T:System.Type" />, указывающий базовый тип.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Объект <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, описывающий сопоставление типа.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Создает сведения о внутреннем сопоставлении типов для элемента, определенного в документе схемы XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает XML-элемент.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Объект <see cref="T:System.Type" />, указывающий базовый тип.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">
        <see cref="T:System.Boolean" /> значение, указывающее, может ли создаваемый тип косвенно наследовать от <paramref name="baseType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Объект <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, описывающий сопоставление типа.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Создает сведения о внутреннем сопоставлении типов для элемента, определенного в документе схемы XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает имя элемента, определенного в документе XML-схемы.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Сведения о сопоставлении типа платформы .NET Framework для элемента XML-схемы.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">Представляет коллекцию XML-схем.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">Добавляет объект в конец коллекции.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, добавляемый в коллекцию объектов.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Индекс, по которому добавляется <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Добавляет в коллекцию объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий ссылку на сборку.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">Добавляемый объект <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">
        <see cref="T:System.Uri" /> объекта схемы.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Индекс, по которому добавляется <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">Добавляет экземпляр класса <see cref="T:System.Xml.Serialization.XmlSchemas" /> в конец коллекции.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">Объект <see cref="T:System.Xml.Serialization.XmlSchemas" />, добавляемый в конец коллекции.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Добавляет в коллекцию объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий ссылку на сборку.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">Добавляемый объект <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">Обрабатывает имена атрибутов и элементов в XML-схемах и, при необходимости, проверяет XML-схемы.</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />, указывающий метод обратного вызова, который обрабатывает ошибки и предупреждения в процессе проверки XML-схемы, если строгий параметр имеет значение <see langword="true" />.</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> — проверять XML-схемы в коллекции при помощи метода <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> класса <see cref="T:System.Xml.Serialization.XmlSchemas" />; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">Возвращает значение, указывающее, содержит ли коллекция объект <see cref="T:System.Xml.Schema.XmlSchema" />, принадлежащий к определенному пространству имен.</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">Пространство имен проверяемого элемента.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если элемент найден; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">Определяет, содержит ли <see cref="T:System.Xml.Serialization.XmlSchemas" /> определенную схему.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который требуется обнаружить.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если коллекция содержит указанный элемент; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">Копирует <see cref="T:System.Xml.Serialization.XmlSchemas" /> целиком в совместимый одномерный <see cref="T:System.Array" />, который начинается с указанного индекса целевого массива.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Одномерный <see cref="T:System.Array" />, в который копируются схемы из <see cref="T:System.Xml.Serialization.XmlSchemas" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">32-разрядное целое число, представляющее собой индекс массива, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">Находит <see cref="T:System.Xml.Schema.XmlSchemaObject" /> определенного типа и с указанным именем в одной из XML-схем.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">
        <see cref="T:System.Xml.XmlQualifiedName" />, указывающий полное имя с использованием пространства имен для обнаружения объекта <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекции.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">
        <see cref="T:System.Type" /> искомого объекта. Возможные типы: <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">Экземпляр <see cref="T:System.Xml.Schema.XmlSchemaObject" />, такой как <see cref="T:System.Xml.Schema.XmlSchemaElement" /> или <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">Получает коллекцию схем, принадлежащих к тому же пространству имен.</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">Пространство имен извлекаемых схем.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">Реализация <see cref="T:System.Collections.IList" />, содержащая схемы.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Выполняет поиск указанной схемы и возвращает начинающийся с нуля индекс первого вхождения в пределах <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">Искомый объект <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">Начинающийся с нуля индекс первого вхождения значения в пределах <see cref="T:System.Xml.Serialization.XmlSchemas" />, если таковое обнаружено; в противном случае -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">Вставляет схему в <see cref="T:System.Xml.Serialization.XmlSchemas" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="schema" />.</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который требуется вставить.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">Получает значение, которое указывает, выполнялась ли компиляция схем.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если схемы компилировались; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">Статический метод, определяющий, содержит ли указанная XML-схема настраиваемый атрибут <see langword="IsDataSet" /> со значением <see langword="true" /> или его эквивалент.</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">XML-схема для поиска атрибута <see langword="IsDataSet" /> со значением <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если указанная схема существует; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">Возвращает или задает объект <see cref="T:System.Xml.Schema.XmlSchema" /> по указанному индексу.</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">Индекс извлекаемого элемента.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">Указанный <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">Получает указанный объект <see cref="T:System.Xml.Schema.XmlSchema" />, который представляет XML-схему, связанную с указанным пространством имен.</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">Пространство имен указанного объекта.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Указанный объект <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Осуществляет дополнительные пользовательские действия при удалении содержимого экземпляра класса <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Выполняет дополнительные пользовательские действия перед вставкой нового элемента в экземпляр класса <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Отсчитываемый с нуля индекс, по которому должен быть вставлен параметр <paramref name="value" />.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Новое значение элемента по индексу <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Осуществляет дополнительные пользовательские действия при удалении элемента из экземпляра класса <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Отсчитываемый с нуля индекс, по которому может быть найдено значение <paramref name="value" />.</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">Значение удаляемого элемента в <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Выполняет дополнительные пользовательские действия перед заданием значения в экземпляре класса <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Отсчитываемый с нуля индекс, по которому может быть найдено значение <paramref name="oldValue" />.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Значение, которое требуется заменить на <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Новое значение элемента по индексу <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Удаляет первое вхождение определенной схемы из <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">Объект <see cref="T:System.Xml.Schema.XmlSchema" /> для удаления.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">Возвращает перечислитель, который используется для итерации по коллекции схем XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">Делегат, используемый классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> для десериализации типов данных XML с кодированием SOAP, которые сопоставлены коллекциям перечислений.</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">Коллекция, в которую копируется массив элементов коллекции.</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">Массив элементов, которые должны быть скопированы в <c>коллекцию объектов</c>.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">Делегат, используемый классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> для десериализации XML-данных с кодировкой SOAP.</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">Экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />, содержащий объект для исправления и массив строковых идентификаторов для заполнения элементов.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">Абстрактный класс, который является базовым классом для <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> и <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, содержит методы, общие для обоих этих типов.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">Инициализирует экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">Делегат, используемый классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> для десериализации типов из некорневых данных XML с кодировкой SOAP.</summary>
      <returns vsli:raw="The object returned by the callback.">Объект, возвращаемый функцией обратного вызова.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Управляет десериализацией с помощью класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">Сохраняет объект, содержащий метод обратного вызова, который будет при необходимости вызван, с целью заполнения коллекций или перечислений .NET Framework, соответствующих SOAP-кодированным массивам или SOAP-кодированным элементам с несколькими ссылками.</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">Входные данные методов делегата <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> и обратного вызова.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">Сохраняет объект, содержащий экземпляр метода обратного вызова, который будет при необходимости вызван, с целью заполнения объектов в SOAP-кодированном массиве.</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">Входные данные методов делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> и обратного вызова.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">Сохраняет реализацию делегата <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> и его входных данных для последующего вызова.</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">Имя десериализуемого типа платформы .NET Framework.</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">Пространство имен десериализуемого типа платформы .NET Framework.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">Десериализуемый <see cref="T:System.Type" />.</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">Делегат <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">Сохраняет объект, десериализуемый из SOAP-кодированного элемента <see langword="multiRef" />, для последующего доступа посредством метода <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">Значение атрибута <see langword="id" /> элемента <see langword="multiRef" />, идентифицирующее элемент.</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">Объект, десериализуемый из элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">Проверяет увеличен ли десериализатор.</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">Текущий <see langword="count" /> в цикле "while".</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">Текущий контекст <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> не увеличен.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">Удаляет все вхождения знаков пустого пространства от начала и до конца заданной строки.</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">Строка с пустыми пространствами будет сокращена.</param>
      <returns vsli:raw="The trimmed string.">Сокращенная строка.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">Содержит экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> и входные данные метода, а также предоставляет параметры метода</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> с параметрами для метода обратного вызова.</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">Коллекция, в которую метод обратного вызова копирует массив элементов коллекции.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Метод, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">Массив, в который метод обратного вызова копирует коллекцию.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Возвращает метод обратного вызова, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">Делегат <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />, указывающий на метод обратного вызова.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">Возвращает коллекцию <paramref name="object collection" /> для метода обратного вызова.</summary>
      <returns vsli:raw="The collection that is used for the fixup.">Коллекция, используемая для исправления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">Возвращает массив, в который метод обратного вызова копирует коллекцию.</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">Массив, в который метод обратного вызова копирует коллекцию.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что десериализуемый объект должен быть абстрактным.</summary>
      <param name="name" vsli:raw="The name of the abstract type.">Имя абстрактного типа.</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">Пространство имен .NET Framework абстрактного типа.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">Заполняет объект из его представления XML в текущем расположении <see cref="T:System.Xml.XmlReader" /> с параметром для чтения внутреннего элемента.</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">Локальное имя производного типа данных схемы XML.</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">Пространство имен производного типа данных схемы XML.</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">Локальное имя базового типа данных схемы XML.</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">Пространство имен базового типа данных схемы XML.</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">Пространство имен производного типа платформы .NET Framework.</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">Имя базового типа платформы .NET Framework.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что десериализуемый объект не может быть создан экземплярно, так как конструктор вызывает исключение безопасности.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Имя типа.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что десериализуемый объект не может быть создан экземплярно, так как конструктор недоступен.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Имя типа.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Создает <see cref="T:System.InvalidCastException" />, указывающий на сбой явного преобразования ссылки.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">
        <see cref="T:System.Type" />, к которому объект не может быть приведен. Данный тип является частью сообщения исключения.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Объект, который не может быть приведен. Данный объект является частью сообщения исключения.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Создает <see cref="T:System.InvalidCastException" />, указывающий на сбой явного преобразования ссылки.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">
        <see cref="T:System.Type" />, к которому объект не может быть приведен. Данный тип является частью сообщения исключения.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Объект, который не может быть приведен. Данный объект является частью сообщения исключения.</param>
      <param name="id" vsli:raw="A string identifier.">Идентификатор строки.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что производный тип, сопоставленный типу данных схемы XML, не может быть обнаружен.</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">Локальное имя типа данных схемы XML с сопоставлением недоступному производному типу.</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">Пространство имен типа данных схемы XML с сопоставлением недоступному производному типу.</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">Полное имя базового типа платформы .NET Framework, для которого невозможно обнаружить производный тип.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что SOAP-кодированный тип коллекции не может быть изменен, а его значения не могут быть заполнены.</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">Полное имя типа платформы .NET Framework, для которого имеется сопоставление.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что значение перечисления неверно.</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">Неверное значение перечисления.</param>
      <param name="enumType" vsli:raw="The enumeration type.">Перечисляемый тип.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что текущее положение <see cref="T:System.Xml.XmlReader" /> представляет неизвестный узел XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что тип неизвестен.</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя неизвестного типа.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">Возвращает или задает значение, определяющее транслируются ли строки XML в допустимые имена типов .NET Framework.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если строки XML декодируются в допустимые имена типов .NET Framework, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">Получает объект документа XML, в который десериализуется документ XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">
        <see cref="T:System.Xml.XmlDocument" />, представляющий десериализованные данные <see cref="T:System.Xml.XmlDocument" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">Обеспечивает наличие достаточного объема заданного массива или копии для содержания определенного индекса.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">Проверяемый <see cref="T:System.Array" />.</param>
      <param name="index" vsli:raw="The required index.">Требуемый индекс.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">
        <see cref="T:System.Type" /> элементов массива.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">Существующий <see cref="T:System.Array" />, если уже объем достаточен, в противном случае новый больший массив, содержащий оригинальные элементы массива</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">Вмещает <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> экземпляр делегата, а также входные данные метода; кроме того, служит параметром метода.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Объект, содержащий прочие объекты, значения которых заполняются посредством реализации обратного вызова.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Метод, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Размер строкового массива, полученный с помощью свойства <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Объект, содержащий прочие объекты, значения которых заполняются посредством реализации обратного вызова.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Метод, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Строковый массив, полученный с помощью свойства <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Получение метода обратного вызова, создающего экземпляра делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Метод обратного вызова, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">Получает или задает массив ключей для объектов, принадлежащих свойству <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" />, значения которого заполняются посредством реализации обратного вызова.</summary>
      <returns vsli:raw="The array of keys.">Массив ключей.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">Получает или задает объект, содержащий прочие объекты, значения которых заполняются посредством реализации обратного вызова.</summary>
      <returns vsli:raw="The source containing objects with values to fill.">Источник, который содержит объекты со значениями, подлежащими заполнению.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">Заполняет значения SOAP-кодированного массива, тип данных которого сопоставлен со ссылочным типом .NET Framework.</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">Объект, содержащий массив с заполненными значениями.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Получает длину SOAP-кодированного массива, в котором на текущий момент размещен <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="name" vsli:raw="The local name that the array should have.">Локальное имя, которое должен иметь массив.</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">Пространство имен, которое должен иметь массив.</param>
      <returns vsli:raw="The length of the SOAP array.">Длина массива SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">Определяет, имеет ли элемент XML, в котором на текущий момент расположен <see cref="T:System.Xml.XmlReader" />, нулевой атрибут с установленным значением <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Xml.XmlReader" /> расположен на текущий момент над нулевым атрибутом со значением <see langword="true" />, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">Получает объект, десериализуемый из SOAP-кодированного элемента <see langword="multiRef" />, который сохранен ранее посредством <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">Значение атрибута <see langword="id" /> элемента <see langword="multiRef" />, идентифицирующее элемент.</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Объект, десериализуемый из SOAP-кодированного элемента <see langword="multiRef" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Получает значение атрибута <see langword="xsi:type" /> для элемента XML в текущем положении <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">Полное имя XML, указывающее тип данных элемента XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">Инициализирует методы обратных вызовов, заполняющие объекты, соответствующие SOAP-кодированным данным XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">Сохраняет имена элементов и атрибутов в объекте <see cref="T:System.Xml.NameTable" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">Возвращает или задает значение, которое должно представлять значение <see langword="true" /> для возвращаемого значения SOAP 1.1.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">
        <see langword="true" />, если значение является возвращаемым значением.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">Определяет указывает ли имя атрибута XML пространство имен XML.</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">Имя атрибута XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если имя атрибута XML указывает пространство имен XML; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">Устанавливает значение атрибута XML, если он является типом <see langword="arrayType" /> из пространства имен языка описания веб-служб (WSDL).</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">
        <see cref="T:System.Xml.XmlAttribute" />, который может быть типом <see langword="wsdl:array" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">Позволяет <see cref="T:System.Xml.XmlReader" /> считать полное имя элемента, в котором на текущий момент размещается.</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">Полное имя текущего элемента XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">Позволяет <see cref="T:System.Xml.XmlReader" /> считывать закрывающий тег XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Получает объект <see cref="T:System.Xml.XmlReader" />, используемый <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />, который используется <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Получает текущий подсчет <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Текущий подсчет <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения текущего элемента XML, если элемент имеет нулевой атрибут со значением "true".</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если считанный элемент имеет значение атрибута null="true"; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">Инструктирует <see cref="T:System.Xml.XmlReader" /> для считывания полного имени элемента, в котором на текущий момент размещается.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">Объект <see cref="T:System.Xml.XmlQualifiedName" />, представляющий полное имя текущего XML-элемента; в противном случае <see langword="null" /> при наличии значения атрибута null="true".</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения простого текстового элемента XML, который может иметь значение <see langword="null" />.</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Значение строки, в противном случае <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">Считывает значение атрибута <see langword="href" /> (<see langword="ref" /> атрибут для SOAP 1.2), используемого для ссылки на элемент XML в кодировании SOAP.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Выходная строка, в которую считывается значение атрибута <see langword="href" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> при успешном считывании значения, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Десериализует объект из SOAP-кодированного элемента XML <see langword="multiRef" />.</summary>
      <returns vsli:raw="The value of the referenced element in the document.">Значение ссылочного элемента в документе.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Десериализует объект из SOAP-кодированного элемента XML <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Локальное имя типа данных схемы XML элемента.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Пространство имен типа данных схемы XML элемента.</param>
      <returns vsli:raw="The value of the referenced element in the document.">Значение ссылочного элемента в документе.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">Десериализует объекты из SOAP-кодированных элементов XML <see langword="multiRef" /> в сообщении SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на элемент <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Локальное имя типа данных схемы XML элемента.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Пространство имен типа данных схемы XML элемента.</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если имя элемента также является именем типа данных схемы XML, в противном случае <see langword="false" />.</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">Выходная строка, в которую считывается значение атрибута <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на элемент <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Локальное имя типа данных схемы XML элемента.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Пространство имен типа данных схемы XML элемента.</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Выходная строка, в которую считывается значение атрибута <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на элемент <see langword="multiRef" />.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Выходная строка, в которую считывается значение атрибута <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Заполняет объект из представления XML в текущем расположении <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" />, соответствующий текущей позиции в <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Объект, реализующий интерфейс <see cref="T:System.Xml.Serialization.IXmlSerializable" /> с заполнением его членов из положения <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Этот метод поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода.</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">Объект IXmlSerializable, соответствующий текущей позиции XMLReader.</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">Указывает, имеется ли оболочка для сериализуемого объекта.</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">Объект, реализующий интерфейс IXmlSerializable с заполнением его членов из расположения XmlReader.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Производит результат вызова к методу <see cref="M:System.Xml.XmlReader.ReadString" />, добавленного к входному значению.</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">Строка для префикса к результату вызова к методу <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Результат вызова к методу <see cref="M:System.Xml.XmlReader.ReadString" />, добавленного к входному значению.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">Возвращает результат вызова к методу <see cref="M:System.Xml.XmlReader.ReadString" /> класса <see cref="T:System.Xml.XmlReader" />, который при необходимости сокращен путем удаления пустого пространства и добавлен к входному значению.</summary>
      <param name="value" vsli:raw="A string that will be appended to.">Строка, которая будет добавлена.</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если результат операции считывания должен быть сокращен, в противном случае <see langword="false" />.</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">Результат операции считывания, добавленный к входному значению.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">Считывает элемент XML, допускающий нулевые значения (<see langword="xsi:nil = 'true'" />) и возвращающий универсальное значение <see cref="T:System.Nullable`1" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий простой тип данных для текущего расположения <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">Универсальный шаблон <see cref="T:System.Nullable`1" />, представляющий нулевое значение XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Получает значение узла XML, в котором <see cref="T:System.Xml.XmlReader" /> расположен на текущий момент.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий простой тип данных для текущего расположения <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">Значение узла в качестве типа значения .NET Framework, если значение является простым типом данных схемы XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения корневого элемента документа XML в его текущей позиции.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если метод должен считать контент только после считывания стартового элемента, в противном случае <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">
        <see cref="T:System.Xml.XmlDocument" />, содержащий корневой элемент, который был считан.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения узла XML в его текущей позиции.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, для считывания контента только после считывания стартового элемента, в противном случае <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">
        <see cref="T:System.Xml.XmlNode" />, представляющий узел XML, который был считан.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Сохраняет объект, десериализуемый из SOAP-кодированного элемента <see langword="multiRef" />.</summary>
      <param name="o" vsli:raw="The object to be deserialized.">Десериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Получает динамически сгенерированную сборку по имени.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Полное имя сборки.</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">Динамически сгенерированная <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">Обеспечивает наличие для заданного массива или копии объема, не превышающего определенной длины.</summary>
      <param name="a" vsli:raw="The array that is being checked.">Проверяемый массив.</param>
      <param name="length" vsli:raw="The maximum length of the array.">Максимальная длина массива.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">
        <see cref="T:System.Type" /> элементов массива.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">
        <see langword="true" />, если <see langword="null" /> можно вернуть для массива при наличии для входного массива, в противном случае новый меньший массив.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">Существующий массив <see cref="T:System.Array" />, если он достаточно небольшой; в противном случае новый массив меньшего размера, содержащий элементы исходного массива до размера <paramref name="length" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения значения строки в текущей позиции и возвращения в качестве байтового массива 64.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="true" /> для возврата <see langword="null" />, <see langword="false" /> для возврата байтового массива 64.</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Байтовый массив 64, в противном случае <see langword="null" />, если параметр <paramref name="isNull" /> имеет значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">Производит байтовый массив 64 из входной строки.</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">Строка для трансляции в байтовый массив 64.</param>
      <returns vsli:raw="A base-64 byte array.">Байтовый массив 64.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения значения строки в текущей позиции и возвращения в качестве шестнадцатеричного байтового массива.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="true" /> для возврата <see langword="null" />, <see langword="false" /> для возврата шестнадцатеричного байтового массива.</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Шестнадцатеричный байтовый массив; в противном случае <see langword="null" />, если параметр <paramref name="isNull" /> имеет значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">Создает шестнадцатеричный байтовый массив из входной строки.</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">Строка для преобразования в шестнадцатеричный байтовый массив.</param>
      <returns vsli:raw="A hexadecimal byte array.">Шестнадцатеричный байтовый массив.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">Производит объект <see cref="T:System.Char" /> из входной строки.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Строка для трансляции в объект <see cref="T:System.Char" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Объект <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Производит объект <see cref="T:System.DateTime" /> из входной строки.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">Строка для трансляции в объект класса <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Объект <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Производит объект <see cref="T:System.DateTime" /> из входной строки.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Строка для трансляции в объект <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Объект <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">Производит значение числового перечисления из строки, состоящей из идентификаторов-разделителей, представляющих константы из списка перечислителя.</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">Строка, состоящая из идентификаторов-разделителей, где каждый представляет константу из установленного списка перечислителя.</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">
        <see cref="T:System.Collections.Hashtable" />, состоящий из идентификаторов в качестве ключей и констант как целых чисел.</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">Имя типа перечисления.</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Длинное значение, состоящее из значения перечисления в качестве серий побайтовых операций <see langword="OR" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">Производит <see cref="T:System.DateTime" /> из строки, представляющей время.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Строка для трансляции в объект <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Объект <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Декодирует имя XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Декодируемое имя XML.</param>
      <returns vsli:raw="A decoded string.">Расшифрованная строка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Декодирует имя XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Декодируемое имя XML.</param>
      <returns vsli:raw="A decoded string.">Расшифрованная строка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">Декодирует имя XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Декодируемое имя XML.</param>
      <returns vsli:raw="A decoded string.">Расшифрованная строка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">Декодирует имя XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Декодируемое имя XML.</param>
      <returns vsli:raw="A decoded string.">Расшифрованная строка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">Получает <see cref="T:System.Xml.XmlQualifiedName" /> из имени, которое может содержать префикс.</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">Имя, которое может содержать префикс.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя полного пространства имен XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Объект, который <see cref="T:System.Xml.Serialization.XmlSerializer" /> пытается десериализовать, впоследствии доступный посредством свойства <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" />, представляющий интересующий атрибут.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Объект, который <see cref="T:System.Xml.Serialization.XmlSerializer" /> пытается десериализовать, впоследствии доступный посредством свойства <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" />, представляющий интересующий атрибут.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Список полных имен XML, разделенный запятыми.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">Десериализуемый <see cref="T:System.Object" />.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">
        <see cref="T:System.Xml.XmlElement" />, для которого вызвано событие.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Объект, который <see cref="T:System.Xml.Serialization.XmlSerializer" /> пытается десериализовать, впоследствии доступный посредством свойства <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">
        <see cref="T:System.Xml.XmlElement" />, для которого вызвано событие.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Список полных имен XML, разделенный запятыми.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">Десериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object being deserialized.">Десериализуемый объект.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Список полных имен XML, разделенный запятыми.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">Уникальная строка, используемая для идентификации неиспользуемого объекта, впоследствии доступного посредством свойства <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">Объект, который <see cref="T:System.Xml.Serialization.XmlSerializer" /> пытается десериализовать, впоследствии доступный посредством свойства <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">Делегат, используемый классом <see cref="T:System.Xml.Serialization.XmlSerializer" />, для сериализации типов из SOAP-кодированных некорневых данных XML.</summary>
      <param name="o" vsli:raw="The object being serialized.">Сериализуемый объект.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Представляет абстрактный класс, используемый для управления сериализацией классом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">Сохраняет реализацию делегата <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> и типа, к которым применяется, для последующего вызова.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">
        <see cref="T:System.Type" /> сериализуемых объектов.</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">Имя типа сериализуемых объектов.</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">Пространства имен типа сериализуемых объектов.</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">Экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Создает <see cref="T:System.InvalidOperationException" />, указывающий непредвиденное имя элемента, соответствующее объявлению элемента <see langword="choice" /> схемы XML.</summary>
      <param name="value" vsli:raw="The name that is not valid.">Недопустимое имя.</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">Объявление элемента <see langword="choice" />, которому принадлежит имя.</param>
      <param name="name" vsli:raw="The expected local name of an element.">Ожидаемое локальное имя элемента.</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">Ожидаемое пространство имен элемента.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> неверно применен к члену. Допустимы только члены типа <see cref="T:System.Xml.XmlNode" /> или члены, унаследованные от <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">Объект, представляющий недопустимый член.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> неверно применен к члену. Допустимы только члены типа <see cref="T:System.Xml.XmlNode" /> или члены, унаследованные от <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">Недопустимый <see cref="T:System.Type" />.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">Создает <see cref="T:System.InvalidOperationException" />, указывающий на сбой при записи массива, где применяется объявление элемента <see langword="choice" /> схемы XML.</summary>
      <param name="type" vsli:raw="The type being serialized.">Сериализуемый тип.</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Имя для объявления декларации <see langword="choice" />.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">Создает <see cref="T:System.InvalidOperationException" /> для недопустимого значения перечисления.</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">Объект, представляющий недопустимое перечисление.</param>
      <param name="typeName" vsli:raw="The XML type name.">Имя типа XML.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что значение для элемента XML не соответствует типу перечисления.</summary>
      <param name="value" vsli:raw="The value that is not valid.">Неверное значение.</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">Имя элемента XML с недопустимым значением.</param>
      <param name="enumValue" vsli:raw="The valid value.">Верное значение.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">Создает <see cref="T:System.InvalidOperationException" />, указывающий, что элемент XML, который должен соответствовать объявлению элемента <see langword="any" /> схемы XML, не может быть обработан.</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">Элемент XML, который не может быть обработан.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Создает объект <see cref="T:System.InvalidOperationException" />, указывающий, что сериализуемый тип не используется допустимым образом, либо возникает непредвиденно.</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">Объект, тип которого не может быть сериализован.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Создает объект <see cref="T:System.InvalidOperationException" />, указывающий, что сериализуемый тип не используется допустимым образом, либо возникает непредвиденно.</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">Тип, который не может быть сериализован.</param>
      <returns vsli:raw="The newly created exception.">Только что созданное исключение.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">Получает или задает значение, указывающее, используется ли метод <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> для записи допустимого XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если метод <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> возвращает кодированное имя, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">Обрабатывает байтовый массив 64.</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Массив 64 <see cref="T:System.Byte" />.</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">Тот же байтовый массив, который был передан в качестве аргумента.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">Производит строку из ввода шестнадцатеричного байтового массива.</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">Шестнадцатеричный байтовый массив для трансляции в строку.</param>
      <returns vsli:raw="The byte array value converted to a string.">Значение байтового массива преобразуется в строку.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Производит строку из ввода <see cref="T:System.Char" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">Объект <see cref="T:System.Char" /> для трансляции в строку.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">Значение <see cref="T:System.Char" /> преобразуется в строку.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Производит строку из объекта <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">Объект <see cref="T:System.DateTime" /> для трансляции в строку.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">Представление строкой <see cref="T:System.DateTime" />, которая отображает дату, а не время.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Производит строку из ввода <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">Объект <see cref="T:System.DateTime" /> для трансляции в строку.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">Представление строкой <see cref="T:System.DateTime" />, которая отображает дату и время.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">Производит строку, состоящую из идентификаторов-разделителей, представляющих члены перечисления, которые были установлены.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Значение перечисления в качестве серии побитовых операций <see langword="OR" />.</param>
      <param name="values" vsli:raw="The enumeration's name values.">Значения имени перечисления.</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">Значения констант перечисления.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">Строка, состоящая из идентификаторов-разделителей, в которых каждый представляет член из установленного списка перечислителя.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">Принимает числовое значение перечисления, а также имена и константы из списка перечислителя для перечисления и возвращает строку, состоящую из идентификаторов-разделителей, представляющих заданные члены перечисления.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Значение перечисления в качестве серии побитовых операций <see langword="OR" />.</param>
      <param name="values" vsli:raw="The values of the enumeration.">Значение перечисления.</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">Константы перечисления.</param>
      <param name="typeName" vsli:raw="The name of the type.">Имя типа.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">Строка, состоящая из идентификаторов-разделителей, где каждый элемент является одним из значений, заданным путем побитовой операции.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Производит строку из объекта <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">
        <see cref="T:System.DateTime" />, транслируемый в строку.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">Представление строкой <see cref="T:System.DateTime" />, которая отображает время, а не дату.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">Кодирует допустимое имя XML путем замены символов, которые недопустимы с escape-последовательностями.</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">Строка для использования в качестве имени XML.</param>
      <returns vsli:raw="An encoded string.">Закодированная строка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">Кодирует допустимое локальное имя XML путем замены символов, которые недопустимы с escape-последовательностями.</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">Строка для использования в качестве локального (полного) имени XML.</param>
      <returns vsli:raw="An encoded string.">Закодированная строка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">Кодирует имя XML.</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">Кодируемое имя XML.</param>
      <returns vsli:raw="An encoded string.">Закодированная строка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">Кодирует последовательности с разделениями пробелами имен XML в единое имя XML.</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">Кодируемая последовательность с разделениями пробелами имен XML.</param>
      <returns vsli:raw="An encoded string.">Закодированная строка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">Возвращает полное имя XML с замененными на escape-последовательностями недопустимыми символами.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий записываемый XML.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Полное имя XML с замененными на escape-последовательности недопустимыми символами.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">Производит строку, которая может быть записана в качестве полного имени XML, где недопустимые символы заменяются escape-последовательностями.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий записываемый XML.</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для игнорирования пустых пробелов в строке, в противном случае <see langword="false" />.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Полное имя XML с замененными на escape-последовательности недопустимыми символами.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">Инициализирует экземпляры делегата <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> для сериализации SOAP-кодированных XML-данных.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">Получает или задает список объектов полных имен XML, содержащий пространства имен и префиксы, используемые для производства полных имен в документах XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">
        <see cref="T:System.Collections.ArrayList" />, содержащий пары пространства имен и префикса.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Получает динамически сгенерированную сборку по имени.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Полное имя сборки.</param>
      <returns vsli:raw="A dynamically generated assembly.">Динамически сгенерированная сборка.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">Инициализирует ссылки объекта только при сериализации кодированного SOAP сообщения SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">Инструктирует объект <see cref="T:System.Xml.XmlWriter" /> для записи атрибута XML без заданного для его имени пространства имен.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Локальное имя атрибута XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">Значение атрибута XML в качестве байтового массива.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">Инструктирует <see cref="T:System.Xml.XmlWriter" /> для записи атрибута XML без заданного для его имени пространства имен.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Локальное имя атрибута XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Значение атрибута XML в качестве строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">Инструктирует объект <see cref="T:System.Xml.XmlWriter" /> для записи атрибута XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Локальное имя атрибута XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Пространство имен атрибута XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">Значение атрибута XML в качестве байтового массива.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">Записывает атрибут XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Локальное имя атрибута XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Пространство имен атрибута XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Значение атрибута XML в качестве строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">Записывает атрибут XML, где префикс пространства имен предоставляется вручную.</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">Префикс пространства имен для записи.</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Локальное имя атрибута XML.</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">Пространство имен, представленное префиксом.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Значение атрибута XML в качестве строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">Записывает объект узла XML в основную часть названного элемента XML.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">узел XML для записи; возможно, дочерний элемент XML.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Локальное имя родительского элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">Пространства имен родительского элемента XML для записи.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для записи атрибута <see langword="xsi:nil='true'" />, если сериализуется объект <see langword="null" />, в противном случае <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для указания того, что узел, являющийся элементом XML, соответствует объявлению элемента <see langword="any" /> схеме XML, в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">Инструктирует объект <see cref="T:System.Xml.XmlWriter" /> для записи объекта <see cref="T:System.Xml.XmlNode" /> в основную часть названного элемента XML.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">узел XML для записи; возможно, дочерний элемент XML.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Локальное имя родительского элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">Пространства имен родительского элемента XML для записи.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для записи атрибута <see langword="xsi:nil='true'" />, если сериализуется объект <see langword="null" />, в противном случае <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для указания того, что узел, являющийся элементом XML, соответствует объявлению элемента <see langword="any" /> схеме XML, в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Записывает XML-элемент с заданным полным именем в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Имя для записи с помощью его префикса при квалифицированном пространстве имен в тексте элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Записывает XML-элемент с заданным полным именем в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Имя для записи с помощью его префикса при квалифицированном пространстве имен в тексте элемента.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Записывает XML-элемент с заданным полным именем в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Имя для записи с помощью его префикса при квалифицированном пространстве имен в тексте элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Записывает XML-элемент с заданным полным именем в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Имя для записи с помощью его префикса при квалифицированном пространстве имен в тексте элемента.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">Локальное имя элемента XML для записи без квалификации пространства имен.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Пространство имен XML-элемента.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Записывает XML-элемент с заданным значением в его основной части.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Локальное имя элемента XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Текстовое значение элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Записывает элемент XML с пустой основной частью.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Записывает элемент XML с пустой основной частью.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Записывает тег элемента <see langword="&lt;closing&gt;" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Записывает тег элемента <see langword="&lt;closing&gt;" />.</summary>
      <param name="o" vsli:raw="The object being serialized.">Сериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Записывает атрибут <see langword="id" />, появляющийся в SOAP-кодированном элементе <see langword="multiRef" />.</summary>
      <param name="o" vsli:raw="The object being serialized.">Сериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">Записывает атрибуты объявления пространства имен.</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">Пространство имен XML для объявления.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Записывает XML-элемент, основная часть которого содержит допустимое полное имя XML. Объект <see cref="T:System.Xml.XmlWriter" /> вставляет атрибут <see langword="xsi:nil='true'" />, если строковое значение <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Полное имя XML для записи в основную часть элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Записывает XML-элемент, основная часть которого содержит допустимое полное имя XML. Объект <see cref="T:System.Xml.XmlWriter" /> вставляет атрибут <see langword="xsi:nil='true'" />, если строковое значение <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Полное имя XML для записи в основную часть элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Записывает XML-элемент, содержащий строку как основную часть. Объект <see cref="T:System.Xml.XmlWriter" /> вставляет атрибут <see langword="xsi:nil='true'" />, если строковое значение <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Строка для записи в основную часть элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Записывает байтовый массив как основную часть XML-элемента. Объект <see cref="T:System.Xml.XmlWriter" /> вставляет атрибут <see langword="xsi:nil='true'" />, если строковое значение <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">Байтовый массив для записи в основную часть элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Записывает XML-элемент, содержащий строку как основную часть. Объект <see cref="T:System.Xml.XmlWriter" /> вставляет атрибут <see langword="xsi:nil='true'" />, если строковое значение <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Строка для записи в основную часть элемента XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Имя типа данных схемы XML для записи в атрибут <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Записывает XML-элемент, содержащий строку как основную часть. Объект <see cref="T:System.Xml.XmlWriter" /> вставляет атрибут <see langword="xsi:nil='true'" />, если строковое значение <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Строка для записи в основную часть элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Записывает байтовый массив как основную часть XML-элемента. Объект <see cref="T:System.Xml.XmlWriter" /> вставляет атрибут <see langword="xsi:nil='true'" />, если строковое значение <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">Байтовый массив для записи в основную часть элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Записывает XML-элемент, содержащий строку как основную часть. Объект <see cref="T:System.Xml.XmlWriter" /> вставляет атрибут <see langword="xsi:nil='true'" />, если строковое значение <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Строка для записи в основную часть элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Записывает элемент XML с атрибутом <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Записывает элемент XML с атрибутом <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Записывает элемент XML с атрибутом <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Записывает элемент XML с атрибутом <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Записывает XML-элемент сообщения SOAP, содержащий ссылку на XML-элемент <see langword="&lt;multiRef&gt;" /> для заданного объекта.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Объект, который сериализуется в текущем элементе XML, либо в элементе <see langword="multiRef" /> со ссылкой от текущего элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Записывает XML-элемент сообщения SOAP, содержащий ссылку на XML-элемент <see langword="&lt;multiRef&gt;" /> для заданного объекта.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Объект, который сериализуется в текущем элементе XML, либо в элементе <see langword="multiRef" /> со ссылкой от текущего элемента.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Тип, хранимый в сопоставлении типа объекта (в отличие от типа объекта, обнаруживаемого непосредственно с помощью операции <see langword="typeof" />).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Записывает XML-элемент сообщения SOAP, содержащий ссылку на XML-элемент <see langword="&lt;multiRef&gt;" /> для заданного объекта.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Объект, который сериализуется в текущем элементе XML, либо в элементе <see langword="multiRef" /> со ссылкой от текущего элемента.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Тип, хранимый в сопоставлении типа объекта (в отличие от типа объекта, обнаруживаемого непосредственно с помощью операции <see langword="typeof" />).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для сериализации объекта непосредственно в элемент XML вместо создания ссылки элемента на другой элемент, содержащий данные; в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">Записывает XML-элемент сообщения SOAP, содержащий ссылку на XML-элемент <see langword="multiRef" /> для заданного объекта.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Объект, который сериализуется в текущем элементе XML, либо в элементе <see langword="multiRef" /> со ссылкой от текущего элемента.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Тип, хранимый в сопоставлении типа объекта (в отличие от типа объекта, обнаруживаемого непосредственно с помощью операции <see langword="typeof" />).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для сериализации объекта непосредственно в элемент XML вместо создания ссылки элемента на другой элемент, содержащий данные; в противном случае <see langword="false" />.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для записи атрибута <see langword="xsi:nil='true'" />, если сериализуется объект <see langword="null" />, в противном случае <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Получает или задает <see cref="T:System.Xml.XmlWriter" />, который используется объектом <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">
        <see cref="T:System.Xml.XmlWriter" /> используется экземпляром класса.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">Сериализует объекты в SOAP-кодированные элементы XML <see langword="multiRef" /> в сообщении SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Записывает XML-элемент сообщения SOAP, содержащий ссылку на элемент <see langword="multiRef" /> для заданного объекта.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Локальное имя ссылающегося элемента для записи.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Локальное пространство имен ссылающегося элемента для записи.</param>
      <param name="o" vsli:raw="The object being serialized.">Сериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Записывает XML-элемент сообщения SOAP, содержащий ссылку на элемент <see langword="multiRef" /> для заданного объекта.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Локальное имя ссылающегося элемента для записи.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Локальное пространство имен ссылающегося элемента для записи.</param>
      <param name="o" vsli:raw="The object being serialized.">Сериализуемый объект.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для записи атрибута <see langword="xsi:nil='true'" />, если сериализуется объект <see langword="null" />, в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">Записывает результирующий элемент SOAP 1.2 RPC с заданным полным именем в его основной части.</summary>
      <param name="name" vsli:raw="The local name of the result body.">Локальное имя атрибута результирующей основной части.</param>
      <param name="ns" vsli:raw="The namespace of the result body.">Пространство имен результирующей основной части.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">Записывает объект, использующий пользовательское форматирование XML в качестве элемента XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Объект, реализующий интерфейс <see cref="T:System.Xml.Serialization.IXmlSerializable" />, использующий пользовательское форматирование XML.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для записи атрибута <see langword="xsi:nil='true'" />, если объект класса <see cref="T:System.Xml.Serialization.IXmlSerializable" /> имеет значение <see langword="null" />, в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">Инструктирует <see cref="T:System.Xml.XmlNode" /> для записи объекта, использующего пользовательское форматирование XML в качестве элемента XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Объект, реализующий интерфейс <see cref="T:System.Xml.Serialization.IXmlSerializable" />, использующий пользовательское форматирование XML.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для записи атрибута <see langword="xsi:nil='true'" />, если объект <see cref="T:System.Xml.Serialization.IXmlSerializable" /> имеет значение <see langword="null" />; в противном случае — значение <see langword="false" />.</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">
        <see langword="true" /> для игнорирования записи открывающего тега элемента, в противном случае <see langword="false" /> для записи открывающего тега элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">Записывает объявление XML, если записывающий элемент размещен в начале документа XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для записи имени элемента с префиксом при его недоступности для заданного пространства имен, в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Объект, сериализуемый в качестве элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Объект, сериализуемый в качестве элемента XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для записи имени элемента с префиксом при его недоступности для заданного пространства имен, в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Локальное имя элемента XML для записи.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Пространство имен элемента XML для записи.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Объект, сериализуемый в качестве элемента XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для записи имени элемента с префиксом при его недоступности для заданного пространства имен, в противном случае <see langword="false" />.</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">Экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, содержащий пары префикса и пространства имен для использования в сгенерированном XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">Записывает элемент XML, текстовая основная часть которого является значением простого типа данных схемы XML.</summary>
      <param name="name" vsli:raw="The local name of the element to write.">Локальное имя элемента для записи.</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">Пространство имен элемента для записи.</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">Объект для сериализации в основной части элемента</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если элемент XML явным образом задает тип текстового значения с помощью атрибута <see langword="xsi:type" />, в противном случае <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">Записывает байтовый массив 64.</summary>
      <param name="value" vsli:raw="The byte array to write.">Байтовый массив для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">Записывает значение заданной строки.</summary>
      <param name="value" vsli:raw="The value of the string to write.">Значение записываемой строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">Записывает заданный <see cref="T:System.Xml.XmlNode" /> в качестве атрибута XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">Записываемый XML-узел.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">Записывает заданный объект <see cref="T:System.Xml.XmlNode" /> в качестве атрибута XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">Записываемый XML-узел.</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">Объект <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (или <see langword="null" />) используется для генерирования значения полного имени для атрибута <see langword="arrayType" /> из пространства имен языка WSDL ("http://schemas.xmlsoap.org/wsdl/").</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">Записывает атрибут <see langword="xsi:type" /> для элемента XML, сериализуемого в документ.</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">Локальное имя типа данных схемы XML.</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">Пространство имен типа данных схемы XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">Сериализует и десериализует объекты в XML-документы и из них. <see cref="T:System.Xml.Serialization.XmlSerializer" /> позволяет контролировать способ кодирования объектов в XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в XML-документы, а также десериализовать XML-документы в объекты заданного типа.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в XML-документы, а также десериализовать XML-документы в объекты заданного типа. Указывает пространство имен по умолчанию для всех XML-элементов.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Пространство имен по умолчанию для всех XML-элементов.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в XML-документы, а также десериализовать XML-документы в объект заданного типа. Если свойство или поле возвращает массив, параметр <paramref name="extraTypes" /> определяет объекты, которые могут быть вставлены в массив.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в XML-документы, а также десериализовать XML-документы в объекты заданного типа. Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка позволяет переопределить с другими классами.</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">Тип сериализуемого объекта.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">Объект <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты типа <see cref="T:System.Object" /> в экземпляры XML-документа, а также десериализовать экземпляры XML-документа в объекты типа <see cref="T:System.Object" />. Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка переопределяет с другими классами. Данная перегрузка также указывает пространство имен по умолчанию для всех XML-элементов и класс для использования в качестве корневого XML-элемента.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, расширяющий или переопределяющий поведение класса, задается в параметре <paramref name="type" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, указывающий свойство корневого XML-элемента.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Пространство имен по умолчанию для всех XML-элементов в XML-документе.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты типа <see cref="T:System.Object" /> в экземпляры XML-документа, а также десериализовать экземпляры XML-документа в объекты типа <see cref="T:System.Object" />. Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка переопределяет с другими классами. Данная перегрузка также указывает пространство имен по умолчанию для всех XML-элементов и класс для использования в качестве корневого XML-элемента.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, расширяющий или переопределяющий поведение класса, задается в параметре <paramref name="type" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, указывающий свойство корневого XML-элемента.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Пространство имен по умолчанию для всех XML-элементов в XML-документе.</param>
      <param name="location" vsli:raw="The location of the types.">Размещение типов.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в XML-документы, а также десериализовать XML-документ в объект заданного типа. Также указывает класс для использования в качестве корневого XML-элемента.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, представляющий свойство корневого XML-элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Инициализирует экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" /> с помощью объекта, сопоставляющего один тип с другим.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, сопоставляющий один тип другому.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">Возвращает значение, указывающее возможность выполнения данным <see cref="T:System.Xml.Serialization.XmlSerializer" /> десериализации XML-документа.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" />, указывающий на документ для десериализации.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> может выполнить десериализацию объекта, на который указывает <see cref="T:System.Xml.XmlReader" />, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">Возвращает объект, используемый для считывания сериализуемого XML-документа.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">Средство чтения <see cref="T:System.Xml.Serialization.XmlSerializationReader" />, используемое для чтения документа XML.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Предпринимаются любые попытки вызова данного метода, когда метод не переопределен в классе-потомке.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">При переопределении в производном классе возвращает модуль записи, использованный при сериализации объекта.</summary>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Экземпляр, реализующий класс <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Предпринимаются любые попытки вызова данного метода, когда метод не переопределен в классе-потомке.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Десериализует XML-документ, содержащийся указанным <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.Stream" />, содержащий XML-документ для десериализации.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> десериализуется.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Десериализует XML-документ, содержащийся указанным <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.TextReader" />, содержащий XML-документ для десериализации.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> десериализуется.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при десериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Десериализует XML-документ, содержащийся указанным <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />, содержащий XML-документ для десериализации.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Предпринимаются любые попытки вызова данного метода, когда метод не переопределен в классе-потомке.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Десериализует XML-документ, содержащийся указанным <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" />, содержащий XML-документ для десериализации.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> десериализуется.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при десериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">Десериализует XML-документ, содержащийся указанным <see cref="T:System.Xml.XmlReader" />, и стиль кодирования.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" />, содержащий XML-документ для десериализации.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Стиль кодирования сериализованного XML.</param>
      <returns vsli:raw="The deserialized object.">Десериализованный объект.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при десериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Десериализует объект с помощью данных, содержащихся в указанном <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, используемый для считывания документа.</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">Используемая кодировка.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Экземпляр класса <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The object being deserialized.">Десериализуемый объект.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">Десериализует XML-документ, содержащийся в указанном <see cref="T:System.Xml.XmlReader" />, и позволяет переопределять события, происходящие во время десериализации.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" />, содержащий документ для десериализации.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Экземпляр класса <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> десериализуется.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">Возвращает массив объектов <see cref="T:System.Xml.Serialization.XmlSerializer" />, созданный из массива объектов <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">Массив <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, сопоставляющий один тип с другим.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Массив объектов <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">Возвращает экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" /> из указанных сопоставлений.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">Массив объектов <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">
        <see cref="T:System.Type" /> десериализованного объекта.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">Возвращает массив объектов <see cref="T:System.Xml.Serialization.XmlSerializer" />, созданный из массива типов.</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">Массив объектов <see cref="T:System.Type" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Массив объектов <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">Возвращает имя сборки, содержащей одну или более версий <see cref="T:System.Xml.Serialization.XmlSerializer" />, которая специально создана для сериализации или десериализации определенного типа.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">Десериализуемый <see cref="T:System.Type" />.</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">Имя сборки, содержащей <see cref="T:System.Xml.Serialization.XmlSerializer" /> для типа.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">Возвращает имя сборки, содержащей сериализатор для заданного типа в определенном пространстве имен.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">Интересуемый <see cref="T:System.Type" />.</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">Пространство имен типа.</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">Имя сборки, содержащей специально собранные сериализаторы.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Сериализует указанный <see cref="T:System.Object" /> и записывает XML-документ в файл с помощью заданного <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.Stream" />, используемый для записи XML-документа.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Object" /> для сериализации.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при сериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">Сериализует указанный <see cref="T:System.Object" /> и записывает XML-документ в файл с помощью заданного <see cref="T:System.IO.Stream" />, ссылающегося на заданные пространства имен.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.Stream" />, используемый для записи XML-документа.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Object" /> для сериализации.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, на который ссылается объект.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при сериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Сериализует указанный <see cref="T:System.Object" /> и записывает XML-документ в файл с помощью заданного <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.TextWriter" />, используемый для записи XML-документа.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Object" /> для сериализации.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">Сериализует указанный объект <see cref="T:System.Object" />, записывает XML-документ в файл с помощью заданного <see cref="T:System.IO.TextWriter" /> и ссылается на заданные пространства имен.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.TextWriter" />, используемый для записи XML-документа.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Object" /> для сериализации.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, содержащий пространства имен для сгенерированного XML-документа.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при сериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Сериализует указанный <see cref="T:System.Object" /> и записывает XML-документ в файл с помощью заданного <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Object" /> для сериализации.</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, используемый для записи XML-документа.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Предпринимаются любые попытки вызова данного метода, когда метод не переопределен в классе-потомке.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Сериализует указанный <see cref="T:System.Object" /> и записывает XML-документ в файл с помощью заданного <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Object" /> для сериализации.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при сериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">Сериализует указанный объект <see cref="T:System.Object" />, записывает XML-документ в файл с помощью заданного <see cref="T:System.Xml.XmlWriter" /> и ссылается на заданные пространства имен.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Object" /> для сериализации.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, на который ссылается объект.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при сериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">Сериализует указанный объект, записывает XML-документ в файл с помощью заданного <see cref="T:System.Xml.XmlWriter" /> и ссылается на заданные пространства имен и стиль кодирования.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа.</param>
      <param name="o" vsli:raw="The object to serialize.">Объект для сериализации.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, на который ссылается объект.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Стиль кодирования сериализованного XML.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Возникла ошибка при сериализации. Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">Сериализует указанный <see cref="T:System.Object" /> и записывает XML-документ в файл с помощью заданных <see cref="T:System.Xml.XmlWriter" />, пространства имен XML и кодирования.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" />, используемый для записи XML-документа.</param>
      <param name="o" vsli:raw="The object to serialize.">Объект для сериализации.</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">Экземпляр <see langword="XmlSerializerNamespaces" />, содержащий пространства имен и префиксы для использования.</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">Кодировка, используемая в документе.</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">Для SOAP-кодированных сообщений используется база для генерирования атрибутов идентификатора.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">Происходит, когда во время десериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> встречает атрибут XML неизвестного типа.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">Происходит, когда во время десериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> встречает XML-элемент неизвестного типа.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">Происходит, когда во время десериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> встречает XML-узел неизвестного типа.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">Происходит во время десериализации SOAP-кодированного потока XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> обнаруживает неиспользуемый тип или тип без ссылок.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">При применении к клиентскому прокси веб-службы позволяет указать сборку, содержащую пользовательские сериализаторы.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> с указанным именем сборки.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Простое и незашифрованное имя сборки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> с указанным именем сборки и расположением сборки.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Простое и незашифрованное имя сборки.</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">Строка, представляющая URL-адрес расположения сборки.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">Получает или задает имя сборки, содержащей сериализаторы для определенного набора типов.</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">Простое и незашифрованное имя сборки.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">Получает или задает расположение сборки, содержащей сериализаторы.</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">Расположение, например, путь или URI, указывающие на сборку.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">Создает версии с определенными типами <see cref="T:System.Xml.Serialization.XmlSerializer" /> для более эффективной сериализации.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, используемый для сериализации указанного типа.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Type" /> для сериализации.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, специально созданный для сериализации указанного типа.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, используемый для сериализации указанного типа и пространства имен.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Type" /> для сериализации.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Пространство имен по умолчанию для всех XML-элементов.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, специально созданный для сериализации указанного типа.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, используемый для сериализации указанного типа. Если свойство или поле возвращает массив, параметр <paramref name="extraTypes" /> определяет объекты, которые могут быть вставлены в массив.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Type" /> для сериализации.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты указанного типа в документы XML и наоборот. Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка позволяет переопределить с другими классами.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Type" /> для сериализации.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, содержащий поля, переопределяющие поведение сериализации по умолчанию.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты указанного типа в экземпляры документа XML и наоборот. Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка позволяет переопределить с другими классами. Данная перегрузка также указывает пространство имен по умолчанию для всех элементов XML и класс для использования в качестве корневого элемента XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Type" /> для сериализации.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, содержащий поля, переопределяющие поведение сериализации по умолчанию.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, представляющий свойство корневого XML-элемента.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Пространство имен по умолчанию для всех XML-элементов в XML-документе.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты указанного типа в экземпляры документа XML и наоборот. Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка позволяет переопределить с другими классами. Данная перегрузка также указывает пространство имен по умолчанию для всех элементов XML и класс для использования в качестве корневого элемента XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Type" /> объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, расширяющий или переопределяющий поведение класса, задается в параметре типе.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, указывающий свойство корневого XML-элемента.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Пространство имен по умолчанию для всех XML-элементов в XML-документе.</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">Путь, указывающий расположение типов.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты указанного типа в документы XML и наоборот. Указывает объект, представляющий корневой элемент XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Экземпляр <see cref="T:System.Type" /> для сериализации.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, представляющий свойство корневого XML-элемента.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" /> с помощью объекта, сопоставляющего один тип другому.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, сопоставляющий один тип другому.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">Источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, специально созданный для сериализации сопоставленного типа.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">Определяет считывающий, записывающий элемент и методы для предварительно сгенерированных сериализаторов с определенным типом.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">Получает значение, определяющее возможность сериализации типа.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Сериализуемый тип.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если тип можно сериализовать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">Возвращает сериализатор для указанного типа.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Сериализуемый тип.</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Экземпляр типа, являющийся производным от класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">Получает объект элемента чтения XML, используемый сериализатором.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />, используемый для считывания документа XML или потока данных.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">Получает коллекцию методов, используемую для считывания потока данных.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">
        <see cref="T:System.Collections.Hashtable" />, содержащий методы.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">Получает коллекцию сериализаторов с определенным типом, обнаруженных в сборке.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">
        <see cref="T:System.Collections.Hashtable" />, содержащий сериализаторы с определенным типом.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">Получает коллекцию методов, используемую для записи в поток данных.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">
        <see cref="T:System.Collections.Hashtable" />, содержащий методы.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">Получает объект модуля записи XML для сериализатора.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, используемый для записи в документ XML или поток данных.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">Отмечает, что код был сгенерирован инфраструктурой сериализации, а также что код может быть повторно использован для повышения производительности при применении данного атрибута к сборке.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> для указанного типа.</summary>
      <param name="type" vsli:raw="The type that is being serialized.">Сериализуемый тип.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">Получает или задает пространство имен среды CLR сборки.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">
        <see cref="T:System.String" />, содержащая пространство имен среды CLR сборки.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">Получает или задает идентификацию родительской сборки.</summary>
      <returns vsli:raw="The version of the parent assembly.">Версия родительской сборки.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">Получает или задает тип, над которым оперирует сериализатор.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">
        <see cref="T:System.Type" /> для сериализации.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">Получает или задает номер версии сборки.</summary>
      <returns vsli:raw="The version of the assembly.">Версия сборки.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Управляет схемой XML, которая создается при сериализации конечного объекта атрибута классом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> и задает имя типа XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Имя типа XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса (и определении при десериализации экземпляра класса).</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">Возвращает или задает значение, определяющее, является ли результирующий тип схемы анонимным типом XSD.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если результирующий тип схемы является анонимным типом XSD, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">Возвращает или задает значение, указывающее, следует ли включать тип в документы схемы XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> для включения типа в документ схемы XML, в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Возвращает или задает пространство имен типа XML.</summary>
      <returns vsli:raw="The namespace of the XML type.">Пространство имен типа XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Возвращает или задает имя типа XML.</summary>
      <returns vsli:raw="The name of the XML type.">Имя типа XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">Содержит сопоставление одного типа с другим.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">Полное имя типа, включающее пространство имен (или пространства имен) и типы.</summary>
      <returns vsli:raw="The fully qualified type name.">Полное имя типа.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">Получает имя типа сопоставляемого объекта.</summary>
      <returns vsli:raw="The type name of the mapped object.">Имя типа сопоставляемого объекта.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">Получает имя XML-элемента сопоставляемого объекта.</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">Имя XML-элемента сопоставляемого объекта. По умолчанию используется имя класса объекта.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">Получает пространство имен XML сопоставляемого объекта.</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">Пространство имен XML сопоставляемого объекта. Значение по умолчанию — пустая строка ("").</returns>
    </member>
  </members>
</doc>