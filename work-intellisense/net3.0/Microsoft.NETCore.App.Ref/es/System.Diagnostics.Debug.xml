<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Debug</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Debug">
      <summary>Proporciona un conjunto de métodos y propiedades que ayudan a depurar el código.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>Comprueba una condición; si la condición es <see langword="false" />, aparece un cuadro de mensaje que muestra la pila de llamadas.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, no se envía el mensaje de error y no se muestra el cuadro de mensaje.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>Comprueba una condición; si la condición es <see langword="false" />, genera un mensaje especificado y muestra un cuadro de mensaje que muestra la pila de llamadas.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, no se envía el mensaje especificado y no se muestra el cuadro de mensaje.</param>
      <param name="message">El mensaje que se va a enviar a la colección <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>Comprueba una condición; si la condición es <see langword="false" />, genera dos mensajes especificados y muestra un cuadro de mensaje que muestra la pila de llamadas.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, no se envían los mensajes especificados y no se muestra el cuadro de mensaje.</param>
      <param name="message">El mensaje que se va a enviar a la colección <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="detailMessage">El mensaje detallado que se va a enviar a la colección <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>Comprueba una condición; si esta es <see langword="false" />, muestra dos mensajes (simple y con formato) y presenta un cuadro de mensaje con la pila de llamadas.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, no se envían los mensajes especificados y no se muestra el cuadro de mensaje.</param>
      <param name="message">El mensaje que se va a enviar a la colección <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="detailMessageFormat">Cadena de formato compuesto que se enviará a la colección <see cref="P:System.Diagnostics.Trace.Listeners" />. Este mensaje contiene texto mezclado con cero o varios elementos de formato, que corresponden a objetos de la matriz <paramref name="args" />.</param>
      <param name="args">Matriz de objetos que contiene cero o más objetos a los que se va a aplicar formato.</param>
    </member>
    <member name="P:System.Diagnostics.Debug.AutoFlush">
      <summary>Obtiene o establece un valor que indica si debe llamarse al método <see cref="M:System.Diagnostics.Debug.Flush" /> en la propiedad <see cref="P:System.Diagnostics.Debug.Listeners" /> después de cada escritura.</summary>
      <returns>Es <see langword="true" /> si se llama a <see cref="M:System.Diagnostics.Debug.Flush" /> en <see cref="P:System.Diagnostics.Debug.Listeners" /> después de cada escritura; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Close">
      <summary>Vacía el búfer de resultados y llama al método <see langword="Close" /> en cada uno de los <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String)">
      <summary>Emite el mensaje de error especificado.</summary>
      <param name="message">Mensaje que se va a emitir.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
      <summary>Emite un mensaje de error y un mensaje de error detallado.</summary>
      <param name="message">Mensaje que se va a emitir.</param>
      <param name="detailMessage">Mensaje detallado que se va a emitir.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Flush">
      <summary>Vacía el búfer de resultados y hace que los datos almacenados en el búfer se escriban en la colección de <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Indent">
      <summary>Aumenta en uno el valor actual de la propiedad <see cref="P:System.Diagnostics.Debug.IndentLevel" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentLevel">
      <summary>Obtiene o establece el nivel de sangría.</summary>
      <returns>Nivel de sangría. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentSize">
      <summary>Obtiene o establece el número de espacios de una sangría.</summary>
      <returns>Número de espacios de una sangría. El valor predeterminado es cuatro.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String)">
      <summary>Escribe un mensaje seguido de un terminador de línea en los agentes de escucha de seguimiento de la colección de <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Mensaje que se va a escribir.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
      <summary>Escribe una cadena con formato seguida de un terminador de línea en los agentes de escucha de seguimiento de la colección de <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="format">Cadena con formato compuesto que contiene texto mezclado con cero o más elementos de formato que corresponden a objetos de la matriz <paramref name="args" />.</param>
      <param name="args">Matriz de objetos que contiene cero o más objetos a los que se va a aplicar formato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> no es válido.  
o bien 
El número que indica que un argumento al que se va a dar formato es menor que cero, o mayor o igual que el número de objetos proporcionados a los que se va a dar formato.</exception>
    </member>
    <member name="M:System.Diagnostics.Debug.Unindent">
      <summary>Disminuye en uno el valor actual de la propiedad <see cref="P:System.Diagnostics.Debug.IndentLevel" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object)">
      <summary>Escribe el valor del método <see cref="M:System.Object.ToString" /> del objeto en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Objeto cuyo nombre se envía a <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
      <summary>Escribe un nombre de categoría y el valor del método <see cref="M:System.Object.ToString" /> del objeto en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Objeto cuyo nombre se envía a <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nombre de categoría utilizado para organizar el resultado.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String)">
      <summary>Escribe un mensaje en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Mensaje que se va a escribir.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
      <summary>Escribe un nombre de categoría y un mensaje en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Mensaje que se va a escribir.</param>
      <param name="category">Nombre de categoría utilizado para organizar el resultado.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
      <summary>Escribe el valor del método <see cref="M:System.Object.ToString" /> del objeto en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" /> si una condición es <see langword="true" />.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, se escribe el valor en los agentes de escucha de seguimiento de la colección.</param>
      <param name="value">Objeto cuyo nombre se envía a <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
      <summary>Escribe un nombre de categoría y el valor del método <see cref="M:System.Object.ToString" /> del objeto en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" /> si una condición es <see langword="true" />.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, el nombre de categoría y el valor se escriben en los agentes de escucha de seguimiento de la colección.</param>
      <param name="value">Objeto cuyo nombre se envía a <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nombre de categoría utilizado para organizar el resultado.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
      <summary>Escribe un mensaje en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" /> si una condición es <see langword="true" />.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, se escribe el mensaje en los agentes de escucha de seguimiento de la colección.</param>
      <param name="message">Mensaje que se va a escribir.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
      <summary>Escribe un nombre de categoría y un mensaje en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" /> si una condición es <see langword="true" />.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, el nombre de categoría y el mensaje se escriben en los agentes de escucha de seguimiento de la colección.</param>
      <param name="message">Mensaje que se va a escribir.</param>
      <param name="category">Nombre de categoría utilizado para organizar el resultado.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>Escribe el valor del método <see cref="M:System.Object.ToString" /> del objeto en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Objeto cuyo nombre se envía a <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
      <summary>Escribe un nombre de categoría y el valor del método <see cref="M:System.Object.ToString" /> del objeto en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Objeto cuyo nombre se envía a <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nombre de categoría utilizado para organizar el resultado.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>Escribe un mensaje seguido de un terminador de línea en los agentes de escucha de seguimiento de la colección de <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Mensaje que se va a escribir.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>Escribe un mensaje con formato seguida de un terminador de línea en los agentes de escucha de seguimiento de la colección de <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="format">Cadena con formato compuesto que contiene texto mezclado con cero o más elementos de formato que corresponden a objetos de la matriz <paramref name="args" />.</param>
      <param name="args">Matriz de objetos que contiene cero o más objetos a los que se va a aplicar formato.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
      <summary>Escribe un nombre de categoría y un mensaje en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Mensaje que se va a escribir.</param>
      <param name="category">Nombre de categoría utilizado para organizar el resultado.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
      <summary>Escribe el valor del método <see cref="M:System.Object.ToString" /> del objeto en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" /> si una condición es <see langword="true" />.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, se escribe el valor en los agentes de escucha de seguimiento de la colección.</param>
      <param name="value">Objeto cuyo nombre se envía a <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary>Escribe un nombre de categoría y el valor del método <see cref="M:System.Object.ToString" /> del objeto en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" /> si una condición es <see langword="true" />.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, el nombre de categoría y el valor se escriben en los agentes de escucha de seguimiento de la colección.</param>
      <param name="value">Objeto cuyo nombre se envía a <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nombre de categoría utilizado para organizar el resultado.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>Escribe un mensaje en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" /> si una condición es <see langword="true" />.</summary>
      <param name="condition">Expresión condicional que se va a evaluar. Si la condición es <see langword="true" />, se escribe el mensaje en los agentes de escucha de seguimiento de la colección.</param>
      <param name="message">Mensaje que se va a escribir.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary>Escribe un nombre de categoría y un mensaje en los agentes de escucha de seguimiento de la colección <see cref="P:System.Diagnostics.Debug.Listeners" /> si una condición es <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> para que se escriba un mensaje; en caso contrario, <see langword="false" />.</param>
      <param name="message">Mensaje que se va a escribir.</param>
      <param name="category">Nombre de categoría utilizado para organizar el resultado.</param>
    </member>
    <member name="T:System.Diagnostics.Debugger">
      <summary>Permite la comunicación con un depurador. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Diagnostics.Debugger.Break">
      <summary>Indica un punto de interrupción a un depurador asociado.</summary>
      <exception cref="T:System.Security.SecurityException">El <see cref="T:System.Security.Permissions.UIPermission" /> no está establecido para irrumpir en el depurador.</exception>
    </member>
    <member name="F:System.Diagnostics.Debugger.DefaultCategory">
      <summary>Representa la categoría predeterminada de un mensaje con una constante.</summary>
    </member>
    <member name="P:System.Diagnostics.Debugger.IsAttached">
      <summary>Obtiene un valor que indica si hay un depurador asociado al proceso.</summary>
      <returns>Es <see langword="true" /> si hay un depurador asociado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.IsLogging">
      <summary>Comprueba si un depurador asociado habilitó el inicio de sesión.</summary>
      <returns>Es <see langword="true" /> si hay un depurador asociado y está habilitado el inicio de sesión; en caso contrario, es <see langword="false" />. El depurador asociado es el depurador administrado registrado en la clave del registro <see langword="DbgManagedDebugger" />. Para más información sobre esta clave, vea Enabling JIT-Attach Debugging (Habilitar depuración de JIT-Attach).</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.Launch">
      <summary>Inicia un depurador y lo asocia al proceso.</summary>
      <returns>
        <see langword="true" /> si se inicia correctamente o si el depurador ya está asociado; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> no está establecido para iniciar el depurador.</exception>
    </member>
    <member name="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
      <summary>Envía un mensaje para el depurador asociado.</summary>
      <param name="level">Descripción de la importancia del mensaje.</param>
      <param name="category">Categoría del mensaje.</param>
      <param name="message">Mensaje que se va a mostrar.</param>
    </member>
    <member name="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency">
      <summary>Notifica a un depurador que la ejecución está a punto de escribir una ruta de acceso que implica una dependencia entre subprocesos.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableAttribute">
      <summary>Determina si se muestra un miembro y cómo se muestra en las ventanas de variables del depurador. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerBrowsableAttribute" />.</summary>
      <param name="state">Uno de los valores de <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> que especifica cómo se va a mostrar el miembro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="state" /> no es uno de los valores de <see cref="T:System.Diagnostics.DebuggerBrowsableState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerBrowsableAttribute.State">
      <summary>Obtiene el estado de presentación del atributo.</summary>
      <returns>Uno de los valores de <see cref="T:System.Diagnostics.DebuggerBrowsableState" />.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableState">
      <summary>Proporciona las instrucciones de presentación para el depurador.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Collapsed">
      <summary>Se muestra el elemento como contraído.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Never">
      <summary>No se muestra nunca el elemento.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.RootHidden">
      <summary>No se muestra el elemento raíz; se muestran los elementos secundarios si el elemento es una colección o una matriz de elementos.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerDisplayAttribute">
      <summary>Determina cómo se muestra una clase o un campo en la ventana de variables del depurador.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" />.</summary>
      <param name="value">Cadena que se va a mostrar en la columna de valor para las instancias del tipo; una cadena vacía ("") hace que se oculte la columna de valor.</param>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Name">
      <summary>Obtiene o establece el nombre que se va a mostrar en las ventanas de variables del depurador.</summary>
      <returns>El nombre que se va a mostrar en las ventanas de variables del depurador.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Target">
      <summary>Obtiene o establece el tipo de destino del atributo.</summary>
      <returns>El tipo de destino del atributo.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Diagnostics.DebuggerDisplayAttribute.Target" /> está establecido en <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName">
      <summary>Obtiene o establece el nombre del tipo de destino del atributo.</summary>
      <returns>El nombre del tipo de destino del atributo.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Type">
      <summary>Obtiene o establece la cadena que se va a mostrar en la columna de tipo de las ventanas de variables en el depurador.</summary>
      <returns>La cadena que se va a mostrar en la columna de tipo de las ventanas de variables en el depurador.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Value">
      <summary>Obtiene la cadena que se va a mostrar en la columna de valor de las ventanas de variables en el depurador.</summary>
      <returns>La cadena que se va a mostrar en la columna de valor de las ventanas de variables en el depurador.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerHiddenAttribute">
      <summary>Especifica <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <summary>Identifica un tipo o miembro que no forma parte del código de usuario de una aplicación.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <summary>Indica que el código después del atributo debe ejecutarse en modo de ejecución y no en modo paso a paso.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepThroughAttribute">
      <summary>Indica al depurador que recorra el código en lugar de ejecutarlo paso a paso. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <summary>Especifica el proxy de presentación para un tipo.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> utilizando el nombre de tipo del servidor proxy.</summary>
      <param name="typeName">Nombre de tipo del servidor proxy.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> utilizando el tipo del servidor proxy.</summary>
      <param name="type">Tipo del servidor proxy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName">
      <summary>Obtiene el nombre de tipo del servidor proxy.</summary>
      <returns>Nombre de tipo del servidor proxy.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target">
      <summary>Obtiene o establece el tipo de destino del atributo.</summary>
      <returns>Tipo de destino para el atributo.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" /> está establecido en <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName">
      <summary>Obtiene o establece el nombre del tipo de destino.</summary>
      <returns>El nombre del tipo de destino.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerVisualizerAttribute">
      <summary>Especifica que el tipo tiene un visualizador. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, especificando el nombre de tipo del visualizador.</summary>
      <param name="visualizerTypeName">Nombre de tipo completo del visualizador.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, especificando el nombre de tipo del visualizador y el nombre de tipo del origen de objeto de visualizador.</summary>
      <param name="visualizerTypeName">Nombre de tipo completo del visualizador.</param>
      <param name="visualizerObjectSourceTypeName">El nombre de tipo completo del origen del objeto de visualizador.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />, especificando el nombre de tipo del visualizador y el tipo del origen de objeto de visualizador.</summary>
      <param name="visualizerTypeName">Nombre de tipo completo del visualizador.</param>
      <param name="visualizerObjectSource">Tipo del origen del objeto de visualizador.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> especificando el tipo del visualizador.</summary>
      <param name="visualizer">Tipo del visualizador.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> en la que se especifica el tipo del visualizador y el nombre de tipo del origen del objeto de visualizador.</summary>
      <param name="visualizer">Tipo del visualizador.</param>
      <param name="visualizerObjectSourceTypeName">El nombre de tipo completo del origen del objeto de visualizador.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> en la que se especifica el tipo del visualizador y el tipo del origen del objeto de visualizador.</summary>
      <param name="visualizer">Tipo del visualizador.</param>
      <param name="visualizerObjectSource">Tipo del origen del objeto de visualizador.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Description">
      <summary>Obtiene o establece la descripción del visualizador.</summary>
      <returns>La descripción del visualizador.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Target">
      <summary>Obtiene o establece el tipo de destino cuando se aplica el atributo en el nivel de ensamblado.</summary>
      <returns>Tipo que es el destino del visualizador.</returns>
      <exception cref="T:System.ArgumentNullException">No se puede establecer el valor porque es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName">
      <summary>Obtiene o establece el nombre de tipo completo cuando se aplica el atributo en el nivel de ensamblado.</summary>
      <returns>El nombre completo del tipo de destino.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName">
      <summary>Obtiene el nombre de tipo completo del origen de objeto de visualizador.</summary>
      <returns>El nombre de tipo completo del origen del objeto de visualizador.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName">
      <summary>Obtiene el nombre de tipo completo del visualizador.</summary>
      <returns>El nombre de tipo completo del visualizador.</returns>
    </member>
  </members>
</doc>