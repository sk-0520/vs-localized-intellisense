<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary>Proporciona contenido HTTP basado en una matriz de bytes.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content">Contenido usado para inicializar <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="content" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content">Contenido usado para inicializar <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="offset">El desplazamiento, en bytes, del parámetro de <paramref name="content" /> usado para inicializar <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="count">El número de bytes de <paramref name="content" /> a partir del parámetro de <paramref name="offset" /> usado para inicializar <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="content" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="offset" /> es menor que cero.  
O bien 
El parámetro <paramref name="offset" /> es mayor que la longitud del contenido que especifica el parámetro <paramref name="content" />.  
o bien 
El parámetro <paramref name="count" /> es menor que cero.  
O bien 
El valor del parámetro <paramref name="count" /> es mayor que la longitud del contenido que especifica <paramref name="content" /> menos el parámetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary>Crea un flujo de contenido HTTP como una operación asincrónica para la lectura cuya memoria auxiliar es la memoria de <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serialice y escriba en la matriz de bytes proporcionada en el constructor para un flujo de contenido HTTP como una operación asincrónica.</summary>
      <param name="stream">Flujo de destino.</param>
      <param name="context">Información sobre el transporte, como el token de enlace de canal. Este parámetro puede ser <see langword="null" />.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary>Determina si la matriz de bytes tiene una longitud válida en bytes.</summary>
      <param name="length">Longitud en bytes de la matriz de bytes.</param>
      <returns>
        <see langword="true" /> si <paramref name="length" /> es una longitud válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary>Especifica cómo se proporcionan los certificados de cliente.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary>
        <see cref="T:System.Net.Http.HttpClientHandler" /> intenta proporcionar automáticamente todos los certificados de cliente disponibles.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary>La aplicación proporciona manualmente los certificados de cliente a <see cref="T:System.Net.Http.WebRequestHandler" />. Este valor es el predeterminado.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary>Un tipo para los controladores HTTP que delegan el procesamiento de los mensajes de respuesta HTTP a otro controlador, denominado controlador interno.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.DelegatingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.DelegatingHandler" /> con un controlador interno concreto.</summary>
      <param name="innerHandler">Controlador interno que es responsable de procesar los mensajes de respuesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Net.Http.DelegatingHandler" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary>Obtiene o establece el controlador interno que procesa los mensajes de respuesta HTTP.</summary>
      <returns>Controlador interno para los mensajes de respuesta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envía una solicitud HTTP al controlador interno para enviar al servidor como una operación asincrónica.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a enviar al servidor.</param>
      <param name="cancellationToken">Token de cancelación para cancelar la operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary>Contenedor para las tuplas de nombre-valor codificadas mediante el tipo MIME de application/x-www-form-urlencoded.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.FormUrlEncodedContent" /> con una colección específica de pares de nombre y valor.</summary>
      <param name="nameValueCollection">Colección de pares de nombre-valor.</param>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary>Representa la información de autenticación en los valores de los encabezados Authorization, ProxyAuthorization, WWW-Authenticate y Proxy-Authenticate.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme">Esquema que se utilizará para la autorización.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme">Esquema que se utilizará para la autorización.</param>
      <param name="parameter">Credenciales que contienen la información de autenticación del agente de usuario para el recurso que se está solicitando.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary>Obtiene las credenciales que contienen la información de autenticación del agente de usuario para el recurso solicitado.</summary>
      <returns>Credenciales que contienen la información de autenticación.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado authentication.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado authentication válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary>Obtiene el esquema que se utilizará para la autorización.</summary>
      <returns>Esquema que se utilizará para la autorización.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary>Representa el valor del encabezado Cache-Control.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary>Tokens de extensión de caché, cada uno con un valor asignado opcional.</summary>
      <returns>Colección de tokens de extensión de caché, cada uno con un valor asignado opcional.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary>Tiempo máximo, especificado en segundos, que un cliente HTTP está dispuesto a aceptar una respuesta.</summary>
      <returns>Tiempo en segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary>Si un cliente HTTP está dispuesto a aceptar una respuesta que ha superado su hora de expiración.</summary>
      <returns>Es <see langword="true" /> si el cliente HTTP está dispuesto a aceptar una respuesta que ha superado su hora de expiración; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary>El tiempo máximo, en segundos, que un cliente HTTP está dispuesto a aceptar una respuesta que ha superado su hora de expiración.</summary>
      <returns>Tiempo en segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary>La duración de la actualización, en segundos, que un cliente HTTP está dispuesto a aceptar una respuesta.</summary>
      <returns>Tiempo en segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary>Si el servidor de origen requiere la renovación de una entrada de caché en cualquier uso subsiguiente cuando la entrada de caché queda obsoleta.</summary>
      <returns>Es <see langword="true" /> si el servidor de origen requiere la renovación de una entrada de caché en cualquier uso subsiguiente cuando la entrada de caché queda obsoleta; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary>Si un cliente HTTP está dispuesto a aceptar una respuesta almacenada en caché.</summary>
      <returns>
        <see langword="true" />Si el cliente HTTP no está dispuesto a aceptar una respuesta almacenada en caché; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary>Colección de nombres de campos en la directiva "no-cache" en un campo de encabezado cache-control de una respuesta HTTP.</summary>
      <returns>Colección de nombres de campos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary>Si una caché no debe almacenar una parte del mensaje de solicitud HTTP o de cualquier respuesta.</summary>
      <returns>Es <see langword="true" /> si una caché no debe almacenar una parte del mensaje de solicitud HTTP o de cualquier respuesta; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary>Si una caché o proxy no debe cambiar ningún aspecto del cuerpo de entidad.</summary>
      <returns>Es <see langword="true" /> si una caché o proxy no debe cambiar ningún aspecto del cuerpo de entidad; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary>Si una memoria caché debe responder con una entrada de caché que sea coherente con las demás restricciones de la solicitud HTTP o responder con un estado 504 (tiempo de espera agotado para la puerta de enlace).</summary>
      <returns>Es <see langword="true" /> si una memoria caché debe responder con una entrada de caché que sea coherente con las demás restricciones de la solicitud HTTP o responder con un estado 504 (tiempo de espera agotado para la puerta de enlace); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado cache-control.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado cache-control válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary>Si todo o parte del mensaje de respuesta HTTP está pensado para un solo usuario y no debe almacenar en caché una memoria caché compartida.</summary>
      <returns>Es <see langword="true" /> si todo o parte del mensaje de respuesta HTTP está pensado para un solo usuario y no debe almacenar en caché una memoria caché compartida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary>Colección de nombres de campos en la directiva "private" en un campo de encabezado cache-control de una respuesta HTTP.</summary>
      <returns>Colección de nombres de campos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary>Si el servidor de origen requiere la renovación de una entrada de caché en cualquier uso subsiguiente cuando la entrada de caché queda obsoleta para cachés de agente de usuario compartidas.</summary>
      <returns>Es <see langword="true" /> si el servidor de origen requiere la renovación de una entrada de caché en cualquier uso subsiguiente cuando la entrada queda obsoleta para cachés de agente de usuario compartidas; en caso contrario es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary>Si una respuesta HTTP puede almacenarse en caché por cualquier memoria caché, aunque normalmente no se almacena en caché o solo en una caché no compartida.</summary>
      <returns>Es <see langword="true" /> si una respuesta HTTP puede almacenarse en caché por cualquier memoria caché, aunque normalmente no se almacena en caché o solo en una caché no compartida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary>La antigüedad máxima compartida, especificada en segundos, de una respuesta HTTP que invalida la directiva "max-age" en un encabezado cache-control o un encabezado Expires para una memoria caché compartida.</summary>
      <returns>Tiempo en segundos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary>Representa el valor del encabezado Content-Disposition.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="source">Objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="dispositionType">Cadena que contiene <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary>Fecha de creación del archivo.</summary>
      <returns>Fecha de creación del archivo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary>Tipo de disposición de una parte del cuerpo de contenido.</summary>
      <returns>Tipo de disposición.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary>Una sugerencia sobre cómo construir un nombre de archivo para almacenar la carga del mensaje que se utilizará si la entidad se separa y se almacena en un archivo independiente.</summary>
      <returns>Nombre de archivo sugerido.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary>Una sugerencia sobre cómo construir nombres de archivo para almacenar las cargas del mensaje que se utilizarán si la entidad se separa y se almacena en un archivo independiente.</summary>
      <returns>Nombre de archivo sugerido del formulario filename*.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary>Fecha de la última modificación del archivo.</summary>
      <returns>Fecha de modificación del archivo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary>Nombre de una parte del cuerpo de contenido.</summary>
      <returns>Nombre de la parte del cuerpo de contenido.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary>Conjunto de parámetros incluido el encabezado Content-Disposition.</summary>
      <returns>Una colección de parámetros.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado content disposition.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado content disposition válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary>Fecha de última lectura del archivo.</summary>
      <returns>Última fecha de lectura.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary>El tamaño aproximado, en bytes, del archivo.</summary>
      <returns>El tamaño aproximado, en bytes.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary>Representa el valor del encabezado Content-Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="length">Punto inicial o final del intervalo, en bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from">Posición, en bytes, en la que se va a empezar a enviar datos.</param>
      <param name="to">Posición, en bytes, en la que se va a terminar de enviar datos.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from">Posición, en bytes, en la que se va a empezar a enviar datos.</param>
      <param name="to">Posición, en bytes, en la que se va a terminar de enviar datos.</param>
      <param name="length">Punto inicial o final del intervalo, en bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary>Obtiene la posición en la que se va a empezar a enviar datos.</summary>
      <returns>Posición, en bytes, en la que se va a empezar a enviar datos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary>Obtiene si el encabezado Content-Range tiene una longitud especificada.</summary>
      <returns>Es <see langword="true" /> si el encabezado Content-Range tiene una longitud especificada; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary>Obtiene si el encabezado Content-Range tiene el rango especificado.</summary>
      <returns>Es <see langword="true" /> si el encabezado Content-Range tiene el rango especificado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary>Obtiene la longitud del cuerpo de entidad completo.</summary>
      <returns>Longitud del cuerpo de entidad completo.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado range-content.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado content range válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary>Obtiene la posición en la que se va a detener el envío de datos.</summary>
      <returns>Posición en la que se va a terminar de enviar datos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary>Las unidades de intervalo utilizadas.</summary>
      <returns>Un <see cref="T:System.String" /> que contiene unidades de intervalo.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary>Representa un valor de encabezado de etiqueta de entidad.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag">Cadena que contiene <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag">Cadena que contiene un elemento <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
      <param name="isWeak">Un valor que indica si este encabezado de la etiqueta de entidad es un validador débil. Si el encabezado de la etiqueta de entidad es un validador débil, <paramref name="isWeak" /> debe establecerse en <see langword="true" />. Si el encabezado de la etiqueta de entidad es un validador seguro, <paramref name="isWeak" /> debe establecerse en <see langword="false" />.</param>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary>Obtiene el valor del encabezado de la etiqueta de entidad.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary>Obtiene si el encabezado Entity-tag va precedido de un indicador de debilidad.</summary>
      <returns>Es <see langword="true" /> si el encabezado entity-tag va precedido de un indicador de debilidad; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado entitiy tag.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado entity tag válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary>Obtiene la cadena entre comillas opaca.</summary>
      <returns>Cadena entre comillas opaca.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary>Representa la colección de encabezados de contenido tal como se define en RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary>Obtiene el valor del encabezado de contenido <see langword="Allow" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Allow" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary>Obtiene el valor del encabezado de contenido <see langword="Content-Disposition" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Content-Disposition" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary>Obtiene el valor del encabezado de contenido <see langword="Content-Encoding" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Content-Encoding" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary>Obtiene el valor del encabezado de contenido <see langword="Content-Language" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Content-Language" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary>Obtiene o establece el valor del encabezado de contenido <see langword="Content-Length" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Content-Length" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary>Obtiene o establece el valor del encabezado de contenido <see langword="Content-Location" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Content-Location" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary>Obtiene o establece el valor del encabezado de contenido <see langword="Content-MD5" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Content-MD5" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary>Obtiene o establece el valor del encabezado de contenido <see langword="Content-Range" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Content-Range" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary>Obtiene o establece el valor del encabezado de contenido <see langword="Content-Type" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Content-Type" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary>Obtiene o establece el valor del encabezado de contenido <see langword="Expires" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Expires" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary>Obtiene o establece el valor del encabezado de contenido <see langword="Last-Modified" /> en una respuesta HTTP.</summary>
      <returns>Valor del encabezado de contenido <see langword="Last-Modified" /> en una respuesta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary>Colección de encabezados y sus valores tal como se define en RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Agrega el encabezado especificado y sus valores en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" /> .</summary>
      <param name="name">Encabezado que se agrega a la colección.</param>
      <param name="values">Lista de valores de encabezado que se agregan a la colección.</param>
      <exception cref="T:System.ArgumentException">El nombre no puede ser nulo ni estar vacío.</exception>
      <exception cref="T:System.ArgumentNullException">Los valores no pueden ser nulos ni estar vacíos.</exception>
      <exception cref="T:System.InvalidOperationException">Nombre de encabezado usado de forma incorrecta. Asegúrese de que los encabezados de solicitud se utilizan con HttpRequestMessage, los encabezados de respuesta con HttpResponseMessage y los encabezados de contenido con objetos de HttpContent.</exception>
      <exception cref="T:System.FormatException">El formato del nombre de encabezado no es válido.
O bien
Los caracteres de nueva línea de los valores de encabezado deben ir seguidos de un carácter de espacio en blanco.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary>Agrega el encabezado especificado y su valor en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" /> .</summary>
      <param name="name">Encabezado que se agrega a la colección.</param>
      <param name="value">El contenido del encabezado.</param>
      <exception cref="T:System.ArgumentException">El nombre no puede ser nulo ni estar vacío.</exception>
      <exception cref="T:System.InvalidOperationException">Nombre de encabezado usado de forma incorrecta. Asegúrese de que los encabezados de solicitud se utilizan con HttpRequestMessage, los encabezados de respuesta con HttpResponseMessage y los encabezados de contenido con objetos de HttpContent.</exception>
      <exception cref="T:System.FormatException">El formato del nombre de encabezado no es válido.
O bien
Los caracteres de nueva línea de los valores de encabezado deben ir seguidos de un carácter de espacio en blanco.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary>Quita todos los encabezados de la colección de <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary>Devuelve si un encabezado concreto existe en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Encabezado específico.</param>
      <returns>
        <see langword="true" /> es el encabezado especificado que existe en la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary>Devuelve un enumerador que puede iterar a través de la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaders" /> .</summary>
      <returns>Enumerador para <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary>Devuelve todos los valores de encabezado para un encabezado especificado que se almacena en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">El encabezado especificado para devolver valores.</param>
      <returns>Matriz de cadenas de encabezado.</returns>
      <exception cref="T:System.InvalidOperationException">No se encuentra el encabezado.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary>Quita el encabezado especificado de la colección de <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Nombre del encabezado que se quitará de la colección.</param>
      <returns>Devuelva <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Obtiene un enumerador que puede recorrer en iteración a través de una <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns>Instancia de una implementación de un <see cref="T:System.Collections.IEnumerator" /> que puede recorrer en iteración un <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Devuelve un valor que indica si el encabezado especificado y sus valores se agregaron a la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sin validar la información proporcionada.</summary>
      <param name="name">Encabezado que se agrega a la colección.</param>
      <param name="values">Valores del encabezado.</param>
      <returns>Es <see langword="true" /> si el encabezado especificado <paramref name="name" /> y <paramref name="values" /> puede agregarse a la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary>Devuelve un valor que indica si el encabezado especificado y su valor se agregaron a la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sin validar la información proporcionada.</summary>
      <param name="name">Encabezado que se agrega a la colección.</param>
      <param name="value">El contenido del encabezado.</param>
      <returns>Es <see langword="true" /> si el encabezado especificado <paramref name="name" /> y <paramref name="value" /> puede agregarse a la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary>Devuelve si un encabezado especificado y los valores especificados se almacenan en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name">Encabezado especificado.</param>
      <param name="values">Valores del encabezado especificado.</param>
      <returns>
        <see langword="true" /> es el encabezado especificado, <paramref name="name" /> y <see langword="values" /> se almacenan en la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary>Representa una colección de valores de encabezado.</summary>
      <typeparam name="T">Tipo de colección de encabezado.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary>Agrega una entrada al objeto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">Elemento que se agrega al encabezado especificada.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary>Quita todas las entradas de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary>Determina si <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> contiene un elemento.</summary>
      <param name="item">Elemento que se va a encontrar en la colección de encabezados.</param>
      <returns>Es <see langword="true" /> si la entrada se encuentra en la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; en caso contrario, es <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copia la totalidad de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="arrayIndex">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary>Obtiene el número de encabezados de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Número de encabezados de una colección</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Enumerador para la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary>Obtiene un valor que indica si la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si la instancia <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> es de solo lectura; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary>Analiza y agrega una entrada a <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input">Entrada que se va a agregar.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary>Quita el elemento especificado de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item">Elemento que se va a quitar.</param>
      <returns>
        <see langword="true" /> si <paramref name="item" /> se ha quitado de la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; en caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns>Enumerador para la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />. objeto.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary>Determina si la entrada se analiza y se agrega a la <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input">Entrada que se va a validar.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> se analiza y se agrega a la instancia <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; en caso contrario, <see langword="false" /></returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary>Representa la colección de encabezados de solicitud tal como se define en RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary>Obtiene el valor del encabezado <see langword="Accept" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Accept" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary>Obtiene el valor del encabezado <see langword="Accept-Charset" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Accept-Charset" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary>Obtiene el valor del encabezado <see langword="Accept-Encoding" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Accept-Encoding" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary>Obtiene el valor del encabezado <see langword="Accept-Language" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Accept-Language" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary>Obtiene o establece el valor del encabezado <see langword="Authorization" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Authorization" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary>Obtiene o establece el valor del encabezado <see langword="Cache-Control" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Cache-Control" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary>Obtiene el valor del encabezado <see langword="Connection" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Connection" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary>Obtiene o establece un valor que indica si el encabezado <see langword="Connection" /> para una solicitud HTTP contiene Close.</summary>
      <returns>
        <see langword="true" /> si el encabezado <see langword="Connection" /> contiene Close, de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary>Obtiene o establece el valor del encabezado <see langword="Date" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Date" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary>Obtiene el valor del encabezado <see langword="Expect" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Expect" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary>Obtiene o establece un valor que indica si el encabezado <see langword="Expect" /> para una solicitud HTTP contiene Continue.</summary>
      <returns>
        <see langword="true" /> si el encabezado <see langword="Expect" /> contiene Continue; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary>Obtiene o establece el valor del encabezado <see langword="From" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="From" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary>Obtiene o establece el valor del encabezado <see langword="Host" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Host" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary>Obtiene el valor del encabezado <see langword="If-Match" /> para una solicitud HTTP.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.  
Valor del encabezado <see langword="If-Match" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary>Obtiene o establece el valor del encabezado <see langword="If-Modified-Since" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="If-Modified-Since" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary>Obtiene el valor del encabezado <see langword="If-None-Match" /> para una solicitud HTTP.</summary>
      <returns>Obtiene el valor del encabezado <see langword="If-None-Match" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary>Obtiene o establece el valor del encabezado <see langword="If-Range" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="If-Range" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary>Obtiene o establece el valor del encabezado <see langword="If-Unmodified-Since" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="If-Unmodified-Since" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary>Obtiene o establece el valor del encabezado <see langword="Max-Forwards" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Max-Forwards" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary>Obtiene el valor del encabezado <see langword="Pragma" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Pragma" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary>Obtiene o establece el valor del encabezado <see langword="Proxy-Authorization" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Proxy-Authorization" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary>Obtiene o establece el valor del encabezado <see langword="Range" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Range" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary>Obtiene o establece el valor del encabezado <see langword="Referer" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Referer" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary>Obtiene el valor del encabezado <see langword="TE" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="TE" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary>Obtiene el valor del encabezado <see langword="Trailer" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Trailer" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary>Obtiene el valor del encabezado <see langword="Transfer-Encoding" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Transfer-Encoding" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary>Obtiene o establece un valor que indica si el encabezado <see langword="Transfer-Encoding" /> para una solicitud HTTP está fragmentado.</summary>
      <returns>
        <see langword="true" /> si el encabezado <see langword="Transfer-Encoding" /> está fragmentado, de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary>Obtiene el valor del encabezado <see langword="Upgrade" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Upgrade" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary>Obtiene el valor del encabezado <see langword="User-Agent" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="User-Agent" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary>Obtiene el valor del encabezado <see langword="Via" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Via" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary>Obtiene el valor del encabezado <see langword="Warning" /> para una solicitud HTTP.</summary>
      <returns>Valor del encabezado <see langword="Warning" /> para una solicitud HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary>Representa la colección de encabezados de respuesta tal como se define en RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary>Obtiene el valor del encabezado <see langword="Accept-Ranges" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Accept-Ranges" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary>Obtiene o establece el valor del encabezado <see langword="Age" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Age" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary>Obtiene o establece el valor del encabezado <see langword="Cache-Control" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Cache-Control" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary>Obtiene el valor del encabezado <see langword="Connection" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Connection" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary>Obtiene o establece un valor que indica si el encabezado <see langword="Connection" /> para una respuesta HTTP contiene Close.</summary>
      <returns>
        <see langword="true" /> si el encabezado <see langword="Connection" /> contiene Close, de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary>Obtiene o establece el valor del encabezado <see langword="Date" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Date" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary>Obtiene o establece el valor del encabezado <see langword="ETag" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="ETag" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary>Obtiene o establece el valor del encabezado <see langword="Location" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Location" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary>Obtiene el valor del encabezado <see langword="Pragma" /> para una respuesta HTTP.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.  
Valor del encabezado <see langword="Pragma" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary>Obtiene el valor del encabezado <see langword="Proxy-Authenticate" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Proxy-Authenticate" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary>Obtiene o establece el valor del encabezado <see langword="Retry-After" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Retry-After" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary>Obtiene el valor del encabezado <see langword="Server" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Server" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary>Obtiene el valor del encabezado <see langword="Trailer" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Trailer" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary>Obtiene el valor del encabezado <see langword="Transfer-Encoding" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Transfer-Encoding" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary>Obtiene o establece un valor que indica si el encabezado <see langword="Transfer-Encoding" /> para una respuesta HTTP está fragmentado.</summary>
      <returns>
        <see langword="true" /> si el encabezado <see langword="Transfer-Encoding" /> está fragmentado, de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary>Obtiene el valor del encabezado <see langword="Upgrade" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Upgrade" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary>Obtiene el valor del encabezado <see langword="Vary" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Vary" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary>Obtiene el valor del encabezado <see langword="Via" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Via" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary>Obtiene el valor del encabezado <see langword="Warning" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="Warning" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary>Obtiene el valor del encabezado <see langword="WWW-Authenticate" /> para una respuesta HTTP.</summary>
      <returns>Valor del encabezado <see langword="WWW-Authenticate" /> para una respuesta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary>Representa un tipo de medio utilizado en un encabezado Content-Type como se define en RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="source">Objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="mediaType">El origen representado como una cadena para inicializar la nueva instancia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary>Obtiene o establece el juego de caracteres.</summary>
      <returns>El conjunto de caracteres.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary>Obtiene o establece el valor del encabezado media_type.</summary>
      <returns>Valor de encabezado media_type.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary>Obtiene o establece los parámetros del valor del encabezado media_type.</summary>
      <returns>Parámetros del valor del encabezado media_type.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado media type.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado media type válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary>Representa un tipo de medio con un factor de calidad adicional utilizado en un encabezado Content-Type.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType">Un <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> representado como una cadena para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType">Un <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> representado como una cadena para inicializar la nueva instancia.</param>
      <param name="quality">La calidad asociada a este valor de encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado media type with quality.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" /> .</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado media type with quality válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary>Obtiene o establece el valor de calidad de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <returns>Valor de calidad del objeto <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary>Representa un par de nombre y valor utilizado en diferentes encabezados como se define en RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="source">Objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name">Nombre del encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name">Nombre del encabezado.</param>
      <param name="value">Valor del encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary>Obtiene el nombre del encabezado.</summary>
      <returns>Nombre del encabezado.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado name value.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado name value válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary>Obtiene el valor del encabezado.</summary>
      <returns>Valor del encabezado.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary>Representa un par de nombre y valor con parámetros utilizado en diferentes encabezados como se define en RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="source">Objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name">Nombre del encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name">Nombre del encabezado.</param>
      <param name="value">Valor del encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary>Obtiene los parámetros del objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Colección que contiene los parámetros.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado name value with parameter.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado name value with parameter válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary>Representa un valor de token de producto en un encabezado User-Agent.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name">Nombre del producto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name">El valor del nombre del producto.</param>
      <param name="version">El valor de la versión del producto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary>Obtiene el nombre del token del producto.</summary>
      <returns>Nombre del token del producto.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado product.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary>Obtiene la versión del token del producto.</summary>
      <returns>Versión del token del producto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary>Representa un valor que puede ser un producto o un comentario en un encabezado User-Agent.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="product">Objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="comment">Un valor de comentario.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="productName">El valor del nombre del producto.</param>
      <param name="productVersion">El valor de la versión del producto.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary>Obtiene el comentario del objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>El valor del comentario de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado product info.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado product info válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary>Obtiene el producto del objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Valor del producto de este <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary>Representa un valor de encabezado If-Range que puede ser de fecha y hora o de etiqueta de entidad.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="date">Un valor de datos utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag">Objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag">Una etiqueta de entidad representada como cadena utilizada para inicializar la nueva instancia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary>Obtiene la fecha del objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Fecha del objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary>Obtiene la etiqueta de entidad del objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Etiqueta de entidad del objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="input">Una cadena que representa la información del valor de encabezado range condition.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado range condition válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary>Representa un valor de encabezado Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> con un intervalo de bytes.</summary>
      <param name="from">Posición en la que se va a empezar a enviar datos.</param>
      <param name="to">Posición en la que se va a terminar de enviar datos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> es mayor que <paramref name="to" />.  
O bien 
 <paramref name="from" /> o <paramref name="to" /> es menor que 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado range.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado range válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary>Obtiene los intervalos especificados del objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Los intervalos del objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary>Obtiene la unidad del objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns>Unidad del objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary>Representa un intervalo de bytes en un valor de encabezado Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <param name="from">Posición en la que se va a empezar a enviar datos.</param>
      <param name="to">Posición en la que se va a terminar de enviar datos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> es mayor que <paramref name="to" />.  
O bien 
 <paramref name="from" /> o <paramref name="to" /> es menor que 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary>Obtiene la posición en la que se va a empezar a enviar datos.</summary>
      <returns>Posición en la que se va a empezar a enviar datos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary>Obtiene la posición en la que se va a detener el envío de datos.</summary>
      <returns>Posición en la que se va a terminar de enviar datos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary>Representa un valor de encabezado Retry-After que puede ser de fecha y hora o de duración.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="date">Desplazamiento de fecha y hora utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="delta">El delta, en segundos, utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary>Obtiene el desplazamiento de fecha y hora a partir del objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Desplazamiento de fecha y hora a partir del objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary>Obtiene la diferencia en segundos desde el objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Diferencia en segundos desde el objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado retry condition.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado retry condition válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary>Representa un valor de encabezado de cadena con una calidad opcional.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value">La cadena utilizada para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value">Una cadena utilizada para inicializar la nueva instancia.</param>
      <param name="quality">Un factor de calidad utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto especificado es igual al objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado quality.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no es una cadena válida con información del valor de encabezado quality válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary>Obtiene el factor de calidad del objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Factor de calidad del objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary>Obtiene el valor de cadena del objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns>Valor de cadena del objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary>Representa un valor de encabezado Accept-Encoding.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="source">Objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="value">Una cadena utilizada para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto especificado es igual al objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary>Obtiene los parámetros de codificación de transferencia.</summary>
      <returns>Parámetros de codificación de transferencia.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado transfer-coding.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado transfer-coding válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary>Obtiene el valor de transfer-coding.</summary>
      <returns>Valor de transfer-coding.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary>Representa un valor del encabezado Accept-Encoding con factor de calidad opcional.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value">Una cadena utilizada para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value">Una cadena utilizada para inicializar la nueva instancia.</param>
      <param name="quality">Un valor para el factor de calidad.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de transfer-coding.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado de calidad transfer-coding válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary>Obtiene el factor de calidad de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <returns>Factor de calidad de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary>Representa el valor de un encabezado Via.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">La versión de protocolo del protocolo recibido.</param>
      <param name="receivedBy">Host y puerto que han recibido la solicitud o respuesta.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">La versión de protocolo del protocolo recibido.</param>
      <param name="receivedBy">Host y puerto que han recibido la solicitud o respuesta.</param>
      <param name="protocolName">El nombre de protocolo del protocolo recibido.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion">La versión de protocolo del protocolo recibido.</param>
      <param name="receivedBy">Host y puerto que han recibido la solicitud o respuesta.</param>
      <param name="protocolName">El nombre de protocolo del protocolo recibido.</param>
      <param name="comment">Campo de comentario que se utiliza para identificar el software del proxy o puerta de enlace del destinatario.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary>Obtiene el campo de comentario que se utiliza para identificar el software del proxy o puerta de enlace del destinatario.</summary>
      <returns>Campo de comentario que se utiliza para identificar el software del proxy o puerta de enlace del destinatario.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado via.</param>
      <returns>Instancia de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado via válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary>Obtiene el nombre del protocolo del protocolo recibido.</summary>
      <returns>Nombre del protocolo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary>Obtiene la versión del protocolo del protocolo recibido.</summary>
      <returns>Versión del protocolo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary>Obtiene el host y el puerto que han recibido la solicitud o respuesta.</summary>
      <returns>Host y puerto que han recibido la solicitud o respuesta.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actual.</summary>
      <returns>Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary>Representa un valor de advertencia utilizado por el encabezado Warning.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code">Código de advertencia específico.</param>
      <param name="agent">Host que asoció la advertencia.</param>
      <param name="text">Cadena entre comillas que contiene el texto de la advertencia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code">Código de advertencia específico.</param>
      <param name="agent">Host que asoció la advertencia.</param>
      <param name="text">Cadena entre comillas que contiene el texto de la advertencia.</param>
      <param name="date">Marca de fecha y hora de la advertencia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary>Obtiene el host que asoció la advertencia.</summary>
      <returns>Host que asoció la advertencia.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary>Obtiene el código de advertencia específico.</summary>
      <returns>Código de advertencia específico.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary>Obtiene la marca de fecha y hora de la advertencia.</summary>
      <returns>Marca de fecha y hora de la advertencia.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary>Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns>Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary>Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="input">Cadena que representa la información del valor de encabezado authentication.</param>
      <returns>Devuelve una instancia de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> no contiene información del valor de encabezado authentication válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actual.</summary>
      <returns>Devuelve una copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary>Obtiene una cadena entre comillas que contiene el texto de la advertencia.</summary>
      <returns>Cadena entre comillas que contiene el texto de la advertencia.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary>Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns>Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary>Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> válida.</summary>
      <param name="input">Cadena que se va a validar.</param>
      <param name="parsedValue">Versión <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> de la cadena.</param>
      <returns>
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary>Proporciona una clase base para enviar solicitudes HTTP y recibir respuestas HTTP de un recurso identificado por un URI.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" /> mediante un controlador <see cref="T:System.Net.Http.HttpClientHandler" /> que se elimina cuando se elimina esta instancia.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" /> con el controlador especificado. El controlador se elimina cuando se elimina esta instancia.</summary>
      <param name="handler">Pila de controlador HTTP que se va a usar para enviar solicitudes.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" /> con el controlador proporcionado y especifica si se debe eliminar ese controlador cuando se elimine esta instancia.</summary>
      <param name="handler">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> responsable de procesar los mensajes de respuesta HTTP.</param>
      <param name="disposeHandler">
        <see langword="true" /> si HttpClient.Dispose debe desechar el controlador interno; <see langword="false" /> si piensa volver a usar el controlador interno.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary>Obtiene o establece la dirección base de Identificador uniforme de recursos (URI) del recurso de Internet utilizado cuando se envían solicitudes.</summary>
      <returns>La dirección base de Identificador uniforme de recursos (URI) del recurso de Internet utilizado cuando se envían solicitudes.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary>Cancela todas las solicitudes pendientes en esta instancia.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary>Obtiene o establece el proxy HTTP global.</summary>
      <returns>Proxy usado por cada llamada que crea instancias de un <see cref="T:System.Net.HttpWebRequest" />.</returns>
      <exception cref="T:System.ArgumentNullException">El valor pasado no puede ser <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary>Obtiene los encabezados que se deben enviar con cada solicitud.</summary>
      <returns>Encabezados que se deben enviar con cada solicitud.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary>Obtiene o establece la versión HTTP predeterminada utilizada en las solicitudes posteriores realizadas por esta instancia de <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <returns>Versión predeterminada que se va a usar para las solicitudes realizadas <see cref="T:System.Net.Http.HttpClient" /> con esta instancia.</returns>
      <exception cref="T:System.ArgumentNullException">En una operación Set, <see langword="DefaultRequestVersion" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia de <see cref="T:System.Net.Http.HttpClient" /> ya ha iniciado una o más solicitudes.</exception>
      <exception cref="T:System.ObjectDisposedException">Ya se ha eliminado la instancia de <see cref="T:System.Net.Http.HttpClient" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary>Envía una solicitud DELETE al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envía una solicitud DELETE al URI especificado con un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary>Envía una solicitud DELETE al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envía una solicitud DELETE al URI especificado con un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpClient" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary>Envía una solicitud GET al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary>Envía una solicitud GET al URI especificado con una opción de finalización de HTTP como operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="completionOption">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envía una solicitud GET al URI especificado con una opción de finalización de HTTP y un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="completionOption">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary>Envía una solicitud GET al URI especificado con un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary>Envía una solicitud GET al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary>Envía una solicitud GET al URI especificado con una opción de finalización de HTTP como operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="completionOption">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envía una solicitud GET al URI especificado con una opción de finalización de HTTP y un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="completionOption">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Envía una solicitud GET al URI especificado con un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary>Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una matriz de bytes en una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary>Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una matriz de bytes en una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary>Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una secuencia en una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary>Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una secuencia en una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary>Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una cadena en una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary>Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una cadena en una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary>Obtiene o establece el número máximo de bytes que se van a almacenar en búfer al leer el contenido de la respuesta.</summary>
      <returns>Número máximo de bytes que se van a almacenar en búfer al leer el contenido de la respuesta. El valor predeterminado de esta propiedad es 2 gigabytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El tamaño especificado es menor o igual que cero.</exception>
      <exception cref="T:System.InvalidOperationException">Ya se ha iniciado una operación en la instancia actual.</exception>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envía una solicitud PATCH a un URI designado como una cadena como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envía una solicitud PATCH con un token de cancelación a un URI representado como una cadena como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envía una solicitud PATCH como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envía una solicitud PATCH con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envía una solicitud POST al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envía una solicitud POST con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envía una solicitud POST al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envía una solicitud POST con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary>Envía una solicitud PUT al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envía una solicitud PUT con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>Envía una solicitud PUT al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>Envía una solicitud PUT con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri">URI al que se envía la solicitud.</param>
      <param name="content">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary>Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="request" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary>Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="completionOption">Cuándo se debe completar la operación (tan pronto como haya una respuesta disponible o después de leer todo el contenido de la respuesta).</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="request" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="completionOption">Cuándo se debe completar la operación (tan pronto como haya una respuesta disponible o después de leer todo el contenido de la respuesta).</param>
      <param name="cancellationToken">Token de cancelación para cancelar la operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="request" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="cancellationToken">Token de cancelación para cancelar la operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="request" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary>Obtiene o establece el tiempo de espera hasta que se agota el tiempo de espera de la solicitud.</summary>
      <returns>El tiempo de espera hasta que se agota el tiempo de espera de la solicitud.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El tiempo de espera especificado es menor o igual que cero y no es <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ya se ha iniciado una operación en la instancia actual.</exception>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary>Controlador de mensajes predeterminado utilizado por <see cref="T:System.Net.Http.HttpClient" /> en .NET Framework, .NET Core 2.0 y versiones anteriores.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary>Crea una instancia de una clase <see cref="T:System.Net.Http.HttpClientHandler" />.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary>Obtiene o establece un valor que indica si el controlador debe seguir las respuestas de redirección.</summary>
      <returns>
        <see langword="true" />Si el controlador debe seguir las respuestas de redirección; en <see langword="false" />caso contrario,. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary>Obtiene o establece el tipo de método de descompresión usado por el controlador para la descompresión automática de la respuesta de contenido HTTP.</summary>
      <returns>Método de descompresión automática usado por el controlador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary>Obtiene o establece un valor que indica si el certificado se coteja con la lista de revocación de la entidad de certificación.</summary>
      <returns>Es <see langword="true" /> si la lista de revocación de certificados se comprueba; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Solo .NET Framework 4.7.1: Esta propiedad no está implementada.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary>Obtiene o establece un valor que indica si el certificado se ha seleccionado automáticamente desde el almacén de certificados o si el autor de llamada tiene permiso para pasar un certificado de cliente específico.</summary>
      <returns>Colección de certificados de seguridad asociados a este controlador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary>Obtiene la colección de certificados de seguridad asociados a solicitud del servidor.</summary>
      <returns>Objeto X509CertificateCollection que se presenta al servidor al realizar la autenticación de cliente basada en certificados.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary>Obtiene o establece el contenedor de cookies utilizado para almacenar cookies de servidor por el controlador.</summary>
      <returns>Contenedor de cookies utilizado para almacenar cookies de servidor por el controlador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary>Obtiene o establece la información de autenticación usada por este controlador.</summary>
      <returns>Las credenciales de autenticación asociadas al controlador. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary>Obtiene un delegado almacenado en caché que siempre devuelve <see langword="true" />.</summary>
      <returns>Delegado almacenado en caché que siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary>Cuando se usa el proxy predeterminado (sistema), obtiene o establece las credenciales que se van a enviar al servidor proxy predeterminado para la autenticación. El proxy predeterminado se usa solo cuando <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> está establecido en <see langword="true" /> y <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> está establecido en <see langword="null" />.</summary>
      <returns>Las credenciales necesarias para autenticar una solicitud en el servidor proxy predeterminado.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpClientHandler" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary>Obtiene o establece el número máximo de redirecciones que sigue el controlador.</summary>
      <returns>Número máximo de respuestas de redirección que sigue el controlador. El valor predeterminado es 50.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary>Obtiene o establece el número máximo de conexiones simultáneas (por punto de conexión del servidor) permitido al realizar solicitudes mediante un objeto <see cref="T:System.Net.Http.HttpClient" />. Tenga en cuenta que el límite es por punto de conexión del servidor, así que, por ejemplo, un valor de 256 permitiría 256 conexiones simultáneas con http://www.adatum.com/ y otras 256 con http://www.adventure-works.com/.</summary>
      <returns>Número máximo de conexiones simultáneas (por punto de conexión de servidor) permitidas por un <see cref="T:System.Net.Http.HttpClient" /> objeto.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary>Obtiene o establece el tamaño de búfer de contenido de solicitud máximo utilizado por el controlador.</summary>
      <returns>Tamaño de búfer de contenido de solicitud máximo en bytes. El valor predeterminado es 2 gigabytes.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary>Obtiene o establece la longitud máxima, en kilobytes (1024 bytes), de los encabezados de respuesta. Por ejemplo, si el valor es 64, se permiten 65536 bytes como longitud máxima de los encabezados de respuesta.</summary>
      <returns>La longitud máxima, en kilobytes (1024 bytes), de los encabezados de respuesta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary>Obtiene o establece un valor que indica si el controlador envía un encabezado de autorización con la solicitud.</summary>
      <returns>
        <see langword="true" /> para que el controlador envíe un encabezado de autorización HTTP con las solicitudes después de que tenga lugar la autenticación; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary>Obtiene un diccionario que permite la escritura (es decir, un mapa) de propiedades personalizadas para las solicitudes <see cref="T:System.Net.Http.HttpClient" />. El diccionario se inicializa vacío; puede insertar y consultar pares clave-valor para los controladores personalizados y el procesamiento especial.</summary>
      <returns>Diccionario grabable de propiedades personalizadas.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary>Obtiene o establece la información de proxy usada por el controlador.</summary>
      <returns>La información de proxy usada por el controlador. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Crea una instancia de  <see cref="T:System.Net.Http.HttpResponseMessage" /> según la información proporcionada en el <see cref="T:System.Net.Http.HttpRequestMessage" /> como una operación que no se bloqueará.</summary>
      <param name="request">Mensaje de solicitud HTTP.</param>
      <param name="cancellationToken">Token de cancelación para cancelar la operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary>Obtiene o establece un método de devolución de llamada para validar el certificado de servidor.</summary>
      <returns>Método de devolución de llamada para validar el certificado de servidor.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary>Obtiene o establece el protocolo TLS/SSL usado por los objetos <see cref="T:System.Net.Http.HttpClient" /> administrados por el objeto HttpClientHandler.</summary>
      <returns>Uno de los valores definidos en la enumeración <see cref="T:System.Security.Authentication.SslProtocols" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Solo .NET Framework 4.7.1: Esta propiedad no está implementada.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary>Obtiene un valor que indica si el controlador admite descompresión de contenido de respuesta automática.</summary>
      <returns>
        <see langword="true" /> si el controlador admite descompresión de contenido de respuesta automática; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary>Obtiene un valor que indica si el controlador admite la configuración de proxy.</summary>
      <returns>
        <see langword="true" /> si el controlador admite la configuración del proxy; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary>Obtiene un valor que indica si el controlador admite opciones de configuración para las propiedades <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> y <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />.</summary>
      <returns>
        <see langword="true" /> si el controlador admite las opciones de configuración para las propiedades <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> y <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary>Obtiene o establece un valor que indica si el controlador usa la propiedad <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> para almacenar cookies de servidor y usa estas cookies al enviar solicitudes.</summary>
      <returns>Es <see langword="true" /> si el controlador usa la propiedad <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> para almacenar cookies de servidor y usa estas cookies al enviar solicitudes; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary>Obtiene o establece un valor que controla si el identificador envía las credenciales predeterminadas con las solicitudes.</summary>
      <returns>Es <see langword="true" /> si se utilizan las credenciales predeterminadas; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary>Obtiene o establece un valor que indica si el controlador usa un proxy para las solicitudes.</summary>
      <returns>
        <see langword="true" /> si el controlador debe usar a un proxy para solicitudes; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary>Indica si las operaciones de <see cref="T:System.Net.Http.HttpClient" /> se consideran completadas cualquiera tan pronto como una respuesta esté disponible o después de leer el mensaje de respuesta completo, incluido el contenido.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary>La operación debe completarse después de leer toda la respuesta incluido el contenido.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary>La operación debe completarse tan pronto como haya una respuesta disponible y se lean los encabezados. El contenido no se ha leído aún.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary>Clase base que representa un cuerpo de entidad HTTP y encabezados de contenido.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary>Serializa el contenido HTTP en un flujo de bytes y lo copia en el objeto de flujo proporcionado como parámetro <paramref name="stream" />.</summary>
      <param name="stream">Flujo de destino.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializa el contenido HTTP en un flujo de bytes y lo copia en el objeto de flujo proporcionado como parámetro <paramref name="stream" />.</summary>
      <param name="stream">Flujo de destino.</param>
      <param name="context">Información sobre el transporte (token de enlace de canal, por ejemplo). Este parámetro puede ser <see langword="null" />.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary>Serializa el contenido HTTP en un flujo de memoria como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary>Libera los recursos no administrados y desecha los recursos administrados que usa <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpContent" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary>Obtiene los encabezados de contenido HTTP según se define en RFC 2616.</summary>
      <returns>Encabezados de contenido según se define en RFC 2616.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary>Serializa el contenido HTTP en un búfer de memoria como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary>Serializa el contenido HTTP en un búfer de memoria como una operación asincrónica.</summary>
      <param name="maxBufferSize">Tamaño máximo, en bytes, del búfer que se va a usar.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary>Serializa el contenido HTTP en una matriz de bytes como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary>Serializa el contenido HTTP y devuelve un flujo que representa el contenido como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary>Serializa el contenido HTTP en una cadena como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializa el contenido HTTP en un flujo como una operación asincrónica.</summary>
      <param name="stream">Flujo de destino.</param>
      <param name="context">Información sobre el transporte (token de enlace de canal, por ejemplo). Este parámetro puede ser <see langword="null" />.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary>Determina si el contenido HTTP tiene una longitud válida en bytes.</summary>
      <param name="length">Longitud en bytes del contenido HTTP.</param>
      <returns>
        <see langword="true" /> si <paramref name="length" /> es una longitud válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary>Tipo base para los controladores de mensajes HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary>Libera los recursos no administrados y desecha los recursos administrados que usa <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpMessageHandler" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="cancellationToken">Token de cancelación para cancelar la operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary>Clase especializada que permite que las aplicaciones llamen al método <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> en una cadena de controlador HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Inicializa una instancia de una clase <see cref="T:System.Net.Http.HttpMessageInvoker" /> con un <see cref="T:System.Net.Http.HttpMessageHandler" /> específico.</summary>
      <param name="handler">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> responsable de procesar los mensajes de respuesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>Inicializa una instancia de una clase <see cref="T:System.Net.Http.HttpMessageInvoker" /> con un <see cref="T:System.Net.Http.HttpMessageHandler" /> específico.</summary>
      <param name="handler">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> responsable de procesar los mensajes de respuesta HTTP.</param>
      <param name="disposeHandler">Es <see langword="true" /> si Dispose() debe desechar el controlador interno; es <see langword="false" /> si piensa reutilizar el controlador interno.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary>Libera los recursos no administrados y desecha los recursos administrados que usa <see cref="T:System.Net.Http.HttpMessageInvoker" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpMessageInvoker" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="cancellationToken">Token de cancelación para cancelar la operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary>Una clase del asistente para recuperar y comparar métodos HTTP estándar y para crear nuevos métodos HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Http.HttpMethod" /> con un método HTTP específico.</summary>
      <param name="method">Método HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary>Representa un método de protocolo HTTP DELETE.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary>Determina si el objeto <see cref="T:System.Net.Http.HttpMethod" /> especificado es igual al objeto <see cref="T:System.Object" /> actual.</summary>
      <param name="other">Método de objeto HTTP que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto especificado es igual al objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
      <returns>
        <see langword="true" /> si el objeto especificado es igual al objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary>Representa un método de protocolo HTTP GET.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary>Sirve como función hash de este tipo.</summary>
      <returns>Código hash para el objeto <see cref="T:System.Object" /> actual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary>Representa un método de protocolo HTTP HEAD. El método HEAD es idéntico a GET, excepto que el servidor sólo devuelve los encabezados de mensaje en la respuesta, sin el cuerpo del mensaje.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary>Método HTTP.</summary>
      <returns>Representa un método HTTP como un <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>El operador de igualdad para comparar dos objetos <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left">La izquierda <see cref="T:System.Net.Http.HttpMethod" /> a un operador de igualdad.</param>
      <param name="right">La derecha <see cref="T:System.Net.Http.HttpMethod" /> a un operador de igualdad.</param>
      <returns>
        <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> especificados son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>Operador de desigualdad para comparar dos objetos <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left">El <see cref="T:System.Net.Http.HttpMethod" /> izquierdo en un operador de desigualdad.</param>
      <param name="right">El <see cref="T:System.Net.Http.HttpMethod" /> derecho en un operador de desigualdad.</param>
      <returns>Es <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> especificados no son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary>Representa un método de protocolo HTTP OPTIONS.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch" />
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary>Representa un método de protocolo POST HTTP, utilizado para enviar una entidad nueva como adición a un identificador URI.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary>Representa un método de protocolo HTTP PUT, utilizado para reemplazar una entidad identificada por un identificador URI.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary>Devuelve una cadena que representa el objeto actual.</summary>
      <returns>Cadena que representa el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary>Representa un método de protocolo HTTP TRACE.</summary>
      <returns>Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary>Una clase base para las excepciones que producen las clases <see cref="T:System.Net.Http.HttpClient" /> y <see cref="T:System.Net.Http.HttpMessageHandler" /> .</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestException" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestException" /> con un mensaje específico que describe la excepción actual.</summary>
      <param name="message">Mensaje que describe la excepción actual.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestException" /> con un mensaje específico que describe la excepción actual y una excepción interna.</summary>
      <param name="message">Mensaje que describe la excepción actual.</param>
      <param name="inner">Excepción interna.</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary>Representa un mensaje de solicitud HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestMessage" /> con un método HTTP y una solicitud <see cref="T:System.Uri" />.</summary>
      <param name="method">Método HTTP.</param>
      <param name="requestUri">Cadena que representa el elemento <see cref="T:System.Uri" /> de solicitud.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestMessage" /> con un método HTTP y una solicitud <see cref="T:System.Uri" />.</summary>
      <param name="method">Método HTTP.</param>
      <param name="requestUri">Objeto <see cref="T:System.Uri" /> que se va a solicitar.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary>Obtiene o establece el contenido del mensaje HTTP.</summary>
      <returns>Contenido de un mensaje</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary>Libera los recursos no administrados y desecha los recursos administrados que usa <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpRequestMessage" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary>Obtiene la colección de encabezados de solicitud HTTP.</summary>
      <returns>Colección de encabezados de solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary>Obtiene o establece el método HTTP usado por el mensaje de solicitud HTTP.</summary>
      <returns>Método HTTP usado por el mensaje de solicitud. El valor predeterminado es el método GET.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary>Obtiene un conjunto de propiedades de la solicitud HTTP.</summary>
      <returns>Devuelva <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary>Obtiene o establece el <see cref="T:System.Uri" /> utilizado para la solicitud HTTP.</summary>
      <returns>
        <see cref="T:System.Uri" /> utilizado para la solicitud HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary>Devuelve una cadena que representa el objeto actual.</summary>
      <returns>Representación en forma de cadena del objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary>Obtiene o establece la versión del mensaje HTTP.</summary>
      <returns>Versión de mensaje HTTP. El valor predeterminado en el .NET Framework y versiones anteriores de .NET Core es 1,1. En .NET Core 2,1 y versiones posteriores, es 2,0.</returns>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary>Representa un mensaje de respuesta HTTP incluido el código de estado y los datos.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Http.HttpResponseMessage" /> con un <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> específico.</summary>
      <param name="statusCode">Código de estado de la respuesta HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary>Obtiene o establece el contenido de un mensaje de respuesta HTTP.</summary>
      <returns>Contenido de un mensaje de respuesta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary>Libera los recursos no administrados y desecha los recursos no administrados que usa <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpResponseMessage" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary>Inicia una excepción si la propiedad <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> para la respuesta HTTP es <see langword="false" />.</summary>
      <returns>Mensaje de respuesta HTTP si la llamada se realiza correctamente.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException">La respuesta HTTP es incorrecta.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary>Obtiene la colección de encabezados de respuesta HTTP.</summary>
      <returns>Colección de encabezados de respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary>Obtiene un valor que indica si la respuesta HTTP se realizó correctamente.</summary>
      <returns>
        <see langword="true" />Si <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> estaba en el intervalo 200-299; de lo <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary>Obtiene o establece la frase de motivo que suelen enviar los servidores junto con el código de estado.</summary>
      <returns>La frase de motivo enviada por el servidor.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary>Obtiene o establece el mensaje de solicitud que condujo a este mensaje de respuesta.</summary>
      <returns>Mensaje de solicitud que condujo a este mensaje de respuesta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary>Obtiene o establece el código de estado de la respuesta HTTP.</summary>
      <returns>Código de estado de la respuesta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary>Devuelve una cadena que representa el objeto actual.</summary>
      <returns>Representación en forma de cadena del objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary>Obtiene la colección de encabezados finales incluidos en una respuesta HTTP.</summary>
      <returns>Colección de encabezados finales en la respuesta HTTP.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException">PROTOCOL_ERROR: La respuesta HTTP/2 contiene seudoencabezados en el marco de encabezados finales.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary>Obtiene o establece la versión del mensaje HTTP.</summary>
      <returns>Versión de mensaje HTTP. De manera predeterminada, es 1.1.</returns>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary>Un tipo base para los controladores que solo realizan un pequeño procesamiento de mensajes de solicitud y/o de respuesta.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary>Crea una instancia de una clase <see cref="T:System.Net.Http.MessageProcessingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>Crea una instancia de una clase <see cref="T:System.Net.Http.MessageProcessingHandler" /> con un controlador interno concreto.</summary>
      <param name="innerHandler">Controlador interno que es responsable de procesar los mensajes de respuesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Realiza el procesamiento en cada solicitud enviada al servidor.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a procesar.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Mensaje de solicitud HTTP que se procesó.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>Realice el procesamiento en cada respuesta del servidor.</summary>
      <param name="response">Mensaje de respuesta HTTP que se va a procesar.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Mensaje de respuesta HTTP que se procesó.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envía una solicitud HTTP al controlador interno para enviar al servidor como una operación asincrónica.</summary>
      <param name="request">Mensaje de la solicitud HTTP que se va a enviar al servidor.</param>
      <param name="cancellationToken">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary>Proporciona una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan mediante la especificación de tipo de contenido multipart/*.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype">Subtipo del contenido con varias partes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subtype" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype">Subtipo del contenido con varias partes.</param>
      <param name="boundary">La cadena delimitadora para el contenido con varias partes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subtype" /> era <see langword="null" /> o una cadena vacía.  
<paramref name="boundary" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.  
O bien 
<paramref name="boundary" /> termina con un carácter de espacio.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longitud de <paramref name="boundary" /> fue mayor que 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary>Agregue contenido con varias partes HTTP a una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan mediante la especificación de tipo de contenido multipart/*.</summary>
      <param name="content">Contenido HTTP que se agregará a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary>Serializa el contenido HTTP en un flujo con codificación multipart/* como operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.MultipartContent" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan con la especificación de tipo de contenido multipart/*.</summary>
      <returns>Objeto que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializa el contenido HTTP con varias partes en un flujo como una operación asincrónica.</summary>
      <param name="stream">Flujo de destino.</param>
      <param name="context">Información sobre el transporte (token de enlace de canal, por ejemplo). Este parámetro puede ser <see langword="null" />.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary>Implementación explícita del método <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />.</summary>
      <returns>Objeto que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary>Determina si el contenido HTTP de varias partes tiene una longitud válida en bytes.</summary>
      <param name="length">Longitud en bytes del contenido HTTP.</param>
      <returns>
        <see langword="true" /> si <paramref name="length" /> es una longitud válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary>Proporciona un contenedor para contenido codificado mediante el tipo MIME multipart/form-data.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
      <param name="boundary">La cadena delimitadora para el contenido de los datos de formulario con varias partes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="boundary" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.  
O bien 
<paramref name="boundary" /> termina con un carácter de espacio.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longitud de <paramref name="boundary" /> fue mayor que 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary>Agrega contenido HTTP a una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan al tipo MIME multipart/form-data.</summary>
      <param name="content">Contenido HTTP que se agregará a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary>Agrega contenido HTTP a una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan al tipo MIME multipart/form-data.</summary>
      <param name="content">Contenido HTTP que se agregará a la colección.</param>
      <param name="name">Nombre para el contenido HTTP que se va a agregar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary>Agrega contenido HTTP a una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan al tipo MIME multipart/form-data.</summary>
      <param name="content">Contenido HTTP que se agregará a la colección.</param>
      <param name="name">Nombre para el contenido HTTP que se va a agregar.</param>
      <param name="fileName">Nombre del archivo para el contenido HTTP se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.  
o bien 
<paramref name="fileName" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent" />
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <param name="content" />
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary>Proporciona el controlador de mensajes predeterminado utilizado por <see cref="T:System.Net.Http.HttpClient" /> en .NET Core 2.1 y versiones posteriores.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary>Obtiene o establece el tipo de método de descompresión usado por el controlador para la descompresión automática de la respuesta de contenido HTTP.</summary>
      <returns>El tipo de método de descompresión usado por el controlador para la descompresión automática de la respuesta de contenido HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary>Obtiene o establece el objeto contenedor de cookies administrado.</summary>
      <returns>Objeto contenedor de cookies administrado.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials" />
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary>Cuando se usa el proxy predeterminado (sistema), obtiene o establece las credenciales utilizadas para realizar el envío al servidor proxy predeterminado para la autenticación.</summary>
      <returns>Las credenciales usadas para autenticar al usuario en un proxy de autenticación.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary>Obtiene o establece el número máximo de redirecciones HTTP permitidas.</summary>
      <returns>Número máximo de redirecciones HTTP permitidas.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary>Obtiene o establece el número máximo de conexiones TCP simultáneas permitidas en un único servidor.</summary>
      <returns>Número máximo de conexiones TCP simultáneas permitidas para un solo servidor.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary>Obtiene o establece la cantidad máxima de datos que se pueden agotar de respuestas en bytes.</summary>
      <returns>Cantidad máxima de datos que se pueden purgar de las respuestas en bytes.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary>Obtiene o establece la longitud máxima, en kilobytes (1024 bytes), de los encabezados de respuesta.</summary>
      <returns>Tamaño máximo de la parte del encabezado de la respuesta del servidor, en kilobytes.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary>Obtiene o establece el tiempo durante el que una conexión puede estar inactiva en el grupo para que se considere reutilizable.</summary>
      <returns>Tiempo de inactividad máximo para una conexión en el grupo. El valor predeterminado de esta propiedad es 2 minutos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor que <see cref="F:System.TimeSpan.Zero" /> o es igual a <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary>Obtiene o establece un valor que indica si el controlador envía un encabezado de autorización con la solicitud.</summary>
      <returns>
        <see langword="true" />Si el controlador envía un encabezado de autorización con la solicitud; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary>Obtiene o establece el proxy personalizado cuando la propiedad  <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> es <see langword="true" />.</summary>
      <returns>Proxy personalizado.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary>Obtiene o establece el conjunto de opciones que se utiliza para la autenticación TLS del cliente.</summary>
      <returns>Conjunto de opciones usadas para la autenticación de TLS del cliente.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
    <member name="T:System.Net.Http.StreamContent">
      <summary>Proporciona contenido HTTP basado en una secuencia.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content">Contenido usado para inicializar el <see cref="T:System.Net.Http.StreamContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content">Contenido usado para inicializar <see cref="T:System.Net.Http.StreamContent" />.</param>
      <param name="bufferSize">Tamaño del búfer, en bytes, para <see cref="T:System.Net.Http.StreamContent" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> era <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> era menor o igual que cero.</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary>Escribe el contenido del flujo HTTP en un flujo de memoria como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.StreamContent" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Serializa el contenido HTTP en un flujo como una operación asincrónica.</summary>
      <param name="stream">Flujo de destino.</param>
      <param name="context">Información sobre el transporte (token de enlace de canal, por ejemplo). Este parámetro puede ser <see langword="null" />.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary>Determina si el contenido del flujo tiene una longitud válida en bytes.</summary>
      <param name="length">Longitud en bytes del contenido del flujo.</param>
      <returns>
        <see langword="true" /> si <paramref name="length" /> es una longitud válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary>Proporciona contenido HTTP basado en una cadena.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenido usado para inicializar el <see cref="T:System.Net.Http.StringContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenido usado para inicializar <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding">Codificación que se va a usar para el contenido.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content">Contenido usado para inicializar <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding">Codificación que se va a usar para el contenido.</param>
      <param name="mediaType">Tipo de medio que se va a utilizar para el contenido.</param>
    </member>
  </members>
</doc>