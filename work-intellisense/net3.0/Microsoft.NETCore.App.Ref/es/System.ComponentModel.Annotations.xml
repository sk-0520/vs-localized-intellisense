<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Annotations</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider">
      <summary vsli:raw="Extends the metadata information for a class by adding attributes and property information that is defined in an associated class.">Extiende la información sobre los metadatos de una clase agregando la información de atributos y propiedades que se define en una clase asociada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified type.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> usando el tipo especificado.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">Tipo para el que se crea el proveedor de metadatos.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified metadata provider type and associated type.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> con el tipo de proveedor de metadatos especificado y el tipo asociado.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">Tipo para el que se crea el proveedor de metadatos.</param>
      <param name="associatedMetadataType" vsli:raw="The associated type that contains the metadata.">Tipo asociado que contiene los metadatos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;associatedMetadataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="associatedMetadataType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary vsli:raw="Gets a type descriptor for the specified type and object.">Obtiene un descriptor de tipos para el tipo y el objeto especificados.</summary>
      <param name="objectType" vsli:raw="The type of object to retrieve the type descriptor for.">Tipo de objeto para el que se va a recuperar el descriptor de tipos.</param>
      <param name="instance" vsli:raw="An instance of the type.">Instancia del tipo.</param>
      <returns vsli:raw="The descriptor that provides metadata for the type.">Descriptor que proporciona los metadatos del tipo.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
      <summary vsli:raw="Specifies that an entity member represents a data relationship, such as a foreign key relationship.">Especifica que un miembro de entidad representa una relación de datos, como una relación de clave externa.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociationAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the association.">Nombre de la asociación.</param>
      <param name="thisKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;thisKey&quot; /&gt; side of the association.">Una lista separada por comas de los nombres de propiedad de los valores de clave en el lado <paramref name="thisKey" /> de la asociación.</param>
      <param name="otherKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;otherKey&quot; /&gt; side of the association.">Una lista separada por comas de los nombres de propiedad de los valores de clave en el lado <paramref name="otherKey" /> de la asociación.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
      <summary vsli:raw="Gets or sets a value that indicates whether the association member represents a foreign key.">Obtiene o establece un valor que indica si el miembro de asociación representa una clave externa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the association represents a foreign key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la asociación representa una clave externa; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
      <summary vsli:raw="Gets the name of the association.">Obtiene el nombre de la asociación.</summary>
      <returns vsli:raw="The name of the association.">Nombre de la asociación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
      <summary vsli:raw="Gets the property names of the key values on the OtherKey side of the association.">Obtiene los nombres de propiedad de los valores de clave en el lado OtherKey de la asociación.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the OtherKey side of the association.">Una lista separada por comas de los nombres de propiedad que representan los valores de clave en el lado OtherKey de la asociación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">Obtiene una colección de miembros de clave individuales que se especifican en la propiedad <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">Una colección de miembros de clave individuales que se especifican en la propiedad <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
      <summary vsli:raw="Gets the property names of the key values on the ThisKey side of the association.">Obtiene los nombres de propiedad de los valores de clave en el lado ThisKey de la asociación.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the ThisKey side of the association.">Una lista separada por comas de los nombres de propiedad que representan los valores de clave en el lado ThisKey de la asociación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">Obtiene una colección de miembros de clave individuales que se especifican en la propiedad <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">Una colección de miembros de clave individuales que se especifican en la propiedad <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CompareAttribute">
      <summary vsli:raw="Provides an attribute that compares two properties.">Proporciona un atributo que compara dos propiedades.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CompareAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.CompareAttribute" />.</summary>
      <param name="otherProperty" vsli:raw="The property to compare with the current property.">Propiedad que se va a comparar con la propiedad actual.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Aplica formato a un mensaje de error según el campo de datos donde se produjo el error.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nombre del campo que produjo el error de validación.</param>
      <returns vsli:raw="The formatted error message.">Mensaje de error con formato.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether a specified object is valid.">Determina si un objeto especificado es válido.</summary>
      <param name="value" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <param name="validationContext" vsli:raw="An object that contains information about the validation request.">Objeto que contiene información sobre la solicitud de validación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> es válido; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherProperty">
      <summary vsli:raw="Gets the property to compare with the current property.">Obtiene la propiedad que se va a comparar con la propiedad actual.</summary>
      <returns vsli:raw="The other property.">La otra propiedad.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherPropertyDisplayName">
      <summary vsli:raw="Gets the display name of the other property.">Obtiene el nombre para mostrar de la otra propiedad.</summary>
      <returns vsli:raw="The display name of the other property.">Nombre para mostrar de la otra propiedad.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">Obtiene un valor que indica si el atributo requiere contexto de validación.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo necesita contexto de validación; si no, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
      <summary vsli:raw="Specifies that a property participates in optimistic concurrency checks.">Especifica que una propiedad participa en las comprobaciones de simultaneidad optimista.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CreditCardAttribute">
      <summary vsli:raw="Specifies that a data field value is a credit card number.">Especifica que el valor de un campo de datos es un número de tarjeta de crédito.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CreditCardAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.CreditCardAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified credit card number is valid.">Determina si el número de tarjeta de crédito especificado es válido.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the credit card number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el número de tarjeta de crédito es válido; si no, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
      <summary vsli:raw="Specifies a custom validation method that is used to validate a property or class instance.">Especifica un método de validación personalizado que se usa para validar una instancia de clase o propiedad.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CustomValidationAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute" />.</summary>
      <param name="validatorType" vsli:raw="The type that contains the method that performs custom validation.">Tipo que contiene el método que realiza la validación personalizada.</param>
      <param name="method" vsli:raw="The method that performs custom validation.">Método que realiza la validación personalizada.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats a validation error message.">Da formato a un mensaje de error de validación.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">Nombre que se va a incluir en el mensaje con formato.</param>
      <returns vsli:raw="An instance of the formatted error message.">Instancia del mensaje de error con formato.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">El atributo actual está formado incorrectamente.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
      <summary vsli:raw="Gets the validation method.">Obtiene el método de validación.</summary>
      <returns vsli:raw="The name of the validation method.">Nombre del método de validación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
      <summary vsli:raw="Gets the type that performs custom validation.">Obtiene el tipo que realiza la validación personalizada.</summary>
      <returns vsli:raw="The type that performs custom validation.">Tipo que realiza la validación personalizada.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataType">
      <summary vsli:raw="Represents an enumeration of the data types associated with data fields and parameters.">Representa una enumeración de los tipos de datos asociados a campos de datos y parámetros.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.CreditCard">
      <summary vsli:raw="Represents a credit card number.">Representa un número de tarjeta de crédito.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
      <summary vsli:raw="Represents a currency value.">Representa un valor de divisa.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
      <summary vsli:raw="Represents a custom data type.">Representa un tipo de datos personalizado.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
      <summary vsli:raw="Represents a date value.">Representa un valor de fecha.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
      <summary vsli:raw="Represents an instant in time, expressed as a date and time of day.">Representa un instante de tiempo, expresado en forma de fecha y hora del día.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
      <summary vsli:raw="Represents a continuous time during which an object exists.">Representa una cantidad de tiempo continua durante la que existe un objeto.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
      <summary vsli:raw="Represents an email address.">Representa una dirección de correo electrónico.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
      <summary vsli:raw="Represents an HTML file.">Representa un archivo HTML.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
      <summary vsli:raw="Represents a URL to an image.">Representa una URL en una imagen.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
      <summary vsli:raw="Represents multi-line text.">Representa texto multilínea.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
      <summary vsli:raw="Represent a password value.">Represente un valor de contraseña.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
      <summary vsli:raw="Represents a phone number value.">Representa un valor de número de teléfono.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PostalCode">
      <summary vsli:raw="Represents a postal code.">Representa un código postal.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
      <summary vsli:raw="Represents text that is displayed.">Representa texto que se muestra.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
      <summary vsli:raw="Represents a time value.">Representa un valor de hora.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Upload">
      <summary vsli:raw="Represents file upload data type.">Representa el tipo de datos de carga de archivos.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
      <summary vsli:raw="Represents a URL value.">Representa un valor de dirección URL.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
      <summary vsli:raw="Specifies the name of an additional type to associate with a data field.">Especifica el nombre de un tipo adicional para asociar con un campo de datos.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified type name.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> utilizando el nombre de tipo especificado.</summary>
      <param name="dataType" vsli:raw="The name of the type to associate with the data field.">Nombre del tipo que se va a asociar con el campo de datos.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified field template name.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> utilizando el nombre de la plantilla de campo especificado.</summary>
      <param name="customDataType" vsli:raw="The name of the custom field template to associate with the data field.">Nombre de la plantilla de campo personalizada que se va a asociar al campo de datos.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;customDataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">
        <paramref name="customDataType" /> es <see langword="null" /> o una cadena vacía ("").</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
      <summary vsli:raw="Gets the name of custom field template that is associated with the data field.">Obtiene el nombre de la plantilla de campo personalizada asociada al campo de datos.</summary>
      <returns vsli:raw="The name of the custom field template that is associated with the data field.">Nombre de la plantilla de campo personalizada asociada al campo de datos.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
      <summary vsli:raw="Gets the type that is associated with the data field.">Obtiene el tipo asociado al campo de datos.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.ComponentModel.DataAnnotations.DataType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
      <summary vsli:raw="Gets a data-field display format.">Obtiene el formato de presentación de un campo de datos.</summary>
      <returns vsli:raw="The data-field display format.">Formato de presentación del campo de datos.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
      <summary vsli:raw="Returns the name of the type that is associated with the data field.">Devuelve el nombre del tipo asociado al campo de datos.</summary>
      <returns vsli:raw="The name of the type associated with the data field.">Nombre del tipo asociado al campo de datos.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">Comprueba si el valor del campo de datos es válido.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valor del campo de datos que va a validarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">Es siempre <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
      <summary vsli:raw="Provides a general-purpose attribute that lets you specify localizable strings for types and members of entity partial classes.">Proporciona un atributo de uso general que permite especificar las cadenas traducibles de los tipos y miembros de las clases parciales de entidad.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
      <summary vsli:raw="Gets or sets a value that indicates whether UI should be generated automatically in order to display this field.">Obtiene o establece un valor que indica si la interfaz de usuario se debe generar automáticamente para mostrar este campo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la interfaz de usuario se debe generar automáticamente para mostrar este campo; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">Se intentó obtener el valor de propiedad antes de establecerse.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering UI is automatically displayed for this field.">Obtiene o establece un valor que indica si la UI de filtrado se muestra automáticamente para este campo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display filtering for this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la interfaz de usuario se debe generar automáticamente para mostrar el filtrado de este campo; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">Se intentó obtener el valor de propiedad antes de establecerse.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
      <summary vsli:raw="Gets or sets a value that is used to display a description in the UI.">Obtiene o establece un valor que se usa para mostrar una descripción en la interfaz de usuario.</summary>
      <returns vsli:raw="The value that is used to display a description in the UI.">Valor que se usa para mostrar una descripción en la interfaz de usuario.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; property.">Devuelve el valor de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" />.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valor de <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> si se ha inicializado la propiedad; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
      <summary vsli:raw="Returns a value that indicates whether UI should be generated automatically in order to display filtering for this field.">Devuelve un valor que indica si la interfaz de usuario se debe generar automáticamente para mostrar el filtrado de este campo.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valor de <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" /> si se ha inicializado la propiedad; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">Devuelve el valor de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</summary>
      <returns vsli:raw="The localized description, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">Descripción traducida si se ha especificado <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> representa una clave de recurso; de lo contrario, el valor no traducido de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">Se han inicializado las propiedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />, pero no se pudo encontrar una propiedad estática pública con un nombre que coincida con el valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property.">Devuelve el valor de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />.</summary>
      <returns vsli:raw="A value that will be used for grouping fields in the UI, if &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;. If the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property represents a resource key, a localized string is returned; otherwise, a non-localized string is returned.">Un valor que se usará para agrupar los campos en la interfaz de usuario, si se ha inicializado <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />; de lo contrario, <see langword="null" />. Si se ha especificado la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> representa una clave de recurso, se devuelve una cadena traducida; de lo contrario, se devuelve una cadena no traducida.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">Se han establecido ambas propiedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />, pero no se encuentra en <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> una propiedad estática pública con un nombre que coincida con el valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
      <summary vsli:raw="Returns a value that is used for field display in the UI.">Devuelve un valor que se usa para mostrar campos en la interfaz de usuario.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property.">Cadena traducida para la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> si se ha especificado la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> representa una clave de recurso; de lo contrario, el valor no traducido de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">Se han inicializado las propiedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, pero no se pudo encontrar una propiedad estática pública con un nombre que coincida con el valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property.">Devuelve el valor de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property, if it has been set; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valor de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> si se ha establecido; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">Devuelve el valor de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">Cadena traducida de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> si se ha especificado la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y si la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> representa una clave de recurso; de lo contrario, valor no traducido de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">Se han establecido ambas propiedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />, pero no se encuentra en <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> una propiedad estática pública con un nombre que coincida con el valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property.">Devuelve el valor de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value property.">Cadena traducida para la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> si se ha especificado la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> representa una clave de recurso; de lo contrario, el valor no traducido de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; properties were set, &#xA;but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">Se han establecido ambas propiedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, pero no se encuentra en <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> una propiedad estática pública con un nombre que coincida con el valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
      <summary vsli:raw="Gets or sets a value that is used to group fields in the UI.">Obtiene o establece un valor que se usa para agrupar campos en la interfaz de usuario.</summary>
      <returns vsli:raw="A value that is used to group fields in the UI.">Valor que se usa para agrupar campos en la interfaz de usuario.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
      <summary vsli:raw="Gets or sets a value that is used for display in the UI.">Obtiene o establece un valor que se usa para mostrarlo en la interfaz de usuario.</summary>
      <returns vsli:raw="A value that is used for display in the UI.">Un valor que se usa para mostrarlo en la interfaz de usuario.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
      <summary vsli:raw="Gets or sets the order weight of the column.">Obtiene o establece el peso del orden de la columna.</summary>
      <returns vsli:raw="The order weight of the column.">Peso del orden de la columna.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The getter of this property has been invoked but its value has not been explicitly set using the setter.">Se ha invocado el captador de esta propiedad, pero su valor no se ha establecido explícitamente mediante el establecedor.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
      <summary vsli:raw="Gets or sets a value that will be used to set the watermark for prompts in the UI.">Obtiene o establece un valor que se usará para establecer la marca de agua para los avisos en la interfaz de usuario.</summary>
      <returns vsli:raw="A value that will be used to display a watermark in the UI.">Un valor que se usará para mostrar una marca de agua en la interfaz de usuario.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
      <summary vsli:raw="Gets or sets the type that contains the resources for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">Obtiene o establece el tipo que contiene los recursos para las propiedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</summary>
      <returns vsli:raw="The type of the resource that contains the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">Tipo del recurso que contiene las propiedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
      <summary vsli:raw="Gets or sets a value that is used for the grid column label.">Obtiene o establece un valor que se usa para la etiqueta de columna de la cuadrícula.</summary>
      <returns vsli:raw="A value that is for the grid column label.">Un valor para la etiqueta de columna de la cuadrícula.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
      <summary vsli:raw="Specifies the column that is displayed in the referred table as a foreign-key column.">Especifica la columna que se muestra en la tabla a la que se hace referencia como una columna de clave externa.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified column.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> utilizando la columna especificada.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Nombre de la columna que va a utilizarse como columna de presentación.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display and sort columns.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> utilizando las columnas de presentación y ordenación especificadas.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Nombre de la columna que va a utilizarse como columna de presentación.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">Nombre de la columna que va a utilizarse para la ordenación.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display column, and the specified sort column and sort order.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> utilizando la columna de presentación y la columna de ordenación especificadas y el criterio de ordenación especificado.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Nombre de la columna que va a utilizarse como columna de presentación.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">Nombre de la columna que va a utilizarse para la ordenación.</param>
      <param name="sortDescending" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to sort in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para realizar la ordenación en sentido descendente; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn">
      <summary vsli:raw="Gets the name of the column to use as the display field.">Obtiene el nombre de la columna que debe usarse como campo de presentación.</summary>
      <returns vsli:raw="The name of the display column.">Nombre de la columna de presentación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn">
      <summary vsli:raw="Gets the name of the column to use for sorting.">Obtiene el nombre de la columna que va a utilizarse para la ordenación.</summary>
      <returns vsli:raw="The name of the sort column.">Nombre de la columna de ordenación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending">
      <summary vsli:raw="Gets a value that indicates whether to sort in descending or ascending order.">Obtiene un valor que indica si la ordenación debe realizarse en sentido ascendente o descendente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column will be sorted in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la columna debe ordenarse en sentido descendente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
      <summary vsli:raw="Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.">Especifica el modo en que los datos dinámicos de ASP.NET muestran y dan formato a los campos de datos.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
      <summary vsli:raw="Gets or sets a value that indicates whether the formatting string that is specified by the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString&quot; /&gt; property is applied to the field value when the data field is in edit mode.">Obtiene o establece un valor que indica si la cadena de formato especificada por la propiedad <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> se aplica al valor de campo cuando el campo de datos se encuentra en modo de edición.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting string applies to the field value in edit mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la cadena de formato se aplica al valor de campo en modo de edición; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
      <summary vsli:raw="Gets or sets a value that indicates whether empty string values (&quot;&quot;) are automatically converted to &lt;see langword=&quot;null&quot; /&gt; when the data field is updated in the data source.">Obtiene o establece un valor que indica si los valores de cadena vacía ("") se convierten automáticamente en valores <see langword="null" /> al actualizar el campo de datos en el origen de datos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if empty string values are automatically converted to &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si los valores de cadena vacía se convierten automáticamente en valores <see langword="null" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
      <summary vsli:raw="Gets or sets the display format for the field value.">Obtiene o establece el formato de presentación del valor de campo.</summary>
      <returns vsli:raw="A formatting string that specifies the display format for the value of the data field. The default is an empty string (&quot;&quot;), which indicates that no special formatting is applied to the field value.">Cadena de formato que especifica el formato de presentación del valor del campo de datos. El valor predeterminado es una cadena vacía (""), lo que indica que no se aplica un formato especial al valor del campo.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText">
      <summary vsli:raw="Returns the UI display string for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.">Devuelve la cadena de representación de la interfaz de usuario para <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.</summary>
      <returns vsli:raw="&lt;para&gt;The UI display string.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has not been specified, the value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has been specified and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; represents a resource key within that resource type, the localized value is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; have not been set, returns &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">Cadena de representación de la interfaz de usuario.
          Si no se ha especificado <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />, se devuelve el valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.
          Si <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> se ha especificado y <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> representa una clave de recurso dentro de ese tipo de recurso, se devuelve el valor localizado.
          Si <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> no se han establecido, se devuelve <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; properties are set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; value cannot be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt;.">Se han establecido ambas propiedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> y <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />, pero no se encuentra en <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> una propiedad estática pública con un nombre que coincida con el valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode">
      <summary vsli:raw="Gets or sets a value that indicates whether the field should be HTML-encoded.">Obtiene o establece un valor que indica si el campo debe estar codificado en HTML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field should be HTML-encoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el campo debe estar codificado en HTML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
      <summary vsli:raw="Gets or sets the text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;.">Obtiene o establece el texto que se muestra en un campo cuando el valor del campo es <see langword="null" />.</summary>
      <returns vsli:raw="The text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;. The default is an empty string (&quot;&quot;), which indicates that this property is not set.">Texto que se muestra en un campo cuando el valor del campo es <see langword="null" />. El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido esta propiedad.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the resources for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.&#xA;        &#xA;Using &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; along with &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;, allows the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText&quot; /&gt; method to return localized values.">Obtiene o establece el objeto <see cref="T:System.Type" /> que contiene los recursos para <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.
El uso de <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> junto con <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> permite que el método <see cref="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" /> devuelva valores localizados.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
      <summary vsli:raw="Indicates whether a data field is editable.">Indica si un campo de datos es modificable.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EditableAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute" />.</summary>
      <param name="allowEdit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar que el campo es modificable; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
      <summary vsli:raw="Gets a value that indicates whether a field is editable.">Obtiene un valor que indica si un campo es modificable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el campo es modificable; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
      <summary vsli:raw="Gets or sets a value that indicates whether an initial value is enabled.">Obtiene o establece un valor que indica si está habilitado un valor inicial.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an initial value is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si está habilitado un valor inicial; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute">
      <summary vsli:raw="Validates an email address.">Valida una dirección de correo electrónico.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EmailAddressAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value matches the pattern of a valid email address.">Determina si el valor especificado coincide con el modelo de una dirección de correo electrónico válida.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor especificado es válido o <see langword="null" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
      <summary vsli:raw="Enables a .NET enumeration to be mapped to a data column.">Permite asignar una enumeración de .NET Framework a una columna de datos.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" />.</summary>
      <param name="enumType" vsli:raw="The type of the enumeration.">Tipo de la enumeración.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType">
      <summary vsli:raw="Gets or sets the enumeration type.">Obtiene o establece el tipo de enumeración.</summary>
      <returns vsli:raw="The enumeration type.">Tipo de enumeración.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">Comprueba si el valor del campo de datos es válido.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valor del campo de datos que va a validarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data field value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor del campo de datos es válido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute">
      <summary vsli:raw="Validates file name extensions.">Valida las extensiones del nombre de archivo.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.Extensions">
      <summary vsli:raw="Gets or sets the file name extensions.">Obtiene o establece las extensiones de nombre de archivo.</summary>
      <returns vsli:raw="The file name extensions, or the default file extensions (&quot;.png&quot;, &quot;.jpg&quot;, &quot;.jpeg&quot;, and &quot;.gif&quot;) if the property is not set.">Extensiones de nombre de archivo, o extensiones de archivo predeterminadas (“.png”, “.jpg”, “.jpeg” y “.gif”) si no se establece la propiedad.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Aplica formato a un mensaje de error según el campo de datos donde se produjo el error.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nombre del campo que produjo el error de validación.</param>
      <returns vsli:raw="The formatted error message.">Mensaje de error con formato.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the specified file name extension or extensions is valid.">Comprueba que la extensión de nombre de archivo o extensiones especificada es válida.</summary>
      <param name="value" vsli:raw="A comma delimited list of valid file extensions.">Lista delimitada por comas de extensiones de archivo válidas.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the file name extension is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la extensión del nombre del archivo es válida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
      <summary vsli:raw="Represents an attribute that is used to specify the filtering behavior for a column.">Representa un atributo que se usa para especificar el comportamiento de filtrado de una columna.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> utilizando la sugerencia de filtro de la interfaz de usuario.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Nombre del control que va a utilizarse para el filtrado.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint and presentation layer name.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> utilizando la sugerencia de filtro de la interfaz de usuario y el nombre de nivel de presentación.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Nombre del control que va a utilizarse para el filtrado.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">Nombre de la capa de presentación que admite este control.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint, presentation layer name, and control parameters.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> utilizando la sugerencia de filtro de la interfaz de usuario, el nombre de nivel de presentación y los parámetros del control.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Nombre del control que va a utilizarse para el filtrado.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">Nombre de la capa de presentación que admite este control.</param>
      <param name="controlParameters" vsli:raw="The list of parameters for the control.">Lista de parámetros del control.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets the name/value pairs that are used as parameters in the control's constructor.">Obtiene los pares nombre-valor que se usan como parámetros en el constructor del control.</summary>
      <returns vsli:raw="The name/value pairs that are used as parameters in the control's constructor.">Pares nombre-valor que se usan como parámetros en el constructor del control.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this attribute instance is equal to a specified object.">Devuelve un valor que indica si esta instancia de atributo es igual que el objeto especificado.</summary>
      <param name="obj" vsli:raw="The object to compare with this attribute instance.">Objeto que se va a comparar con esta instancia de atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed object is equal to this attribute instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto que se ha pasado es igual que esta instancia de atributo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
      <summary vsli:raw="Gets the name of the control to use for filtering.">Obtiene el nombre del control que va a utilizarse para el filtrado.</summary>
      <returns vsli:raw="The name of the control to use for filtering.">Nombre del control que va a utilizarse para el filtrado.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute instance.">Devuelve el código hash de esta instancia de atributo.</summary>
      <returns vsli:raw="This attribute instance hash code.">Código hash de esta instancia del atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets the name of the presentation layer that supports this control.">Obtiene el nombre del nivel de presentación compatible con este control.</summary>
      <returns vsli:raw="The name of the presentation layer that supports this control.">Nombre de la capa de presentación que admite este control.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.IValidatableObject">
      <summary vsli:raw="Provides a way for an object to be validated.">Permite invalidar un objeto.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid.">Determina si el objeto especificado es válido.</summary>
      <param name="validationContext" vsli:raw="The validation context.">Contexto de validación.</param>
      <returns vsli:raw="A collection that holds failed-validation information.">Colección que contiene información de validaciones con error.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
      <summary vsli:raw="Denotes one or more properties that uniquely identify an entity.">Denota una o varias propiedades que identifican exclusivamente una entidad.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.KeyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute">
      <summary vsli:raw="Specifies the maximum length of array or string data allowed in a property.">Especifica la longitud máxima de los datos de matriz o de cadena permitida en una propiedad.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class based on the &lt;paramref name=&quot;length&quot; /&gt; parameter.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" /> basándose en el parámetro <paramref name="length" />.</summary>
      <param name="length" vsli:raw="The maximum allowable length of array or string data.">Longitud máxima permitida de los datos de matriz o de cadena.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Aplica formato a un mensaje de error especificado.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">Nombre que se va a incluir en la cadena con formato.</param>
      <returns vsli:raw="A localized string to describe the maximum acceptable length.">Una cadena localizada que describe la longitud máxima aceptable.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Determina si un objeto especificado es válido.</summary>
      <param name="value" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is null, or if the value is less than or equal to the specified maximum length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor es NULL o menor o igual que la longitud máxima especificada; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is zero or less than negative one.">Longitud es cero o menor que menos uno.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MaxLengthAttribute.Length">
      <summary vsli:raw="Gets the maximum allowable length of the array or string data.">Obtiene la longitud máxima permitida de los datos de matriz o de cadena.</summary>
      <returns vsli:raw="The maximum allowable length of the array or string data.">Longitud máxima permitida de los datos de matriz o de cadena.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute">
      <summary vsli:raw="Specifies the metadata class to associate with a data model class.">Especifica la clase de metadatos que debe asociarse a una clase de modelo de datos.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" />.</summary>
      <param name="metadataClassType" vsli:raw="The metadata class to reference.">Clase de metadatos a la que debe hacerse referencia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;metadataClassType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="metadataClassType" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.MetadataClassType">
      <summary vsli:raw="Gets the metadata class that is associated with a data-model partial class.">Obtiene la clase de metadatos asociada a una clase parcial de modelo de datos.</summary>
      <returns vsli:raw="The type value that represents the metadata class.">Valor de tipo que representa la clase de metadatos.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MinLengthAttribute">
      <summary vsli:raw="Specifies the minimum length of array or string data allowed in a property.">Especifica la longitud mínima de los datos de matriz o de cadena permitida en una propiedad.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MinLengthAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.MinLengthAttribute" />.</summary>
      <param name="length" vsli:raw="The length of the array or string data.">Longitud de los datos de la matriz o de la cadena.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Aplica formato a un mensaje de error especificado.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">Nombre que se va a incluir en la cadena con formato.</param>
      <returns vsli:raw="A localized string to describe the minimum acceptable length.">Una cadena localizada que describe la longitud mínima aceptable.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Determina si un objeto especificado es válido.</summary>
      <param name="value" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto especificado es válido; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is less than zero.">La longitud es menor que cero.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MinLengthAttribute.Length">
      <summary vsli:raw="Gets or sets the minimum allowable length of the array or string data.">Obtiene o establece la longitud mínima permitida de los datos de matriz o de cadena.</summary>
      <returns vsli:raw="The minimum allowable length of the array or string data.">Longitud mínima permitida de los datos de matriz o de cadena.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.PhoneAttribute">
      <summary vsli:raw="Specifies that a data field value is a well-formed phone number.">Especifica que un valor de campo de datos es un número de teléfono con formato correcto.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.PhoneAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.PhoneAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified phone number is in a valid phone number format.">Determina si el número de teléfono especificado está en un formato de número de teléfono válido.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the phone number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el número de teléfono es válido; si no, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
      <summary vsli:raw="Specifies the numeric range constraints for the value of a data field.">Especifica las restricciones de intervalo numérico para el valor de un campo de datos.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando los valores mínimo y máximo especificados.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Especifica el valor mínimo permitido para el valor de campo de datos.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Especifica el valor máximo permitido para el valor de campo de datos.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando los valores mínimo y máximo especificados.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Especifica el valor mínimo permitido para el valor de campo de datos.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Especifica el valor máximo permitido para el valor de campo de datos.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values and the specific type.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando los valores mínimo y máximo especificados y el tipo especificado.</summary>
      <param name="type" vsli:raw="Specifies the type of the object to test.">Especifica el tipo del objeto que va a probarse.</param>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Especifica el valor mínimo permitido para el valor de campo de datos.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Especifica el valor máximo permitido para el valor de campo de datos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ConvertValueInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether any conversions of the value being validated to &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType&quot; /&gt; as set by the &lt;c&gt;type&lt;/c&gt; parameter of the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)&quot; /&gt; constructor use the invariant culture or the current culture.">Obtiene o establece un valor que determina si alguna conversión del valor que se está validando en <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType" /> tal como lo establece el parámetro de <c>tipo</c> del constructor <see cref="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)" /> usa la referencia cultural invariable o la referencia cultural actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the invariant culture for any conversions; &lt;see langword=&quot;false&quot; /&gt; to use the culture that is current at the time of the validation.">
        <see langword="true" />para usar la referencia cultural de todos los idiomas para las conversiones; <see langword="false" /> es para usar la referencia cultural actual en el momento de la validación.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message that is displayed when range validation fails.">Da formato al mensaje de error que se muestra cuando se produce un error de validación de intervalo.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nombre del campo que produjo el error de validación.</param>
      <returns vsli:raw="The formatted error message.">Mensaje de error con formato.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is in the specified range.">Comprueba si el valor del campo de datos se encuentra dentro del intervalo especificado.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valor del campo de datos que va a validarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is in the range; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor especificado se encuentra dentro del intervalo; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was outside the allowed range.">El valor del campo de datos se encontraba fuera del intervalo permitido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
      <summary vsli:raw="Gets the maximum allowed field value.">Obtiene valor máximo permitido para el campo.</summary>
      <returns vsli:raw="The maximum value that is allowed for the data field.">Valor máximo permitido para el campo de datos.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
      <summary vsli:raw="Gets the minimum allowed field value.">Obtiene el valor mínimo permitido para el campo.</summary>
      <returns vsli:raw="The minimum value that is allowed for the data field.">El valor mínimo permitido para el campo de datos.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
      <summary vsli:raw="Gets the type of the data field whose value must be validated.">Obtiene el tipo del campo de datos cuyo valor debe validarse.</summary>
      <returns vsli:raw="The type of the data field whose value must be validated.">Tipo del campo de datos cuyo valor debe validarse.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ParseLimitsInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether string values for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum&quot; /&gt; are parsed using the invariant culture rather than the current culture.">Obtiene o establece un valor que determina si los valores de cadena para <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> y <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> se analizan mediante la referencia cultural invariable, en lugar de la referencia cultural actual.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
      <summary vsli:raw="Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.">Especifica que un valor de campo de datos en los datos dinámicos de ASP.NET debe coincidir con la expresión regular especificada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
      <param name="pattern" vsli:raw="The regular expression that is used to validate the data field value.">Expresión regular que se usa para validar el valor de campo de datos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message to display if the regular expression validation fails.">Da formato al mensaje de error que debe mostrarse si se produce un error de validación de la expresión regular.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nombre del campo que produjo el error de validación.</param>
      <returns vsli:raw="The formatted error message.">Mensaje de error con formato.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> no es una expresión regular válida.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks whether the value entered by the user matches the regular expression pattern.">Comprueba si el valor escrito por el usuario coincide con el modelo de expresión regular.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valor del campo de datos que va a validarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la validación es correcta; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value did not match the regular expression pattern.">El valor del campo de datos no coincidía con el modelo de expresión regular.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> no es una expresión regular válida.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
      <summary vsli:raw="Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.">Obtiene o establece el tiempo disponible en milisegundos para ejecutar una única operación coincidente antes de que se agote el tiempo de espera de la operación.</summary>
      <returns vsli:raw="The amount of time in milliseconds to execute a single matching operation.">Tiempo en milisegundos para ejecutar una única operación coincidente.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
      <summary vsli:raw="Gets the regular expression pattern.">Obtiene el modelo de expresión regular.</summary>
      <returns vsli:raw="The pattern to match.">Modelo del que deben buscarse coincidencias.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
      <summary vsli:raw="Specifies that a data field value is required.">Especifica que un campo de datos necesita un valor.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RequiredAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
      <summary vsli:raw="Gets or sets a value that indicates whether an empty string is allowed.">Obtiene o establece un valor que indica si se permite una cadena vacía.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an empty string is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se permite una cadena vacía; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the required data field is not empty.">Comprueba si el valor del campo de datos necesario no está vacío.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valor del campo de datos que va a validarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la validación es correcta; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was &lt;see langword=&quot;null&quot; /&gt;.">El valor del campo de datos es <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute">
      <summary vsli:raw="Specifies whether a class or data column uses scaffolding.">Especifica si una clase o columna de datos usa la técnica scaffolding.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&quot; /&gt; using the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold&quot; /&gt; property.">Inicializa una nueva instancia de <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" /> mediante la propiedad <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />.</summary>
      <param name="scaffold" vsli:raw="The value that specifies whether scaffolding is enabled.">Valor que especifica si está habilitada la técnica scaffolding.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold">
      <summary vsli:raw="Gets or sets the value that specifies whether scaffolding is enabled.">Obtiene o establece el valor que especifica si está habilitada la técnica scaffolding.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if scaffolding is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si está habilitada la técnica scaffolding; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute">
      <summary vsli:raw="Represents the database column that a property is mapped to.">Representa la columna de base de datos a la que está asignada una propiedad.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the column the property is mapped to.">Nombre de la columna a la que se asigna la propiedad.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Name">
      <summary vsli:raw="Gets the name of the column the property is mapped to.">Obtiene el nombre de la columna a la que se asigna la propiedad.</summary>
      <returns vsli:raw="The name of the column the property is mapped to.">Nombre de la columna a la que se asigna la propiedad.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Order">
      <summary vsli:raw="Gets or sets the zero-based order of the column the property is mapped to.">Obtiene o establece el orden basado en cero de la columna a la que se asigna la propiedad.</summary>
      <returns vsli:raw="The order of the column.">El orden de la columna.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.TypeName">
      <summary vsli:raw="Gets or sets the database provider specific data type of the column the property is mapped to.">Obtiene o establece el tipo de datos específico del proveedor de bases de datos de la columna a la que se asigna la propiedad.</summary>
      <returns vsli:raw="The database provider specific data type of the column the property is mapped to.">El tipo de datos específico del proveedor de bases de datos de la columna a la que se asigna la propiedad.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute">
      <summary vsli:raw="Denotes that the class is a complex type. Complex types are non-scalar properties of entity types that enable scalar properties to be organized within entities. Complex types do not have keys and cannot be managed by the Entity Framework apart from the parent object.">Denota que la clase es un tipo complejo. Los tipos complejos son propiedades no escalares de tipos de entidad que permiten organizar las propiedades escalares dentro de las entidades. Los tipos complejos no tienen claves y no pueden ser administrados por Entity Framework excepto el objeto primario.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute">
      <summary vsli:raw="Specifies how the database generates values for a property.">Especifica el modo en que la base de datos genera los valores de una propiedad.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" />.</summary>
      <param name="databaseGeneratedOption" vsli:raw="The database generated option.">Opción generada por la base de datos</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.DatabaseGeneratedOption">
      <summary vsli:raw="Gets or sets the pattern used to generate values for the property in the database.">Obtiene o establece el patrón utilizado para generar los valores de la propiedad en la base de datos.</summary>
      <returns vsli:raw="The database generated option.">Opción generada por la base de datos</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption">
      <summary vsli:raw="Represents the pattern used to generate values for a property in the database.">Representa el patrón utilizado para generar los valores para una propiedad en la base de datos.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed">
      <summary vsli:raw="The database generates a value when a row is inserted or updated.">La base de datos genera un valor cuando una fila se inserta o actualiza.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity">
      <summary vsli:raw="The database generates a value when a row is inserted.">La base de datos genera un valor cuando se inserta una fila.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None">
      <summary vsli:raw="The database does not generate values.">La base de datos no genera valores.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute">
      <summary vsli:raw="Denotes a property used as a foreign key in a relationship.">Denota una propiedad utilizada como clave externa en una relación.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the associated navigation property, or the name of one or more associated foreign keys.">El nombre de la propiedad de navegación asociada o el nombre de uno o varias claves externas asociadas.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.Name">
      <summary vsli:raw="Gets the name of the associated navigation property or of the associated foreign keys.">Obtiene el nombre de la propiedad de navegación asociada o de las claves externas asociadas.</summary>
      <returns vsli:raw="The name of the associated navigation property or of the associated foreign keys.">Nombre de la propiedad de navegación asociada o de las claves externas asociadas.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute">
      <summary vsli:raw="Specifies the inverse of a navigation property that represents the other end of the same relationship.">Especifica la inversa de una propiedad de navegación que representa el otro extremo de la misma relación.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&quot; /&gt; class using the specified property.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" /> usando la propiedad especificada.</summary>
      <param name="property" vsli:raw="The navigation property representing the other end of the same relationship.">Propiedad de navegación que representa el otro extremo de la misma relación.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.Property">
      <summary vsli:raw="Gets the navigation property representing the other end of the same relationship.">Obtiene la propiedad de navegación que representa el otro extremo de la misma relación.</summary>
      <returns vsli:raw="The property of the attribute.">Propiedad del atributo.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute">
      <summary vsli:raw="Denotes that a property or class should be excluded from database mapping.">Denota que una propiedad o clase se debe excluir de la asignación de bases de datos.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute">
      <summary vsli:raw="Specifies the database table that a class is mapped to.">Especifica la tabla de base de datos a la que está asignada una clase.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.TableAttribute&quot; /&gt; class using the specified name of the table.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute" /> usando el nombre especificado de la tabla.</summary>
      <param name="name" vsli:raw="The name of the table the class is mapped to.">Nombre de la tabla a la que está asignada la clase.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Name">
      <summary vsli:raw="Gets the name of the table the class is mapped to.">Obtiene el nombre de la tabla a la que está asignada la clase.</summary>
      <returns vsli:raw="The name of the table the class is mapped to.">Nombre de la tabla a la que está asignada la clase.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Schema">
      <summary vsli:raw="Gets or sets the schema of the table the class is mapped to.">Obtiene o establece el esquema de la tabla a la que está asignada la clase.</summary>
      <returns vsli:raw="The schema of the table the class is mapped to.">Esquema de la tabla a la que está asignada la clase.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
      <summary vsli:raw="Specifies the minimum and maximum length of characters that are allowed in a data field.">Especifica la longitud mínima y máxima de caracteres que se permiten en un campo de datos.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.StringLengthAttribute&quot; /&gt; class by using a specified maximum length.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> usando una longitud máxima especificada.</summary>
      <param name="maximumLength" vsli:raw="The maximum length of a string.">Longitud máxima de una cadena.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Aplica formato a un mensaje de error especificado.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nombre del campo que produjo el error de validación.</param>
      <returns vsli:raw="The formatted error message.">Mensaje de error con formato.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;paramref name=&quot;minimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> es negativo.  
o bien 
 <paramref name="maximumLength" /> es menor que <paramref name="minimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Determina si un objeto especificado es válido.</summary>
      <param name="value" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto especificado es válido; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> es negativo.  
o bien 
 <paramref name="maximumLength" /> es menor que <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
      <summary vsli:raw="Gets or sets the maximum length of a string.">Obtiene o establece la longitud máxima de una cadena.</summary>
      <returns vsli:raw="The maximum length a string.">Longitud máxima de una cadena.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
      <summary vsli:raw="Gets or sets the minimum length of a string.">Obtiene o establece la longitud mínima de una cadena.</summary>
      <returns vsli:raw="The minimum length of a string.">Longitud mínima de una cadena.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
      <summary vsli:raw="Specifies the data type of the column as a row version.">Indica el tipo de datos de la columna como una versión de fila.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.TimestampAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
      <summary vsli:raw="Specifies the template or user control that Dynamic Data uses to display a data field.">Especifica la plantilla o el control de usuario que los datos dinámicos usan para mostrar un campo de datos.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using a specified user control.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando un control de usuario especificado.</summary>
      <param name="uiHint" vsli:raw="The user control to use to display the data field.">Control de usuario que debe usarse para mostrar el campo de datos.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class using the specified user control and specified presentation layer.">Inicializa una instancia nueva de la clase <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando el control de usuario y la capa de presentación especificados.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">Control de usuario (plantilla de campo) que se va a usar para mostrar el campo de datos.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">Capa de presentación que usa la clase. Puede establecerse en "HTML", "Silverlight", "WPF" o "WinForms".</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using the specified user control, presentation layer, and control parameters.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando el control de usuario, la capa de presentación y los parámetros del control especificados.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">Control de usuario (plantilla de campo) que se va a usar para mostrar el campo de datos.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">Capa de presentación que usa la clase. Puede establecerse en "HTML", "Silverlight", "WPF" o "WinForms".</param>
      <param name="controlParameters" vsli:raw="The object to use to retrieve values from any data sources.">Objeto que debe usarse para recuperar valores de cualquier origen de datos.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or it is a constraint key.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is not a string.">
        <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> es <see langword="null" /> o es una clave de restricción.  
o bien 
El valor de <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> no es una cadena.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Web.DynamicData.DynamicControlParameter&quot; /&gt; object to use to retrieve values from any data source.">Obtiene o establece el objeto <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> que debe usarse para recuperar valores de cualquier origen de datos.</summary>
      <returns vsli:raw="A collection of key/value pairs.">Colección de pares clave-valor.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">El atributo actual tiene un formato incorrecto.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether this instance is equal to the specified object.">Obtiene un valor que indica si esta instancia es igual que el objeto especificado.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance, or a &lt;see langword=&quot;null&quot; /&gt; reference.">Objeto que se va a comparar con esta instancia o una referencia <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto especificado es igual que esta instancia; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current instance of the attribute.">Obtiene el código hash de la instancia actual del atributo.</summary>
      <returns vsli:raw="The attribute instance hash code.">Código hash de la instancia del atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets or sets the presentation layer that uses the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class.">Obtiene o establece la capa de presentación que usa la clase <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />.</summary>
      <returns vsli:raw="The presentation layer that is used by this class.">Nivel de presentación que usa esta clase.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
      <summary vsli:raw="Gets or sets the name of the field template to use to display the data field.">Obtiene o establece el nombre de la plantilla de campo que debe usarse para mostrar el campo de datos.</summary>
      <returns vsli:raw="The name of the field template that displays the data field.">Nombre de la plantilla de campo en la que se muestra el campo de datos.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UrlAttribute">
      <summary vsli:raw="Provides URL validation.">Proporciona la validación de URL.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UrlAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.IsValid(System.Object)">
      <summary vsli:raw="Validates the format of the specified URL.">Valida el formato de la dirección URL especificada.</summary>
      <param name="value" vsli:raw="The URL to validate.">URL que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the URL format is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el formato de la dirección URL es válido o <see langword="null" />; si no, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
      <summary vsli:raw="Serves as the base class for all validation attributes.">Actúa como clase base para todos los atributos de validación.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the function that enables access to validation resources.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> mediante la función que permite el acceso a los recursos de validación.</summary>
      <param name="errorMessageAccessor" vsli:raw="The function that enables access to validation resources.">La función que permite el acceso a los recursos de validación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;errorMessageAccessor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="errorMessageAccessor" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the error message to associate with a validation control.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> utilizando el mensaje de error que se va a asociar a un control de validación.</summary>
      <param name="errorMessage" vsli:raw="The error message to associate with a validation control.">Mensaje de error que se va a asociar al control de validación.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
      <summary vsli:raw="Gets or sets an error message to associate with a validation control if validation fails.">Obtiene o establece un mensaje de error que se va a asociar a un control de validación si se produce un error de validación.</summary>
      <returns vsli:raw="The error message that is associated with the validation control.">Mensaje de error asociado al control de validación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
      <summary vsli:raw="Gets or sets the error message resource name to use in order to look up the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType&quot; /&gt; property value if validation fails.">Obtiene o establece el nombre de recurso del mensaje de error que se va a usar para buscar el valor de la propiedad <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType" /> si se produce un error en la validación.</summary>
      <returns vsli:raw="The error message resource that is associated with a validation control.">Recurso de mensaje de error asociado a un control de validación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
      <summary vsli:raw="Gets or sets the resource type to use for error-message lookup if validation fails.">Obtiene o establece el tipo de recurso que se va a usar para buscar el mensaje de error si se produce un error de validación.</summary>
      <returns vsli:raw="The type of error message that is associated with a validation control.">Tipo de mensaje de error asociado a un control de validación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
      <summary vsli:raw="Gets the localized validation error message.">Obtiene el mensaje de error de validación traducido.</summary>
      <returns vsli:raw="The localized validation error message.">Mensaje de error de validación traducido.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Aplica formato a un mensaje de error según el campo de datos donde se produjo el error.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">Nombre que se va a incluir en el mensaje con formato.</param>
      <returns vsli:raw="An instance of the formatted error message.">Instancia del mensaje de error con formato.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">El atributo actual está formado incorrectamente.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Checks whether the specified value is valid with respect to the current validation attribute.">Comprueba si el valor especificado es válido con respecto al atributo de validación actual.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">Información de contexto sobre la operación de validación.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">Instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">El atributo actual está formado incorrectamente.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationContext" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> no se ha implementado mediante una clase derivada.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value of the object is valid.">Determina si el valor especificado del objeto es válido.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">Valor del objeto que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor especificado es válido; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">El atributo actual está formado incorrectamente.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="Neither overload of &lt;see langword=&quot;IsValid&quot; /&gt; has been implemented by a derived class.">Ninguna sobrecarga de <see langword="IsValid" /> se ha implementado mediante una clase derivada.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified value with respect to the current validation attribute.">Valida el valor especificado con respecto al atributo de validación actual.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">Información de contexto sobre la operación de validación.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">Instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">El atributo actual está formado incorrectamente.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> no se ha implementado mediante una clase derivada.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">Obtiene un valor que indica si el atributo requiere contexto de validación.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo necesita contexto de validación; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified object.">Valida el objeto especificado.</summary>
      <param name="value" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <param name="validationContext" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; object that describes the context where the validation checks are performed. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> que describe el contexto en el que se realizan las comprobaciones de validación. Este parámetro no puede ser <see langword="null" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="Validation failed.">Error de validación.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">El atributo actual está formado incorrectamente.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> no se ha implementado mediante una clase derivada.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
      <summary vsli:raw="Validates the specified object.">Valida el objeto especificado.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">Valor del objeto que se va a validar.</param>
      <param name="name" vsli:raw="The name to include in the error message.">Nombre que se va a incluir en el mensaje de error.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not valid.">
        <paramref name="value" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">El atributo actual está formado incorrectamente.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
      <summary vsli:raw="Describes the context in which a validation check is performed.">Describe el contexto en el que se realiza una comprobación de validación.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object instance.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> mediante la instancia del objeto especificada.</summary>
      <param name="instance" vsli:raw="The object instance to validate. It cannot be &lt;see langword=&quot;null&quot; /&gt;.">Instancia del objeto que se va a validar. No puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object and an optional property bag.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> con el objeto y contenedor de propiedades opcional especificados.</summary>
      <param name="instance" vsli:raw="The object instance to validate.  It cannot be &lt;see langword=&quot;null&quot; /&gt;.">Instancia del objeto que se va a validar.  No puede ser <see langword="null" /></param>
      <param name="items" vsli:raw="An optional set of key/value pairs to make available to consumers.">Conjunto opcional de pares clave-valor que se van a poner a disposición de los consumidores.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the service provider and dictionary of service consumers.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> mediante el proveedor de servicios y el diccionario de consumidores del servicio.</summary>
      <param name="instance" vsli:raw="The object to validate. This parameter is required.">Objeto que se va a validar. Este parámetro es necesario.</param>
      <param name="serviceProvider" vsli:raw="The object that implements the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface. This parameter is optional.">Objeto que implementa la interfaz <see cref="T:System.IServiceProvider" />. Este parámetro es opcional.</param>
      <param name="items" vsli:raw="A dictionary of key/value pairs to make available to the service consumers. This parameter is optional.">Diccionario de pares clave-valor que se va a poner a disposición de los consumidores del servicio. Este parámetro es opcional.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">Obtiene o establece el nombre del miembro que se va a validar.</summary>
      <returns vsli:raw="The name of the member to validate.">Nombre del miembro que se va a validar.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
      <summary vsli:raw="Returns the service that provides custom validation.">Devuelve el servicio que proporciona validación personalizada.</summary>
      <param name="serviceType" vsli:raw="The type of the service to use for validation.">Tipo del servicio que se va a usar para la validación.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service is not available.">Instancia del servicio o <see langword="null" /> si el servicio no está disponible.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; using a service provider that can return service instances by type when &lt;see cref=&quot;M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)&quot; /&gt; is called.">Inicializa el objeto <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> mediante un proveedor de servicios que puede devolver instancias de servicio por tipo cuando se llama a GetService.</summary>
      <param name="serviceProvider" vsli:raw="The service provider.">Proveedor de servicios.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
      <summary vsli:raw="Gets the dictionary of key/value pairs that is associated with this context.">Obtiene el diccionario de pares clave-valor asociado a este contexto.</summary>
      <returns vsli:raw="The dictionary of the key/value pairs for this context.">Diccionario de pares clave-valor para este contexto.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">Obtiene o establece el nombre del miembro que se va a validar.</summary>
      <returns vsli:raw="The name of the member to validate.">Nombre del miembro que se va a validar.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
      <summary vsli:raw="Gets the object to validate.">Obtiene el objeto que se va a validar.</summary>
      <returns vsli:raw="The object to validate.">Objeto que se va a validar.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
      <summary vsli:raw="Gets the type of the object to validate.">Obtiene el tipo del objeto que se va a validar.</summary>
      <returns vsli:raw="The type of the object to validate.">Tipo del objeto que se va a validar.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
      <summary vsli:raw="Represents the exception that occurs during validation of a data field when the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class is used.">Representa la excepción que se produce durante la validación de un campo de datos cuando se usa la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using an error message generated by the system.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando un mensaje de error generado por el sistema.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class by using a validation result, a validation attribute, and the value of the current exception.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando un resultado de validación, un atributo de validación y el valor de la excepción actual.</summary>
      <param name="validationResult" vsli:raw="The list of validation results.">Lista de resultados de la validación.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">Atributo que produjo la excepción actual.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger the validation error.">Valor del objeto que hizo que el atributo activara el error de validación.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Objeto que contiene los datos serializados.</param>
      <param name="context" vsli:raw="Context information about the source or destination of the serialized object.">Información de contexto acerca del origen o el destino del objeto serializado.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="A specified message that states the error.">Mensaje especificado que expone el error.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message, a validation attribute, and the value of the current exception.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando un mensaje de error especificado, un atributo de validación y el valor de la excepción actual.</summary>
      <param name="errorMessage" vsli:raw="The message that states the error.">Mensaje que expone el error.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">Atributo que produjo la excepción actual.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger validation error.">Valor del objeto que hizo que el atributo activara el error de validación.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message and a collection of inner exception instances.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando un mensaje de error especificado y una colección de instancias de excepción interna.</summary>
      <param name="message" vsli:raw="The error message.">Mensaje de error.</param>
      <param name="innerException" vsli:raw="The collection of validation exceptions.">Colección de excepciones de validación.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
      <summary vsli:raw="Gets the instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class that triggered this exception.">Obtiene la instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> que activó esta excepción.</summary>
      <returns vsli:raw="An instance of the validation attribute type that triggered this exception.">Instancia del tipo de atributo de validación que activó esta excepción.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">Obtiene la instancia de <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> que describe el error de validación.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">Instancia de <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> que describe el error de validación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
      <summary vsli:raw="Gets the value of the object that causes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger this exception.">Obtiene el valor del objeto que hace que la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> active esta excepción.</summary>
      <returns vsli:raw="The value of the object that caused the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger the validation error.">Valor del objeto que hizo que la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> activara el error de validación.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
      <summary vsli:raw="Represents a container for the results of a validation request.">Representa un contenedor para los resultados de una solicitud de validación.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using a &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando un objeto <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</summary>
      <param name="validationResult" vsli:raw="The validation result object.">Objeto resultado de la validación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationResult" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando un mensaje de error.</summary>
      <param name="errorMessage" vsli:raw="The error message.">Mensaje de error.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message and a list of members that have validation errors.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando un mensaje de error y una lista de miembros que tienen errores de validación.</summary>
      <param name="errorMessage" vsli:raw="The error message.">Mensaje de error.</param>
      <param name="memberNames" vsli:raw="The list of member names that have validation errors.">Lista de nombres de miembro que tienen errores de validación.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
      <summary vsli:raw="Gets the error message for the validation.">Obtiene el mensaje de error para la validación.</summary>
      <returns vsli:raw="The error message for the validation.">Mensaje de error para la validación.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
      <summary vsli:raw="Gets the collection of member names that indicate which fields have validation errors.">Obtiene la colección de nombres de miembro que indican qué campos contienen errores de validación.</summary>
      <returns vsli:raw="The collection of member names that indicate which fields have validation errors.">Colección de nombres de miembro que indican qué campos contienen errores de validación.</returns>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
      <summary vsli:raw="Represents the success of the validation (&lt;see langword=&quot;true&quot; /&gt; if validation was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;).">Representa el éxito de la validación (<see langword="true" /> si esta se realizó correctamente; en caso contrario, <see langword="false" />).</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.ToString">
      <summary vsli:raw="Returns a string representation of the current validation result.">Devuelve un valor de cadena que representa el resultado de la validación actual.</summary>
      <returns vsli:raw="The current validation result.">Resultado de la validación actual.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Validator">
      <summary vsli:raw="Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; attributes.">Define una clase del asistente que se puede usar para validar objetos, propiedades y métodos cuando está incluida en sus atributos <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> asociados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context and validation results collection.">Determina si el objeto especificado es válido usando el contexto de validación y la colección de resultados de validación.</summary>
      <param name="instance" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexto que describe el objeto que se va a validar.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Colección que va a contener todas las validaciones con error.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto es válido; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> no coincide con <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> en <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.">Determina si el objeto especificado es válido usando el contexto de validación, la colección de resultados de validación y un valor que indica si se van a validar o no todas las propiedades.</summary>
      <param name="instance" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexto que describe el objeto que se va a validar.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Colección que va a contener todas las validaciones con error.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; if &lt;see langword=&quot;false&quot; /&gt;, only required attributes are validated.">
        <see langword="true" /> para validar todas las propiedades; si es <see langword="false" />, solo es necesario validar los atributos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto es válido; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> no coincide con <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> en <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Validates the property.">Valida la propiedad.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">Contexto que describe la propiedad que se va a validar.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Colección que va a contener todas las validaciones con error.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la propiedad es válida; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> no se puede asignar a la propiedad.  
o bien 
 <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName&quot; /&gt; property of &lt;paramref name=&quot;validationContext&quot; /&gt; is not a valid property.">La propiedad <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> de <paramref name="validationContext" /> no es una propiedad válida.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Returns a value that indicates whether the specified value is valid with the specified attributes.">Devuelve un valor que indica si el valor especificado es válido con los atributos indicados.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexto que describe el objeto que se va a validar.</param>
      <param name="validationResults" vsli:raw="A collection to hold failed validations.">Colección que va a contener las validaciones con error.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">Atributos de validación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto es válido; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context.">Determina si el objeto especificado es válido usando el contexto de validación.</summary>
      <param name="instance" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexto que describe el objeto que se va a validar.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The object is not valid.">El objeto no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> no coincide con <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> en <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.">Determina si el objeto especificado es válido usando el contexto de validación y un valor que indica si se van a validar o no todas las propiedades.</summary>
      <param name="instance" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexto que describe el objeto que se va a validar.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para validar todas las propiedades; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is not valid.">
        <paramref name="instance" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> no coincide con <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> en <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the property.">Valida la propiedad.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">Contexto que describe la propiedad que se va a validar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.">
        <paramref name="value" /> no se puede asignar a la propiedad.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is not valid.">El parámetro <paramref name="value" /> no es válido.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Validates the specified attributes.">Valida los atributos especificados.</summary>
      <param name="value" vsli:raw="The value to validate.">Valor que se va a validar.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexto que describe el objeto que se va a validar.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">Atributos de validación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;validationContext&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="validationContext" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter does not validate with the &lt;paramref name=&quot;validationAttributes&quot; /&gt; parameter.">El parámetro <paramref name="value" /> no se valida con el parámetro <paramref name="validationAttributes" />.</exception>
    </member>
  </members>
</doc>