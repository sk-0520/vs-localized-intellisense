<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Compression.Brotli</name>
  </assembly>
  <members>
    <member name="T:System.IO.Compression.BrotliDecoder" />
    <member name="M:System.IO.Compression.BrotliDecoder.Decompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesConsumed" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliDecoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliDecoder.TryDecompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="T:System.IO.Compression.BrotliEncoder" />
    <member name="M:System.IO.Compression.BrotliEncoder.#ctor(System.Int32,System.Int32)">
      <param name="quality" />
      <param name="window" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Compress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesConsumed" />
      <param name="bytesWritten" />
      <param name="isFinalBlock" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliEncoder.Flush(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.GetMaxCompressedLength(System.Int32)">
      <param name="inputSize" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32,System.Int32)">
      <param name="source" />
      <param name="destination" />
      <param name="bytesWritten" />
      <param name="quality" />
      <param name="window" />
    </member>
    <member name="T:System.IO.Compression.BrotliStream">
      <summary>Proporciona métodos y propiedades que se usan para comprimir y descomprimir secuencias mediante el uso de la especificación de formato de datos de Brotli.</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.BrotliStream" /> usando la secuencia y nivel de compresión especificados.</summary>
      <param name="stream">Secuencia que se va a comprimir.</param>
      <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al comprimir la secuencia.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.BrotliStream" /> usando la secuencia y nivel de compresión especificados y, opcionalmente, deja la secuencia abierta.</summary>
      <param name="stream">Secuencia que se va a comprimir.</param>
      <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al comprimir la secuencia.</param>
      <param name="leaveOpen">
        <see langword="true" /> para mantener la secuencia abierta después de desechar el objeto <see cref="T:System.IO.Compression.BrotliStream" />; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.BrotliStream" /> usando la secuencia y modo de compresión especificados.</summary>
      <param name="stream">Secuencia que se va a comprimir.</param>
      <param name="mode">Uno de los valores de la enumeración que indica si se debe comprimir o descomprimir la secuencia.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.BrotliStream" /> usando la secuencia y modo de compresión especificados y, opcionalmente, deja la secuencia abierta.</summary>
      <param name="stream">Secuencia que se va a comprimir.</param>
      <param name="mode">Uno de los valores de la enumeración que indica si se debe comprimir o descomprimir la secuencia.</param>
      <param name="leaveOpen" />
    </member>
    <member name="P:System.IO.Compression.BrotliStream.BaseStream">
      <summary>Obtiene una referencia a la secuencia subyacente.</summary>
      <returns>Un objeto de secuencia que representa la secuencia subyacente.</returns>
      <exception cref="T:System.ObjectDisposedException">La secuencia subyacente está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de lectura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="buffer">El búfer desde donde se leerán los datos.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde se comienzan a leer los datos de la secuencia.</param>
      <param name="count">Al número máximo de bytes que se pueden leer.</param>
      <param name="asyncCallback">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la operación de lectura.</param>
      <param name="asyncState">Objeto proporcionado por el usuario que distingue esta solicitud de lectura asincrónica de otras.</param>
      <returns>Un objeto que representa la operación de lectura asincrónica, que puede hallarse aún pendiente.</returns>
      <exception cref="T:System.IO.IOException">El método intentó leer de forma asincrónica más allá del final de la secuencia o se produjo un error de disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o varios argumentos no son válidos.</exception>
      <exception cref="T:System.ObjectDisposedException">Se efectuó una llamada a los métodos después de cerrar la secuencia.</exception>
      <exception cref="T:System.NotSupportedException">La implementación actual de <see cref="T:System.IO.Compression.BrotliStream" /> no admite la operación de escritura.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede completar esta llamada.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de escritura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="buffer">El búfer desde donde se escribirán los datos.</param>
      <param name="offset">Posición de desplazamiento en bytes de <paramref name="array" /> donde se comienza a escribir los datos del flujo.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
      <param name="asyncCallback">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la operación de escritura.</param>
      <param name="asyncState">Objeto proporcionado por el usuario que distingue esta solicitud de escritura asincrónica de otras.</param>
      <returns>Un objeto que representa la operación de escritura asincrónica, que puede hallarse aún pendiente.</returns>
      <exception cref="T:System.IO.IOException">El método intentó escribir de forma asincrónica más allá del final de la secuencia o se produjo un error de disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o varios argumentos no son válidos.</exception>
      <exception cref="T:System.ObjectDisposedException">Se efectuó una llamada a los métodos después de cerrar la secuencia.</exception>
      <exception cref="T:System.NotSupportedException">La implementación actual de <see cref="T:System.IO.Compression.BrotliStream" /> no admite la operación de escritura.</exception>
      <exception cref="T:System.InvalidOperationException">La operación de escritura no se puede realizar porque la secuencia está cerrada.</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanRead">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de lectura mientras se descomprime un archivo.</summary>
      <returns>
        <see langword="true" /> si el valor de <see cref="T:System.IO.Compression.CompressionMode" /> es <see langword="Decompress," /> y la secuencia subyacente admite operaciones de lectura y no está cerrada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanSeek">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de búsqueda.</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanWrite">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de escritura.</summary>
      <returns>
        <see langword="true" /> si el valor de <see cref="T:System.IO.Compression.CompressionMode" /> es <see langword="Compress" /> y la secuencia subyacente admite operaciones de escritura y no está cerrada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.DisposeAsync">
      <summary>Libera de forma asincrónica los recursos no administrados usados por <see cref="T:System.IO.Compression.BrotliStream" />.</summary>
      <returns>Tarea que representa la operación de descarte asincrónica.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndRead(System.IAsyncResult)">
      <summary>Espera a que se complete la lectura asincrónica que se encuentra pendiente. (Considere usar el método <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="asyncResult">Referencia a la solicitud asincrónica pendiente para finalizar.</param>
      <returns>El número de bytes leídos de la secuencia, que se encuentra entre cero (0) y el número de bytes solicitado. <see cref="T:System.IO.Compression.BrotliStream" /> devuelve 0 solamente al final de la secuencia; de lo contrario, se bloquea hasta que haya al menos un byte disponible.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se originó desde un método <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> de la secuencia actual.</exception>
      <exception cref="T:System.InvalidOperationException">La operación de finalización no se puede realizar porque la secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndWrite(System.IAsyncResult)">
      <summary>Controla el final de una operación de escritura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="asyncResult">Objeto que representa la llamada asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">La secuencia subyacente está cerrada o <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Flush">
      <summary>La implementación actual de este método no tiene funcionalidad.</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Borra asincrónicamente todos los búferes de esta secuencia Brotli, hace que todos los datos almacenados en búfer se escriban en el dispositivo subyacente y supervisa las solicitudes de cancelación.</summary>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de vaciado asincrónico.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Length">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Position">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Introduce varios bytes descomprimidos leídos en la matriz de bytes especificada.</summary>
      <param name="buffer">Matriz que se utiliza para almacenar los bytes descomprimidos.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="buffer" /> donde se colocarán los bytes leídos.</param>
      <param name="count">Número máximo de bytes descomprimidos que se van a leer.</param>
      <returns>El número de bytes que se han descomprimido en la matriz de bytes. Si se ha llegado al final de la secuencia, se devuelve cero o el número de bytes leídos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El valor <see cref="T:System.IO.Compression.CompressionMode" /> era <see langword="Compress" /> cuando se creó el objeto o ya hay una operación asincrónica activa en esta secuencia.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">La longitud de <paramref name="buffer" /> menos el punto inicial del índice es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.IO.InvalidDataException">El formato de los datos no es válido.</exception>
      <exception cref="T:System.ObjectDisposedException">La secuencia subyacente es NULL o está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Span{System.Byte})">
      <summary>Lee una secuencia de bytes de la secuencia de Brotli actual en un intervalo de bytes y avanza la posición dentro de la secuencia de Brotli según el número de bytes leídos.</summary>
      <param name="buffer">Región de memoria. Cuando este método finaliza, el contenido de esta región se reemplaza por los bytes leídos del origen actual.</param>
      <returns>Número total de bytes leídos en el búfer. Puede ser menor que el número de bytes asignado en el búfer si esos bytes no están disponibles en ese momento o cero (0) si se ha alcanzado el final de la secuencia.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Lee de forma asincrónica una secuencia de bytes en la secuencia de Brotli actual, los escribe en una matriz de bytes que comienza en un índice especificado, avanza la posición dentro de la secuencia de Brotli según el número de bytes leídos y supervisa las solicitudes de cancelación.</summary>
      <param name="buffer">El búfer en el que se escriben los datos.</param>
      <param name="offset">Posición de desplazamiento en bytes de <paramref name="buffer" /> donde se comienzan a escribir los datos de la secuencia de Brotli.</param>
      <param name="count">Número máximo de bytes que se pueden leer.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de lectura asincrónica, que ajusta el número total de bytes leídos en <paramref name="buffer" />. El valor del resultado puede ser menor que el número de bytes solicitados si el número de bytes disponibles actualmente es menor que el número solicitado o puede ser 0 (cero) si se ha llegado al final de la secuencia de Brotli.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Lee de forma asincrónica una secuencia de bytes en la secuencia de Brotli actual, los escribe en un intervalo de memoria de bytes, avanza la posición dentro de la secuencia de Brotli según el número de bytes leídos y supervisa las solicitudes de cancelación.</summary>
      <param name="buffer">Región de memoria en la que se van a escribir los datos.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de lectura asincrónica, que ajusta el número total de bytes leídos en el búfer. El valor de resultado puede ser menor que el número de bytes asignado en el búfer si esos bytes no están disponibles en ese momento o 0 (cero) si se ha alcanzado el final de la secuencia de Brotli.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <param name="offset">Ubicación en la secuencia.</param>
      <param name="origin">Uno de los valores de <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.SetLength(System.Int64)">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Longitud de la secuencia.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Escribe los bytes comprimidos en la secuencia subyacente de la matriz de bytes especificada.</summary>
      <param name="buffer">El búfer que contiene los datos que se van a comprimir.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde se leerán los bytes.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
      <exception cref="T:System.ObjectDisposedException">La operación de escritura no se puede realizar porque la secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Escribe una secuencia de bytes en la secuencia de Brotli actual desde un intervalo de bytes de solo lectura y avanza la posición actual en esta secuencia de Brotli según el número de bytes escritos.</summary>
      <param name="buffer">Región de memoria. Este método copia el contenido de esta región en la secuencia de Brotli actual.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Escribe de forma asincrónica los bytes comprimidos en la secuencia de Brotli subyacente de la matriz de bytes especificada.</summary>
      <param name="buffer">Búfer que contiene los datos que se van a comprimir.</param>
      <param name="offset">Desplazamiento en bytes de base cero de <paramref name="buffer" /> desde donde se comienzan a copiar los bytes en la secuencia de Brotli.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de escritura asincrónica.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Escribe de forma asincrónica los bytes comprimidos en la secuencia de Brotli subyacente del intervalo de memoria de bytes especificado.</summary>
      <param name="buffer">Región de memoria desde la que se van a escribir los datos.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de escritura asincrónica.</returns>
    </member>
  </members>
</doc>