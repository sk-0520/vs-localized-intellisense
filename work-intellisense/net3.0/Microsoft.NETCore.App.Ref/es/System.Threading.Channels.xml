<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary vsli:raw="Specifies the behavior to use when writing to a bounded channel that is already full.">Especifica el comportamiento que se usará al escribir en un canal delimitado que ya está completo.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary vsli:raw="Removes and ignores the newest item in the channel in order to make room for the item being written.">Quita y omite el elemento más reciente en el canal con el fin de dejar espacio para el elemento que se va a escribir.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary vsli:raw="Removes and ignores the oldest item in the channel in order to make room for the item being written.">Quita y omite el elemento más antiguo en el canal con el fin de dejar espacio para el elemento que se va a escribir.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary vsli:raw="Drops the item being written.">Quita el elemento que se va a escribir.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary vsli:raw="Waits for space to be available in order to complete the write operation.">Espera a que haya espacio disponible para completar la operación de escritura.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of bounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Proporciona opciones que controlan el comportamiento de las instancias vinculadas de <see cref="T:System.Threading.Channels.Channel`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the options.">Inicializa las opciones.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the bounded channel may store.">El número máximo de elementos que puede almacenar el canal delimitado.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary vsli:raw="Gets or sets the maximum number of items the bounded channel may store.">Obtiene o establece el número máximo de elementos que puede almacenar el canal delimitado.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary vsli:raw="Gets or sets the behavior incurred by write operations when the channel is full.">Obtiene o establece el comportamiento de las operaciones de escritura cuando el canal está lleno.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary vsli:raw="Provides static methods for creating channels.">Proporciona los métodos estáticos para crear canales.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Crea un canal con la capacidad máxima especificada.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the channel may store.">El número máximo de elementos que puede almacenar el canal.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Especifica el tipo de datos del canal.</typeparam>
      <returns vsli:raw="The created channel.">El canal creado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Crea un canal con la capacidad máxima especificada.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Opciones que guían el comportamiento del canal.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Especifica el tipo de datos del canal.</typeparam>
      <returns vsli:raw="The created channel.">El canal creado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary vsli:raw="Creates an unbounded channel usable by any number of readers and writers concurrently.">Crea un canal ilimitado que puede ser utilizado por cualquier número de lectores y escritores al mismo tiempo.</summary>
      <typeparam name="T" vsli:raw="The type of data in the channel." />
      <returns vsli:raw="The created channel.">El canal creado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary vsli:raw="Creates an unbounded channel subject to the provided options.">Crea un canal ilimitado sujeto a las opciones proporcionadas.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Opciones que guían el comportamiento del canal.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Especifica el tipo de datos del canal.</typeparam>
      <returns vsli:raw="The created channel.">El canal creado.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary vsli:raw="Provides a base class for channels that support reading and writing elements of type &lt;typeparamref name=&quot;T&quot; /&gt;.">Proporciona una clase base para los canales que permiten leer y escribir los elementos de tipo <typeparamref name="T" />.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data readable and writable in the channel.">Especifica el tipo de datos legibles y en los que se puede escribir en el canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor" />
    <member name="T:System.Threading.Channels.Channel`2">
      <summary vsli:raw="Provides a base class for channels that support reading elements of type &lt;typeparamref name=&quot;TRead&quot; /&gt; and writing elements of type &lt;typeparamref name=&quot;TWrite&quot; /&gt;.">Proporciona una clase base para los canales que permiten leer los elementos de tipo <typeparamref name="TRead" /> y escribir elementos de tipo <typeparamref name="TWrite" />.</summary>
      <typeparam name="TWrite" vsli:raw="Specifies the type of data that may be written to the channel.">Especifica el tipo de datos que se pueden escribir en el canal.</typeparam>
      <typeparam name="TRead" vsli:raw="Specifies the type of data that may be read from the channel.">Especifica el tipo de datos que se pueden leer del canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor" />
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its readable half.">Conversión implícita de un elemento <see cref="T:System.Threading.Channels.Channel`2" /> a su mitad legible.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">
        <see cref="T:System.Threading.Channels.Channel`2" /> que se va a convertir.</param>
      <returns vsli:raw="The readable half.">La mitad legible.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its writable half.">Conversión implícita de un elemento <see cref="T:System.Threading.Channels.Channel`2" /> a su mitad que admite escritura.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">
        <see cref="T:System.Threading.Channels.Channel`2" /> que se va a convertir.</param>
      <returns vsli:raw="The writable half.">La mitad que admite escritura.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary vsli:raw="Gets the readable half of this channel.">Obtiene la mitad que admite lectura de este canal.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary vsli:raw="Gets the writable half of this channel.">Obtiene la mitad que admite escritura de este canal.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary vsli:raw="Exception thrown when a channel is used after it's been closed.">Excepción que se produce cuando se usa un canal después de que se ha cerrado.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Excepción que es la causa de esta excepción.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Channels.ChannelClosedException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Mensaje que describe el error.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Mensaje que describe el error.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Excepción que es la causa de esta excepción.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of channel instances.">Proporciona opciones que controlan el comportamiento de las instancias del canal.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor" />
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if operations performed on a channel may synchronously invoke continuations subscribed to&#xA;            notifications of pending async operations; &lt;see langword=&quot;false&quot; /&gt; if all continuations should be invoked asynchronously.">
        <see langword="true" /> si las operaciones realizadas en un canal pueden invocar sincrónicamente las continuaciones suscritas a notificaciones de operaciones asíncronicas pendientes; <see langword="false" /> si todas las continuaciones deben invocarse de forma asíncronica.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; readers from the channel guarantee that there will only ever be at most one read operation at a time;&#xA;            &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" /> lectores del canal garantizan que siempre habrá al menos una operación de lectura a la vez; <see langword="false" /> si no se garantiza ninguna restricción de este tipo.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers to the channel guarantee that there will only ever be at most one write operation&#xA;            at a time; &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" /> si los escritores del canal garantizan que siempre habrá al menos una operación de escritura a la vez; <see langword="false" /> si no se garantiza ninguna restricción de este tipo.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary vsli:raw="Provides a base class for reading from a channel.">Proporciona una clase base para leer desde un canal.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be read from the channel.">Especifica el tipo de datos que se pueden leer del canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor" />
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that completes when no more data will ever&#xA;            be available to be read from this channel.">Obtiene un <see cref="T:System.Threading.Tasks.Task" /> que se completa cuando ya no haya más datos disponibles para leer desde este canal.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Collections.Generic.IAsyncEnumerable`1&quot; /&gt; that enables reading all of the data from the channel.">Crea una instancia de <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> que permite leer todos los datos del canal.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to use to cancel the enumeration. If data is immediately ready for reading, then that data may be yielded even after cancellation has been requested.">Token de cancelación que se va a usar para cancelar la enumeración.</param>
      <returns vsli:raw="The created async enumerable.">El enumerable asincrónico que se ha creado.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads an item from the channel.">Lee asincrónicamente un elemento desde el canal.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the read operation.">Un <see cref="T:System.Threading.CancellationToken" /> usado para cancelar la operación de lectura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation.">Un <see cref="T:System.Threading.Tasks.ValueTask`1" /> que representa la operación de lectura asincrónica.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary vsli:raw="Attempts to read an item from the channel.">Intenta leer un elemento del canal.</summary>
      <param name="item" vsli:raw="The read item, or a default value if no item could be read.">El elemento de lectura, o un valor predeterminado si no hay ningún elemento que se pueda leer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un elemento se ha leído; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when data is available to read.">Devuelve un <see cref="T:System.Threading.Tasks.Task`1" /> que se completará cuando haya datos disponibles para leer.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Un <see cref="T:System.Threading.CancellationToken" /> utilizado para cancelar la operación de espera.</param>
      <returns vsli:raw="&lt;para&gt;A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when data is available to read&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further data will ever be available to be read due to the channel completing successfully.&lt;/para&gt;&lt;para&gt;If the channel completes with an exception, the task will also complete with an exception.&lt;/para&gt;">Un <see cref="T:System.Threading.Tasks.Task`1" /> que se completará con un resultado <see langword="true" /> cuando haya datos disponibles para leer o con un resultado <see langword="false" /> cuando ya no haya datos disponibles para leer.</returns>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary vsli:raw="Provides a base class for writing to a channel.">Proporciona una clase base para escribir en un canal.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be written to the channel.">Especifica el tipo de datos que se pueden escribir en el canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor" />
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary vsli:raw="Mark the channel as being complete, meaning no more items will be written to it.">Marque el canal como completo, lo que significa que ya no se escribirán más elementos en él.</summary>
      <param name="error" vsli:raw="Optional Exception indicating a failure that's causing the channel to complete.">Excepción opcional que indica un error que está causando que el canal se complete.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The channel has already been marked as complete.">El canal ya se ha marcado como completo.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary vsli:raw="Attempts to mark the channel as being completed, meaning no more data will be written to it.">Intenta marcar el canal como completo, lo que significa que ya no se escribirán más datos en él.</summary>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; indicating the failure causing no more data to be written, or null for success.">Un <see cref="T:System.Exception" /> que indica el error que causa que no se escriban más datos, o null si es correcto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this operation successfully completes the channel; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the channel could not be marked for completion,&#xA;            for example due to having already been marked as such, or due to not supporting completion.&#xA;          .">
        <see langword="true" /> si esta operación completa correctamente el canal; en caso contrario, <see langword="false" /> si no se pudo marcar el canal como completo (porque ya se ha marcado como tal o porque no admite ese estado, por ejemplo).</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary vsli:raw="Attempts to write the specified item to the channel.">Intenta escribir el elemento especificado en el canal.</summary>
      <param name="item" vsli:raw="The item to write.">El elemento que se va a escribir.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el elemento se ha escrito; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when space is available to write an item.">Devuelve un <see cref="T:System.Threading.Tasks.Task`1" /> que se completará cuando haya espacio disponible para escribir un elemento.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Un <see cref="T:System.Threading.CancellationToken" /> utilizado para cancelar la operación de espera.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when space is available to write an item&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further writing will be permitted.">Un <see cref="T:System.Threading.Tasks.Task`1" /> que se completará con un resultado <see langword="true" /> si hay espacio disponible para escribir un elemento o con un resultado <see langword="false" /> si no se permite más escritura.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes an item to the channel.">Escribe asincrónicamente un elemento en el canal.</summary>
      <param name="item" vsli:raw="The value to write to the channel.">El valor para escribir en el canal.</param>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the write operation.">Un <see cref="T:System.Threading.CancellationToken" /> utilizado para cancelar la operación de escritura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; that represents the asynchronous write operation.">Un <see cref="T:System.Threading.Tasks.Task" /> que representa la operación de escritura asincrónica.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of unbounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Proporciona opciones que controlan el comportamiento de las instancias desvinculadas de <see cref="T:System.Threading.Channels.Channel`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor" />
  </members>
</doc>