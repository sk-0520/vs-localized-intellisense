<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.HttpListener</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemeSelector">
      <summary>Selecciona el esquema de autenticación para una instancia de <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="httpRequest">La instancia de <see cref="T:System.Net.HttpListenerRequest" /> para la cual se selecciona un esquema de autenticación.</param>
      <returns>Uno de los valores <see cref="T:System.Net.AuthenticationSchemes" /> que indica el método de autenticación que se utiliza para la solicitud de cliente especificada.</returns>
    </member>
    <member name="T:System.Net.HttpListener">
      <summary>Proporciona un agente de escucha del protocolo HTTP sencillo y controlado mediante programación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Net.HttpListener.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.HttpListener" />.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Esta clase no se puede utilizar en el sistema operativo actual. Se requiere Windows Server 2003 o Windows XP SP2 para poder utilizar instancias de esta clase.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Abort">
      <summary>Cierra inmediatamente el objeto <see cref="T:System.Net.HttpListener" />, descartando todas las solicitudes actualmente puestas en la cola.</summary>
    </member>
    <member name="P:System.Net.HttpListener.AuthenticationSchemes">
      <summary>Obtiene o establece el esquema utilizado para autenticar los clientes.</summary>
      <returns>Una combinación bit a bit de valores de la enumeración <see cref="T:System.Net.AuthenticationSchemes" /> que indica cómo serán autenticados los clientes. El valor predeterminado es <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
      <summary>Obtiene o establece el delegado al que se llama para determinar el protocolo utilizado para autenticar los clientes.</summary>
      <returns>Un delegado <see cref="T:System.Net.AuthenticationSchemeSelector" /> que invoca el método utilizado para seleccionar un protocolo de autenticación. El valor predeterminado es <see langword="null" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
      <summary>Empieza a recuperar de forma asincrónica una solicitud de entrada.</summary>
      <param name="callback">Un delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invoca cuando está disponible una solicitud de cliente.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación. Este objeto se pasa al delegado de <paramref name="callback" /> cuando la operación ha terminado.</param>
      <returns>Un objeto <see cref="T:System.IAsyncResult" /> que indica el estado de la operación asincrónica.</returns>
      <exception cref="T:System.Net.HttpListenerException">Se ha producido un error en una llamada de función de Win32. Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</exception>
      <exception cref="T:System.InvalidOperationException">Este objeto no se ha iniciado o actualmente está detenido.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Close">
      <summary>Cierra <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="P:System.Net.HttpListener.DefaultServiceNames">
      <summary>Obtiene una lista predeterminada de nombres de proveedores de servicios (SPN) determinada por los prefijos registrados.</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> que contiene una lista de SPN.</returns>
    </member>
    <member name="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
      <summary>Finaliza una operación asincrónica para recuperar una solicitud de cliente de entrada.</summary>
      <param name="asyncResult">Un objeto <see cref="T:System.IAsyncResult" /> que se obtuvo al iniciar la operación asincrónica.</param>
      <returns>Un objeto <see cref="T:System.Net.HttpListenerContext" /> que representa la solicitud de cliente.</returns>
      <exception cref="T:System.ArgumentException">No se ha obtenido el valor <paramref name="asyncResult" /> llamando al método <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.HttpListenerException">Se ha producido un error en una llamada de función de Win32. Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</exception>
      <exception cref="T:System.InvalidOperationException">Ya se llamó al método <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> para el objeto <paramref name="asyncResult" /> especificado.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListener.ExtendedProtectionPolicy">
      <summary>Obtiene o establece el objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que se va a emplear para la protección extendida para una sesión.</summary>
      <returns>Objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que especifica la directiva que se va a usar para la protección extendida.</returns>
      <exception cref="T:System.ArgumentException">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />, pero la propiedad <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> no era <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> en <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> después de que ya se hubiera llamado al método <see cref="M:System.Net.HttpListener.Start" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La propiedad <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> se estableció en <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> en una plataforma que no admite la protección extendida.</exception>
    </member>
    <member name="T:System.Net.HttpListener.ExtendedProtectionSelector">
      <summary>Representa un delegado que se invoca para determinar el objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que se va a usar para cada solicitud <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="request">Objeto <see cref="T:System.Net.HttpListenerRequest" /> para determinar la directiva de protección extendida que la instancia de <see cref="T:System.Net.HttpListener" /> va a usar para proporcionar la protección extendida.</param>
      <returns>Objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que especifica la directiva de protección extendida que se va a utilizar para esta solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
      <summary>Obtiene o establece el delegado llamado para determinar el objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que se va a emplear para cada solicitud.</summary>
      <returns>Objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que especifica la directiva que se va a usar para la protección extendida.</returns>
      <exception cref="T:System.ArgumentException">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />, pero la propiedad <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> debe ser <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> en <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se intentó establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> después de que ya se hubiera llamado al método <see cref="M:System.Net.HttpListener.Start" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Se hizo un intento de establecer la propiedad <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> en una plataforma que no admite la protección extendida.</exception>
    </member>
    <member name="M:System.Net.HttpListener.GetContext">
      <summary>Espera a una solicitud de entrada y vuelve cuando se recibe una.</summary>
      <returns>Un objeto <see cref="T:System.Net.HttpListenerContext" /> que representa una solicitud de cliente.</returns>
      <exception cref="T:System.Net.HttpListenerException">Se ha producido un error en una llamada de función de Win32. Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</exception>
      <exception cref="T:System.InvalidOperationException">Este objeto no se ha iniciado o actualmente está detenido.  
O bien 
El objeto <see cref="T:System.Net.HttpListener" /> no tiene un prefijo de identificador URI al que responder.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="M:System.Net.HttpListener.GetContextAsync">
      <summary>Espera una solicitud entrante como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve un objeto <see cref="T:System.Net.HttpListenerContext" /> que representa una solicitud de cliente.</returns>
    </member>
    <member name="P:System.Net.HttpListener.IgnoreWriteExceptions">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si su aplicación recibe las excepciones que aparecen cuando <see cref="T:System.Net.HttpListener" /> envía la respuesta al cliente.</summary>
      <returns>
        <see langword="true" />es si no <see langword="false" /> debedevolverlasexcepcionesqueseproducenalenviarlarespuestaalcliente;encaso<see cref="T:System.Net.HttpListener" /> contrario, es. El valor predeterminado es <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListener.IsListening">
      <summary>Obtiene un valor que indica si se ha iniciado <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>Es <see langword="true" /> si se inició <see cref="T:System.Net.HttpListener" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.IsSupported">
      <summary>Obtiene un valor que indica si <see cref="T:System.Net.HttpListener" /> se puede utilizar con el sistema operativo actual.</summary>
      <returns>Es <see langword="true" /> si se admite <see cref="T:System.Net.HttpListener" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.Prefixes">
      <summary>Obtiene los prefijos de identificador URI controlados por este objeto <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>Un objeto <see cref="T:System.Net.HttpListenerPrefixCollection" /> que contiene los prefijos URI que la configuración de este objeto <see cref="T:System.Net.HttpListener" /> le permite controlar.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto se ha cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListener.Realm">
      <summary>Obtiene o establece el territorio, o partición de recurso, asociado con el objeto <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene el nombre del territorio asociado al objeto <see cref="T:System.Net.HttpListener" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Start">
      <summary>Permite que esta instancia reciba solicitudes de entrada.</summary>
      <exception cref="T:System.Net.HttpListenerException">Se ha producido un error en una llamada de función de Win32. Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Stop">
      <summary>Hace que esta instancia deje de recibir solicitudes de entrada.</summary>
      <exception cref="T:System.ObjectDisposedException">Este objeto se ha cerrado.</exception>
    </member>
    <member name="M:System.Net.HttpListener.System#IDisposable#Dispose">
      <summary>Libera los recursos mantenidos por este objeto <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="P:System.Net.HttpListener.TimeoutManager">
      <summary>El administrador de tiempo de espera para esta instancia <see cref="T:System.Net.HttpListener" /> .</summary>
      <returns>El administrador de tiempo de espera para esta instancia <see cref="T:System.Net.HttpListener" /> .</returns>
    </member>
    <member name="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que controla si, cuando se utiliza NTLM, se requieren solicitudes adicionales que utilicen la misma conexión del protocolo TCP (Protocolo de control de transporte) para la autenticación.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Security.Principal.IIdentity" /> de la primera solicitud debe utilizarse para las solicitudes posteriores de la misma conexión; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto se ha cerrado.</exception>
    </member>
    <member name="T:System.Net.HttpListenerBasicIdentity">
      <summary>Contiene el nombre de usuario y la contraseña de una solicitud de autenticación básica.</summary>
    </member>
    <member name="M:System.Net.HttpListenerBasicIdentity.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.HttpListenerBasicIdentity" /> con el nombre de usuario y la contraseña especificados.</summary>
      <param name="username">Nombre de usuario.</param>
      <param name="password">Contraseña.</param>
    </member>
    <member name="P:System.Net.HttpListenerBasicIdentity.Password">
      <summary>Indica la contraseña de un intento de autenticación básica.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene la contraseña.</returns>
    </member>
    <member name="T:System.Net.HttpListenerContext">
      <summary>Proporciona acceso a los objetos de solicitud y respuesta utilizados por la clase <see cref="T:System.Net.HttpListener" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)">
      <summary>Acepta una conexión WebSocket como una operación asincrónica.</summary>
      <param name="subProtocol">El subprotocolo compatible de WebSocket.</param>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> del objeto de tarea devuelve un objeto <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> es una cadena vacía 
O bien 
 <paramref name="subProtocol" /> contiene caracteres no válidos.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Error al enviar la respuesta para completar el protocolo de enlace WebSocket.</exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)">
      <summary>Acepta una conexión WebSocket que especifica el subprotocolo compatible de WebSocket, el tamaño del búfer de recepción y el intervalo keep-alive de WebSocket como una operación asincrónica.</summary>
      <param name="subProtocol">El subprotocolo compatible de WebSocket.</param>
      <param name="receiveBufferSize">Tamaño del búfer recibido en bytes.</param>
      <param name="keepAliveInterval">El intervalo de mantenimiento del protocolo de WebSocket en milisegundos.</param>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> del objeto de tarea devuelve un objeto <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> es una cadena vacía 
o bien 
 <paramref name="subProtocol" /> contiene caracteres no válidos.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> es demasiado pequeño.  
O bien 
 <paramref name="receiveBufferSize" /> es menor que 16 bytes. 
O bien 
 <paramref name="receiveBufferSize" /> es mayor que 64 kB.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Error al enviar la respuesta para completar el protocolo de enlace WebSocket.</exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})">
      <summary>Acepta una conexión WebSocket que especifica el subprotocolo compatible de WebSocket, el tamaño del búfer de recepción, el intervalo keep-alive de WebSocket y el búfer interno como una operación asincrónica.</summary>
      <param name="subProtocol">El subprotocolo compatible de WebSocket.</param>
      <param name="receiveBufferSize">Tamaño del búfer recibido en bytes.</param>
      <param name="keepAliveInterval">El intervalo de mantenimiento del protocolo de WebSocket en milisegundos.</param>
      <param name="internalBuffer">Un búfer interno para utilizar en esta operación.</param>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> del objeto de tarea devuelve un objeto <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> es una cadena vacía 
O bien 
 <paramref name="subProtocol" /> contiene caracteres no válidos.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> es demasiado pequeño.  
O bien 
 <paramref name="receiveBufferSize" /> es menor que 16 bytes. 
o bien 
 <paramref name="receiveBufferSize" /> es mayor que 64 kB.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Error al enviar la respuesta para completar el protocolo de enlace WebSocket.</exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)">
      <summary>Acepta una conexión WebSocket que especifica el subprotocolo compatible de WebSocket y el intervalo keep-alive de WebSocket como una operación asincrónica.</summary>
      <param name="subProtocol">El subprotocolo compatible de WebSocket.</param>
      <param name="keepAliveInterval">El intervalo de mantenimiento del protocolo de WebSocket en milisegundos.</param>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> del objeto de tarea devuelve un objeto <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> es una cadena vacía 
O bien 
 <paramref name="subProtocol" /> contiene caracteres no válidos.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> es demasiado pequeño.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Error al enviar la respuesta para completar el protocolo de enlace WebSocket.</exception>
    </member>
    <member name="P:System.Net.HttpListenerContext.Request">
      <summary>Obtiene la clase <see cref="T:System.Net.HttpListenerRequest" /> que representa la solicitud de un cliente para un recurso.</summary>
      <returns>Un objeto <see cref="T:System.Net.HttpListenerRequest" /> que representa la solicitud de cliente.</returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.Response">
      <summary>Obtiene el objeto <see cref="T:System.Net.HttpListenerResponse" /> que se enviará al cliente en respuesta a la solicitud del cliente.</summary>
      <returns>Un objeto <see cref="T:System.Net.HttpListenerResponse" /> que permite devolver una respuesta al cliente.</returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.User">
      <summary>Obtiene un objeto utilizado para obtener la identidad, la información de autenticación y los roles de seguridad para el cliente cuya solicitud está representada por este objeto <see cref="T:System.Net.HttpListenerContext" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Principal.IPrincipal" /> que describe el cliente o bien <see langword="null" />, si el objeto <see cref="T:System.Net.HttpListener" /> que proporcionó <see cref="T:System.Net.HttpListenerContext" /> no requiere autenticación.</returns>
    </member>
    <member name="T:System.Net.HttpListenerException">
      <summary>Excepción que se produce cuando ocurre un error al procesar una solicitud HTTP.</summary>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.HttpListenerException" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Int32)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.HttpListenerException" /> con el código de error especificado.</summary>
      <param name="errorCode">Un valor <see cref="T:System.Int32" /> que identifica el error producido.</param>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Int32,System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.HttpListenerException" /> con el mensaje y el código de error especificados.</summary>
      <param name="errorCode">Un valor <see cref="T:System.Int32" /> que identifica el error producido.</param>
      <param name="message">Objeto <see cref="T:System.String" /> que describe el error que se ha producido.</param>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.HttpListenerException" /> desde las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información requerida para deserializar la nueva instancia de <see cref="T:System.Net.HttpListenerException" />.</param>
      <param name="streamingContext">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Net.HttpListenerException.ErrorCode">
      <summary>Obtiene un valor que identifica el error producido.</summary>
      <returns>Valor <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:System.Net.HttpListenerPrefixCollection">
      <summary>Representa la colección utilizada para almacenar los prefijos URI (Identificador uniforme de recursos) de los objetos <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
      <summary>Agrega un prefijo del identificador uniforme de recursos (URI) a la colección.</summary>
      <param name="uriPrefix">
        <see cref="T:System.String" /> que identifica la información de URI que se compara en las solicitudes entrantes. El prefijo debe terminar con una barra diagonal ("/").</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriPrefix" /> no utiliza el esquema http:// o https://. Estos son los únicos esquemas admitidos en los objetos <see cref="T:System.Net.HttpListener" />.  
o bien 
 <paramref name="uriPrefix" /> no es un prefijo URI con formato correcto. Asegúrese de que la cadena finaliza con un "/".</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</exception>
      <exception cref="T:System.Net.HttpListenerException">Error al llamar a una función de Windows. Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa. Se produce esta excepción si otro objeto <see cref="T:System.Net.HttpListener" /> ya ha agregado el prefijo <paramref name="uriPrefix" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Clear">
      <summary>Quita todos los prefijos URI (Identificador uniforme de recursos) de la colección.</summary>
      <exception cref="T:System.Net.HttpListenerException">Error al llamar a una función de Windows. Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
      <summary>Devuelve un valor <see cref="T:System.Boolean" /> que indica si la colección contiene el prefijo especificado.</summary>
      <param name="uriPrefix">
        <see cref="T:System.String" /> que contiene el prefijo URI (Identificador uniforme de recursos) que se va a comprobar.</param>
      <returns>Es <see langword="true" /> si esta colección contiene el prefijo especificado por <paramref name="uriPrefix" />; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia el contenido de <see cref="T:System.Net.HttpListenerPrefixCollection" /> en la matriz especificada.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que recibe las cadenas de prefijos URI (Identificador uniforme de recursos) de esta colección.</param>
      <param name="offset">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> tiene más de una dimensión.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Esta colección contiene más elementos de los que se pueden almacenar en <paramref name="array" /> a partir de <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="array" /> no puede almacenar valores de cadena.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copia el contenido de <see cref="T:System.Net.HttpListenerPrefixCollection" /> en una matriz de cadenas especificada.</summary>
      <param name="array">Matriz de cadenas unidimensional que recibe las cadenas de prefijos URI (Identificador uniforme de recursos) de esta colección.</param>
      <param name="offset">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> tiene más de una dimensión.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Esta colección contiene más elementos de los que se pueden almacenar en <paramref name="array" /> a partir de <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</exception>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.Count">
      <summary>Obtiene el número de prefijos contenidos en la colección.</summary>
      <returns>
        <see cref="T:System.Int32" /> que contiene el número de prefijos de esta colección.</returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
      <summary>Devuelve un objeto que puede utilizarse para recorrer en iteración la colección.</summary>
      <returns>Objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerator" /> y proporciona acceso a las cadenas de esta colección.</returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
      <summary>Obtiene un valor que indica si el acceso a la colección es de sólo lectura.</summary>
      <returns>Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns>Esta propiedad devuelve siempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
      <summary>Quita el identificador uniforme de recursos (URI) especificado de la lista de prefijos controlada por el objeto <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="uriPrefix">
        <see cref="T:System.String" /> que contiene el prefijo URI que se va a quitar.</param>
      <returns>
        <see langword="true" /> si <paramref name="uriPrefix" /> se encontró en <see cref="T:System.Net.HttpListenerPrefixCollection" /> y se quitó; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.HttpListenerException">Error al llamar a una función de Windows. Para determinar la causa de la excepción, compruebe el código de error de la misma.</exception>
      <exception cref="T:System.ObjectDisposedException">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un objeto que puede utilizarse para recorrer en iteración la colección.</summary>
      <returns>Objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerator" /> y proporciona acceso a las cadenas de esta colección.</returns>
    </member>
    <member name="T:System.Net.HttpListenerRequest">
      <summary>Describe una solicitud HTTP de entrada a un objeto <see cref="T:System.Net.HttpListener" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Net.HttpListenerRequest.AcceptTypes">
      <summary>Obtiene los tipos MIME aceptados por el cliente.</summary>
      <returns>Una matriz <see cref="T:System.String" /> que contiene los nombres de tipo especificados en el encabezado <see langword="Accept" /> de la solicitud o bien <see langword="null" />, si la solicitud de cliente no incluía un encabezado <see langword="Accept" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica para el certificado X.509 v.3 del cliente.</summary>
      <param name="requestCallback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación. Este objeto se pasa al delegado de devolución de llamada cuando la operación ha terminado.</param>
      <returns>Un valor <see cref="T:System.IAsyncResult" /> que indica el estado de la operación.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ClientCertificateError">
      <summary>Obtiene un código de error que identifica un problema con el objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> proporcionado por el cliente.</summary>
      <returns>Un valor <see cref="T:System.Int32" /> que contiene un código de error de Windows.</returns>
      <exception cref="T:System.InvalidOperationException">El certificado de cliente no ha sido inicializado aún por una llamada a los métodos <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> o <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> 
O bien 
La operación todavía está en curso.</exception>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentEncoding">
      <summary>Obtiene la codificación de contenido que se puede utilizar con los datos enviados con la solicitud</summary>
      <returns>Un objeto <see cref="T:System.Text.Encoding" /> apto para el uso con los datos de la propiedad <see cref="P:System.Net.HttpListenerRequest.InputStream" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentLength64">
      <summary>Obtiene la longitud de los datos de cuerpo incluidos en la solicitud.</summary>
      <returns>Valor del encabezado <see langword="Content-Length" /> de la solicitud. Este valor es -1 si no se conoce la longitud del contenido.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentType">
      <summary>Obtiene el tipo MIME de los datos del cuerpo incluidos en la solicitud.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene el texto del encabezado <see langword="Content-Type" /> de la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Cookies">
      <summary>Obtiene las cookies enviadas con la solicitud.</summary>
      <returns>Un objeto <see cref="T:System.Net.CookieCollection" /> que contiene las cookies adjuntas a la solicitud. Esta propiedad devuelve una colección vacía si la solicitud no contiene cookies.</returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
      <summary>Finaliza una solicitud asincrónica para el certificado X.509 v.3 del cliente.</summary>
      <param name="asyncResult">La solicitud pendiente para el certificado.</param>
      <returns>El objeto <see cref="T:System.IAsyncResult" /> que se devuelve cuando se inicia la operación.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se obtuvo mediante una llamada a <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></exception>
      <exception cref="T:System.InvalidOperationException">Ya se llamó a este método para la operación identificada por <paramref name="asyncResult" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerRequest.GetClientCertificate">
      <summary>Recupera el certificado X.509 v.3 del cliente.</summary>
      <returns>Un objeto <see cref="N:System.Security.Cryptography.X509Certificates" /> que contiene el certificado X.509 v.3 del cliente.</returns>
      <exception cref="T:System.InvalidOperationException">Está en curso una llamada a este método para recuperar el certificado X.509 v.3 del cliente y, por consiguiente, no se puede realizar otra llamada a este método.</exception>
    </member>
    <member name="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
      <summary>Recupera el certificado de X.509 v.3 del cliente como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve un objeto <see cref="N:System.Security.Cryptography.X509Certificates" /> que contiene el certificado X.509 v.3 del cliente.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.HasEntityBody">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si la solicitud tiene asociados datos de cuerpo.</summary>
      <returns>Es <see langword="true" /> si la solicitud tiene asociados datos de cuerpo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Headers">
      <summary>Obtiene la colección de pares nombre de encabezado/valor enviados en la solicitud.</summary>
      <returns>Un objeto <see cref="T:System.Net.WebHeaderCollection" /> que contiene los encabezados HTTP incluidos en la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.HttpMethod">
      <summary>Obtiene el método HTTP especificado por el cliente.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene el método utilizado en la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.InputStream">
      <summary>Obtiene una secuencia que contiene los datos del cuerpo enviados por el cliente.</summary>
      <returns>Un objeto <see cref="T:System.IO.Stream" /> legible que contiene los bytes enviados por el cliente en el cuerpo de la solicitud. Esta propiedad devuelve <see cref="F:System.IO.Stream.Null" /> si no se envían datos con la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsAuthenticated">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si el cliente que envía esta solicitud está autenticado.</summary>
      <returns>Es <see langword="true" /> si se ha autenticado al cliente; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsLocal">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si la solicitud se envía desde el equipo local.</summary>
      <returns>Es <see langword="true" /> si la solicitud se originó en el mismo equipo que el objeto <see cref="T:System.Net.HttpListener" /> que proporcionó la solicitud; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsSecureConnection">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si la conexión TCP utilizada para enviar la solicitud está utilizando el protocolo Secure Sockets Layer (SSL).</summary>
      <returns>Es <see langword="true" /> si la conexión TCP utiliza SSL; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si la conexión TCP fue una solicitud WebSocket.</summary>
      <returns>Devuelva <see cref="T:System.Boolean" />.  
 <see langword="true" /> si la conexión TCP es una solicitud de WebSocket; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.KeepAlive">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si el cliente solicita una conexión persistente.</summary>
      <returns>Es <see langword="true" /> si la conexión debe mantenerse abierta; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.LocalEndPoint">
      <summary>Obtiene la dirección IP y el número de puerto del servidor a los que se dirige la solicitud.</summary>
      <returns>Un objeto <see cref="T:System.Net.IPEndPoint" /> que representa la dirección IP a la que se envía la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ProtocolVersion">
      <summary>Obtiene la versión de HTTP utilizada por el cliente que hace la solicitud.</summary>
      <returns>Un objeto <see cref="T:System.Version" /> que identifica la versión del cliente de HTTP.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.QueryString">
      <summary>Obtiene la cadena de consulta incluida en la solicitud.</summary>
      <returns>Un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene los datos de consulta incluidos en la solicitud <see cref="P:System.Net.HttpListenerRequest.Url" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RawUrl">
      <summary>Obtiene la información de la dirección URL (sin el host y el puerto) solicitada por el cliente.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene la dirección URL original para esta solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RemoteEndPoint">
      <summary>Obtiene la dirección IP y el número de puerto de cliente desde los que se originó la solicitud.</summary>
      <returns>Un objeto <see cref="T:System.Net.IPEndPoint" /> que representa la dirección IP y el número de puerto desde los que se originó la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
      <summary>Obtiene el identificador de la solicitud HTTP de entrada.</summary>
      <returns>Un objeto <see cref="T:System.Guid" /> que contiene el identificador de la solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ServiceName">
      <summary>Obtiene el nombre del proveedor de servicios (SPN) que el cliente envió en la solicitud.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene el SPN que el cliente envió en la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.TransportContext">
      <summary>Obtiene el objeto <see cref="T:System.Net.TransportContext" /> de la solicitud de cliente.</summary>
      <returns>Objeto <see cref="T:System.Net.TransportContext" /> de la solicitud de cliente.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Url">
      <summary>Obtiene el objeto <see cref="T:System.Uri" /> solicitado por el cliente.</summary>
      <returns>Un objeto <see cref="T:System.Uri" /> que identifica el recurso solicitado por el cliente.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UrlReferrer">
      <summary>Obtiene el identificador URI del recurso que remitió el cliente al servidor.</summary>
      <returns>Un objeto <see cref="T:System.Uri" /> que contiene el texto del encabezado <see cref="F:System.Net.HttpRequestHeader.Referer" /> de la solicitud o bien <see langword="null" />, si el encabezado no estaba incluido en la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserAgent">
      <summary>Obtiene el agente de usuario presentado por el cliente.</summary>
      <returns>Un objeto <see cref="T:System.String" /> que contiene el texto del encabezado <see langword="User-Agent" /> de la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserHostAddress">
      <summary>Obtiene la dirección IP y el número de puerto del servidor a los que se dirige la solicitud.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene información de la dirección del host.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserHostName">
      <summary>Obtiene el nombre DNS y, si se proporciona, el número de puerto especificado por el cliente.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene el texto del encabezado <see langword="Host" /> de la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserLanguages">
      <summary>Obtiene los idiomas naturales preferidos para la respuesta.</summary>
      <returns>Matriz <see cref="T:System.String" /> que contiene los idiomas especificados en el encabezado <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> de la solicitud o bien <see langword="null" />, si la solicitud de cliente no incluía un encabezado <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />.</returns>
    </member>
    <member name="T:System.Net.HttpListenerResponse">
      <summary>Representa una respuesta a una solicitud que controla un objeto <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Abort">
      <summary>Cierra la conexión con el cliente sin enviar una respuesta.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AddHeader(System.String,System.String)">
      <summary>Agrega el encabezado y valor especificados a los encabezados HTTP para esta respuesta.</summary>
      <param name="name">El nombre del encabezado HTTP que se establece.</param>
      <param name="value">El valor del encabezado <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" /> o una cadena vacía ("").</exception>
      <exception cref="T:System.ArgumentException">No tiene permiso para especificar un valor para el encabezado especificado.  
O bien 
 <paramref name="name" /> o <paramref name="value" /> contienen caracteres no válidos.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longitud de <paramref name="value" /> es mayor que 65.535 caracteres.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)">
      <summary>Agrega el objeto especificado <see cref="T:System.Net.Cookie" /> a la colección de cookies para esta respuesta.</summary>
      <param name="cookie">
        <see cref="T:System.Net.Cookie" /> para agregar a la colección que se envía con esta respuesta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)">
      <summary>Anexa un valor al encabezado HTTP especificado que se enviará con esta respuesta.</summary>
      <param name="name">El nombre del encabezado HTTP al que se anexará <paramref name="value" />.</param>
      <param name="value">El valor que se agrega al encabezado <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> es <see langword="null" /> o una cadena vacía ("").  
o bien 
No tiene permiso para especificar un valor para el encabezado especificado.  
O bien 
 <paramref name="name" /> o <paramref name="value" /> contienen caracteres no válidos.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longitud de <paramref name="value" /> es mayor que 65.535 caracteres.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Close">
      <summary>Envía la respuesta al cliente y libera los recursos que contenía esta instancia de <see cref="T:System.Net.HttpListenerResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)">
      <summary>Devuelve al cliente la matriz de bytes especificada y libera los recursos mantenidos por esta instancia de <see cref="T:System.Net.HttpListenerResponse" />.</summary>
      <param name="responseEntity">Una matriz <see cref="T:System.Byte" /> que contiene la respuesta enviada al cliente.</param>
      <param name="willBlock">Es <see langword="true" /> para bloquear la ejecución mientras se vuelca la secuencia al cliente; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="responseEntity" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentEncoding">
      <summary>Obtiene o establece el objeto <see cref="T:System.Text.Encoding" /> para la propiedad <see cref="P:System.Net.HttpListenerResponse.OutputStream" /> de esta respuesta.</summary>
      <returns>Un objeto <see cref="T:System.Text.Encoding" /> apropiado para el uso con los datos de la propiedad <see cref="P:System.Net.HttpListenerResponse.OutputStream" /> o bien <see langword="null" />, si no se especifica ninguna codificación.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentLength64">
      <summary>Obtiene o establece el número de bytes de los datos del cuerpo incluidos en la respuesta.</summary>
      <returns>Valor del encabezado <see langword="Content-Length" /> de la respuesta.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación de conjunto es menor que cero.</exception>
      <exception cref="T:System.InvalidOperationException">Ya se está enviando la respuesta.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentType">
      <summary>Obtiene o establece el tipo MIME del contenido devuelto.</summary>
      <returns>Una instancia de <see cref="T:System.String" /> que contiene el texto del encabezado <see langword="Content-Type" /> de la respuesta.</returns>
      <exception cref="T:System.ArgumentNullException">El valor especificado para una operación Set es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor especificado en una operación de conjunto es una cadena vacía ("").</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.Cookies">
      <summary>Obtiene o establece la colección de cookies devuelta con la respuesta.</summary>
      <returns>Una <see cref="T:System.Net.CookieCollection" /> que contiene las cookies adjuntas a la respuesta. La colección está vacía si no se agregaron cookies a la respuesta.</returns>
    </member>
    <member name="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)">
      <summary>Copia las propiedades de la <see cref="T:System.Net.HttpListenerResponse" /> especificada en esta respuesta.</summary>
      <param name="templateResponse">La instancia de <see cref="T:System.Net.HttpListenerResponse" /> que se copia.</param>
    </member>
    <member name="P:System.Net.HttpListenerResponse.Headers">
      <summary>Obtiene o establece la colección de pares nombre/valor de encabezado que devuelve el servidor.</summary>
      <returns>Una instancia de <see cref="T:System.Net.WebHeaderCollection" /> que contiene todos los encabezados HTTP establecidos explícitamente que se deben incluir en la respuesta.</returns>
      <exception cref="T:System.InvalidOperationException">La instancia de <see cref="T:System.Net.WebHeaderCollection" /> especificada para una operación de conjunto no es válida para una respuesta.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.KeepAlive">
      <summary>Obtiene o establece un valor que indica si el servidor solicita una conexión persistente.</summary>
      <returns>Es <see langword="true" /> si el servidor solicita una conexión persistente; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.OutputStream">
      <summary>Obtiene un objeto <see cref="T:System.IO.Stream" /> en el que se puede escribir una respuesta.</summary>
      <returns>Un objeto <see cref="T:System.IO.Stream" /> en el que se puede escribir una respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ProtocolVersion">
      <summary>Obtiene o establece la versión de HTTP utilizada para la respuesta.</summary>
      <returns>Un objeto <see cref="T:System.Version" /> que indica la versión de HTTP utilizada al responder al cliente. Tenga en cuenta que esta propiedad está obsoleta.</returns>
      <exception cref="T:System.ArgumentNullException">El valor especificado para una operación Set es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor especificado para una operación de conjunto no tiene su propiedad <see cref="P:System.Version.Major" /> establecida en 1 o su propiedad <see cref="P:System.Version.Minor" /> establecida en 0 ó 1.</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Redirect(System.String)">
      <summary>Configura la respuesta para redirigir el cliente a la dirección URL especificada.</summary>
      <param name="url">La dirección URL que el cliente debe utilizar para buscar el recurso solicitado.</param>
    </member>
    <member name="P:System.Net.HttpListenerResponse.RedirectLocation">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="Location" /> en esta respuesta.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene la dirección URL absoluta que se envía al cliente en el encabezado <see langword="Location" />.</returns>
      <exception cref="T:System.ArgumentException">El valor especificado en una operación de conjunto es una cadena vacía ("").</exception>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.SendChunked">
      <summary>Obtiene o establece si la respuesta utiliza una codificación de transferencia en fragmentos.</summary>
      <returns>Es <see langword="true" /> si la respuesta está configurada para utilizar codificación de transferencia en fragmentos; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)">
      <summary>Agrega o actualiza un objeto <see cref="T:System.Net.Cookie" /> en la colección de cookies enviada con esta respuesta.</summary>
      <param name="cookie">Un objeto <see cref="T:System.Net.Cookie" /> para esta respuesta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La cookie ya existe en la colección y no se pudo reemplazar.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.StatusCode">
      <summary>Obtiene o establece el código de estado de HTTP que se devuelve al cliente.</summary>
      <returns>Un valor <see cref="T:System.Int32" /> que especifica el código de estado de HTTP para el recurso solicitado. El valor predeterminado es <see cref="F:System.Net.HttpStatusCode.OK" />, que indica que el servidor procesó correctamente la solicitud del cliente e incluyó el recurso solicitado en el cuerpo de la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Este objeto está cerrado.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">El valor especificado para una operación de conjunto no es válido. Los valores válidos están comprendidos entre 100 y 999, ambos inclusive.</exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.StatusDescription">
      <summary>Obtiene o establece una descripción de texto del código de estado de HTTP devuelto al cliente.</summary>
      <returns>La descripción de texto del código de estado de HTTP devuelto al cliente. El valor predeterminado es la descripción de RFC 2616 del valor de la propiedad <see cref="P:System.Net.HttpListenerResponse.StatusCode" /> o una cadena vacía (""), si no existe una descripción de RFC 2616.</returns>
      <exception cref="T:System.ArgumentNullException">El valor especificado para una operación Set es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor especificado para una operación de establecimiento contiene caracteres que no se pueden imprimir.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.System#IDisposable#Dispose">
      <summary>Libera todos los recursos que usa <see cref="T:System.Net.HttpListenerResponse" />.</summary>
    </member>
    <member name="T:System.Net.HttpListenerTimeoutManager">
      <summary>El administrador de tiempo de espera para un objeto <see cref="T:System.Net.HttpListener" /> .</summary>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody">
      <summary>Obtiene o establece el tiempo permitido para que <see cref="T:System.Net.HttpListener" /> agote el cuerpo de la entidad en una conexión Keep-Alive.</summary>
      <returns>El tiempo permitido para <see cref="T:System.Net.HttpListener" /> que agote el cuerpo de la entidad en una conexión Keep-Alive.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.EntityBody">
      <summary>Obtiene o establece el tiempo permitido para que llegue el cuerpo de la entidad de solicitud.</summary>
      <returns>El tiempo permitido para que llegue el cuerpo de la entidad de solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.HeaderWait">
      <summary>Obtiene o establece el tiempo permitido para que <see cref="T:System.Net.HttpListener" /> analice el encabezado de solicitud.</summary>
      <returns>El tiempo permitido para <see cref="T:System.Net.HttpListener" /> que analice el encabezado de solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.IdleConnection">
      <summary>Obtiene o establece el tiempo permitido para una conexión inactiva.</summary>
      <returns>El tiempo permitido para una conexión inactiva.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond">
      <summary>Obtiene o establece la velocidad mínima que se envía, en bytes por segundo, para la respuesta.</summary>
      <returns>La velocidad mínima que se envía, en bytes por segundo, para la respuesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.RequestQueue">
      <summary>Obtiene o establece el tiempo permitido para que la solicitud permanezca en la cola de solicitudes antes de que la detecte <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>El tiempo permitido para que la solicitud permanezca en la cola de solicitudes antes <see cref="T:System.Net.HttpListener" /> de que la seleccione.</returns>
    </member>
    <member name="T:System.Net.WebSockets.HttpListenerWebSocketContext">
      <summary>Proporciona acceso a la información recibida por la clase <see cref="T:System.Net.HttpListener" /> al aceptar las conexiones de WebSocket.</summary>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.CookieCollection">
      <summary>Obtiene las cookies recibidas por el objeto de <see cref="T:System.Net.HttpListener" /> en el protocolo de enlace de apertura de WebSocket.</summary>
      <returns>Las cookies recibidas por el objeto <see cref="T:System.Net.HttpListener" /> .</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.Headers">
      <summary>Obtiene los encabezados HTTP recibidos por el objeto de <see cref="T:System.Net.HttpListener" /> en el protocolo de enlace de apertura de WebSocket.</summary>
      <returns>Los encabezados HTTP recibidos por el objeto <see cref="T:System.Net.HttpListener" /> .</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsAuthenticated">
      <summary>Obtiene un valor que indica si se autentica el cliente de WebSocket.</summary>
      <returns>
        <see langword="true" />Si el cliente de WebSocket está autenticado; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsLocal">
      <summary>Obtiene un valor que indica si el cliente de WebSocket está conectado desde el equipo local.</summary>
      <returns>
        <see langword="true" />Si el cliente de WebSocket está conectado desde el equipo local; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsSecureConnection">
      <summary>Obtiene un valor que indica si la conexión de WebSocket garantiza el uso de Secure Sockets Layer (SSL).</summary>
      <returns>
        <see langword="true" />Si la conexión WebSocket está protegida mediante SSL; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.Origin">
      <summary>Obtiene el valor del encabezado HTTP Origin incluido en el protocolo de enlace de apertura WebSocket.</summary>
      <returns>Valor del encabezado HTTP Origin.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.RequestUri">
      <summary>Obtiene la URI solicitada por el cliente WebSocket.</summary>
      <returns>Dirección URI solicitada por el cliente WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketKey">
      <summary>Obtiene el valor del encabezado HTTP SecWebSocketKey incluido en el protocolo de enlace de apertura WebSocket.</summary>
      <returns>El valor del encabezado HTTP SecWebSocketKey.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketProtocols">
      <summary>Obtiene la lista de protocolos seguros de WebSocket incluidos en el protocolo de enlace de apertura de WebSocket.</summary>
      <returns>La lista de protocolos seguros de WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketVersion">
      <summary>Obtiene la lista de subprotocolos solicitados por el cliente WebSocket.</summary>
      <returns>Lista de subprotocolos solicitados por el cliente WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.User">
      <summary>Obtiene un objeto utilizado para obtener la identidad, la información de autenticación y los roles de seguridad para el cliente WebSocket.</summary>
      <returns>La identidad, la información de autenticación y los roles de seguridad para el cliente WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.WebSocket">
      <summary>Obtiene la <see cref="T:System.Net.WebSockets.WebSocket" /> instancia usada para enviar y recibir datos mediante la conexión <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <returns>Instancia de que se usa para enviar y recibir datos <see cref="T:System.Net.WebSockets.WebSocket" /> a través de la conexión. <see cref="T:System.Net.WebSockets.WebSocket" /></returns>
    </member>
  </members>
</doc>