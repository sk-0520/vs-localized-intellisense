<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XDocument</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary vsli:raw="Contains the LINQ to XML extension methods.">Contiene métodos de extensión de LINQ to XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the ancestors of every node in the source collection.">Devuelve una colección de elementos que contiene los antecesores de todos los nodos de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene la colección de origen.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los antecesores de todos los nodos de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección de elementos filtrada que contiene los antecesores de todos los nodos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene la colección de origen.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los antecesores de todos los nodos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.">Devuelve una colección de elementos que contiene todos los elementos y sus antecesores de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene todos los elementos y sus antecesores de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección de elementos filtrada que contiene todos los elementos y sus antecesores de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene todos los elementos y sus antecesores de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of the attributes of every element in the source collection.">Devuelve una colección de los atributos de todos los elementos de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of every element in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> que contiene los atributos de todos los elementos de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de los atributos de todos los elementos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> que contiene una colección filtrada de los atributos de todos los elementos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the descendant nodes of every document and element in the source collection.">Devuelve una colección de los nodos descendientes de todos los documentos y elementos de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XContainer" /> que contiene la colección de origen.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the descendant nodes of every document and element in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> de los nodos descendientes de todos los documentos y elementos de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.">Devuelve una colección de nodos que contiene todos los elementos de la colección de origen y los nodos descendientes de todos los elementos de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains every element in the source collection, and the descendant nodes of every element in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene todos los elementos de la colección de origen y los nodos descendientes de todos los elementos de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the descendant elements of every element and document in the source collection.">Devuelve una colección de elementos que contiene los elementos descendientes de todos los elementos y documentos de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XContainer" /> que contiene la colección de origen.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los elementos descendientes de todos los elementos y documentos de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de elementos que contiene los elementos descendientes de todos los elementos y documentos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XContainer" /> que contiene la colección de origen.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los elementos descendientes de todos los elementos y documentos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.">Devuelve una colección de elementos que contiene todos los elementos de la colección de origen y los elementos descendientes de todos los elementos de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendent elements of every element in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene todos los elementos de la colección de origen y los elementos descendientes de todos los elementos de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de elementos que contiene todos los elementos de la colección de origen y los descendientes de todos los elementos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene todos los elementos de la colección de origen y los descendientes de todos los elementos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child elements of every element and document in the source collection.">Devuelve una colección de los elementos secundarios de todos los elementos y documentos de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element or document in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos secundarios de todos los elementos o documentos de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de los elementos secundarios de todos los elementos y documentos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene la colección de origen.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos secundarios de todos los elementos y documentos de la colección de origen. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.">Devuelve una colección de nodos que contiene todos los nodos de la colección de origen, clasificados por documento.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene la colección de origen.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains all nodes in the source collection, sorted in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene todos los nodos de la colección de origen, clasificados por documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child nodes of every document and element in the source collection.">Devuelve una colección de los nodos secundarios de todos los documentos y elementos de la colección de origen.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene la colección de origen.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the child nodes of every document and element in the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> de los nodos secundarios de todos los documentos y elementos de la colección de origen.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary vsli:raw="Removes every attribute in the source collection from its parent element.">Quita todos los atributos de la colección de origen de su elemento primario.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> que contiene la colección de origen.</param>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Removes every node in the source collection from its parent node.">Quita todos los nodos de la colección de origen de su nodo primario.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene la colección de origen.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Tipo de los objetos de <paramref name="source" />, restringido a <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary vsli:raw="Specifies load options when parsing XML.">Especifica opciones de carga al analizar XML.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary vsli:raw="Does not preserve insignificant white space or load base URI and line information.">No conserva espacio en blanco no significativo ni carga información de URI base y de línea.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary vsli:raw="Preserves insignificant white space while parsing.">Conserva espacio en blanco no significativo durante el análisis.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary vsli:raw="Requests the base URI information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, and makes it available via the &lt;see cref=&quot;P:System.Xml.Linq.XObject.BaseUri&quot; /&gt; property.">Solicita la información de URI base del <see cref="T:System.Xml.XmlReader" /> y la pone disponible a través de la propiedad <see cref="P:System.Xml.Linq.XObject.BaseUri" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary vsli:raw="Requests the line information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and makes it available via properties on &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Solicita la información de línea del <see cref="T:System.Xml.XmlReader" /> y la pone disponible a través de propiedades en <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary vsli:raw="Specifies whether to omit duplicate namespaces when loading an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Especifica si se van a omitir los espacios de nombres duplicados al cargar <see cref="T:System.Xml.Linq.XDocument" /> con <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary vsli:raw="No reader options specified.">No se especificó ninguna opción para el lector.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Omit duplicate namespaces when loading the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Los espacios de nombres duplicados se omiten al cargar <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary vsli:raw="Specifies serialization options.">Especifica las opciones de serialización.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary vsli:raw="Preserve all insignificant white space while serializing.">Conserva todo el espacio en blanco insignificante mientras se serializa.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary vsli:raw="Format (indent) the XML while serializing.">Da formato (aplica sangría) al XML mientras se serializa.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Remove the duplicate namespace declarations while serializing.">Quita las declaraciones de espacio de nombres duplicadas al serializar.</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary vsli:raw="Represents an XML attribute.">Representa un atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XAttribute" /> desde otro objeto <see cref="T:System.Xml.Linq.XAttribute" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to copy from.">Objeto <see cref="T:System.Xml.Linq.XAttribute" /> desde el que se va a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="other" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from the specified name and value.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XAttribute" /> a partir del nombre y el valor especificados.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the attribute.">
        <see cref="T:System.Xml.Linq.XName" /> del atributo.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the attribute.">
        <see cref="T:System.Object" /> que contiene el valor del atributo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="name" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary vsli:raw="Gets an empty collection of attributes.">Obtiene una colección de atributos vacía.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing an empty collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> que contiene una colección vacía.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary vsli:raw="Determines if this attribute is a namespace declaration.">Determina si este atributo es una declaración de espacio de nombres.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute is a namespace declaration; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este atributo es una declaración de espacio de nombres; de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary vsli:raw="Gets the expanded name of this attribute.">Obtiene el nombre expandido de este atributo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; containing the name of this attribute.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre de este atributo.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary vsli:raw="Gets the next attribute of the parent element.">Obtiene el atributo siguiente del elemento primario.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the next attribute of the parent element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que contiene el atributo siguiente del elemento primario.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtiene el tipo de nodo de este nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;.">Tipo de nodo. Para los objetos <see cref="T:System.Xml.Linq.XAttribute" />, este valor es <see cref="F:System.Xml.XmlNodeType.Attribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Boolean" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Boolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Boolean" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Boolean" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.DateTime" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.DateTime" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.DateTime" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.DateTimeOffset" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.DateTimeOffset" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Decimal" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Decimal" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Decimal" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Double" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Double" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Double" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Guid" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Guid" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Guid" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Int32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Int32" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Int32" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Int64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Int64" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Int64" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Boolean" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.DateTime" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.DateTimeOffset" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Decimal" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Double" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Guid" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Int64" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Single" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.TimeSpan" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.UInt32" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XAttribute" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.UInt64" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Single" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.Single" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Single" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.Single" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.String" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.String" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.TimeSpan" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.UInt32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.UInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.UInt32" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.UInt32" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.UInt64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se va a convertir en <see cref="T:System.UInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.UInt64" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">El atributo no contiene un valor <see cref="T:System.UInt64" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary vsli:raw="Gets the previous attribute of the parent element.">Obtiene el atributo anterior del elemento primario.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the previous attribute of the parent element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que contiene el atributo anterior del elemento primario.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary vsli:raw="Removes this attribute from its parent element.">Quita este atributo de su elemento primario.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent element is &lt;see langword=&quot;null&quot; /&gt;.">El elemento primario es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this attribute.">Establece el valor de este atributo.</summary>
      <param name="value" vsli:raw="The value to assign to this attribute.">El valor que se va a asignar a este atributo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">El parámetro <paramref name="value" /> es un <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to a string representation.">Convierte el objeto <see cref="T:System.Xml.Linq.XAttribute" /> actual en una representación de cadena.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML text representation of an attribute and its value.">
        <see cref="T:System.String" /> que contiene la representación de texto XML de un atributo y su valor.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary vsli:raw="Gets or sets the value of this attribute.">Obtiene o establece el valor de este atributo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the value of this attribute.">
        <see cref="T:System.String" /> que contiene el valor de este atributo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="When setting, the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Cuando se establece, el parámetro <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary vsli:raw="Represents a text node that contains CDATA.">Representa un nodo de texto que contiene CDATA.</summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XCData" />.</summary>
      <param name="value" vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node.">Una cadena que contiene el valor del nodo <see cref="T:System.Xml.Linq.XCData" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XCData" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node to copy from.">El nodo <see cref="T:System.Xml.Linq.XCData" /> del que se va a copiar.</param>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtiene el tipo de nodo de este nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;.">Tipo de nodo. Para los objetos <see cref="T:System.Xml.Linq.XCData" />, este valor es <see cref="F:System.Xml.XmlNodeType.CDATA" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this CDATA object to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe este objeto CDATA en un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Objeto <see cref="T:System.Xml.XmlWriter" /> en el que escribirá este método.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary vsli:raw="Represents an XML comment.">Representa un comentario XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class with the specified string content.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XComment" /> con el contenido de cadena especificado.</summary>
      <param name="value" vsli:raw="A string that contains the contents of the new &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; object.">Una cadena que posee el contenido del nuevo objeto <see cref="T:System.Xml.Linq.XComment" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class from an existing comment node.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XComment" /> a partir de un nodo de comentario existente.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; node to copy from.">El nodo <see cref="T:System.Xml.Linq.XComment" /> del que se va a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="other" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtiene el tipo de nodo de este nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Comment&quot; /&gt;.">Tipo de nodo. Para los objetos <see cref="T:System.Xml.Linq.XComment" />, este valor es <see cref="F:System.Xml.XmlNodeType.Comment" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary vsli:raw="Gets or sets the string value of this comment.">Obtiene o establece el valor de cadena de este comentario.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this comment.">
        <see cref="T:System.String" /> que contiene el valor de cadena de este comentario.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this comment to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el comentario en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Objeto <see cref="T:System.Xml.XmlWriter" /> en el que escribirá este método.</param>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary vsli:raw="Represents a node that can contain other nodes.">Representa un nodo que puede contener otros nodos.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Agrega el contenido especificado como elementos secundarios de este <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">Objeto de contenido que incluye el contenido simple o una colección de objetos de contenido que se van a agregar.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Agrega el contenido especificado como elementos secundarios de este <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Lista de parámetros de objetos de contenido.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">Agrega el contenido especificado como el primer elemento secundario de este documento o elemento.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">Objeto de contenido que incluye el contenido simple o una colección de objetos de contenido que se van a agregar.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">Agrega el contenido especificado como el primer elemento secundario de este documento o elemento.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Lista de parámetros de objetos de contenido.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">El valor del elemento primario es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that can be used to add nodes to the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Crea un objeto <see cref="T:System.Xml.XmlWriter" /> que se puede utilizar para agregar los nodos a <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is ready to have content written to it.">Objeto <see cref="T:System.Xml.XmlWriter" /> que está preparado para recibir contenido.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary vsli:raw="Returns a collection of the descendant nodes for this document or element, in document order.">Devuelve una colección de los nodos descendientes de este documento o elemento, clasificados por documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the descendant nodes of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene los nodos descendientes de <see cref="T:System.Xml.Linq.XContainer" />, clasificados por documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary vsli:raw="Returns a collection of the descendant elements for this document or element, in document order.">Devuelve una colección de los elementos descendientes de este documento o elemento, clasificados por documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Una interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los elementos descendientes de <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the descendant elements for this document or element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de los elementos descendientes de este documento o elemento, clasificados por documento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that match the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los elementos descendientes de <see cref="T:System.Xml.Linq.XContainer" /> que coinciden con el <see cref="T:System.Xml.Linq.XName" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary vsli:raw="Gets the first (in document order) child element with the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Obtiene el primer elemento secundario (clasificado por documento) con el <see cref="T:System.Xml.Linq.XName" /> especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that matches the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Linq.XElement" /> que coincide con el <see cref="T:System.Xml.Linq.XName" /> especificado, o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary vsli:raw="Returns a collection of the child elements of this element or document, in document order.">Devuelve una colección de los elementos secundarios de este elemento o documento, clasificados por documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the child elements of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los elementos secundarios de <see cref="T:System.Xml.Linq.XContainer" />, clasificados por documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of this element or document, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de elementos secundarios de este documento o elemento, clasificados por documento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the children of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los elementos secundarios de <see cref="T:System.Xml.Linq.XContainer" /> que tienen un <see cref="T:System.Xml.Linq.XName" /> coincidente, clasificados por documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary vsli:raw="Gets the first child node of this node.">Obtiene el primer nodo secundario de este nodo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the first child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> que contiene el primer nodo secundario del <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary vsli:raw="Gets the last child node of this node.">Obtiene el último nodo secundario de este nodo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the last child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> que contiene el último nodo secundario del objeto <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary vsli:raw="Returns a collection of the child nodes of this element or document, in document order.">Devuelve una colección de los nodos secundarios de este elemento o documento, clasificados por documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que incluye el contenido de <see cref="T:System.Xml.Linq.XContainer" />, clasificado por documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary vsli:raw="Removes the child nodes from this document or element.">Quita los nodos secundarios de este documento o elemento.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">Reemplaza los nodos secundarios de este documento o elemento por el contenido especificado.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects that replace the children nodes.">Objeto de contenido que incluye contenido simple o una colección de objetos de contenido que reemplazan los nodos secundarios.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">Reemplaza los nodos secundarios de este documento o elemento por el contenido especificado.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Lista de parámetros de objetos de contenido.</param>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary vsli:raw="Represents an XML declaration.">Representa una declaración XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class with the specified version, encoding, and standalone status.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XDeclaration" /> con la versión, la codificación y el estado independiente especificados.</summary>
      <param name="version" vsli:raw="The version of the XML, usually &quot;1.0&quot;.">La versión del XML, normalmente "1.0".</param>
      <param name="encoding" vsli:raw="The encoding for the XML document.">La codificación del documento XML.</param>
      <param name="standalone" vsli:raw="A string containing &quot;yes&quot; or &quot;no&quot; that specifies whether the XML is standalone or requires external entities to be resolved.">Cadena que contiene "yes" o "no" que especifica si el XML es independiente o requiere que se resuelvan las entidades externas.</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XDeclaration" /> desde otro objeto <see cref="T:System.Xml.Linq.XDeclaration" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; used to initialize this &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">Objeto <see cref="T:System.Xml.Linq.XDeclaration" /> utilizado para inicializar el objeto <see cref="T:System.Xml.Linq.XDeclaration" />.</param>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding for this document.">Obtiene o establece la codificación de este documento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the code page name for this document.">Valor de tipo <see cref="T:System.String" /> que contiene el nombre de la página de códigos de este documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the standalone property for this document.">Obtiene o establece la propiedad standalone de este documento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the standalone property for this document.">
        <see cref="T:System.String" /> que contiene la propiedad standalone de este documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary vsli:raw="Provides the declaration as a formatted string.">Proporciona la declaración como una cadena con formato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the formatted XML string.">
        <see cref="T:System.String" /> que contiene la cadena XML con formato.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary vsli:raw="Gets or sets the version property for this document.">Obtiene o establece la propiedad version de este documento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the version property for this document.">
        <see cref="T:System.String" /> que contiene la propiedad version de este documento.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary vsli:raw="Represents an XML document. For the components and usage of an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object, see XDocument Class Overview.">Representa un documento XML. Para ver los componentes y el uso de un objeto <see cref="T:System.Xml.Linq.XDocument" />, consulte Información general acerca de la clase XDocument.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified content.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XDocument" /> con el contenido especificado.</summary>
      <param name="content" vsli:raw="A parameter list of content objects to add to this document.">Lista de parámetros de objetos de contenido que se van a agregar a este documento.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; and content.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XDocument" /> con la clase <see cref="T:System.Xml.Linq.XDeclaration" /> y el contenido especificados.</summary>
      <param name="declaration" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; for the document.">
        <see cref="T:System.Xml.Linq.XDeclaration" /> del documento.</param>
      <param name="content" vsli:raw="The content of the document.">El contenido del documento.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XDocument" /> a partir de un objeto <see cref="T:System.Xml.Linq.XDocument" /> ya existente.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that will be copied.">El objeto <see cref="T:System.Xml.Linq.XDocument" /> que se copiará.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary vsli:raw="Gets or sets the XML declaration for this document.">Obtiene o establece la declaración XML de este documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; that contains the XML declaration for this document.">Objeto <see cref="T:System.Xml.Linq.XDeclaration" /> que contiene la declaración XML de este documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary vsli:raw="Gets the Document Type Definition (DTD) for this document.">Obtiene la definición de tipo de documento (DTD) de este documento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; that contains the DTD for this document.">
        <see cref="T:System.Xml.Linq.XDocumentType" /> que contiene la DTD de este documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream.">Crea una nueva instancia de <see cref="T:System.Xml.Linq.XDocument" /> usando la secuencia especificada.</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">Flujo que contiene los datos XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">Objeto <see cref="T:System.Xml.Linq.XDocument" /> que lee los datos contenidos en la secuencia.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">Crea una nueva instancia de <see cref="T:System.Xml.Linq.XDocument" /> usando la secuencia especificada y, de forma opcional, conservando el espacio en blanco, estableciendo el identificador URI base y conservando la información de línea.</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">Secuencia que contiene los datos XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica si se va a cargar el URI base y la información de la línea.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">Objeto <see cref="T:System.Xml.Linq.XDocument" /> que lee los datos contenidos en la secuencia.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Crea un nuevo <see cref="T:System.Xml.Linq.XDocument" /> a partir de un <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Objeto <see cref="T:System.IO.TextReader" /> que incluye el contenido del <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> con el contenido del <see cref="T:System.IO.TextReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">Crea un nuevo <see cref="T:System.Xml.Linq.XDocument" /> a partir de un <see cref="T:System.IO.TextReader" /> y, de manera opcional, conserva el espacio en blanco, establece el URI base y retiene la información de línea.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Objeto <see cref="T:System.IO.TextReader" /> que incluye el contenido del <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica el comportamiento de los espacios en blanco y si se carga la información del URI base y de la línea base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> que contiene el XML que se leyó desde el objeto <see cref="T:System.IO.TextReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file.">Crea un nuevo <see cref="T:System.Xml.Linq.XDocument" /> a partir de un archivo.</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Cadena URI que hace referencia al archivo que se va a cargar en un nuevo <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XDocument" /> con el contenido del archivo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">Crea un nuevo <see cref="T:System.Xml.Linq.XDocument" /> a partir de un archivo y, de manera opcional, conserva el espacio en blanco, establece el URI base y retiene la información de línea.</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Cadena URI que hace referencia al archivo que se va a cargar en un nuevo <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica el comportamiento de los espacios en blanco y si se carga la información del URI base y de la línea base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XDocument" /> con el contenido del archivo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crea un nuevo <see cref="T:System.Xml.Linq.XDocument" /> a partir de un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlReader" /> que incluye el contenido del <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> con el contenido del <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally setting the base URI, and retaining line information.">Carga un <see cref="T:System.Xml.Linq.XDocument" /> desde un <see cref="T:System.Xml.XmlReader" /> y, de manera opcional, se establece el URI base y se retiene la información de línea.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> que se leerá para obtener el contenido del <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica si se va a cargar el URI base y la información de la línea.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> que contiene el XML que se leyó desde el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="stream" vsli:raw="A stream containing the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;." />
      <param name="options" vsli:raw="A set of load options." />
      <param name="cancellationToken" vsli:raw="A cancellation token." />
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="textReader" vsli:raw="A reader that contains the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;." />
      <param name="options" vsli:raw="A set of load options." />
      <param name="cancellationToken" vsli:raw="A cancellation token." />
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="reader" vsli:raw="A reader containing the XML to be read into the new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;." />
      <param name="options" vsli:raw="A set of load options." />
      <param name="cancellationToken" vsli:raw="A cancellation token." />
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtiene el tipo de nodo de este nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt;.">Tipo de nodo. Para los objetos <see cref="T:System.Xml.Linq.XDocument" />, este valor es <see cref="F:System.Xml.XmlNodeType.Document" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string.">Crea un nuevo <see cref="T:System.Xml.Linq.XDocument" /> a partir de una cadena.</summary>
      <param name="text" vsli:raw="A string that contains XML.">Cadena que contiene XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">
        <see cref="T:System.Xml.Linq.XDocument" /> rellenado a partir de la cadena que contiene XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string, optionally preserving white space, setting the base URI, and retaining line information.">Crea un objeto <see cref="T:System.Xml.Linq.XDocument" /> nuevo a partir de una cadena, opcionalmente se conserva el espacio en blanco, se establece el URI base y la información de línea.</summary>
      <param name="text" vsli:raw="A string that contains XML.">Cadena que contiene XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica el comportamiento de los espacios en blanco y si se carga la información del URI base y de la línea base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">
        <see cref="T:System.Xml.Linq.XDocument" /> rellenado a partir de la cadena que contiene XML.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary vsli:raw="Gets the root element of the XML Tree for this document.">Obtiene el elemento raíz del árbol XML de este documento.</summary>
      <returns vsli:raw="The root &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the XML tree.">
        <see cref="T:System.Xml.Linq.XElement" /> raíz del árbol XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Genera este <see cref="T:System.Xml.Linq.XDocument" /> en el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Secuencia que se envía a este <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Genera este <see cref="T:System.Xml.Linq.XDocument" /> en el objeto <see cref="T:System.IO.Stream" /> especificado, especificando opcionalmente el comportamiento de formato.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Secuencia que se envía a este <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serializa el <see cref="T:System.Xml.Linq.XDocument" /> en un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" /> en el que se escribirá un <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Serializa el <see cref="T:System.Xml.Linq.XDocument" /> en un <see cref="T:System.IO.TextWriter" />, opcionalmente se deshabilita el formato.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">
        <see cref="T:System.IO.TextWriter" /> al que se envía el XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, overwriting an existing file, if it exists.">Serializa este <see cref="T:System.Xml.Linq.XDocument" /> en un archivo, sobrescribiendo un archivo existente, si existe.</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">Cadena que contiene el nombre del archivo.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, optionally disabling formatting.">Serializa <see cref="T:System.Xml.Linq.XDocument" /> en un archivo, opcionalmente se deshabilita el formato.</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">Cadena que contiene el nombre del archivo.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializa el <see cref="T:System.Xml.Linq.XDocument" /> en un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se escribirá un <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <param name="stream" vsli:raw="The stream to write the XML to." />
      <param name="options" vsli:raw="A set of load options." />
      <param name="cancellationToken" vsli:raw="A cancellation token." />
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <param name="textWriter" vsli:raw="The text writer to output the XML to." />
      <param name="options" vsli:raw="A set of load options." />
      <param name="cancellationToken" vsli:raw="A cancellation token." />
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to output the XML to." />
      <param name="cancellationToken" vsli:raw="A cancellation token." />
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this document to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el documento en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Objeto <see cref="T:System.Xml.XmlWriter" /> en el que escribirá este método.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to output the content of this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;." />
      <param name="cancellationToken" vsli:raw="A cancellation token." />
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary vsli:raw="Represents an XML Document Type Definition (DTD).">Representa una definición de tipo del documento (DTD) XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class.">Inicializa una instancia de la clase <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.">
        <see cref="T:System.String" /> que contiene el nombre completo de la DTD, que es igual que el nombre completo del elemento raíz del documento XML.</param>
      <param name="publicId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier of an external public DTD.">
        <see cref="T:System.String" /> que contiene el identificador público de una DTD pública externa.</param>
      <param name="systemId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier of an external private DTD.">
        <see cref="T:System.String" /> que contiene el identificador de sistema de una DTD privada externa.</param>
      <param name="internalSubset" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for an internal DTD.">
        <see cref="T:System.String" /> que contiene el subconjunto interno de una DTD interna.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object.">Inicializa una instancia de la clase <see cref="T:System.Xml.Linq.XDocumentType" /> desde otro objeto <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object to copy from.">Objeto <see cref="T:System.Xml.Linq.XDocumentType" /> desde el que se va a copiar.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary vsli:raw="Gets or sets the internal subset for this Document Type Definition (DTD).">Obtiene o establece el subconjunto interno de esta definición de tipo de documento (DTD).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> que contiene el subconjunto interno de esta definición de tipo de documento (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary vsli:raw="Gets or sets the name for this Document Type Definition (DTD).">Obtiene o establece el nombre de esta definición de tipo de documento (DTD).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> que contiene el nombre de esta definición de tipo de documento (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtiene el tipo de nodo de este nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentType&quot; /&gt;.">Tipo de nodo. Para los objetos <see cref="T:System.Xml.Linq.XDocumentType" />, este valor es <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary vsli:raw="Gets or sets the public identifier for this Document Type Definition (DTD).">Obtiene o establece el identificador público de esta definición de tipo de documento (DTD).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> que contiene el identificador público de esta definición de tipo de documento (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary vsli:raw="Gets or sets the system identifier for this Document Type Definition (DTD).">Obtiene o establece el identificador de sistema de esta definición de tipo de documento (DTD).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> que contiene el identificador de sistema de esta definición de tipo de documento (DTD).</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escriba este <see cref="T:System.Xml.Linq.XDocumentType" /> en un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Objeto <see cref="T:System.Xml.XmlWriter" /> en el que escribirá este método.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary vsli:raw="Represents an XML element.  See XElement Class Overview and the Remarks section on this page for usage information and examples.">Representa un elemento XML.  Consulte Información general acerca de la clase XElement y la sección Comentarios de esta página para obtener información de uso y ejemplos.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XElement" /> desde otro objeto <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object to copy from.">Objeto <see cref="T:System.Xml.Linq.XElement" /> desde el que se va a copiar.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XElement" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre del elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XElement" /> con el nombre y el contenido especificados.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre del elemento.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenido del elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XElement" /> con el nombre y el contenido especificados.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre del elemento.</param>
      <param name="content" vsli:raw="The initial content of the element.">Contenido inicial del elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from an &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XElement" /> a partir de un objeto <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; that contains unevaluated queries that will be iterated for the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XStreamingElement" /> que contiene consultas no evaluadas que se recorrerán en iteración para el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and the ancestors of this element.">Devuelve una colección de elementos que contienen este elemento y sus antecesores.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and the ancestors of this element.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos que contienen este elemento y los antecesores de este elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de los elementos que contienen este elemento y sus antecesores. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene este elemento y sus antecesores. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Devuelve el <see cref="T:System.Xml.Linq.XAttribute" /> de <see cref="T:System.Xml.Linq.XElement" /> que tiene el <see cref="T:System.Xml.Linq.XName" /> especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to get.">
        <see cref="T:System.Xml.Linq.XName" /> del <see cref="T:System.Xml.Linq.XAttribute" /> que se va a obtener.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no attribute with the specified name.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que tiene el <see cref="T:System.Xml.Linq.XName" /> especificado; <see langword="null" /> si no hay ningún atributo con el nombre especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary vsli:raw="Returns a collection of attributes of this element.">Devuelve una colección de los atributos de este elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of attributes of this element.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> de los atributos de este elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de atributos de este elemento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> que contiene los atributos de este elemento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary vsli:raw="Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.">Devuelve una colección de nodos que contienen este elemento y todos sus nodos descendientes, en el orden del documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contain this element, and all descendant nodes of this element, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> que contiene este elemento y todos sus nodos descendientes, en el orden del documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.">Devuelve la colección de los elementos que contienen este elemento y todos sus elementos descendientes, en el orden del documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and all descendant elements of this element, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos que contienen este elemento y todos sus elementos descendientes, en el orden del documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve la colección filtrada de los elementos que contienen este elemento y todos sus elementos descendientes, en el orden del documento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene este elemento y todos sus elementos descendientes, en el orden del documento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary vsli:raw="Gets an empty collection of elements.">Obtiene una colección de elementos vacía.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains an empty collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene una colección vacía.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary vsli:raw="Gets the first attribute of this element.">Obtiene el primer atributo de este elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the first attribute of this element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que contiene el primer atributo de este elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Xml.Linq.XNamespace" /> predeterminado de este <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the default namespace of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" /> que contiene el espacio de nombres predeterminado de <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Gets the namespace associated with a particular prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Obtiene el espacio de nombres asociado a un prefijo en particular para <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="prefix" vsli:raw="A string that contains the namespace prefix to look up.">Cadena que contiene el prefijo de espacio de nombres que se va a buscar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the namespace associated with the prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" /> para el espacio de nombres asociado al prefijo de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Gets the prefix associated with a namespace for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Obtiene el prefijo asociado a un espacio de nombres correspondiente a este <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to look up.">
        <see cref="T:System.Xml.Linq.XNamespace" /> que se va a buscar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">
        <see cref="T:System.String" /> que contiene el prefijo de espacio de nombres.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether this element has at least one attribute.">Obtiene un valor que indica si este elemento tiene al menos un atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one attribute; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este elemento tiene al menos un atributo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary vsli:raw="Gets a value indicating whether this element has at least one child element.">Obtiene un valor que indica si este elemento tiene al menos un elemento secundario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one child element; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este elemento tiene al menos un elemento secundario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether this element contains no content.">Obtiene un valor que indica si este elemento no incluye ningún contenido.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element contains no content; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este elemento no incluye ningún contenido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary vsli:raw="Gets the last attribute of this element.">Obtiene el último atributo de este elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the last attribute of this element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que contiene el último atributo de este elemento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream.">Crea una nueva instancia de <see cref="T:System.Xml.Linq.XElement" /> usando la secuencia especificada.</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">Flujo que contiene los datos XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that is contained in the stream.">Objeto <see cref="T:System.Xml.Linq.XElement" /> que se usa para leer los datos contenidos en la secuencia.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">Crea una nueva instancia de <see cref="T:System.Xml.Linq.XElement" /> usando la secuencia especificada y, de forma opcional, conservando el espacio en blanco, estableciendo el identificador URI base y conservando la información de línea.</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">Secuencia que contiene los datos XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; object that specifies whether to load base URI and line information.">Objeto <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica si se va a cargar el identificador URI base y la información de línea.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that the stream contains.">Objeto <see cref="T:System.Xml.Linq.XElement" /> que se usa para leer los datos que contiene la secuencia.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Carga un <see cref="T:System.Xml.Linq.XElement" /> desde <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.IO.TextReader" /> que se leerá para obtener el contenido del <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que contiene el XML que se leyó desde el objeto <see cref="T:System.IO.TextReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space and retaining line information.">Carga un <see cref="T:System.Xml.Linq.XElement" /> desde un objeto <see cref="T:System.IO.TextReader" /> y, de manera opcional, conserva los espacios en blanco y retiene la información de línea.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.IO.TextReader" /> que se leerá para obtener el contenido del <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica el comportamiento de los espacios en blanco y si se carga la información del URI base y de la línea base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que contiene el XML que se leyó desde el objeto <see cref="T:System.IO.TextReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file.">Carga un <see cref="T:System.Xml.Linq.XElement" /> desde un archivo.</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Cadena URI que hace referencia al archivo que se va a cargar en un nuevo <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XElement" /> con el contenido del archivo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">Carga un <see cref="T:System.Xml.Linq.XElement" /> desde un archivo y, de manera opcional, conserva los espacios en blanco, establece el URI base y retiene la información de línea.</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Cadena URI que hace referencia al archivo que se va a cargar en un <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica el comportamiento de los espacios en blanco y si se carga la información del URI base y de la línea base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XElement" /> con el contenido del archivo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Carga un <see cref="T:System.Xml.Linq.XElement" /> desde <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> que se leerá para obtener el contenido del <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que contiene el XML que se leyó desde el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">Carga un <see cref="T:System.Xml.Linq.XElement" /> desde <see cref="T:System.Xml.XmlReader" /> y, de manera opcional, conserva los espacios en blanco, establece el URI base y retiene la información de línea.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> que se leerá para obtener el contenido del <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica el comportamiento de los espacios en blanco y si se carga la información del URI base y de la línea base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que contiene el XML que se leyó desde el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="stream" vsli:raw="The stream containing the raw XML to read." />
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="textReader" vsli:raw="A reader containing the raw XML to read." />
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <param name="reader" vsli:raw="A reader containing the XML to be read." />
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary vsli:raw="Gets or sets the name of this element.">Obtiene o establece el nombre de este elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this element.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre de este elemento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtiene el tipo de nodo de este nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.">Tipo de nodo. Para los objetos <see cref="T:System.Xml.Linq.XElement" />, este valor es <see cref="F:System.Xml.XmlNodeType.Element" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Boolean" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Boolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Boolean" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.Boolean" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.DateTime" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.DateTime" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.DateTime" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.DateTimeOffset" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.DateTimeOffset" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Decimal" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Decimal" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.Decimal" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Double" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Double" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.Double" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Guid" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Guid" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.Guid" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Int32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Int32" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.Int32" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Int64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Int64" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.Int64" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.Boolean" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.DateTime" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to an &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.DateTimeOffset" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.Decimal" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.Double" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.Guid" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.Int32" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.Int64" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.Single" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.TimeSpan" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.UInt32" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">El valor de <see cref="T:System.Xml.Linq.XElement" /> se convierte en un objeto <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" /> que incluye el contenido de este <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">El elemento no es <see langword="null" /> y no contiene un valor <see cref="T:System.UInt64" /> válido.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Single" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.Single" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Single" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.Single" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.String" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.String" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.TimeSpan" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.UInt32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.UInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.UInt32" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.UInt32" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Convierte el valor de <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.UInt64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> que se va a convertir en <see cref="T:System.UInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.UInt64" /> con el contenido de este objeto <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">El elemento no contiene un valor <see cref="T:System.UInt64" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="element" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML.">Cargue <see cref="T:System.Xml.Linq.XElement" /> a partir de una cadena que contiene el XML.</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">Objeto <see cref="T:System.String" /> que contiene código XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">
        <see cref="T:System.Xml.Linq.XElement" /> rellenado a partir de la cadena que contiene XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML, optionally preserving white space and retaining line information.">Carga un objeto <see cref="T:System.Xml.Linq.XElement" /> desde una cadena que contiene XML y, opcionalmente, conserva los espacios en blanco y la información de línea.</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">Objeto <see cref="T:System.String" /> que contiene código XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> que especifica el comportamiento de los espacios en blanco y si se carga la información del URI base y de la línea base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">
        <see cref="T:System.Xml.Linq.XElement" /> rellenado a partir de la cadena que contiene XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary vsli:raw="Removes nodes and attributes from this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Quita nodos y atributos de este <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary vsli:raw="Removes the attributes of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Quita los atributos de este <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">Reemplaza los nodos secundarios y los atributos de este elemento por el contenido especificado.</summary>
      <param name="content" vsli:raw="The content that will replace the child nodes and attributes of this element.">Contenido que reemplazará los nodos secundarios y atributos de este elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">Reemplaza los nodos secundarios y los atributos de este elemento por el contenido especificado.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Lista de parámetros de objetos de contenido.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">Reemplaza los atributos de este elemento por el contenido especificado.</summary>
      <param name="content" vsli:raw="The content that will replace the attributes of this element.">Contenido que reemplazará los atributos de este elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">Reemplaza los atributos de este elemento por el contenido especificado.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Lista de parámetros de objetos de contenido.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Genera este <see cref="T:System.Xml.Linq.XElement" /> en el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">Secuencia que se envía a este <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Genera este <see cref="T:System.Xml.Linq.XElement" /> en el objeto <see cref="T:System.IO.Stream" /> especificado, especificando opcionalmente el comportamiento de formato.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">Secuencia que se envía a este <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Objeto <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serialice este elemento en un objeto <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" /> en el que se escribirá un <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Serialice este elemento en un <see cref="T:System.IO.TextWriter" /> y, de manera opcional, deshabilite el formato.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">
        <see cref="T:System.IO.TextWriter" /> al que se envía el XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String)">
      <summary vsli:raw="Serialize this element to a file.">Serialice este elemento en un archivo.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">Objeto <see cref="T:System.String" /> que contiene el nombre del archivo.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a file, optionally disabling formatting.">Serialice este elemento en un archivo y, de manera opcional, deshabilite el formato.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">Objeto <see cref="T:System.String" /> que contiene el nombre del archivo.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serialice este elemento en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se escribirá un <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <param name="stream" vsli:raw="The stream to output the XML to." />
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <param name="textWriter" vsli:raw="The writer to output the XML to." />
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to output the XML to." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of an attribute, adds an attribute, or removes an attribute.">Establece el valor de un atributo, agrega o quita un atributo.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the attribute to change.">
        <see cref="T:System.Xml.Linq.XName" /> con el nombre del atributo que se ha de cambiar.</param>
      <param name="value" vsli:raw="The value to assign to the attribute. The attribute is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XAttribute.Value&quot; /&gt; property of the attribute.">Valor que se va a asignar al atributo. Se quita el atributo si el valor es <see langword="null" />. De lo contrario, el valor se convierte en su representación de cadena y se asigna a la propiedad <see cref="P:System.Xml.Linq.XAttribute.Value" /> del atributo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> es una instancia de <see cref="T:System.Xml.Linq.XObject" /></exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of a child element, adds a child element, or removes a child element.">Establece el valor de un elemento secundario, agrega un elemento secundario o lo quita.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the child element to change.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre del elemento secundario que se va a cambiar.</param>
      <param name="value" vsli:raw="The value to assign to the child element. The child element is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property of the child element.">El valor que se va a asignar al elemento secundario. El elemento secundario se quita si el valor es <see langword="null" />. De lo contrario, el valor se convierte en su representación de cadena y se asigna a la propiedad <see cref="P:System.Xml.Linq.XElement.Value" /> del elemento secundario.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <paramref name="value" /> es una instancia de <see cref="T:System.Xml.Linq.XObject" /></exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this element.">Establece el valor de este elemento.</summary>
      <param name="value" vsli:raw="The value to assign to this element. The value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property.">Valor que se va a asignar a este elemento. Se convierte el valor en su representación de cadena y se asigna a la propiedad <see cref="P:System.Xml.Linq.XElement.Value" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">El parámetro <paramref name="value" /> es un <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="Gets an XML schema definition that describes the XML representation of this object.">Obtiene una definición de esquema XML que describe la representación XML de este objeto.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto producido por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">Genera un objeto a partir de su representación XML.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which the object is deserialized.">
        <see cref="T:System.Xml.XmlReader" /> desde donde se deserializa el objeto.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">Convierte un objeto en su representación XML.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which this object is serialized.">
        <see cref="T:System.Xml.XmlWriter" /> en que se serializa el objeto.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary vsli:raw="Gets or sets the concatenated text contents of this element.">Obtiene o establece el contenido de texto concatenado de este elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.">
        <see cref="T:System.String" /> con todo el contenido de texto de este elemento. Si hay varios nodos de texto, se concatenarán.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el elemento en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Objeto <see cref="T:System.Xml.XmlWriter" /> en el que escribirá este método.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary vsli:raw="Represents a name of an XML element or attribute.">Representa un nombre de un elemento o atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Determina si el objeto <see cref="T:System.Xml.Linq.XName" /> especificado es igual a este objeto <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar con el <see cref="T:System.Xml.Linq.XName" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Xml.Linq.XName" /> especificado es igual al objeto <see cref="T:System.Xml.Linq.XName" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from an expanded name.">Recibe un objeto <see cref="T:System.Xml.Linq.XName" /> de un nombre expandido.</summary>
      <param name="expandedName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <see cref="T:System.String" /> que contiene un nombre XML expandido en el formato <c>{namespace}localname</c>.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">Objeto <see cref="T:System.Xml.Linq.XName" /> construido a partir del nombre expandido.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from a local name and a namespace.">Recibe un objeto <see cref="T:System.Xml.Linq.XName" /> de un nombre local y un espacio de nombres.</summary>
      <param name="localName" vsli:raw="A local (unqualified) name.">Nombre local (incompleto).</param>
      <param name="namespaceName" vsli:raw="An XML namespace.">Espacio de nombres XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from the specified local name and namespace.">Objeto <see cref="T:System.Xml.Linq.XName" /> creado a partir del nombre local y el espacio de nombres especificados.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Obtiene el código hash de <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Valor de tipo <see cref="T:System.Int32" /> que contiene el código hash para el <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary vsli:raw="Gets the local (unqualified) part of the name.">Obtiene la parte local (incompleta) del nombre.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local (unqualified) part of the name.">
        <see cref="T:System.String" /> que contiene la parte local (incompleta) del nombre.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary vsli:raw="Gets the namespace part of the fully qualified name.">Obtiene la parte de espacio de nombres del nombre completo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace part of the name.">
        <see cref="T:System.Xml.Linq.XNamespace" /> que contiene la parte de espacio de nombres del nombre.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary vsli:raw="Returns the URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Devuelve el URI del <see cref="T:System.Xml.Linq.XNamespace" /> para este <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">El URI del <see cref="T:System.Xml.Linq.XNamespace" /> para este <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are equal.">Devuelve un valor que indica si dos instancias de <see cref="T:System.Xml.Linq.XName" /> son iguales.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary vsli:raw="Converts a string formatted as an expanded XML name (that is,&lt;c&gt;{namespace}localname&lt;/c&gt;) to an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object.">Convierte una cadena con formato como un nombre XML expandido (es decir, <c>{namespace}localname</c>) en un objeto <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="expandedName" vsli:raw="A string that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">Cadena que contiene un nombre XML expandido en el formato <c>{namespace}localname</c>.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">Objeto <see cref="T:System.Xml.Linq.XName" /> construido a partir del nombre expandido.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are not equal.">Devuelve un valor que indica si dos instancias de <see cref="T:System.Xml.Linq.XName" /> no son iguales.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Indica si el <see cref="T:System.Xml.Linq.XName" /> actual es igual al <see cref="T:System.Xml.Linq.XName" /> especificado.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare with this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XName" /> que se compara con este <see cref="T:System.Xml.Linq.XName" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este objeto <see cref="T:System.Xml.Linq.XName" /> es igual al objeto <see cref="T:System.Xml.Linq.XName" /> especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize the target object.">Rellena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary vsli:raw="Returns the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">Devuelve el nombre XML expandido en el formato <c>{namespace}localname</c>.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <see cref="T:System.String" /> que contiene el nombre XML expandido en el formato <c>{namespace}localname</c>.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary vsli:raw="Represents an XML namespace. This class cannot be inherited.">Representa un espacio de nombres XML. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Determina si el objeto <see cref="T:System.Xml.Linq.XNamespace" /> especificado es igual al objeto <see cref="T:System.Xml.Linq.XNamespace" /> actual.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" /> que se va a comparar con el <see cref="T:System.Xml.Linq.XNamespace" /> actual.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Valor <see cref="T:System.Boolean" /> que indica si el <see cref="T:System.Xml.Linq.XNamespace" /> especificado es igual al <see cref="T:System.Xml.Linq.XNamespace" /> actual.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the specified Uniform Resource Identifier (URI).">Obtiene un <see cref="T:System.Xml.Linq.XNamespace" /> para el identificador uniforme de recursos (URI) especificado.</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a namespace URI.">
        <see cref="T:System.String" /> que contiene un espacio de nombres URI.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; created from the specified URI.">
        <see cref="T:System.Xml.Linq.XNamespace" /> creado a partir del URI especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Obtiene el código hash de <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Valor de tipo <see cref="T:System.Int32" /> que contiene el código hash para el <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">Devuelve un objeto <see cref="T:System.Xml.Linq.XName" /> creado a partir de este <see cref="T:System.Xml.Linq.XNamespace" /> y el nombre local especificado.</summary>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a local name.">Valor de tipo <see cref="T:System.String" /> que contiene un nombre local.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">Objeto <see cref="T:System.Xml.Linq.XName" /> creado a partir de este <see cref="T:System.Xml.Linq.XNamespace" /> y el nombre local especificado.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) of this namespace.">Obtiene el identificador de recursos uniforme (URI) de este espacio de nombres.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the URI of the namespace.">
        <see cref="T:System.String" /> que contiene el URI del espacio de nombres.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to no namespace.">Obtiene el objeto <see cref="T:System.Xml.Linq.XNamespace" /> que no se corresponde con ningún espacio de nombres.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to no namespace.">
        <see cref="T:System.Xml.Linq.XNamespace" /> que no se corresponde con ningún espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary vsli:raw="Combines an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object with a local name to create an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Combina un objeto <see cref="T:System.Xml.Linq.XNamespace" /> con un nombre local para crear un <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace.">
        <see cref="T:System.Xml.Linq.XNamespace" /> que contiene el espacio de nombres.</param>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name.">Valor de tipo <see cref="T:System.String" /> que contiene el nombre local.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; constructed from the namespace and local name.">El nuevo <see cref="T:System.Xml.Linq.XName" /> construido a partir del espacio de nombres y el nombre local.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are equal.">Devuelve un valor que indica si dos instancias de <see cref="T:System.Xml.Linq.XNamespace" /> son iguales.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XNamespace" /> que se va a comparar.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XNamespace" /> que se va a comparar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal.">Valor <see cref="T:System.Boolean" /> que indica si <paramref name="left" /> y <paramref name="right" /> son iguales.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary vsli:raw="Converts a string containing a Uniform Resource Identifier (URI) to an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Convierte una cadena que contiene un identificador uniforme de recursos (URI) en un <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI.">
        <see cref="T:System.String" /> que contiene el URI de espacio de nombres.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; constructed from the URI string.">
        <see cref="T:System.Xml.Linq.XNamespace" /> construido a partir de la cadena URI.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are not equal.">Devuelve un valor que indica si dos instancias de <see cref="T:System.Xml.Linq.XNamespace" /> no son iguales.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XNamespace" /> que se va a comparar.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XNamespace" /> que se va a comparar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal.">Valor <see cref="T:System.Boolean" /> que indica si <paramref name="left" /> y <paramref name="right" /> no son iguales.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary vsli:raw="Returns the URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Devuelve el URI de este <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns vsli:raw="The URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">URI de este <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">Obtiene el objeto <see cref="T:System.Xml.Linq.XNamespace" /> que corresponde al URI XML (<c></c>).</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">Que corresponde al URI XML (<c></c>). <see cref="T:System.Xml.Linq.XNamespace" /></returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">Obtiene el objeto <see cref="T:System.Xml.Linq.XNamespace" /> que corresponde al URI xmlns (<c></c>).</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">Que corresponde al URI xmlns (<c></c>). <see cref="T:System.Xml.Linq.XNamespace" /></returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary vsli:raw="Represents the abstract concept of a node (element, comment, document type, processing instruction, or text node) in the XML tree.">Representa el concepto abstracto de un nodo (elemento, comentario, tipo de documento, instrucción de procesamiento o nodo de texto) del árbol XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately after this node.">Agrega el contenido especificado inmediatamente a continuación de este nodo.</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added after this node.">Objeto de contenido que incluye contenido simple o una colección de objetos de contenido que se van a agregar a continuación de este nodo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">El valor del elemento primario es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately after this node.">Agrega el contenido especificado inmediatamente a continuación de este nodo.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Lista de parámetros de objetos de contenido.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">El valor del elemento primario es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately before this node.">Agrega el contenido especificado inmediatamente antes de este nodo.</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added before this node.">Un objeto de contenido que incluye contenido simple o una colección de objetos de contenido que se van a agregar antes de este nodo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">El valor del elemento primario es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately before this node.">Agrega el contenido especificado inmediatamente antes de este nodo.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Lista de parámetros de objetos de contenido.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">El valor del elemento primario es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary vsli:raw="Returns a collection of the ancestor elements of this node.">Devuelve una colección de los elementos antecesores de este nodo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos antecesores de este nodo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de los elementos antecesores de este nodo. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.  &#xA;  &#xA; The nodes in the returned collection are in reverse document order.  &#xA;  &#xA; This method uses deferred execution.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos antecesores de este nodo. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.  
Los nodos de la colección devuelta están en el orden del documento inverso.  
Este método usa la ejecución diferida.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative XML document order.">Compara dos nodos para determinar el orden relativo de sus documentos XML.</summary>
      <param name="n1" vsli:raw="First &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primera <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <param name="n2" vsli:raw="Second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Segunda <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; containing 0 if the nodes are equal; -1 if &lt;paramref name=&quot;n1&quot; /&gt; is before &lt;paramref name=&quot;n2&quot; /&gt;; 1 if &lt;paramref name=&quot;n1&quot; /&gt; is after &lt;paramref name=&quot;n2&quot; /&gt;.">Valor de tipo <see langword="int" /> que contiene 0 si los nodos son iguales; -1 si <paramref name="n1" /> está antes de <paramref name="n2" />; 1 si <paramref name="n1" /> está después de <paramref name="n2" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">Los dos nodos no comparten un antecesor común.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this node.">Crea un objeto <see cref="T:System.Xml.XmlReader" /> para este nodo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that can be used to read this node and its descendants.">Objeto <see cref="T:System.Xml.XmlReader" /> que se puede usar para leer este nodo y sus descendientes.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; with the options specified by the &lt;paramref name=&quot;readerOptions&quot; /&gt; parameter.">Crea una clase <see cref="T:System.Xml.XmlReader" /> con las opciones especificadas por el parámetro <paramref name="readerOptions" />.</summary>
      <param name="readerOptions" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.ReaderOptions&quot; /&gt; object that specifies whether to omit duplicate namespaces.">Objeto <see cref="T:System.Xml.Linq.ReaderOptions" /> que especifica si se van a omitir los espacios de nombres duplicados.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes, including the values of all descendant nodes.">Compara los valores de dos nodos, incluidos los valores de todos los nodos descendientes.</summary>
      <param name="n1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <param name="n2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los nodos son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary vsli:raw="Gets a comparer that can compare the relative position of two nodes.">Obtiene un comparador que compara la posición relativa de dos nodos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; that can compare the relative position of two nodes.">Clase <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> que puede comparar la posición relativa de dos nodos.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling elements after this node, in document order.">Devuelve una colección de los elementos relacionados situados detrás de este nodo en el orden del documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos relacionados situados detrás de este nodo en el orden del documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de los elementos relacionados situados detrás de este nodo en el orden del documento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos relacionados situados detrás de este nodo en el orden del documento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling elements before this node, in document order.">Devuelve una colección de los elementos relacionados situados antes de este nodo en el orden del documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos relacionados situados antes de este nodo en el orden del documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Devuelve una colección filtrada de los elementos relacionados situados antes de este nodo en el orden del documento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> de los elementos relacionados situados antes de este nodo en el orden del documento. En la colección sólo se incluyen los elementos que tienen un objeto <see cref="T:System.Xml.Linq.XName" /> coincidente.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary vsli:raw="Gets a comparer that can compare two nodes for value equality.">Obtiene un comparador que comprueba si los valores de dos nodos son iguales.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; that can compare two nodes for value equality.">
        <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> que compara si los valores de dos nodos son iguales.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears after a specified node in terms of document order.">Determina si el nodo actual aparece después de un nodo especificado respecto al orden del documento.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">
        <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar respecto al orden del documento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears after the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este nodo aparece después del nodo especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears before a specified node in terms of document order.">Determina si el nodo actual aparece antes de un nodo especificado respecto al orden del documento.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">
        <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar respecto al orden del documento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears before the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este nodo aparece antes del nodo especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary vsli:raw="Gets the next sibling node of this node.">Obtiene el siguiente nodo relacionado de este nodo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the next sibling node.">
        <see cref="T:System.Xml.Linq.XNode" /> que contiene el nodo relacionado siguiente.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes after this node, in document order.">Devuelve una colección de los nodos relacionados situados detrás de este nodo en el orden del documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes after this node, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> de los nodos relacionados situados detrás de este nodo en el orden del documento.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes before this node, in document order.">Devuelve una colección de los nodos relacionados situados antes de este nodo en el orden del documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes before this node, in document order.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> de los nodos relacionados situados antes de este nodo en el orden del documento.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary vsli:raw="Gets the previous sibling node of this node.">Obtiene el anterior nodo relacionado de este nodo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the previous sibling node.">
        <see cref="T:System.Xml.Linq.XNode" /> que contiene el nodo relacionado anterior.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crea un objeto <see cref="T:System.Xml.Linq.XNode" /> a partir de un objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlReader" /> situado en el nodo para leer <see cref="T:System.Xml.Linq.XNode" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the node and its descendant nodes that were read from the reader. The runtime type of the node is determined by the node type (&lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt;) of the first node encountered in the reader.">Objeto <see cref="T:System.Xml.Linq.XNode" /> que contiene el nodo y sus nodos descendientes que se leyeron desde el lector. El tipo de nodo (<see cref="P:System.Xml.Linq.XObject.NodeType" />) del primer nodo situado en el lector determina el tipo del nodo en tiempo de ejecución.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">
        <see cref="T:System.Xml.XmlReader" /> no se coloca en un tipo de nodo reconocido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; throws an exception.">El objeto <see cref="T:System.Xml.XmlReader" /> subyacente produce una excepción.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
      <param name="reader" vsli:raw="A reader positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary vsli:raw="Removes this node from its parent.">Quita este nodo de su elemento primario.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">El valor del elemento primario es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary vsli:raw="Replaces this node with the specified content.">Reemplaza este nodo por el contenido especificado.</summary>
      <param name="content" vsli:raw="Content that replaces this node.">Contenido que reemplaza este nodo.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary vsli:raw="Replaces this node with the specified content.">Reemplaza este nodo por el contenido especificado.</summary>
      <param name="content" vsli:raw="A parameter list of the new content.">Lista de parámetros del nuevo contenido.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary vsli:raw="Returns the indented XML for this node.">Devuelve el XML con sangría para este nodo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">
        <see cref="T:System.String" /> que contiene el XML con sangría.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this node, optionally disabling formatting.">Devuelve el XML de este nodo y, opcionalmente, deshabilita el formato.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">
        <see cref="T:System.String" /> que contiene el XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe este nodo en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Objeto <see cref="T:System.Xml.XmlWriter" /> en el que escribirá este método.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to write the current node into." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary vsli:raw="Contains functionality to compare nodes for their document order. This class cannot be inherited.">Contiene la funcionalidad para comparar el orden de documentos de los nodos. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">Compara dos nodos para determinar el orden relativo de sus documentos.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">Valor de tipo <see cref="T:System.Int32" /> que contiene 0 si los nodos son iguales; -1 si <paramref name="x" /> está antes de <paramref name="y" />; 1 si <paramref name="x" /> está después de <paramref name="y" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">Los dos nodos no comparten un antecesor común.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">Compara dos nodos para determinar el orden relativo de sus documentos.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">Valor de tipo <see cref="T:System.Int32" /> que contiene 0 si los nodos son iguales; -1 si <paramref name="x" /> está antes de <paramref name="y" />; 1 si <paramref name="x" /> está después de <paramref name="y" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">Los dos nodos no comparten un antecesor común.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The two nodes are not derived from &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Los dos nodos no se derivan de <see cref="T:System.Xml.Linq.XNode" />.</exception>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary vsli:raw="Compares nodes to determine whether they are equal. This class cannot be inherited.">Compara los nodos para determinar si son iguales. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes.">Compara los valores de dos nodos.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating if the nodes are equal.">Valor <see cref="T:System.Boolean" /> que indica si los nodos son iguales.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary vsli:raw="Returns a hash code based on an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Devuelve un código hash basado en un <see cref="T:System.Xml.Linq.XNode" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to hash.">El <see cref="T:System.Xml.Linq.XNode" /> al que se va a aplicar un algoritmo hash.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">Un <see cref="T:System.Int32" /> que contiene un código hash basado en un valor para el nodo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary vsli:raw="Compares the values of two nodes.">Compara los valores de dos nodos.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Xml.Linq.XNode" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los nodos son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code based on the value of a node.">Devuelve un código hash basado en el valor de un nodo.</summary>
      <param name="obj" vsli:raw="The node to hash.">Nodo al que se va a aplicar un algoritmo hash.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">Un <see cref="T:System.Int32" /> que contiene un código hash basado en un valor para el nodo.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary vsli:raw="Represents a node or an attribute in an XML tree.">Representa un nodo o un atributo en un árbol XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary vsli:raw="Adds an object to the annotation list of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Agrega un objeto a la lista de anotaciones de <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="annotation" vsli:raw="An object that contains the annotation to add.">Objeto que contiene la anotación que se va a agregar.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene el primer objeto de anotación del tipo especificado de este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of the annotation to retrieve.">Tipo de anotación que se va a recuperar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">Valor <see cref="T:System.Object" /> que contiene el primer objeto de anotación que coincide con el tipo especificado o <see langword="null" /> si ninguna anotación es del tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene el primer objeto de anotación del tipo especificado de este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of the annotation to retrieve.">Tipo de anotación que se va a recuperar.</typeparam>
      <returns vsli:raw="The first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">Primer objeto de anotación que coincide con el tipo especificado o <see langword="null" /> si ninguna anotación es del tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene una colección de anotaciones del tipo especificado para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of the annotations to retrieve.">Tipo de las anotaciones que se van a recuperar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the annotations that match the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Object" /> que contiene las anotaciones que coinciden con el tipo especificado para <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene una colección de anotaciones del tipo especificado para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of the annotations to retrieve.">Tipo de las anotaciones que se van a recuperar.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the annotations for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que contiene las anotaciones de este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary vsli:raw="Gets the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene el URI base de este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.String" /> que contiene el URI base de este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants have changed.">Se genera cuando este <see cref="T:System.Xml.Linq.XObject" /> o cualquiera de sus descendientes ha cambiado.</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants are about to change.">Se genera cuando este <see cref="T:System.Xml.Linq.XObject" /> o cualquiera de sus descendientes está a punto de cambiar.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Xml.Linq.XDocument" /> para este objeto <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> para <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary vsli:raw="Gets the node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene el tipo de nodo de este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">El tipo de nodo de este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene el <see cref="T:System.Xml.Linq.XElement" /> primario de <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> primario de este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Quita las anotaciones del tipo especificado de <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of annotations to remove.">Tipo de las anotaciones que se van a quitar.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Quita las anotaciones del tipo especificado de <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of annotations to remove.">Tipo de las anotaciones que se van a quitar.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether or not this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information.">Obtiene un valor que indica si <see cref="T:System.Xml.Linq.XObject" /> tiene información de línea o no.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el <see cref="T:System.Xml.Linq.XObject" /> tiene información de línea, de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary vsli:raw="Gets the line number that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene el número de línea del que el <see cref="T:System.Xml.XmlReader" /> subyacente informó para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line number reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" /> que contiene el número de línea del que el <see cref="T:System.Xml.XmlReader" /> informó para este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary vsli:raw="Gets the line position that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtiene la posición de línea de la que el <see cref="T:System.Xml.XmlReader" /> subyacente informó para este <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line position reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" /> que contiene la posición de línea de la que <see cref="T:System.Xml.XmlReader" /> informó para este <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary vsli:raw="Specifies the event type when an event is raised for an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Especifica el tipo de evento cuando se genera éste para un <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be added to an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Se ha agregado o se agregará un objeto <see cref="T:System.Xml.Linq.XObject" /> a un objeto <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be renamed.">Se ha cambiado o se cambiará el nombre de un <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be removed from an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Se ha quitado o se quitará un <see cref="T:System.Xml.Linq.XObject" /> de un <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary vsli:raw="The value of an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.">Se ha cambiado o se cambiará el valor de un <see cref="T:System.Xml.Linq.XObject" /> . Además, un cambio en la serialización de un elemento vacío (ya sea desde una etiqueta vacía al par de etiquetas de inicio/fin, o viceversa) genera este evento.</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changing&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changed&quot; /&gt; events.">Proporciona datos para los eventos <see cref="E:System.Xml.Linq.XObject.Changing" /> y <see cref="E:System.Xml.Linq.XObject.Changed" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XObjectChangeEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" />.</summary>
      <param name="objectChange" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the event arguments for LINQ to XML events.">
        <see cref="T:System.Xml.Linq.XObjectChange" /> que contiene los argumentos de evento para los eventos LINQ to XML.</param>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary vsli:raw="Event argument for an &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Add&quot; /&gt; change event.">Argumento de evento para un evento de cambio <see cref="F:System.Xml.Linq.XObjectChange.Add" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Name&quot; /&gt; change event.">Argumento de evento para un evento de cambio <see cref="F:System.Xml.Linq.XObjectChange.Name" />.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary vsli:raw="Gets the type of change.">Obtiene el tipo de cambio.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the type of change.">Un objeto <see cref="T:System.Xml.Linq.XObjectChange" /> que contiene el tipo de cambio.</returns>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Remove&quot; /&gt; change event.">Argumento de evento para un evento de cambio <see cref="F:System.Xml.Linq.XObjectChange.Remove" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Value&quot; /&gt; change event.">Argumento de evento para un evento de cambio <see cref="F:System.Xml.Linq.XObjectChange.Value" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary vsli:raw="Represents an XML processing instruction.">Representa una instrucción de procesamiento de XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">Valor de tipo <see cref="T:System.String" /> que contiene la aplicación de destino de esta <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <param name="data" vsli:raw="The string data for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">Los datos de cadena de esta <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="target" /> o <paramref name="data" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">El parámetro <paramref name="target" /> no sigue las restricciones de los nombres XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; node to copy from.">El nodo <see cref="T:System.Xml.Linq.XProcessingInstruction" /> del que se va a copiar.</param>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the string value of this processing instruction.">Obtiene o establece el valor de cadena de esta instrucción de procesamiento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this processing instruction.">Un valor de tipo <see cref="T:System.String" /> que contiene el valor de cadena de esta instrucción de procesamiento.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La cadena <paramref name="value" /> no es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtiene el tipo de nodo de este nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.ProcessingInstruction&quot; /&gt;.">Tipo de nodo. Para los objetos <see cref="T:System.Xml.Linq.XProcessingInstruction" />, este valor es <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary vsli:raw="Gets or sets a string containing the target application for this processing instruction.">Obtiene o establece una cadena que contiene la aplicación de destino de esta instrucción de procesamiento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this processing instruction.">Valor de tipo <see cref="T:System.String" /> que contiene la aplicación de destino de esta instrucción de procesamiento.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La cadena <paramref name="value" /> no es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">El parámetro <paramref name="target" /> no sigue las restricciones de los nombres XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this processing instruction to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe esta instrucción de procesamiento en un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write this processing instruction to.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir esta instrucción de procesamiento.</param>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary vsli:raw="Represents elements in an XML tree that supports deferred streaming output.">Representa los elementos de un árbol XML que admite la salida de transmisión por secuencias diferida.</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XElement" /> a partir del <see cref="T:System.Xml.Linq.XName" /> especificado.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre del elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XStreamingElement" /> con el nombre y el contenido especificados.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre del elemento.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenido del elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XStreamingElement" /> con el nombre y el contenido especificados.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre del elemento.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenido del elemento.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">Agrega el contenido especificado como elementos secundarios a este <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">Contenido que se va a agregar al elemento de transmisión por secuencias.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">Agrega el contenido especificado como elementos secundarios a este <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">Contenido que se va a agregar al elemento de transmisión por secuencias.</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary vsli:raw="Gets or sets the name of this streaming element.">Obtiene o establece el nombre de esta transmisión por secuencias.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this streaming element.">
        <see cref="T:System.Xml.Linq.XName" /> que contiene el nombre de este elemento de transmisión por secuencias.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Genera este <see cref="T:System.Xml.Linq.XStreamingElement" /> en el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Secuencia que se envía a este <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Genera este <see cref="T:System.Xml.Linq.XStreamingElement" /> en el objeto <see cref="T:System.IO.Stream" /> especificado, especificando opcionalmente el comportamiento de formato.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Secuencia que se envía a este <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Objeto <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serialice este elemento de transmisión por secuencias en un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" /> en el que se escribirá un <see cref="T:System.Xml.Linq.XStreamingElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Serialice este elemento de transmisión por secuencias en un <see cref="T:System.IO.TextWriter" />, de modo opcional, deshabilite el formato.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">
        <see cref="T:System.IO.TextWriter" /> al que se envía el XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <summary vsli:raw="Serialize this streaming element to a file.">Serialice este elemento de transmisión por secuencias en un archivo.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">Objeto <see cref="T:System.String" /> que contiene el nombre del archivo.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a file, optionally disabling formatting.">Serialice este elemento de transmisión por secuencias en un archivo y, de modo opcional, deshabilite el formato.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">Objeto <see cref="T:System.String" /> que contiene el nombre del archivo.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Objeto <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serialice este elemento de transmisión por secuencias en un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se escribirá un <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary vsli:raw="Returns the formatted (indented) XML for this streaming element.">Devuelve el XML con formato (sangría) para este elemento de transmisión por secuencias.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">
        <see cref="T:System.String" /> que contiene el XML con sangría.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this streaming element, optionally disabling formatting.">Devuelve el XML de este elemento de transmisión por secuencias y, opcionalmente, se deshabilita el formato.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> que especifica el comportamiento de formato.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">
        <see cref="T:System.String" /> que contiene el XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe este elemento de transmisión por secuencias en un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Objeto <see cref="T:System.Xml.XmlWriter" /> en el que escribirá este método.</param>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary vsli:raw="Represents a text node.">Representa un nodo de texto.</summary>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XText" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node.">
        <see cref="T:System.String" /> que contiene el valor del nodo <see cref="T:System.Xml.Linq.XText" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Linq.XText" /> desde otro objeto <see cref="T:System.Xml.Linq.XText" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node to copy from.">El nodo <see cref="T:System.Xml.Linq.XText" /> del que se va a copiar.</param>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtiene el tipo de nodo de este nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;.">Tipo de nodo. Para los objetos <see cref="T:System.Xml.Linq.XText" />, este valor es <see cref="F:System.Xml.XmlNodeType.Text" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary vsli:raw="Gets or sets the value of this node.">Obtiene o establece el valor de este nodo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of this node.">
        <see cref="T:System.String" /> que contiene el valor de este nodo.</returns>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe este nodo en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">Objeto <see cref="T:System.Xml.XmlWriter" /> en el que escribirá este método.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to." />
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation." />
    </member>
    <member name="T:System.Xml.Schema.Extensions">
      <summary vsli:raw="This class contains the LINQ to XML extension methods for XSD validation.">Esta clase contiene LINQ a métodos de extensión XML para la validación XSD.</summary>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated attribute.">Obtiene el conjunto de información posterior a la validación del esquema (PSVI) de un atributo validado.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has been previously validated.">
        <see cref="T:System.Xml.Linq.XAttribute" /> que se ha validado anteriormente.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset for an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema para <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated element.">Obtiene el conjunto de información posterior a la validación del esquema (PSVI) de un elemento validado.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has been previously validated.">
        <see cref="T:System.Xml.Linq.XElement" /> que se ha validado anteriormente.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset (PSVI) for an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema (PSVI) para <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Este método valida que un <see cref="T:System.Xml.Linq.XAttribute" /> se ajusta a un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado y un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">Objeto <see cref="T:System.Xml.Linq.XAttribute" /> que se va a validar.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que especifica el subárbol que se va a validar.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con el que se va a validar.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> de un evento que se provoca cuando el lector detecta errores de validación. Si es <see langword="null" />, se produce una excepción en los errores de validación.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Se produce para los errores de validación del lenguaje de definición de esquemas XML (XSD).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Valida que <see cref="T:System.Xml.Linq.XAttribute" /> se ajusta a un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado y a un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> y, de manera opcional, rellena el árbol XML con el conjunto de información posterior a la validación del esquema (PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">Objeto <see cref="T:System.Xml.Linq.XAttribute" /> que se va a validar.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que especifica el subárbol que se va a validar.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con el que se va a validar.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> de un evento que se provoca cuando el lector detecta errores de validación. Si es <see langword="null" />, se produce una excepción en los errores de validación.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> que indica si se rellena el conjunto de información posterior a la validación del esquema (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Se produce para los errores de validación del lenguaje de definición de esquemas XML (XSD).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Este método valida que un <see cref="T:System.Xml.Linq.XDocument" /> se ajusta a un XSD en un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">Objeto <see cref="T:System.Xml.Linq.XDocument" /> que se va a validar.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con el que se va a validar.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> de un evento que se provoca cuando el lector detecta errores de validación. Si es <see langword="null" />, se produce una excepción en los errores de validación.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Se produce para los errores de validación del lenguaje de definición de esquemas XML (XSD).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Valida que <see cref="T:System.Xml.Linq.XDocument" /> se ajusta a XSD en <see cref="T:System.Xml.Schema.XmlSchemaSet" /> y, de manera opcional, rellena el árbol XML con el conjunto de información posterior a la validación del esquema (PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">Objeto <see cref="T:System.Xml.Linq.XDocument" /> que se va a validar.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con el que se va a validar.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> de un evento que se provoca cuando el lector detecta errores de validación. Si es <see langword="null" />, se produce una excepción en los errores de validación.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> que indica si se rellena el conjunto de información posterior a la validación del esquema (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Se produce para los errores de validación del lenguaje de definición de esquemas XML (XSD).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Este método valida que un subárbol <see cref="T:System.Xml.Linq.XElement" /> se ajusta a un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado y a un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">Objeto <see cref="T:System.Xml.Linq.XElement" /> que se va a validar.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que especifica el subárbol que se va a validar.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con el que se va a validar.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> de un evento que se provoca cuando el lector detecta errores de validación. Si es <see langword="null" />, se produce una excepción en los errores de validación.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Se produce para los errores de validación del lenguaje de definición de esquemas XML (XSD).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Valida que un subárbol <see cref="T:System.Xml.Linq.XElement" /> se ajusta a un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado y a un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> y, de manera opcional, rellena el árbol XML con el conjunto de información posterior a la validación del esquema (PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">Objeto <see cref="T:System.Xml.Linq.XElement" /> que se va a validar.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que especifica el subárbol que se va a validar.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con el que se va a validar.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> de un evento que se provoca cuando el lector detecta errores de validación. Si es <see langword="null" />, se produce una excepción en los errores de validación.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> que indica si se rellena el conjunto de información posterior a la validación del esquema (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Se produce para los errores de validación del lenguaje de definición de esquemas XML (XSD).</exception>
    </member>
  </members>
</doc>