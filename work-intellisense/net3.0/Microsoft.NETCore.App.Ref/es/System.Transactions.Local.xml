<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Transactions.Local</name>
  </assembly>
  <members>
    <member name="T:System.Transactions.CommittableTransaction">
      <summary vsli:raw="Describes a committable transaction.">Describe una transacción confirmable.</summary>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.CommittableTransaction" />.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Se intenta crear una transacción bajo Windows 98, Windows 98 Segunda Edición o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class with the specified &lt;paramref name=&quot;timeout&quot; /&gt; value.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.CommittableTransaction" /> con el valor <paramref name="timeout" /> especificado.</summary>
      <param name="timeout" vsli:raw="The maximum amount of time the transaction can exist, before it is aborted.">El tiempo máximo que la transacción puede existir, antes de anularse.</param>
      <exception cref="T:System.PlatformNotSupportedException">Se intenta crear una transacción bajo Windows 98, Windows 98 Segunda Edición o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class with the specified transaction options.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.CommittableTransaction" /> con las opciones de transacción especificadas.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use for the new transaction.">Estructura <see cref="T:System.Transactions.TransactionOptions" /> que describe las opciones de transacción que se van a utilizar para la nueva transacción.</param>
      <exception cref="T:System.PlatformNotSupportedException">Se intenta crear una transacción bajo Windows 98, Windows 98 Segunda Edición o Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is invalid.">
        <paramref name="options" /> no es válido.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an attempt to commit the transaction asynchronously.">Comienza un intento de confirmar la transacción de forma asincrónica.</summary>
      <param name="asyncCallback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that is invoked when the transaction completes. This parameter can be &lt;see langword=&quot;null&quot; /&gt;, in which case the application is not notified of the transaction's completion. Instead, the application must use the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface to check for completion and wait accordingly, or call &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)&quot; /&gt; to wait for completion.">El delegado <see cref="T:System.AsyncCallback" /> que se invoca cuando finaliza la transacción. Este parámetro puede ser <see langword="null" />, en cuyo caso no se notifica a la aplicación de la finalización de la transacción. En lugar de ello, la aplicación debe utilizar la interfaz de <see cref="T:System.IAsyncResult" /> para esperar a que la transacción haya finalizado o llamar al método <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> para esperar a que finalice.</param>
      <param name="asyncState" vsli:raw="An object, which might contain arbitrary state information, associated with the asynchronous commitment. This object is passed to the callback, and is not interpreted by &lt;see cref=&quot;N:System.Transactions&quot; /&gt;. A null reference is permitted.">Un objeto, que podría contener la información de estado arbitraria, asociado a la confirmación asincrónica. Se pasa este objeto en la devolución de llamada y <see cref="N:System.Transactions" /> no lo interpreta. Se permiten las referencias null.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.">El llamador puede utilizar una interfaz <see cref="T:System.IAsyncResult" /> para comprobar el estado de la operación asincrónica o esperar a que se realice la operación.</returns>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.Commit">
      <summary vsli:raw="Attempts to commit the transaction.">Intenta confirmar la transacción.</summary>
      <exception cref="T:System.Transactions.TransactionInDoubtException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.Commit&quot; /&gt; is called on a transaction and the transaction becomes &lt;see cref=&quot;F:System.Transactions.TransactionStatus.InDoubt&quot; /&gt;.">Se llama al método <see cref="M:System.Transactions.CommittableTransaction.Commit" /> en una transacción y la transacción pasa a ser <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</exception>
      <exception cref="T:System.Transactions.TransactionAbortedException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.Commit&quot; /&gt; is called and the transaction rolls back for the first time.">Se llama al método <see cref="M:System.Transactions.CommittableTransaction.Commit" /> y se deshace la transacción por primera vez.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)">
      <summary vsli:raw="Ends an attempt to commit the transaction asynchronously.">Finaliza un intento de confirmar la transacción de forma asincrónica.</summary>
      <param name="asyncResult" vsli:raw="The &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object associated with the asynchronous commitment.">Objeto <see cref="T:System.IAsyncResult" /> asociado a la confirmación asincrónica.</param>
      <exception cref="T:System.Transactions.TransactionAbortedException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; is called and the transaction rolls back for the first time.">Se llama al método <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> y se deshace la transacción por primera vez.</exception>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState">
      <summary vsli:raw="Gets the object provided as the last parameter of the &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; method call.">Obtiene el objeto proporcionado como el último parámetro de la llamada al método <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</summary>
      <returns vsli:raw="The object provided as the last parameter of the &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; method call.">Objeto proporcionado como el último parámetro de la llamada al método <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.WaitHandle&quot; /&gt; that is used to wait for an asynchronous operation to complete.">Obtiene <see cref="T:System.Threading.WaitHandle" /> que se utiliza para esperar a que finalice una operación asincrónica.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.WaitHandle&quot; /&gt; that is used to wait for an asynchronous operation to complete.">
        <see cref="T:System.Threading.WaitHandle" /> que se utiliza para esperar a que finalice una operación asincrónica.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously">
      <summary vsli:raw="Gets an indication of whether the asynchronous commit operation completed synchronously.">Obtiene una indicación que especifica si la operación de confirmación asincrónica ha finalizado sincrónicamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the asynchronous commit operation completed synchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This property always returns &lt;see langword=&quot;false&quot; /&gt; even if the operation completed synchronously.">
        <see langword="true" /> si la operación de confirmación asincrónica ha finalizado sincrónicamente; en caso contrario, <see langword="false" />. Esta propiedad siempre devuelve <see langword="false" /> aún cuando la operación finalice sincrónicamente.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted">
      <summary vsli:raw="Gets an indication whether the asynchronous commit operation has completed.">Obtiene una indicación que especifica si la operación de confirmación asincrónica ha finalizado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la operación se ha completado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Transactions.DependentCloneOption">
      <summary vsli:raw="Controls what kind of dependent transaction to create.">Controla qué tipo de transacción dependiente se va a crear.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete">
      <summary vsli:raw="The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or &lt;see cref=&quot;M:System.Transactions.DependentTransaction.Complete&quot; /&gt; is called. In this case, additional work can be done on the transaction and new enlistments can be created.">La transacción dependiente bloquea el proceso de confirmación de la transacción hasta que se agota el tiempo de espera de la transacción primaria o se llama a <see cref="M:System.Transactions.DependentTransaction.Complete" />. En este caso, el trabajo adicional se puede realizar en la transacción y se pueden crear nuevas inscripciones.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.RollbackIfNotComplete">
      <summary vsli:raw="The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before &lt;see cref=&quot;M:System.Transactions.DependentTransaction.Complete&quot; /&gt; is called.">La transacción dependiente anula automáticamente la transacción si se llama a Commit en la transacción primaria antes de que se llame a <see cref="M:System.Transactions.DependentTransaction.Complete" />.</summary>
    </member>
    <member name="T:System.Transactions.DependentTransaction">
      <summary vsli:raw="Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction. This class cannot be inherited.">Describe un clon de una transacción y garantiza que no se puede confirmar la transacción hasta que la aplicación no deja de procesar la transacción. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Transactions.DependentTransaction.Complete">
      <summary vsli:raw="Attempts to complete the dependent transaction.">Intenta finalizar la transacción dependiente.</summary>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="Any attempt for additional work on the transaction after this method is called. These include invoking methods such as &lt;see cref=&quot;Overload:System.Transactions.Transaction.EnlistVolatile&quot; /&gt;, &lt;see cref=&quot;Overload:System.Transactions.Transaction.EnlistDurable&quot; /&gt;, &lt;see cref=&quot;M:System.Transactions.Transaction.Clone&quot; /&gt;, &lt;see cref=&quot;M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)&quot; /&gt; , or any serialization operations on the transaction.">Cualquier intento de trabajo adicional en la transacción después de llamarse a este método. Incluyen la invocación de métodos como <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> o cualquier operación de serialización en la transacción.</exception>
    </member>
    <member name="T:System.Transactions.Enlistment">
      <summary vsli:raw="Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.">Facilita la comunicación entre un participante de la transacción inscrito y el administrador de transacciones durante la fase final de la transacción.</summary>
    </member>
    <member name="M:System.Transactions.Enlistment.Done">
      <summary vsli:raw="Indicates that the transaction participant has completed its work.">Indica que el participante de la transacción ha finalizado su trabajo.</summary>
    </member>
    <member name="T:System.Transactions.EnlistmentOptions">
      <summary vsli:raw="Determines whether the object should be enlisted during the prepare phase.">Determina si el objeto se debería inscribir durante la fase de preparación.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired">
      <summary vsli:raw="The object must enlist during the initial phase of the commitment process.">El objeto debe inscribirse durante la fase inicial del proceso de confirmación.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.None">
      <summary vsli:raw="The object does not require enlistment during the initial phase of the commitment process.">No es necesario inscribir el objeto durante la fase inicial del proceso de confirmación.</summary>
    </member>
    <member name="T:System.Transactions.EnterpriseServicesInteropOption">
      <summary vsli:raw="Specifies how distributed transactions interact with COM+ transactions.">Especifica cómo interactúan las transacciones distribuidas con transacciones COM+.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Automatic">
      <summary vsli:raw="Search for an existing COM+ context and synchronize with it if one exists.">Busque un contexto COM+ existente y sincronícelo con este si existe uno.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Full">
      <summary vsli:raw="The &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt; context (which can be retrieved by calling the static method &lt;see cref=&quot;P:System.EnterpriseServices.ContextUtil.Transaction&quot; /&gt; of the &lt;see cref=&quot;T:System.EnterpriseServices.ContextUtil&quot; /&gt; class) and the &lt;see cref=&quot;N:System.Transactions&quot; /&gt; ambient transaction (which can be retrieved by calling the static method &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt; of the &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; class) are always synchronized. This introduces a performance penalty because new &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt; contexts may need to be created.">El contexto <see cref="N:System.EnterpriseServices" /> (que se puede recuperar llamando al método estático <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> de la clase <see cref="T:System.EnterpriseServices.ContextUtil" />) y la transacción de ambiente <see cref="N:System.Transactions" /> (que se puede recuperar llamando al método estático <see cref="P:System.Transactions.Transaction.Current" /> de la clase <see cref="T:System.Transactions.Transaction" />) se sincronizan siempre. Esto presenta una reducción del rendimiento porque quizá sea necesario crear nuevos contextos <see cref="N:System.EnterpriseServices" />.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.None">
      <summary vsli:raw="There is no synchronization between &lt;see cref=&quot;P:System.EnterpriseServices.ContextUtil.Transaction&quot; /&gt; and &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt;.">No hay sincronización entre <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> y <see cref="P:System.Transactions.Transaction.Current" />.</summary>
    </member>
    <member name="T:System.Transactions.HostCurrentTransactionCallback">
      <summary vsli:raw="Provides a mechanism for the hosting environment to supply its own default notion of &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt;.">Proporciona un mecanismo para el entorno de host para proporcionar su propia noción predeterminada de <see cref="P:System.Transactions.Transaction.Current" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object.">Objeto <see cref="T:System.Transactions.Transaction" />.</returns>
    </member>
    <member name="T:System.Transactions.IDtcTransaction">
      <summary vsli:raw="Describes a DTC transaction.">Describe una transacción DTC.</summary>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)">
      <summary vsli:raw="Aborts a transaction.">Anula una transacción.</summary>
      <param name="reason" vsli:raw="An optional &lt;see cref=&quot;T:System.EnterpriseServices.BOID&quot; /&gt; that indicates why the transaction is being aborted. This parameter can be &lt;see langword=&quot;null&quot; /&gt;, indicating that no reason for the abort is provided.">Valor <see cref="T:System.EnterpriseServices.BOID" /> opcional que indica por qué se anula la transacción. Este parámetro puede ser <see langword="null" />, lo que indica que no hay motivo para la anulación.</param>
      <param name="retaining" vsli:raw="This value must be &lt;see langword=&quot;false&quot; /&gt;.">Este valor puede ser <see langword="false" />.</param>
      <param name="async" vsli:raw="When &lt;paramref name=&quot;async&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, an asynchronous abort is performed and the caller must use &lt;see langword=&quot;ITransactionOutcomeEvents&quot; /&gt; to learn about the outcome of the transaction.">Cuando <paramref name="async" /> es <see langword="true" />, se realiza una anulación asincrónica, y el llamador debe utilizar <see langword="ITransactionOutcomeEvents" /> para obtener información sobre el resultado de la transacción.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Commits a transaction.">Confirma una transacción.</summary>
      <param name="retaining" vsli:raw="This value must be &lt;see langword=&quot;false&quot; /&gt;.">Este valor puede ser <see langword="false" />.</param>
      <param name="commitType" vsli:raw="A value taken from the OLE DB enumeration &lt;see langword=&quot;XACTTC&quot; /&gt;.">Valor procedente de la enumeración de OLE DB <see langword="XACTTC" />.</param>
      <param name="reserved" vsli:raw="This value must be zero.">Este valor debe ser cero.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)">
      <summary vsli:raw="Retrieves information about a transaction.">Recupera información sobre una transacción.</summary>
      <param name="transactionInformation" vsli:raw="Pointer to the caller-allocated &lt;see cref=&quot;T:System.EnterpriseServices.XACTTRANSINFO&quot; /&gt; structure that will receive information about the transaction. This value must not be &lt;see langword=&quot;null&quot; /&gt;.">Puntero a la estructura <see cref="T:System.EnterpriseServices.XACTTRANSINFO" />, asignada por el llamador, que recibirá la información acerca de la transacción. Este valor no debe ser <see langword="null" />.</param>
    </member>
    <member name="T:System.Transactions.IEnlistmentNotification">
      <summary vsli:raw="Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.">Describe una interfaz que un administrador de recursos debe implementar para proporcionar devoluciones de llamada de notificación de confirmación en dos fases para el administrador de transacciones al inscribirse para la participación.</summary>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being committed.">Notifica a un objeto inscrito que se confirma una transacción.</summary>
      <param name="enlistment" vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">Objeto <see cref="T:System.Transactions.Enlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that the status of a transaction is in doubt.">Notifica a un objeto inscrito que el estado de una transacción está en duda.</summary>
      <param name="enlistment" vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">Objeto <see cref="T:System.Transactions.Enlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being prepared for commitment.">Notifica a un objeto inscrito que se prepara una transacción para la confirmación.</summary>
      <param name="preparingEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.PreparingEnlistment&quot; /&gt; object used to send a response to the transaction manager.">Objeto <see cref="T:System.Transactions.PreparingEnlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being rolled back (aborted).">Notifica a un objeto inscrito que se deshace (se anula) una transacción.</summary>
      <param name="enlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">Objeto <see cref="T:System.Transactions.Enlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
    </member>
    <member name="T:System.Transactions.IPromotableSinglePhaseNotification">
      <summary vsli:raw="Describes an object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.">Describe un objeto que actúa como un delegado de confirmación para una transacción no distribuida interna a un administrador de recursos.</summary>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
      <summary vsli:raw="Notifies a transaction participant that enlistment has completed successfully.">Notifica a un participante de la transacción que la inscripción se ha realizado correctamente.</summary>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="An attempt to enlist or serialize a transaction.">Se intenta inscribir o serializar una transacción.</exception>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being rolled back.">Notifica a un objeto inscrito que se deshace la transacción.</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; object used to send a response to the transaction manager.">Objeto <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being committed.">Notifica a un objeto inscrito que se confirma la transacción.</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface used to send a response to the transaction manager.">Interfaz <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizada para enviar una respuesta al administrador de transacciones.</param>
    </member>
    <member name="T:System.Transactions.ISimpleTransactionSuperior">
      <summary vsli:raw="Represents a transaction that is not a root transaction, but can be escalated to be managed by the MSDTC.">Representa una transacción que no es una transacción raíz, pero se puede escalar para que sea administrado por MSDTC.</summary>
    </member>
    <member name="M:System.Transactions.ISimpleTransactionSuperior.Rollback">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being rolled back.">Notifica a un objeto inscrito que se deshace la transacción.</summary>
    </member>
    <member name="T:System.Transactions.ISinglePhaseNotification">
      <summary vsli:raw="Describes a resource object that supports single phase commit optimization to participate in a transaction.">Describe un objeto de recurso que admite la optimización de confirmación de fase única para participar en una transacción.</summary>
    </member>
    <member name="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Represents the resource manager's implementation of the callback for the single phase commit optimization.">Representa la implementación del administrador de recursos de la devolución de llamada para la optimización de confirmación en una fase.</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; used to send a response to the transaction manager.">Objeto <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizado para enviar una respuesta al administrador de transacciones.</param>
    </member>
    <member name="T:System.Transactions.IsolationLevel">
      <summary vsli:raw="Specifies the isolation level of a transaction.">Especifica el nivel de aislamiento de una transacción.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">Los cambios pendientes de las transacciones más aisladas no se pueden sobrescribir.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Volatile data cannot be read during the transaction, but can be modified.">Los datos variables no se pueden leer durante la transacción, pero se pueden modificar.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="Volatile data can be read and modified during the transaction.">Los datos variables se pueden leer y modificar durante la transacción.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Volatile data can be read but not modified during the transaction. New data can be added during the transaction.">Se pueden leer datos variables pero no modificarse durante la transacción. Se pueden agregar nuevos datos durante la transacción.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Serializable">
      <summary vsli:raw="Volatile data can be read but not modified, and no new data can be added during the transaction.">Se pueden leer datos variables pero no modificarse y no se pueden agregar nuevos datos durante la transacción.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Snapshot">
      <summary vsli:raw="&lt;para&gt;Volatile data can be read. Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read. If the data has been updated, an error is raised. This allows a transaction to get to the previously committed value of the data.&lt;/para&gt;&lt;para&gt;When you try to promote a transaction that was created with the &lt;see langword=&quot;Snapshot&quot; /&gt; isolation level, an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the error message &quot;Transactions with IsolationLevel Snapshot cannot be promoted&quot;.&lt;/para&gt;">Se pueden leer los datos variables. Antes de que una transacción modifique los datos, comprueba si otra transacción ha cambiado los datos después de haberlos leído inicialmente. Si se han actualizado los datos, se produce un error. Esto permite a una transacción llegar al valor previamente confirmado de los datos.
Cuando se intenta promover una transacción creada con el nivel de aislamiento <see langword="Snapshot" />, se muestra una excepción <see cref="T:System.InvalidOperationException" /> con el mensaje de error "No se pueden promover transacciones con la instantánea IsolationLevel".</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined. An exception is thrown if this value is set.">Se utiliza un nivel de aislamiento distinto al especificado, pero no se puede determinar el nivel. Se produce una excepción si se establece este valor.</summary>
    </member>
    <member name="T:System.Transactions.ITransactionPromoter">
      <summary vsli:raw="Describes a delegated transaction for an existing transaction that can be escalated to be managed by the MSDTC when needed.">Describe una transacción delegada para una transacción existente que se puede elevar para ser administrada por MSDTC cuando se necesita.</summary>
    </member>
    <member name="M:System.Transactions.ITransactionPromoter.Promote">
      <summary vsli:raw="Notifies an enlisted object that an escalation of the delegated transaction has been requested.">Notifica al objeto que está en la lista que se ha solicitado una elevación de la transacción delegada.</summary>
      <returns vsli:raw="A transmitter/receiver propagation token that marshals a distributed transaction. For more information, see &lt;see cref=&quot;M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])&quot; /&gt;.">Un token de propagación de receptor/transmisor que calcula las referencias de una transacción distribuida. Para obtener más información, vea <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />.</returns>
    </member>
    <member name="T:System.Transactions.PreparingEnlistment">
      <summary vsli:raw="Facilitates communication between an enlisted transaction participant and the transaction manager during the Prepare phase of the transaction.">Facilita la comunicación entre un participante de la transacción inscrito y el administrador de transacciones durante la fase de preparación de la transacción.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback">
      <summary vsli:raw="Indicates that the transaction should be rolled back.">Indica que debería deshacerse la transacción.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)">
      <summary vsli:raw="Indicates that the transaction should be rolled back.">Indica que debería deshacerse la transacción.</summary>
      <param name="e" vsli:raw="An explanation of why a rollback is triggered.">Explicación de por qué se desencadena una operación de reversión.</param>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.Prepared">
      <summary vsli:raw="Indicates that the transaction can be committed.">Indica que se puede confirmar la transacción.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
      <summary vsli:raw="Gets the recovery information of an enlistment.">Obtiene la información de recuperación de una inscripción.</summary>
      <returns vsli:raw="The recovery information of an enlistment.">La información de recuperación de una inscripción.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt to get recovery information inside a volatile enlistment, which does not generate any recovery information.">Se ha intentado obtener información de recuperación dentro de una inscripción volátil, que no genera información de recuperación.</exception>
    </member>
    <member name="T:System.Transactions.SinglePhaseEnlistment">
      <summary vsli:raw="Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the &lt;see cref=&quot;M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)&quot; /&gt; notification is received.">Proporciona un conjunto de devoluciones de llamada que facilitan la comunicación entre un participante inscrito en la confirmación en una fase y el administrador de transacciones cuando se recibe la notificación <see cref="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" />.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.">Representa una devolución de llamada que se utiliza para indicar al administrador de transacciones que se debería deshacer la transacción.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.">Representa una devolución de llamada que se utiliza para indicar al administrador de transacciones que se debería deshacer la transacción y proporciona una explicación.</summary>
      <param name="e" vsli:raw="An explanation of why a rollback is initiated.">Explicación de por qué se inicia una operación de reversión.</param>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Committed">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.">Representa una devolución de llamada que se utiliza para indicar al administrador de transacciones que SinglePhaseCommit ha tenido éxito.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.">Representa una devolución de llamada que se utiliza para indicar al administrador de transacciones que el estado de la transacción está en duda.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.">Representa una devolución de llamada que se utiliza para indicar al administrador de transacciones que el estado de la transacción está en duda y proporciona una explicación.</summary>
      <param name="e" vsli:raw="An explanation of why the transaction is in doubt.">Explicación de por qué la transacción está en duda.</param>
    </member>
    <member name="T:System.Transactions.SubordinateTransaction">
      <summary vsli:raw="Represents a non-rooted transaction that can be delegated. This class cannot be inherited.">Representa una transacción que no es raíz y que puede delegarse. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.SubordinateTransaction&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.SubordinateTransaction" />.</summary>
      <param name="isoLevel" vsli:raw="The isolation level of the transaction.">Nivel de aislamiento de la transacción.</param>
      <param name="superior" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.ISimpleTransactionSuperior&quot; /&gt;.">
        <see cref="T:System.Transactions.ISimpleTransactionSuperior" />.</param>
    </member>
    <member name="T:System.Transactions.Transaction">
      <summary vsli:raw="Represents a transaction.">Representa una transacción.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Clone">
      <summary vsli:raw="Creates a clone of the transaction.">Crea un duplicado de la transacción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; that is a copy of the current transaction object.">
        <see cref="T:System.Transactions.Transaction" /> que es una copia del objeto de transacción actual.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.Current">
      <summary vsli:raw="Gets or sets the ambient transaction.">Obtiene o establece la transacción de ambiente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; that describes the current transaction.">
        <see cref="T:System.Transactions.Transaction" /> que describe la transacción actual.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
      <summary vsli:raw="Creates a dependent clone of the transaction.">Crea un clon dependiente de la transacción.</summary>
      <param name="cloneOption" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.DependentCloneOption&quot; /&gt; that controls what kind of dependent transaction to create.">
        <see cref="T:System.Transactions.DependentCloneOption" /> que controla qué tipo de transacción dependiente se va a crear.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.DependentTransaction&quot; /&gt; that represents the dependent clone.">
        <see cref="T:System.Transactions.DependentTransaction" /> que representa el clon dependiente.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Dispose">
      <summary vsli:raw="Releases the resources that are held by the object.">Libera los recursos que mantiene el objeto.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a durable resource manager that supports two phase commit to participate in a transaction.">Inscribe un administrador de recursos duradero que admite la confirmación en dos fases para participar en una transacción.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">Identificador único para un administrador de recursos, que debería conservarse cuando hay un error del administrador de recursos o un reinicio.</param>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two phase commit notifications.">Objeto que implementa la interfaz <see cref="T:System.Transactions.IEnlistmentNotification" /> para recibir notificaciones de confirmación en dos fases.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> si el administrador de recursos desea realizar un trabajo adicional durante la fase de preparación.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">Objeto <see cref="T:System.Transactions.Enlistment" /> que describe la inscripción.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a durable resource manager that supports single phase commit optimization to participate in a transaction.">Inscribe un administrador de recursos duradero que admite la optimización de confirmación en dos fases para participar en una transacción.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">Identificador único para un administrador de recursos, que debería conservarse cuando hay un error del administrador de recursos o un reinicio.</param>
      <param name="singlePhaseNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.ISinglePhaseNotification&quot; /&gt; interface that must be able to receive single phase commit and two phase commit notifications.">Objeto que implementa la interfaz <see cref="T:System.Transactions.ISinglePhaseNotification" /> que debe poder recibir notificaciones de confirmación en una sola o en dos fases.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> si el administrador de recursos desea realizar un trabajo adicional durante la fase de preparación.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">Objeto <see cref="T:System.Transactions.Enlistment" /> que describe la inscripción.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
      <summary vsli:raw="Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).">Inscribe a un administrador de recursos que tiene una transacción interna mediante una Inscripción de fase única promocionable (PSPE).</summary>
      <param name="promotableSinglePhaseNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">Interfaz <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementada por el participante.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface implementation that describes the enlistment.">Implementación de interfaz <see cref="T:System.Transactions.SinglePhaseEnlistment" /> que describe la inscripción.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary vsli:raw="Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).">Inscribe a un administrador de recursos que tiene una transacción interna mediante una Inscripción de fase única promocionable (PSPE).</summary>
      <param name="promotableSinglePhaseNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">Interfaz <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementada por el participante.</param>
      <param name="promoterType" vsli:raw="The type of the distributed transaction processor.">Tipo de procesador de la transacción distribuida.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface implementation that describes the enlistment.">Implementación de interfaz <see cref="T:System.Transactions.SinglePhaseEnlistment" /> que describe la inscripción.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a volatile resource manager that supports two phase commit to participate in a transaction.">Inscribe un administrador de recursos volátil que admite confirmación en dos fases para participar en una transacción.</summary>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two-phase commit notifications.">Objeto que implementa la interfaz <see cref="T:System.Transactions.IEnlistmentNotification" /> para recibir notificaciones de confirmación en dos fases.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> si el administrador de recursos desea realizar un trabajo adicional durante la fase de preparación.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">Objeto <see cref="T:System.Transactions.Enlistment" /> que describe la inscripción.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a volatile resource manager that supports single phase commit optimization to participate in a transaction.">Inscribe un administrador de recursos volátil que admite la optimización de confirmación en una fase para participar en una transacción.</summary>
      <param name="singlePhaseNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.ISinglePhaseNotification&quot; /&gt; interface that must be able to receive single phase commit and two phase commit notifications.">Objeto que implementa la interfaz <see cref="T:System.Transactions.ISinglePhaseNotification" /> que debe poder recibir notificaciones de confirmación en una sola o en dos fases.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> si el administrador de recursos desea realizar un trabajo adicional durante la fase de preparación.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">Objeto <see cref="T:System.Transactions.Enlistment" /> que describe la inscripción.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Equals(System.Object)">
      <summary vsli:raw="Determines whether this transaction and the specified object are equal.">Determina si esta transacción y el objeto especificado son iguales.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">Objeto que se va a comparar con esta instancia.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this transaction are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> y esta transacción son idénticos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetPromotedToken">
      <summary vsli:raw="Gets the  &lt;c&gt;byte[]&lt;/c&gt; returned by the &lt;c&gt;Promote&lt;/c&gt; method when the transaction is promoted.">Obtiene <c>byte[]</c> que el método <c>Promote</c> devuelve cuando se promueve la transacción.</summary>
      <returns vsli:raw="The  &lt;c&gt;byte[]&lt;/c&gt; returned by the &lt;c&gt;Promote&lt;/c&gt; method when the transaction is promoted.">
        <c>byte[]</c> que el método <c>Promote</c> devuelve cuando se promueve la transacción.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.IsolationLevel">
      <summary vsli:raw="Gets the isolation level of the transaction.">Obtiene el nivel de aislamiento de la transacción.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Transactions.IsolationLevel&quot; /&gt; values that indicates the isolation level of the transaction.">Uno de los valores de <see cref="T:System.Transactions.IsolationLevel" /> que indica el nivel de aislamiento de la transacción.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instances are equivalent.">Comprueba si dos instancias de <see cref="T:System.Transactions.Transaction" /> especificadas son equivalentes.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the left of the equality operator.">Instancia de <see cref="T:System.Transactions.Transaction" /> situada a la izquierda del operador de igualdad.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the right of the equality operator.">Instancia de <see cref="T:System.Transactions.Transaction" /> situada a la derecha del operador de igualdad.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="x" /> y <paramref name="y" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instances are not equal.">Devuelve un valor que indica si dos instancias de <see cref="T:System.Transactions.Transaction" /> no son iguales.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the left of the inequality operator.">Instancia de <see cref="T:System.Transactions.Transaction" /> situada a la izquierda del operador de desigualdad.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the right of the inequality operator.">Instancia de <see cref="T:System.Transactions.Transaction" /> situada a la derecha del operador de desigualdad.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="x" /> y <paramref name="y" /> no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Promotes and enlists a durable resource manager that supports two phase commit to participate in a transaction.">Promueve e inscribe un administrador de recursos duradero que admite la confirmación en dos fases para participar en una transacción.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">Identificador único para un administrador de recursos, que debería conservarse cuando hay un error del administrador de recursos o un reinicio.</param>
      <param name="promotableNotification" vsli:raw="An object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.">Un objeto que actúa como un delegado de confirmación para una transacción no distribuida interna a un administrador de recursos.</param>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two phase commit notifications.">Objeto que implementa la interfaz <see cref="T:System.Transactions.IEnlistmentNotification" /> para recibir notificaciones de confirmación en dos fases.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> si el administrador de recursos desea realizar un trabajo adicional durante la fase de preparación.</param>
    </member>
    <member name="P:System.Transactions.Transaction.PromoterType">
      <summary vsli:raw="Uniquely identifies the format of the &lt;c&gt;byte[]&lt;/c&gt; returned by the Promote method when the transaction is promoted.">Identifica de forma única el formato de <c>byte[]</c> que el método Promote devuelve cuando se promueve la transacción.</summary>
      <returns vsli:raw="A guid that uniquely identifies the format of the &lt;c&gt;byte[]&lt;/c&gt; returned by the Promote method when the transaction is promoted.">GUID que identifica de forma única el formato del <c>Byte []</c> devuelto por el método Promote cuando se promueve la transacción.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback">
      <summary vsli:raw="Rolls back (aborts) the transaction.">Revierte (anula) la transacción.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback(System.Exception)">
      <summary vsli:raw="Rolls back (aborts) the transaction.">Revierte (anula) la transacción.</summary>
      <param name="e" vsli:raw="An explanation of why a rollback occurred.">Explicación de por qué se ha producido una operación de reversión.</param>
    </member>
    <member name="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary vsli:raw="Sets the distributed transaction identifier generated by the non-MSDTC promoter.">Establece el identificador de transacción distribuida generado por el promotor que no es de MSDTC.</summary>
      <param name="promotableNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">Interfaz <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementada por el participante.</param>
      <param name="distributedTransactionIdentifier" vsli:raw="The identifier for the transaction used by the distributed transaction manager.">El identificador de la transacción usado por el administrador de transacciones distribuidas.</param>
    </member>
    <member name="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize this transaction.">Obtiene una clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar esta transacción.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; ) for this serialization.">Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.</param>
    </member>
    <member name="E:System.Transactions.Transaction.TransactionCompleted">
      <summary vsli:raw="Indicates that the transaction is completed.">Indica que se ha finalizado la transacción.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt to subscribe this event on a transaction that has been disposed.">Se intenta suscribir este evento en una transacción que se ha eliminado.</exception>
    </member>
    <member name="P:System.Transactions.Transaction.TransactionInformation">
      <summary vsli:raw="Retrieves additional information about a transaction.">Recupera información adicional sobre una transacción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionInformation&quot; /&gt; that contains additional information about the transaction.">
        <see cref="T:System.Transactions.TransactionInformation" /> que contiene información adicional acerca de la transacción.</returns>
    </member>
    <member name="T:System.Transactions.TransactionAbortedException">
      <summary vsli:raw="The exception that is thrown when an operation is attempted on a transaction that has already been rolled back, or an attempt is made to commit the transaction and the transaction aborts.">La excepción que se produce cuando se intenta una operación en una transacción que ya se ha deshecho o se intenta confirmar la transacción y se anula la transacción.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionAbortedException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified serialization and streaming context information.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionAbortedException" /> con la información de serialización y contexto de secuencia especificada.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de serialización.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de contexto de serialización.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified message.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionAbortedException" /> con el mensaje especificado.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified message and inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionAbortedException" /> con el mensaje y una excepción interna especificados.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Obtiene la instancia de la excepción que causó la excepción actual. Para obtener más información, vea la propiedad <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionCompletedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Transactions.Transaction.TransactionCompleted&quot; /&gt; event of a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; class.">Representa el método que controla el evento <see cref="E:System.Transactions.Transaction.TransactionCompleted" /> de <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Transactions.TransactionEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Transactions.TransactionEventArgs">
      <summary vsli:raw="Provides data for the following transaction events: &lt;see cref=&quot;E:System.Transactions.TransactionManager.DistributedTransactionStarted&quot; /&gt;, &lt;see cref=&quot;E:System.Transactions.Transaction.TransactionCompleted&quot; /&gt;.">Proporciona los datos para los eventos de transacción siguientes: <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" />, <see cref="E:System.Transactions.Transaction.TransactionCompleted" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionEventArgs" />.</summary>
    </member>
    <member name="P:System.Transactions.TransactionEventArgs.Transaction">
      <summary vsli:raw="Gets the transaction for which event status is provided.">Obtiene la transacción para la que se proporciona el estado del evento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; for which event status is provided.">
        <see cref="T:System.Transactions.Transaction" /> para el que se proporciona el estado del evento.</returns>
    </member>
    <member name="T:System.Transactions.TransactionException">
      <summary vsli:raw="The exception that is thrown when you attempt to do work on a transaction that cannot accept new work.">La excepción que se produce cuando intenta trabajar en una transacción que no puede aceptar el nuevo trabajo.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified serialization and streaming context information.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionException" /> con la información de serialización y contexto de secuencia especificada.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de serialización.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de contexto de serialización.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified message.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionException" /> con el mensaje especificado.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified message and inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionException" /> con el mensaje y una excepción interna especificados.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Obtiene la instancia de la excepción que causó la excepción actual. Para obtener más información, vea la propiedad <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionInDoubtException">
      <summary vsli:raw="The exception that is thrown when an operation is attempted on a transaction that is in doubt, or an attempt is made to commit the transaction and the transaction becomes InDoubt.">La excepción que se produce cuando se intenta una operación en una transacción que está en duda o se intenta confirmar la transacción y ésta pasa al estado de en duda.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionInDoubtException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified serialization and streaming context information.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionInDoubtException" /> con la información de serialización y contexto de secuencia especificada.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de serialización.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de contexto de serialización.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified message.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionInDoubtException" /> con el mensaje especificado.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified message and inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionInDoubtException" /> con el mensaje y una excepción interna especificados.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Obtiene la instancia de la excepción que causó la excepción actual. Para obtener más información, vea la propiedad <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionInformation">
      <summary vsli:raw="Provides additional information regarding a transaction.">Proporciona información adicional respecto a una transacción.</summary>
    </member>
    <member name="P:System.Transactions.TransactionInformation.CreationTime">
      <summary vsli:raw="Gets the creation time of the transaction.">Obtiene la hora de creación de la transacción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the creation time of the transaction.">
        <see cref="T:System.DateTime" /> que contiene la hora de creación de la transacción.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.DistributedIdentifier">
      <summary vsli:raw="Gets a unique identifier of the escalated transaction.">Obtiene un identificador único de la transacción elevada a otras instancias de proceso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the unique identifier of the escalated transaction.">
        <see cref="T:System.Guid" /> que contiene el identificador único de la transacción elevada.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.LocalIdentifier">
      <summary vsli:raw="Gets a unique identifier of the transaction.">Obtiene un identificador único de la transacción.</summary>
      <returns vsli:raw="A unique identifier of the transaction.">Identificador único de la transacción.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.Status">
      <summary vsli:raw="Gets the status of the transaction.">Obtiene el estado de la transacción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionStatus&quot; /&gt; that contains the status of the transaction.">
        <see cref="T:System.Transactions.TransactionStatus" /> que contiene el estado de la transacción.</returns>
    </member>
    <member name="T:System.Transactions.TransactionInterop">
      <summary vsli:raw="Facilitates interaction between &lt;see cref=&quot;N:System.Transactions&quot; /&gt; and components that were previously written to interact with MSDTC, COM+, or &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt;. This class cannot be inherited.">Facilita la interacción entre <see cref="N:System.Transactions" /> y componentes que se han escrito previamente para interactuar con MSDTC, COM+ o <see cref="N:System.EnterpriseServices" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance that represents a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.">Obtiene una instancia de <see cref="T:System.Transactions.IDtcTransaction" /> que representa <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="transaction" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance to be marshaled.">Instancia de <see cref="T:System.Transactions.Transaction" /> de la que se van a calcular las referencias.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance that represents a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.  The &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance is compatible with the unmanaged form of ITransaction used by MSDTC and with the Managed form of &lt;see cref=&quot;T:System.EnterpriseServices.ITransaction&quot; /&gt; used by &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt;.">Instancia de <see cref="T:System.Transactions.IDtcTransaction" /> que representa <see cref="T:System.Transactions.Transaction" />.  La instancia de <see cref="T:System.Transactions.IDtcTransaction" /> es compatible con el formulario no administrado de ITransaction que utiliza MSDTC y con el formulario administrado de <see cref="T:System.EnterpriseServices.ITransaction" /> que <see cref="N:System.EnterpriseServices" /> utiliza.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
      <summary vsli:raw="Transforms a transaction object into an export transaction cookie.">Transforma un objeto de transacción en una cookie de transacción de exportación.</summary>
      <param name="transaction" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object to be marshaled.">Objeto <see cref="T:System.Transactions.Transaction" /> del que se van a calcular las referencias.</param>
      <param name="whereabouts" vsli:raw="An address that describes the location of the destination transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.">Dirección que describe la ubicación del administrador de transacciones de destino. Esto permite a dos administradores de transacciones comunicarse entre sí y de ese modo propagar una transacción de un sistema al otro.</param>
      <returns vsli:raw="An export transaction cookie representing the specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object.">Cookie de transacción de exportación que representa el objeto <see cref="T:System.Transactions.Transaction" /> especificado.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from a specified &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt;.">Genera un objeto <see cref="T:System.Transactions.Transaction" /> a partir de un objeto <see cref="T:System.Transactions.IDtcTransaction" /> especificado.</summary>
      <param name="transactionNative" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; object to be marshaled.">Objeto <see cref="T:System.Transactions.IDtcTransaction" /> del que se van a calcular las referencias.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that represents the given &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt;.">Instancia de <see cref="T:System.Transactions.Transaction" /> que representa el objeto <see cref="T:System.Transactions.IDtcTransaction" /> dado.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified an export cookie.">Genera un objeto <see cref="T:System.Transactions.Transaction" /> a partir de la cookie de exportación especificada.</summary>
      <param name="cookie" vsli:raw="A marshaled form of the transaction object.">Formulario del que se han serializado las referencias del objeto de transacción.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified export cookie.">Objeto <see cref="T:System.Transactions.Transaction" /> generado a partir de la cookie de exportación especificada.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance from the specified transmitter propagation token.">Genera una instancia de <see cref="T:System.Transactions.Transaction" /> a partir del token de propagación de transmisor especificado.</summary>
      <param name="propagationToken" vsli:raw="A propagation token representing a transaction.">Token de propagación que representa una transacción.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified transmitter propagation token.">Objeto <see cref="T:System.Transactions.Transaction" /> generado a partir del token de propagación de transmisor especificado.</returns>
      <exception cref="T:System.Transactions.TransactionManagerCommunicationException" vsli:raw="The deserialization of a transaction fails because the transaction manager cannot be contacted. This may be caused by network firewall or security settings.">En la deserialización de una transacción se produce un error porque no se puede establecer contacto con el administrador de transacciones. La causa puede ser la existencia de un firewall de red o la configuración de seguridad.</exception>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
      <summary vsli:raw="Generates a propagation token for the specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.">Genera un token de propagación para el objeto <see cref="T:System.Transactions.Transaction" /> especificado.</summary>
      <param name="transaction" vsli:raw="A transaction to be marshaled into a propagation token.">Transacción para la que se van a serializar las referencias en un token de propagación.</param>
      <returns vsli:raw="This method, together with the &lt;see cref=&quot;M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])&quot; /&gt; method, provide functionality for Transmitter/Receiver propagation, in which the transaction is &quot;pulled&quot; from the remote machine when the latter is called to unmarshal the transaction.  &#xA;  &#xA; For more information on different propagation models, see &lt;see cref=&quot;T:System.Transactions.TransactionInterop&quot; /&gt; class.">Este método, junto con el método <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />, proporciona funciones para la propagación de transmisor y receptor, en la que se "extrae" la transacción del equipo remoto cuando se llama a este último para deserializar la transacción.  
Para más información sobre distintos modelos de propagación, vea la clase <see cref="T:System.Transactions.TransactionInterop" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetWhereabouts">
      <summary vsli:raw="Gets the Whereabouts of the distributed transaction manager that &lt;see cref=&quot;N:System.Transactions&quot; /&gt; uses.">Obtiene la situación del administrador de transacciones distribuidas que <see cref="N:System.Transactions" /> utiliza.</summary>
      <returns vsli:raw="The Whereabouts of the distributed transaction manager that &lt;see cref=&quot;N:System.Transactions&quot; /&gt; uses.">Obtiene la situación del administrador de transacciones distribuidas que <see cref="N:System.Transactions" /> utiliza.</returns>
    </member>
    <member name="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
      <summary vsli:raw="The type of the distributed transaction processor.">Tipo de procesador de la transacción distribuida.</summary>
    </member>
    <member name="T:System.Transactions.TransactionManager">
      <summary vsli:raw="Contains methods used for transaction management. This class cannot be inherited.">Contiene métodos utilizados para la administración de transacciones. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Transactions.TransactionManager.DefaultTimeout">
      <summary vsli:raw="Gets the default timeout interval for new transactions.">Obtiene el intervalo de tiempo de espera predeterminado para nuevas transacciones.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the timeout interval for new transactions.">Valor <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo de espera para las nuevas transacciones.</returns>
    </member>
    <member name="E:System.Transactions.TransactionManager.DistributedTransactionStarted">
      <summary vsli:raw="Indicates that a distributed transaction has started.">Indica que se ha iniciado una transacción distribuida.</summary>
    </member>
    <member name="P:System.Transactions.TransactionManager.HostCurrentCallback">
      <summary vsli:raw="Gets or sets a custom transaction factory.">Obtiene o establece una fábrica de transacciones personalizada.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.HostCurrentTransactionCallback&quot; /&gt; that contains a custom transaction factory.">
        <see cref="T:System.Transactions.HostCurrentTransactionCallback" /> que contiene una fábrica de transacciones personalizada.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.MaximumTimeout">
      <summary vsli:raw="Gets the default maximum timeout interval for new transactions.">Obtiene el intervalo de tiempo de espera máximo predeterminado para las nuevas transacciones.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the maximum timeout interval that is allowed when creating new transactions.">Valor de <see cref="T:System.TimeSpan" /> que especifica el intervalo de tiempo de espera máximo que se permite al crear nuevas transacciones.</returns>
    </member>
    <member name="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)">
      <summary vsli:raw="Notifies the transaction manager that a resource manager recovering from failure has finished reenlisting in all unresolved transactions.">Notifica al administrador de transacciones que un administrador de recursos que se está recuperando de un error ha terminado de volver a inscribirse en todas las transacciones sin resolver.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that uniquely identifies the resource to be recovered from.">
        <see cref="T:System.Guid" /> que identifica de forma única el recurso del que se va a realizar la recuperación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="resourceManagerIdentifier" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)">
      <summary vsli:raw="Reenlists a durable participant in a transaction.">Vuelve a inscribir un participante duradero en una transacción.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that uniquely identifies the resource manager.">
        <see cref="T:System.Guid" /> que identifica de forma única el administrador de recursos.</param>
      <param name="recoveryInformation" vsli:raw="Contains additional information of recovery information.">Contiene información adicional de información de recuperación.</param>
      <param name="enlistmentNotification" vsli:raw="A resource object that implements &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; to receive notifications.">Objeto de recurso que implementa <see cref="T:System.Transactions.IEnlistmentNotification" /> para recibir las notificaciones.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; that describes the enlistment.">Objeto <see cref="T:System.Transactions.Enlistment" /> que describe la inscripción.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;recoveryInformation&quot; /&gt; is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Transaction Manager information in &lt;paramref name=&quot;recoveryInformation&quot; /&gt; does not match the configured transaction manager.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;RecoveryInformation&quot; /&gt; is not recognized by &lt;see cref=&quot;N:System.Transactions&quot; /&gt;.">
        <paramref name="recoveryInformation" /> no es válido.  
o bien 
La información del administrador de transacciones especificada en <paramref name="recoveryInformation" /> no coincide con el administrador de transacciones configurado.  
o bien 
 <see cref="N:System.Transactions" /> no reconoce <paramref name="RecoveryInformation" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)&quot; /&gt; has already been called for the specified &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt;. The reenlistment is rejected.">Ya se ha llamado al método <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" /> para el parámetro <paramref name="resourceManagerIdentifier" /> especificado. Se rechaza la nueva inscripción.</exception>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="The &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt; does not match the content of the specified recovery information in &lt;paramref name=&quot;recoveryInformation&quot; /&gt;.">
        <paramref name="resourceManagerIdentifier" /> no coincide con el contenido de la información de recuperación especificada en el parámetro <paramref name="recoveryInformation" />.</exception>
    </member>
    <member name="T:System.Transactions.TransactionManagerCommunicationException">
      <summary vsli:raw="The exception that is thrown when a resource manager cannot communicate with the transaction manager.">La excepción que se produce cuando un administrador de recursos no puede comunicar con el administrador de transacciones.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionManagerCommunicationException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified serialization and streaming context information.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con la información de serialización y contexto de secuencia especificada.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de serialización.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de contexto de serialización.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified message.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con el mensaje especificado.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified message and inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con el mensaje y una excepción interna especificados.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Obtiene la instancia de la excepción que causó la excepción actual. Para obtener más información, vea la propiedad <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionOptions">
      <summary vsli:raw="Contains additional information that specifies transaction behaviors.">Contiene información adicional que especifica los comportamientos de la transacción.</summary>
    </member>
    <member name="M:System.Transactions.TransactionOptions.Equals(System.Object)">
      <summary vsli:raw="Determines whether this &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance and the specified object are equal.">Determina si esta instancia de <see cref="T:System.Transactions.TransactionOptions" /> y el objeto especificado son iguales.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">Objeto que se va a comparar con esta instancia.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> y esta instancia de <see cref="T:System.Transactions.TransactionOptions" /> son idénticos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.IsolationLevel">
      <summary vsli:raw="Gets or sets the isolation level of the transaction.">Obtiene o establece el nivel de aislamiento de la transacción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IsolationLevel&quot; /&gt; enumeration that specifies the isolation level of the transaction.">Enumeración <see cref="T:System.Transactions.IsolationLevel" /> que especifica el nivel de aislamiento de la transacción.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Equality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instances are equivalent.">Comprueba si dos instancias de <see cref="T:System.Transactions.TransactionOptions" /> especificadas son equivalentes.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the left of the equality operator.">Instancia de <see cref="T:System.Transactions.TransactionOptions" /> situada a la izquierda del operador de igualdad.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the right of the equality operator.">Instancia de <see cref="T:System.Transactions.TransactionOptions" /> situada a la derecha del operador de igualdad.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="x" /> y <paramref name="y" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Inequality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instances are not equal.">Devuelve un valor que indica si dos instancias de <see cref="T:System.Transactions.TransactionOptions" /> no son iguales.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the left of the equality operator.">Instancia de <see cref="T:System.Transactions.TransactionOptions" /> situada a la izquierda del operador de igualdad.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the right of the equality operator.">Instancia de <see cref="T:System.Transactions.TransactionOptions" /> situada a la derecha del operador de igualdad.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="x" /> y <paramref name="y" /> no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.Timeout">
      <summary vsli:raw="Gets or sets the timeout period for the transaction.">Obtiene o establece el período de tiempo de espera de la transacción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the timeout period for the transaction.">Valor <see cref="T:System.TimeSpan" /> que especifica el período de tiempo de espera de la transacción.</returns>
    </member>
    <member name="T:System.Transactions.TransactionPromotionException">
      <summary vsli:raw="The exception that is thrown when a promotion fails.">La excepción que se produce cuando hay un error en una promoción.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionPromotionException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified serialization and streaming context information.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionPromotionException" /> con la información de serialización y contexto de secuencia especificada.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de serialización.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que describe un error de contexto de serialización.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified message.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionPromotionException" /> con el mensaje especificado.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified message and inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionPromotionException" /> con el mensaje y una excepción interna especificados.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">
        <see cref="T:System.String" /> que contiene un mensaje que explica por qué se produjo la excepción.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Obtiene la instancia de la excepción que causó la excepción actual. Para obtener más información, vea la propiedad <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionScope">
      <summary vsli:raw="Makes a code block transactional. This class cannot be inherited.">Crea un bloque de código transaccional. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> y establece la transacción especificada como la transacción de ambiente, de manera que el trabajo transaccional realizado dentro del ámbito utiliza esta transacción.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">La transacción que se va a establecer como la transacción de ambiente, para que el trabajo transaccional realizado dentro del ámbito utilice esta transacción.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con el valor de tiempo de espera especificado y establece la transacción especificada como la transacción de ambiente, de manera que el trabajo transaccional realizado dentro del ámbito utiliza esta transacción.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">La transacción que se va a establecer como la transacción de ambiente, para que el trabajo transaccional realizado dentro del ámbito utilice esta transacción.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> tras el cual el ámbito de la transacción supera el tiempo de espera y se anula la transacción.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value and COM+ interoperability requirements, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con el valor de tiempo de espera especificado y los requisitos de interoperabilidad de COM+ y establece la transacción especificada como la transacción de ambiente, de modo que el trabajo transaccional realizado dentro del ámbito utiliza esta transacción.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">La transacción que se va a establecer como la transacción de ambiente, para que el trabajo transaccional realizado dentro del ámbito utilice esta transacción.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> tras el cual el ámbito de la transacción supera el tiempo de espera y se anula la transacción.</param>
      <param name="interopOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.EnterpriseServicesInteropOption&quot; /&gt; enumeration that describes how the associated transaction interacts with COM+ transactions.">Instancia de la enumeración <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> que describe cómo interactúa la transacción asociada con transacciones de COM+.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">[Compatible con .NET Framework 4.5.1 y versiones posteriores] 
Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con el valor de tiempo de espera especificado y establece la transacción especificada como la transacción de ambiente, de manera que el trabajo transaccional realizado dentro del ámbito utiliza esta transacción.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">La transacción que se va a establecer como la transacción de ambiente, para que el trabajo transaccional realizado dentro del ámbito utilice esta transacción.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> tras el cual el ámbito de la transacción supera el tiempo de espera y se anula la transacción.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Una instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> que describe si la transacción de ambiente asociada al ámbito de transacción fluirá a través de las continuaciones de subproceso cuando se utilizan los patrones de programación Task o async/await asincrónicos de .NET.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">[Compatible con .NET Framework 4.5.1 y versiones posteriores] 
Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> y establece la transacción especificada como la transacción de ambiente, de manera que el trabajo transaccional realizado dentro del ámbito utiliza esta transacción.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">La transacción que se va a establecer como la transacción de ambiente, para que el trabajo transaccional realizado dentro del ámbito utilice esta transacción.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Una instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> que describe si la transacción de ambiente asociada al ámbito de transacción fluirá a través de las continuaciones de subproceso cuando se utilizan los patrones de programación Task o async/await asincrónicos de .NET.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified asynchronous flow option.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con la opción de flujo asincrónica especificada.</summary>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Una instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> que describe si la transacción de ambiente asociada al ámbito de transacción fluirá a través de las continuaciones de subproceso cuando se utilizan los patrones de programación Task o async/await asincrónicos de .NET.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con los requisitos especificados.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeOption" /> que describe los requisitos de transacción asociados a este ámbito de la transacción.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value and requirements.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con el valor de tiempo de espera y los requisitos especificados.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeOption" /> que describe los requisitos de transacción asociados a este ámbito de la transacción.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> tras el cual el ámbito de la transacción supera el tiempo de espera y se anula la transacción.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, requirements, and asynchronous flow option.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con el valor de tiempo de espera, los requisitos y la opción de flujo asíncrona especificados.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeOption" /> que describe los requisitos de transacción asociados a este ámbito de la transacción.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> tras el cual el ámbito de la transacción supera el tiempo de espera y se anula la transacción.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Una instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> que describe si la transacción de ambiente asociada al ámbito de transacción fluirá a través de las continuaciones de subproceso cuando se utilizan los patrones de programación Task o async/await asincrónicos de .NET.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con los requisitos especificados.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeOption" /> que describe los requisitos de transacción asociados a este ámbito de la transacción.</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">Estructura <see cref="T:System.Transactions.TransactionOptions" /> que describe las opciones de transacción que se van a utilizar si se crea una nueva transacción. Si se utiliza una transacción existente, el valor de tiempo de espera de este parámetro se aplica al ámbito de la transacción. Si expira este tiempo antes de que se deseche el ámbito, se anula la transacción.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified scope and COM+ interoperability requirements, and transaction options.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con el ámbito y los requisitos de interoperabilidad de COM+ especificados y opciones de transacción.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeOption" /> que describe los requisitos de transacción asociados a este ámbito de la transacción.</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">Estructura <see cref="T:System.Transactions.TransactionOptions" /> que describe las opciones de transacción que se van a utilizar si se crea una nueva transacción. Si se utiliza una transacción existente, el valor de tiempo de espera de este parámetro se aplica al ámbito de la transacción. Si expira este tiempo antes de que se deseche el ámbito, se anula la transacción.</param>
      <param name="interopOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.EnterpriseServicesInteropOption&quot; /&gt; enumeration that describes how the associated transaction interacts with COM+ transactions.">Instancia de la enumeración <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> que describe cómo interactúa la transacción asociada con transacciones de COM+.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements and asynchronous flow option.">[Compatible con .NET Framework 4.5.1 y versiones posteriores] 
Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con los requisitos y la opción de flujo asíncrona especificados.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeOption" /> que describe los requisitos de transacción asociados a este ámbito de la transacción.</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">Estructura <see cref="T:System.Transactions.TransactionOptions" /> que describe las opciones de transacción que se van a utilizar si se crea una nueva transacción. Si se utiliza una transacción existente, el valor de tiempo de espera de este parámetro se aplica al ámbito de la transacción. Si expira este tiempo antes de que se deseche el ámbito, se anula la transacción.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Una instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> que describe si la transacción de ambiente asociada al ámbito de transacción fluirá a través de las continuaciones de subproceso cuando se utilizan los patrones de programación Task o async/await asincrónicos de .NET.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements and asynchronous flow option.">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.TransactionScope" /> con los requisitos y la opción de flujo asíncrona especificados.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeOption" /> que describe los requisitos de transacción asociados a este ámbito de la transacción.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Una instancia de la enumeración <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> que describe si la transacción de ambiente asociada al ámbito de transacción fluirá a través de las continuaciones de subproceso cuando se utilizan los patrones de programación Task o async/await asincrónicos de .NET.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.Complete">
      <summary vsli:raw="Indicates that all operations within the scope are completed successfully.">Indica que finalizan correctamente todas las operaciones dentro del ámbito.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method has already been called once.">Se ha llamado ya una vez a este método.</exception>
    </member>
    <member name="M:System.Transactions.TransactionScope.Dispose">
      <summary vsli:raw="Ends the transaction scope.">Finaliza el ámbito de la transacción.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeAsyncFlowOption">
      <summary vsli:raw="Specifies whether transaction flow across thread continuations is enabled for &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt;.">Especifica si el flujo de la transacción a través de las continuaciones de subproceso está habilitado para <see cref="T:System.Transactions.TransactionScope" />.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Enabled">
      <summary vsli:raw="Specifies that transaction flow across thread continuations is enabled.">Especifica que se habilita el flujo de la transacción a través de las continuaciones de subproceso.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Suppress">
      <summary vsli:raw="Specifies that transaction flow across thread continuations is suppressed. This is the default setting if no &lt;see langword=&quot;TransactionScopeAsyncFlowOption&quot; /&gt; is specified in the &lt;see cref=&quot;Overload:System.Transactions.TransactionScope.#ctor&quot; /&gt; constructor.">Especifica que se suprime el flujo de la transacción a través de las continuaciones de subproceso. Este es el valor predeterminado si no hay ninguna opción <see langword="TransactionScopeAsyncFlowOption" /> especificada en el constructor <see cref="Overload:System.Transactions.TransactionScope.#ctor" />.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeOption">
      <summary vsli:raw="Provides additional options for creating a transaction scope.">Proporciona opciones adicionales para crear un ámbito de la transacción.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Required">
      <summary vsli:raw="A transaction is required by the scope. It uses an ambient transaction if one already exists. Otherwise, it creates a new transaction before entering the scope. This is the default value.">El ámbito requiere una transacción. Utiliza una transacción de ambiente si ya existe una. De lo contrario, crea una nueva transacción antes de entrar en el ámbito. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.RequiresNew">
      <summary vsli:raw="A new transaction is always created for the scope.">Siempre se crea una nueva transacción para el ámbito.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Suppress">
      <summary vsli:raw="The ambient transaction context is suppressed when creating the scope. All operations within the scope are done without an ambient transaction context.">Se suprime el contexto de transacción de ambiente al crear el ámbito. Todas las operaciones dentro del ámbito se realizan sin un contexto de transacción de ambiente.</summary>
    </member>
    <member name="T:System.Transactions.TransactionStartedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Transactions.TransactionManager.DistributedTransactionStarted&quot; /&gt; event of a &lt;see cref=&quot;T:System.Transactions.TransactionManager&quot; /&gt; class.">Representa el método que controlará el evento <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" /> de una clase <see cref="T:System.Transactions.TransactionManager" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; that contains the transaction from which transaction information can be retrieved.">
        <see cref="T:System.Transactions.TransactionEventArgs" /> que contiene la transacción a partir de la que se puede recuperar la información de transacción.</param>
    </member>
    <member name="T:System.Transactions.TransactionStatus">
      <summary vsli:raw="Describes the current status of a distributed transaction.">Describe el estado actual de una transacción distribuida.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Aborted">
      <summary vsli:raw="The transaction has been rolled back.">Se ha deshecho la transacción.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Active">
      <summary vsli:raw="The status of the transaction is unknown, because some participants must still be polled.">El estado de la transacción es desconocido, porque se deben registrar los votos de algunos participantes todavía.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Committed">
      <summary vsli:raw="The transaction has been committed.">La transacción se ha confirmado.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.InDoubt">
      <summary vsli:raw="The status of the transaction is unknown.">No se conoce el estado de la transacción.</summary>
    </member>
  </members>
</doc>