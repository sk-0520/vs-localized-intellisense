<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary vsli:raw="Represents an operation with context to be used for logging.">Representa una operación con el contexto que se usará para el registro.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName" vsli:raw="The name of the operation.">Nombre de la operación.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary vsli:raw="Gets or sets the flags (defined by the W3C ID specification) associated with the activity.">Obtiene las marcas (definidas por la especificación del id. W3C) asociadas a la actividad.</summary>
      <returns vsli:raw="the flags associated with the activity.">marcas asociadas a la actividad.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new baggage item with the specified key and value.">Actualiza <see cref="T:System.Diagnostics.Activity" /> para tener un nuevo elemento de equipaje con la clave y el valor especificados.</summary>
      <param name="key" vsli:raw="The baggage key.">Clave de equipaje.</param>
      <param name="value" vsli:raw="The baggage value.">Valor de equipaje.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new tag with the provided &lt;paramref name=&quot;key&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt;.">Actualiza <see cref="T:System.Diagnostics.Activity" /> para que tenga una etiqueta nueva con los elementos <paramref name="key" /> y <paramref name="value" /> proporcionados. .</summary>
      <param name="key" vsli:raw="The tag key.">Clave de etiqueta.</param>
      <param name="value" vsli:raw="The tag value.">Valor de etiqueta.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary vsli:raw="Gets a collection of key/value pairs that represents information that is passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtiene una colección de pares clave-valor que representa la información que se pasa a los elementos secundarios de este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns vsli:raw="Information that's passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Una enumeración de pares de clave y valor de cadena de cadena.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary vsli:raw="Gets or sets the current operation (&lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;) for the current thread. This flows across async calls.">Obtiene o establece la operación actual (<see cref="T:System.Diagnostics.Activity" />) del subproceso actual.  Fluye a través de llamadas asincrónicas.</summary>
      <returns vsli:raw="The current operation for the current thread.">Operación actual para el subproceso actual.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary vsli:raw="Gets or sets the default ID format for the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtiene o establece el formato del id. predeterminado para el elemento <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary vsli:raw="Gets the duration of the operation.">Obtiene la duración de la operación.</summary>
      <returns vsli:raw="The delta between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the end time if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has ended (&lt;see cref=&quot;M:System.Diagnostics.Activity.Stop&quot; /&gt; or &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was called), or &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has not ended and &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was not called.">La diferencia entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> y la hora de finalización <see cref="T:System.Diagnostics.Activity" /> si ha finalizado <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> ( <see cref="T:System.Diagnostics.Activity" /><see cref="M:System.Diagnostics.Activity.Stop" /> o se ha llamado <see cref="F:System.TimeSpan.Zero" /> a), o si no <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> ha finalizado y no se ha llamado a.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary vsli:raw="Gets or sets a value that detrmines if the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt; is always used to define the default ID format.">Obtiene o establece un valor que determina si el elemento <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> siempre se utiliza para definir el formato del id. predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always use the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para usar siempre el <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary vsli:raw="Returns the value of a key-value pair added to the activity with &lt;see cref=&quot;M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)&quot; /&gt;.">Devuelve el valor de un par clave-valor agregado a la actividad con <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key" vsli:raw="The baggage key.">Clave de equipaje.</param>
      <returns vsli:raw="The value of the key-value-pair item if it exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not exist.">Valor del elemento de par clave-valor si existe o <see langword="null" /> si no existe.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary vsli:raw="Gets an identifier that is specific to a particular request.">Obtiene un identificador específico de una solicitud determinada.</summary>
      <returns vsli:raw="The activity ID.">El id. de la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary vsli:raw="Gets the format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtiene el formato para el elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Formato <see cref="P:System.Diagnostics.Activity.Id" />del.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary vsli:raw="Gets the operation name.">Obtiene el nombre de la operación.</summary>
      <returns vsli:raw="The name of the operation.">Nombre de la operación.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; that created this activity.">Obtiene el elemento primario <see cref="T:System.Diagnostics.Activity" /> que ha creado esta actividad.</summary>
      <returns vsli:raw="The parent of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, if it is from the same process, or &lt;see langword=&quot;null&quot; /&gt; if this instance has no parent (it is a root activity) or if the parent is from outside the process.">Elemento primario de este <see cref="T:System.Diagnostics.Activity" />objeto, si procede del mismo proceso, o <see langword="null" /> si esta instancia no tiene ningún elemento primario (es una actividad raíz) o si el elemento primario es de fuera del proceso.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary vsli:raw="Gets the ID of this activity's parent.">Obtiene el identificador del elemento primario de esta actividad.</summary>
      <returns vsli:raw="The parent ID, if one exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not.">Identificador primario, si existe, o <see langword="null" /> si no lo está.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary vsli:raw="Gets the parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">Obtiene el elemento <see cref="P:System.Diagnostics.Activity.SpanId" /> del objeto primario.</summary>
      <returns vsli:raw="The parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">Del <see cref="P:System.Diagnostics.Activity.SpanId" />elemento primario.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary vsli:raw="Gets a value that indicates whether the W3CIdFlags.Recorded flag is set.">Obtiene un valor que indica si se establece la marca W3CIdFlags.Recorded.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the W3CIdFlags.Recorded flag is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si se establece la marca W3CIdFlags. Recorded; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary vsli:raw="Gets the root ID of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtiene el identificador de raíz de este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns vsli:raw="The root ID, or &lt;see langword=&quot;null&quot; /&gt; if the current instance has either a &lt;see cref=&quot;P:System.Diagnostics.Activity.ParentId&quot; /&gt; or an &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Identificador raíz o <see langword="null" /> si la instancia actual tiene <see cref="P:System.Diagnostics.Activity.ParentId" /> o <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to set its &lt;see cref=&quot;P:System.Diagnostics.Activity.Duration&quot; /&gt; as the difference between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the specified stop time.">Actualiza <see cref="T:System.Diagnostics.Activity" /> para establecer su elemento <see cref="P:System.Diagnostics.Activity.Duration" /> como la diferencia entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> y la hora de finalización especificada.</summary>
      <param name="endTimeUtc" vsli:raw="The UTC stop time.">Hora de finalización UTC.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary vsli:raw="Sets the ID format on this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; before it is started.">Establece el formato del identificador de este objeto <see cref="T:System.Diagnostics.Activity" /> antes de que se inicie.</summary>
      <param name="format" vsli:raw="One of the enumeration values that specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">Uno de los valores de enumeración que especifica el formato de la propiedad <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary vsli:raw="Sets the parent ID using the W3C convention of a TraceId and a SpanId.">Establece el identificador principal mediante la convención W3C de un elemento TraceId y un elemento SpanId.</summary>
      <param name="traceId" vsli:raw="The parent activity's TraceId.">Elemento TraceId de la actividad principal.</param>
      <param name="spanId" vsli:raw="The parent activity's SpanId.">Elemento SpanId de la actividad principal.</param>
      <param name="activityTraceFlags" vsli:raw="One of the enumeration values that specifies flags defined by the W3C standard that are associated with an activity.">Uno de los valores de enumeración que especifica marcas definidas por el estándar W3C asociadas a una actividad.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary vsli:raw="Updates this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; with an ID of &lt;paramref name=&quot;parentId&quot; /&gt; caused this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Actualiza <see cref="T:System.Diagnostics.Activity" /> para indicar que el elemento <see cref="T:System.Diagnostics.Activity" /> con un identificador <paramref name="parentId" /> ha producido <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId" vsli:raw="The ID of the parent operation.">Identificador de la operación principal.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary vsli:raw="Sets the start time of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Establece la hora de inicio de <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; start time in UTC.">Hora de inicio <see cref="T:System.Diagnostics.Activity" /> en formato UTC.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary vsli:raw="Gets the SPAN part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtiene la parte del intervalo del elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The ID for the SPAN part of &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has the W3C format; otherwise, a zero &lt;see langword=&quot;SpanId&quot; /&gt;.">Identificador de la parte del intervalo de <see cref="P:System.Diagnostics.Activity.Id" />, <see cref="T:System.Diagnostics.Activity" /> si tiene el formato del W3C; de lo contrario, <see langword="SpanId" />es cero.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary vsli:raw="Starts the activity.">Inicia la actividad.</summary>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary vsli:raw="Gets the time when the operation started.">Obtiene la hora a la que se ha iniciado la operación.</summary>
      <returns vsli:raw="The UTC time that the operation started.">La hora UTC en que se inició la operación.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary vsli:raw="Stops the activity.">Detiene la actividad.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary vsli:raw="Gets a collection of key/value pairs that represent information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">Obtiene una colección de pares clave-valor que representa la información que se va a registrar junto con <see cref="T:System.Diagnostics.Activity" /> en el sistema de registro.</summary>
      <returns vsli:raw="Information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">Una enumeración de pares de clave-valor de cadena-cadena.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary vsli:raw="Gets the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtiene la parte de TraceId del elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The ID for the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the ID has the W3C format; otherwise, a zero TraceId.">Identificador de la parte TraceId de <see cref="P:System.Diagnostics.Activity.Id" />, si el identificador tiene el formato W3C; de lo contrario, un valor cero TraceId.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary vsli:raw="Gets or sets the W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">Obtiene el encabezado <see langword="tracestate" /> W3C.</summary>
      <returns vsli:raw="The W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">Encabezado del <see langword="tracestate" /> W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary vsli:raw="Specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">Especifica el formato de la propiedad <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary vsli:raw="The hierarchical format.">Formato jerárquico.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary vsli:raw="An unknown format.">Formato desconocido.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary vsli:raw="The W3C format.">Formato W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt; formatted based on a W3C standard.">Representa un elemento <see cref="P:System.Diagnostics.Activity.SpanId" /> con formato según un estándar W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 8 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; to a specified span.">Copia los 8 bytes del elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> actual en un intervalo especificado.</summary>
      <param name="destination" vsli:raw="The span to which the 8 bytes of the SpanID are to be copied.">El intervalo al que los 8 bytes de SpanID van a copiarse.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of eight bytes.">Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de ocho bytes.</summary>
      <param name="idData" vsli:raw="A read-only span of eight bytes.">Intervalo de solo lectura de ocho bytes.</param>
      <returns vsli:raw="The new span ID.">Id. del nuevo intervalo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" /> no contiene ocho bytes.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of 16 hexadecimal characters.">Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de 16 caracteres hexadecimales.</summary>
      <param name="idData" vsli:raw="A span that contains 16 hexadecimal characters.">Intervalo que contiene 16 caracteres hexadecimales.</param>
      <returns vsli:raw="The new span ID.">Id. del nuevo intervalo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;          &#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" /> no tiene 16 caracteres hexadecimales.
O bien 
Los caracteres de <paramref name="idData" /> no son todos caracteres hexadecimales en minúscula o su valor no es cero en todos los casos.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de bytes codificados UTF8.</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">Intervalo de solo lectura de bytes codificados UTF8.</param>
      <returns vsli:raw="The new span ID.">Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; based on a random number (that is very likely to be unique).">Crea un nuevo elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> según un número aleatorio (que muy probablemente sea único).</summary>
      <returns vsli:raw="The new span ID.">Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether this instance and the specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance have the same value.">Determina si esta instancia y la instancia <see cref="T:System.Diagnostics.ActivitySpanId" /> especificada tienen el mismo valor.</summary>
      <param name="spanId" vsli:raw="The instance to compare.">La instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;spanId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="spanId" /> tiene el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary vsli:raw="the current instance and a specified object, which also must be an &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance, have the same value.">la instancia actual y un objeto especificado, que también debe ser una instancia <see cref="T:System.Diagnostics.ActivitySpanId" />, tienen el mismo valor.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Diagnostics.ActivitySpanId" /> con el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the SpanId.">Devuelve el código hash de SpanId.</summary>
      <returns vsli:raw="The hash code of the SpanId.">El código hash de SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have the same value.">Determina si dos instancias <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas tienen el mismo valor.</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">Primera instancia que se va a comparar.</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">Segunda instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is the same as the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor SpanId de <paramref name="spanId1" /> es el mismo valor SpanId de <paramref name="spandId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determine whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have unequal values.">Determine si dos instancias <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas tienen valores distintos.</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">Primera instancia que se va a comparar.</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">Segunda instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is different from the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor SpanId de <paramref name="spanId1" /> es distinto del valor SpanId de <paramref name="spandId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">Representación de cadena hexadecimal de 16 caracteres de este id. de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">Representación de cadena hexadecimal de 16 caracteres de este id. de seguimiento.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary vsli:raw="Specifies flags defined by the W3C standard that are associated with an activity.">Especifica las marcas definidas por el estándar W3C asociadas a una actividad.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary vsli:raw="The activity has not been marked.">No se marcó la actividad.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary vsli:raw="The activity (or more likely its parents) has been marked as useful to record.">La actividad (o, lo que es más probable, sus elementos primarios) están marcados como útiles para registrar.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.TraceId&quot; /&gt; whose format is based on a W3C standard.">Representa un elemento <see cref="P:System.Diagnostics.Activity.TraceId" /> cuyo formato se basa en un estándar W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 16 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; to a specified span.">Copia los 16 bytes del elemento <see cref="T:System.Diagnostics.ActivityTraceId" /> actual en un intervalo especificado.</summary>
      <param name="destination" vsli:raw="The span to which the 16 bytes of the trace ID are to be copied.">Intervalo en el que los 16 bytes de TraceID van a copiarse.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 16 bytes.">Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de 16 bytes.</summary>
      <param name="idData" vsli:raw="A read-only span of 16 bytes.">Intervalo de solo lectura de 16 bytes.</param>
      <returns vsli:raw="The new trace ID.">Nuevo id. de seguimiento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" /> no contiene ocho bytes.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 32 hexadecimal characters.">Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de 32 caracteres hexadecimales.</summary>
      <param name="idData" vsli:raw="A span that contains 32 hexadecimal characters.">Intervalo que contiene 32 caracteres hexadecimales.</param>
      <returns vsli:raw="The new trace ID.">Nuevo id. de seguimiento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;&#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" /> no tiene 16 caracteres hexadecimales.
o bien
Los caracteres de <paramref name="idData" /> no son todos caracteres hexadecimales en minúscula o su valor no es cero en todos los casos.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de bytes codificados UTF8.</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">Intervalo de solo lectura de bytes codificados UTF8.</param>
      <returns vsli:raw="The new trace ID.">Nuevo id. de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; based on a random number (that is very likely to be unique).">Crea un nuevo elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> según un número aleatorio (que muy probablemente sea único).</summary>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt;.">Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether the current instance and a specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; are equal.">Determina si la instancia actual y un objeto <see cref="T:System.Diagnostics.ActivityTraceId" /> especificado son iguales.</summary>
      <param name="traceId" vsli:raw="The instance to compare.">La instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;traceId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="traceId" /> tiene el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance and a specified object, which must also be an &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instance, have the same value.">Determina si esta instancia y un objeto especificado, que también debe ser una instancia <see cref="T:System.Diagnostics.ActivityTraceId" />, tienen el mismo valor.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Diagnostics.ActivityTraceId" /> con el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the TraceId.">Devuelve el código hash del identificador de seguimiento.</summary>
      <returns vsli:raw="The hash code of the TraceId.">El código hash del identificador de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">Determina si dos instancias <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas tienen el mismo valor.</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">Primera instancia que se va a comparar.</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">Segunda instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is the same as the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el identificador de seguimiento de <paramref name="traceId1" /> es el mismo que el de <paramref name="traceId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">Determina si dos instancias <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas tienen el mismo valor.</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">Primera instancia que se va a comparar.</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">Segunda instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is different from the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el identificador de seguimiento de <paramref name="traceId1" /> es distinto al de <paramref name="traceId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this span ID.">Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">Representación de cadena hexadecimal de 32 caracteres de este identificador de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this trace ID.">Devuelve una cadena hexadecimal de 32 caracteres que representa este identificador de seguimiento.</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">Representación de cadena hexadecimal de 32 caracteres de este id. de seguimiento.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary vsli:raw="Provides an implementation of the abstract &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class that represents a named place to which a source sends its information (events).">Proporciona una implementación de la clase abstracta <see cref="T:System.Diagnostics.DiagnosticSource" /> que representa una ubicación con nombre a la que un origen envía su información (eventos).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Crea un nuevo <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name" vsli:raw="The name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Nombre de <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary vsli:raw="Gets the collection of listeners for this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Obtiene la colección de clientes de escucha de este elemento <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary vsli:raw="Disposes the NotificationListeners.">Desecha el elemento NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary vsli:raw="Determines whether there are any registered subscribers.">Determina si hay algún suscriptor registrado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are any registered subscribers, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si hay algún suscriptor registrado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary vsli:raw="Checks whether the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt; is enabled.">Comprueba si <see cref="T:System.Diagnostics.DiagnosticListener" /> está habilitado.</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las notificaciones están habilitadas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Checks if any subscriber to the diagnostic events is interested in receiving events with this name. Subscribers indicate their interest using a delegate provided in &lt;see cref=&quot;Overload:System.Diagnostics.DiagnosticListener.Subscribe&quot; /&gt;.">Comprueba si DiagnosticListener está habilitado.</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <param name="arg1" vsli:raw="The object that represents a context." />
      <param name="arg2" vsli:raw="The object that represents a context." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary vsli:raw="Gets the name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Obtiene el nombre de <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Nombre del objeto <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityExport method of all the subscribers.">Invoca el método OnActivityExport de todos los suscriptores.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">Actividad afectada por un evento externo.</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">Objeto que representa la solicitud saliente.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityImport method of all the subscribers.">Invoca el método OnActivityImport de todos los suscriptores.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">Actividad afectada por un evento externo.</param>
      <param name="payload" vsli:raw="An object that represents the incoming request.">Objeto que representa la solicitud entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary vsli:raw="Adds a subscriber.">Agrega un suscriptor.</summary>
      <param name="observer" vsli:raw="A subscriber.">Suscriptor.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name and up to two context objects.">Agrega un suscriptor y, opcionalmente, filtra los eventos en función de su nombre y hasta dos objetos de contexto.</summary>
      <param name="observer" vsli:raw="A subscriber.">Suscriptor.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; to if an event filter is not desirable.">Delegado que filtra los eventos en función de su nombre y hasta dos objetos de contexto (que pueden ser <see langword="null" />), o bien <see langword="null" /> si un filtro de evento no es deseable.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary vsli:raw="Adds a subscriber, optionally filters events based on their name and up to two context objects, and specifies methods to call when providers import or export activites from outside the process.">Agrega un suscriptor, opcionalmente filtra los eventos en función de su nombre y hasta dos objetos de contexto, y especifica los métodos a los que se va a llamar cuando los proveedores importen o exporten actividades externas al proceso.</summary>
      <param name="observer" vsli:raw="A subscriber.">Suscriptor.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; if an event filter is not desirable.">Delegado que filtra eventos según su nombre y hasta dos objetos de contexto (que pueden ser <see langword="null" />), o bien <see langword="null" /> si no quiere usarse un filtro de evento.</param>
      <param name="onActivityImport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the incoming request.">Delegado de acción que recibe la actividad afectada por un evento externo y un objeto que representa la solicitud entrante.</param>
      <param name="onActivityExport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the outgoing request.">Delegado de acción que recibe la actividad afectada por un evento externo y un objeto que representa la solicitud saliente.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name.">Agrega un suscriptor y, opcionalmente, filtra los eventos en función de su nombre.</summary>
      <param name="observer" vsli:raw="A subscriber.">Suscriptor.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name (&lt;see cref=&quot;T:System.String&quot; /&gt;). The delegate should return &lt;see langword=&quot;true&quot; /&gt; if the event is enabled.">Delegado que filtra los eventos en función de su nombre (<see cref="T:System.String" />). El delegado debe devolver <see langword="true" /> si el evento está habilitado.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary vsli:raw="Returns a string with the name of this DiagnosticListener.">Devuelve una cadena con el nombre de este DiagnosticListener.</summary>
      <returns vsli:raw="The name of this DiagnosticListener.">Nombre de este DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary vsli:raw="Logs a notification.">Registra una notificación.</summary>
      <param name="name" vsli:raw="The name of the event to log.">Nombre del evento que se registrará.</param>
      <param name="value" vsli:raw="An object that represents the payload for the event.">Objeto que representa la carga para el evento.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary vsli:raw="An abstract class that allows code to be instrumented for production-time logging of rich data payloads for consumption within the process that was instrumented.">Clase abstracta que permite instrumentar el código para el registro de tiempo de producción de las cargas de datos enriquecidos para su uso dentro del proceso que se ha instrumentado.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class.">Inicializa una instancia de la clase <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary vsli:raw="Verifies if the notification event is enabled.">Comprueba que el evento de notificación esté habilitado.</summary>
      <param name="name" vsli:raw="The name of the event being written.">Nombre del evento que se va a escribir.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si el evento de notificación está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Verifies it the notification event is enabled.">Comprueba que el evento de notificación esté habilitado.</summary>
      <param name="name" vsli:raw="The name of the event being written.">Nombre del evento que se va a escribir.</param>
      <param name="arg1" vsli:raw="An object that represents the additional context for IsEnabled. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) to check if consumer wants to get notifications for such events at all. Based on that, producer may call IsEnabled(string, object, object) again with non-&lt;see langword=&quot;null&quot; /&gt; context.">Objeto que representa el contexto adicional de IsEnabled. Los consumidores pueden recibir <see langword="null" />, lo que puede indicar que el productor ha llamado a IsEnabled(string) puro para comprobar si el consumidor quiere obtener notificaciones de estos eventos. En función de esto, el productor puede llamar a IsEnabled(string, object, object) de nuevo con el contexto no <see langword="null" />.</param>
      <param name="arg2" vsli:raw="Optional. An object that represents the additional context for IsEnabled. &lt;see langword=&quot;null&quot; /&gt; by default. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) or producer passed all necessary context in &lt;paramref name=&quot;arg1&quot; /&gt;.">Opcional. Objeto que representa el contexto adicional de IsEnabled. <see langword="null" /> es el valor predeterminado. Los consumidores pueden recibir <see langword="null" />, lo que puede indicar que el productor ha llamado a IsEnabled(string) puro o ha pasado todo el contexto necesario en <paramref name="arg1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si el evento de notificación está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state from an activity to some event or operation, such as an outgoing HTTP request, that will occur outside the process.">Transfiere el estado desde una actividad a algún evento u operación, como una solicitud HTTP saliente, que se producirá fuera del proceso.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">Actividad afectada por un evento externo.</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">Un objeto que representa la solicitud saliente.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state to an activity from some event or operation, such as an incoming request, that occurred outside the process.">Transfiere el estado a una actividad desde algún evento u operación, como una solicitud entrante, que se produjo fuera del proceso.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">Actividad afectada por un evento externo.</param>
      <param name="payload" vsli:raw="A payload that represents the incoming request.">Carga útil que representa la solicitud entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Starts an &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; and writes a start event.">Inicia <see cref="T:System.Diagnostics.Activity" /> y escribe un evento de inicio.</summary>
      <param name="activity" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to be started.">
        <see cref="T:System.Diagnostics.Activity" /> que se va a iniciar.</param>
      <param name="args" vsli:raw="An object that represent the value being passed as a payload for the event.">Objeto que representa el valor que se va a pasar como una carga para el evento.</param>
      <returns vsli:raw="The started activity for convenient chaining.">Actividad iniciada para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Stops the given &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, maintains the global &lt;see cref=&quot;P:System.Diagnostics.Activity.Current&quot; /&gt; activity, and notifies consumers that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; was stopped.">Detiene el elemento <see cref="T:System.Diagnostics.Activity" /> dado, mantiene la actividad global <see cref="P:System.Diagnostics.Activity.Current" /> y notifica a los consumidores que <see cref="T:System.Diagnostics.Activity" /> se ha detenido.</summary>
      <param name="activity" vsli:raw="The activity to be stopped.">Actividad que se va a detener.</param>
      <param name="args" vsli:raw="An object that represents the value passed as a payload for the event.">Objeto que representa el valor pasado como una carga para el evento.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary vsli:raw="Provides a generic way of logging complex payloads.">Proporciona una manera genérica de registrar cargas complejas.</summary>
      <param name="name" vsli:raw="The name of the event being written.">Nombre del evento que se va a escribir.</param>
      <param name="value" vsli:raw="An object that represents the value being passed as a payload for the event. This is often an anonymous type which contains several sub-values.">Objeto que representa el valor que se va a pasar como una carga para el evento. Suele ser un tipo anónimo que contiene varios subvalores.</param>
    </member>
  </members>
</doc>