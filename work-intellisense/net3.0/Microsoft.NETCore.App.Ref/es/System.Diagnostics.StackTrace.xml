<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.StackTrace</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.StackFrame">
      <summary vsli:raw="Provides information about a &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt;, which represents a function call on the call stack for the current thread.">Proporciona información sobre un <see cref="T:System.Diagnostics.StackFrame" />, que representa una llamada de función en la pila de llamadas del subproceso actual.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackFrame" />.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class, optionally capturing source information.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackFrame" />, mientras se inicializa la propiedad, y opcionalmente captura información de origen.</summary>
      <param name="fNeedFileInfo">Es <see langword="true" /> para capturar el nombre de archivo y los números de línea y de columna del marco de pila; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that corresponds to a frame above the current stack frame.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackFrame" /> que corresponde a un marco situado encima del marco de pila actual.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack to skip.">Número de marcos por encima de la pila que se va a omitir.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that corresponds to a frame above the current stack frame, optionally capturing source information.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackFrame" /> que corresponde a un marco situado encima del marco de pila actual, y opcionalmente captura información de origen.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack to skip.">Número de marcos por encima de la pila que se va a omitir.</param>
      <param name="fNeedFileInfo">Es <see langword="true" /> para capturar el nombre de archivo y los números de línea y de columna del marco de pila; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that contains only the given file name and line number.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackFrame" /> que contiene únicamente el nombre de archivo y el número de línea especificados.</summary>
      <param name="fileName" vsli:raw="The file name.">Nombre del archivo.</param>
      <param name="lineNumber" vsli:raw="The line number in the specified file.">Número de línea del archivo especificado.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class that contains only the given file name, line number, and column number.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackFrame" /> que contiene únicamente el nombre de archivo, el número de línea y el número de columna especificados.</summary>
      <param name="fileName" vsli:raw="The file name.">Nombre del archivo.</param>
      <param name="lineNumber" vsli:raw="The line number in the specified file.">Número de línea del archivo especificado.</param>
      <param name="colNumber" vsli:raw="The column number in the specified file.">Número de columna del archivo especificado.</param>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
      <summary vsli:raw="Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Obtiene el número de columna del archivo que contiene el código que se está ejecutando. Esta información se extrae normalmente de los símbolos de depuración del ejecutable.</summary>
      <returns vsli:raw="The file column number, or 0 (zero) if the file column number cannot be determined.">Número de columna del archivo, o 0 (cero) si no se puede determinar el número de columna del archivo.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileLineNumber">
      <summary vsli:raw="Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Obtiene el número de línea del archivo que contiene el código que se está ejecutando. Esta información se extrae normalmente de los símbolos de depuración del ejecutable.</summary>
      <returns vsli:raw="The file line number, or 0 (zero) if the file line number cannot be determined.">Número de línea del archivo, o 0 (cero) si no se puede determinar el número de línea del archivo.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileName">
      <summary vsli:raw="Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.">Obtiene el nombre de archivo que contiene el código que se está ejecutando. Esta información se extrae normalmente de los símbolos de depuración del ejecutable.</summary>
      <returns vsli:raw="The file name, or &lt;see langword=&quot;null&quot; /&gt; if the file name cannot be determined.">Nombre del archivo o <see langword="null" /> si no es posible determinarlo.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetILOffset">
      <summary vsli:raw="Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing. This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code. The generation of this debugging information is controlled by the &lt;see cref=&quot;T:System.Diagnostics.DebuggableAttribute&quot; /&gt;.">Obtiene el desplazamiento desde el inicio del código del Lenguaje intermedio de Microsoft (MSIL) del método que se está ejecutando. Este desplazamiento puede ser aproximado en función de si el compilador Just-In-Time (JIT) está generando código de depuración. La generación de esta información de depuración está controlada por <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns vsli:raw="The offset from the start of the MSIL code for the method that is executing.">Desplazamiento desde el inicio del código MSIL del método que se está ejecutando.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetMethod">
      <summary vsli:raw="Gets the method in which the frame is executing.">Obtiene el método en el que se está ejecutando el marco.</summary>
      <returns vsli:raw="The method in which the frame is executing.">Método en el que se está ejecutando el marco.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetNativeOffset">
      <summary vsli:raw="Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed. The generation of this debugging information is controlled by the &lt;see cref=&quot;T:System.Diagnostics.DebuggableAttribute&quot; /&gt; class.">Obtiene el desplazamiento desde el inicio del código nativo de compilación Just-In-Time (JIT) del método que se está ejecutando. La generación de esta información de depuración está controlada por la clase <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns vsli:raw="The offset from the start of the JIT-compiled code for the method that is being executed.">Desplazamiento desde el inicio del código de compilación Just-In-Time (JIT) del método que se está ejecutando.</returns>
    </member>
    <member name="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
      <summary vsli:raw="Defines the value that is returned from the &lt;see cref=&quot;M:System.Diagnostics.StackFrame.GetNativeOffset&quot; /&gt; or &lt;see cref=&quot;M:System.Diagnostics.StackFrame.GetILOffset&quot; /&gt; method when the native or Microsoft intermediate language (MSIL) offset is unknown. This field is constant.">Define el valor que se devuelve desde el método <see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /> o <see cref="M:System.Diagnostics.StackFrame.GetILOffset" /> cuando se desconoce el desplazamiento nativo o de Lenguaje Intermedio de Microsoft (MSIL). Este campo es constante.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrame.ToString">
      <summary vsli:raw="Builds a readable representation of the stack trace.">Compila una representación legible del seguimiento de pila.</summary>
      <returns vsli:raw="A readable representation of the stack trace.">Representación legible del seguimiento de pila.</returns>
    </member>
    <member name="T:System.Diagnostics.StackFrameExtensions">
      <summary vsli:raw="Provides extension methods for the &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; class, which represents a function call on the call stack for the current thread.">Proporciona métodos de extensión para la clase <see cref="T:System.Diagnostics.StackFrame" />, que representa una llamada de función en la pila de llamadas del subproceso actual.</summary>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Returns a pointer to the base address of the native image that this stack frame is executing.">Devuelve un puntero a la dirección base de la imagen nativa que está ejecutando este marco de pila.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Marco de pila.</param>
      <returns vsli:raw="A pointer to the base address of the native image or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; if you're targeting the .NET Framework.">Un puntero a la dirección base de la imagen nativa o <see cref="F:System.IntPtr.Zero" /> si tiene como destino .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Gets an interface pointer to the start of the native code for the method that is being executed.">Obtiene un puntero de interfaz al inicio del código nativo para el método que se está ejecutando.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Marco de pila.</param>
      <returns vsli:raw="An interface pointer to the start of the native code for the method that is being executed or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt; if you're targeting the .NET Framework.">Un puntero de interfaz al inicio del código nativo para el método que se está ejecutando o <see cref="F:System.IntPtr.Zero" /> si tiene como destino .NET Framework.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether an offset from the start of the IL code for the method that is executing is available.">Indica si hay disponible un desplazamiento desde el inicio del código IL para el método que se está ejecutando.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Marco de pila.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the offset is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el desplazamiento está disponible; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether information about the method in which the specified frame is executing is available.">Indica si la información sobre el método en el que está ejecutando el marco especificado está disponible o no.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Marco de pila.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the method in which the current frame is executing is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la información sobre el método en el que está ejecutando el marco actual está disponible; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether the native image is available for the specified stack frame.">Indica si la imagen nativa está disponible para el marco de pila especificado.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Marco de pila.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a native image is available for this stack frame; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si una imagen nativa está disponible para este marco de pila; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Indicates whether the file that contains the code that the specified stack frame is executing is available.">Indica si el archivo que contiene el código que está ejecutando el marco de pila especificado está disponible o no.</summary>
      <param name="stackFrame" vsli:raw="A stack frame.">Marco de pila.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code that the specified stack frame is executing is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el código que se está ejecutando el marco de pila especificado está disponible; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.StackTrace">
      <summary vsli:raw="Represents a stack trace, which is an ordered collection of one or more stack frames.">Representa un seguimiento de pila, que es una colección ordenada de uno o más marcos de pila.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> a partir del marco del llamador.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, optionally capturing source information.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> desde el marco del llamador y, opcionalmente, captura información de origen.</summary>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para capturar el nombre de archivo y los números de línea y de columna; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class that contains a single frame.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> que contiene un solo marco.</summary>
      <param name="frame" vsli:raw="The frame that the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; object should contain.">Marco que el objeto <see cref="T:System.Diagnostics.StackTrace" /> debe contener.</param>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> mediante el objeto de excepción proporcionado.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Objeto de excepción a partir del que se va a generar el seguimiento de la pila.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class, using the provided exception object and optionally capturing source information.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> mediante el objeto de excepción que se suministra y, opcionalmente, captura información de origen.</summary>
      <param name="exception">Objeto de excepción a partir del que se va a generar el seguimiento de la pila.</param>
      <param name="needFileInfo">Es <see langword="true" /> para capturar el nombre de archivo y los números de línea y de columna; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object and skipping the specified number of frames.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> mediante el objeto de excepción proporcionado y pasa por alto el número de marcos especificado.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Objeto de excepción a partir del que se va a generar el seguimiento de la pila.</param>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Número de marcos que debe contener la pila para iniciar el seguimiento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">El parámetro <paramref name="skipFrames" /> es negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class using the provided exception object, skipping the specified number of frames and optionally capturing source information.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> mediante el objeto de excepción proporcionado, pasa por alto el número de marcos especificado y, opcionalmente, captura información de origen.</summary>
      <param name="e" vsli:raw="The exception object from which to construct the stack trace.">Objeto de excepción a partir del que se va a generar el seguimiento de la pila.</param>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Número de marcos que debe contener la pila para iniciar el seguimiento.</param>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para capturar el nombre de archivo y los números de línea y de columna; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The parameter &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="e" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">El parámetro <paramref name="skipFrames" /> es negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, skipping the specified number of frames.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> a partir del marco del llamador y pasa por alto el número de marcos especificado.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Número de marcos que debe contener la pila para iniciar el seguimiento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">El parámetro <paramref name="skipFrames" /> es negativo.</exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.StackTrace&quot; /&gt; class from the caller's frame, skipping the specified number of frames and optionally capturing source information.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.StackTrace" /> a partir del marco del llamador, pasa por alto el número de marcos especificado y, opcionalmente, captura información de origen.</summary>
      <param name="skipFrames" vsli:raw="The number of frames up the stack from which to start the trace.">Número de marcos que debe contener la pila para iniciar el seguimiento.</param>
      <param name="fNeedFileInfo" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to capture the file name, line number, and column number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para capturar el nombre de archivo y los números de línea y de columna; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;skipFrames&quot; /&gt; parameter is negative.">El parámetro <paramref name="skipFrames" /> es negativo.</exception>
    </member>
    <member name="P:System.Diagnostics.StackTrace.FrameCount">
      <summary vsli:raw="Gets the number of frames in the stack trace.">Obtiene el número de marcos en el seguimiento de pila.</summary>
      <returns vsli:raw="The number of frames in the stack trace.">Número de marcos del seguimiento de la pila.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
      <summary vsli:raw="Gets the specified stack frame.">Obtiene el marco de pila especificado.</summary>
      <param name="index" vsli:raw="The index of the stack frame requested.">Índice del marco de pila solicitado.</param>
      <returns vsli:raw="The specified stack frame.">Marco de pila especificado.</returns>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrames">
      <summary vsli:raw="Returns a copy of all stack frames in the current stack trace.">Devuelve una copia de todos los marcos de pila del seguimiento de pila actual.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Diagnostics.StackFrame&quot; /&gt; representing the function calls in the stack trace.">Matriz de tipo <see cref="T:System.Diagnostics.StackFrame" /> que representa las llamadas a función en el marco de pila.</returns>
    </member>
    <member name="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
      <summary vsli:raw="Defines the default for the number of methods to omit from the stack trace. This field is constant.">Define el valor predeterminado para el número de métodos que se van a pasar por alto desde el seguimiento de pila. Este campo es constante.</summary>
    </member>
    <member name="M:System.Diagnostics.StackTrace.ToString">
      <summary vsli:raw="Builds a readable representation of the stack trace.">Compila una representación legible del seguimiento de pila.</summary>
      <returns vsli:raw="A readable representation of the stack trace.">Representación legible del seguimiento de pila.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder">
      <summary vsli:raw="Represents a symbol binder for managed code.">Representa un enlazador de símbolos de código administrado.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader(System.Int32,System.String,System.String)">
      <summary vsli:raw="Gets the interface of the symbol reader for the current file.">Obtiene la interfaz del lector de símbolos del archivo actual.</summary>
      <param name="importer" vsli:raw="The metadata import interface.">Interfaz de importación de metadatos.</param>
      <param name="filename" vsli:raw="The name of the file for which the reader interface is required.">Nombre del archivo para el que se precisa la interfaz del lector.</param>
      <param name="searchPath" vsli:raw="The search path used to locate the symbol file.">Ruta de búsqueda utilizada para localizar el archivo de símbolos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolReader&quot; /&gt; interface that reads the debugging symbols.">Interfaz <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> que lee los símbolos de depuración.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolBinder1">
      <summary vsli:raw="Represents a symbol binder for managed code.">Representa un enlazador de símbolos de código administrado.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolBinder1.GetReader(System.IntPtr,System.String,System.String)">
      <summary vsli:raw="Gets the interface of the symbol reader for the current file.">Obtiene la interfaz del lector de símbolos del archivo actual.</summary>
      <param name="importer" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that refers to the metadata import interface.">
        <see cref="T:System.IntPtr" /> que hace referencia a la interfaz de importación de metadatos.</param>
      <param name="filename" vsli:raw="The name of the file for which the reader interface is required.">Nombre del archivo para el que se precisa la interfaz del lector.</param>
      <param name="searchPath" vsli:raw="The search path used to locate the symbol file.">Ruta de búsqueda utilizada para localizar el archivo de símbolos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolReader&quot; /&gt; interface that reads the debugging symbols.">Interfaz <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> que lee los símbolos de depuración.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocument">
      <summary vsli:raw="Represents a document referenced by a symbol store.">Representa un documento al que hace referencia un almacén de símbolos.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.CheckSumAlgorithmId">
      <summary vsli:raw="Gets the checksum algorithm identifier.">Obtiene el identificador del algoritmo de suma de comprobación.</summary>
      <returns vsli:raw="A GUID identifying the checksum algorithm. The value is all zeros, if there is no checksum.">GUID que identifica el algoritmo de suma de comprobación. Si no hay suma de comprobación, el valor es cero en todos los casos.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.DocumentType">
      <summary vsli:raw="Gets the type of the current document.">Obtiene el tipo del documento actual.</summary>
      <returns vsli:raw="The type of the current document.">Tipo del documento actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.FindClosestLine(System.Int32)">
      <summary vsli:raw="Returns the closest line that is a sequence point, given a line in the current document that might or might not be a sequence point.">Devuelve la línea más próxima que sea un punto de secuencia, con respecto a una línea especificada del documento actual que podría ser o no un punto de secuencia.</summary>
      <param name="line" vsli:raw="The specified line in the document.">Línea especificada del documento.</param>
      <returns vsli:raw="The closest line that is a sequence point.">Línea más próxima que sea un punto de secuencia.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetCheckSum">
      <summary vsli:raw="Gets the checksum.">Obtiene la suma de comprobación.</summary>
      <returns vsli:raw="The checksum.">Suma de comprobación.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocument.GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Gets the embedded document source for the specified range.">Obtiene el código fuente incrustado en el documento del intervalo especificado.</summary>
      <param name="startLine" vsli:raw="The starting line in the current document.">Línea inicial del documento actual.</param>
      <param name="startColumn" vsli:raw="The starting column in the current document.">Columna inicial del documento actual.</param>
      <param name="endLine" vsli:raw="The ending line in the current document.">Línea final del documento actual.</param>
      <param name="endColumn" vsli:raw="The ending column in the current document.">Columna final del documento actual.</param>
      <returns vsli:raw="The document source for the specified range.">El código fuente del documento en el intervalo especificado.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.HasEmbeddedSource">
      <summary vsli:raw="Checks whether the current document is stored in the symbol store.">Comprueba si el documento actual está almacenado en el almacén de símbolos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current document is stored in the symbol store; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el documento actual está almacenado en el almacén de símbolos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.Language">
      <summary vsli:raw="Gets the language of the current document.">Obtiene el lenguaje del documento actual.</summary>
      <returns vsli:raw="The language of the current document.">El lenguaje del documento actual.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.LanguageVendor">
      <summary vsli:raw="Gets the language vendor of the current document.">Obtiene el proveedor de lenguaje del documento actual.</summary>
      <returns vsli:raw="The language vendor of the current document.">Proveedor de lenguaje del documento actual.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.SourceLength">
      <summary vsli:raw="Gets the length, in bytes, of the embedded source.">Obtiene la longitud, en bytes, del código fuente incrustado.</summary>
      <returns vsli:raw="The source length of the current document.">La longitud del código fuente del documento actual.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolDocument.URL">
      <summary vsli:raw="Gets the URL of the current document.">Obtiene la dirección URL del documento actual.</summary>
      <returns vsli:raw="The URL of the current document.">La dirección URL del documento actual.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
      <summary vsli:raw="Represents a document referenced by a symbol store.">Representa un documento al que hace referencia un almacén de símbolos.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])">
      <summary vsli:raw="Sets checksum information.">Establece la información de suma de comprobación.</summary>
      <param name="algorithmId" vsli:raw="The GUID representing the algorithm ID.">GUID que representa el identificador del algoritmo.</param>
      <param name="checkSum" vsli:raw="The checksum.">Suma de comprobación.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])">
      <summary vsli:raw="Stores the raw source for a document in the symbol store.">Almacena el código fuente sin formato de un documento en el almacén de símbolos.</summary>
      <param name="source" vsli:raw="The document source represented as unsigned bytes.">Código fuente del documento representado en forma de bytes sin signo.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolMethod">
      <summary vsli:raw="Represents a method within a symbol store.">Representa un método dentro de un almacén de símbolos.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace">
      <summary vsli:raw="Gets the namespace that the current method is defined within.">Obtiene el espacio de nombres en el que está definido el método actual.</summary>
      <returns vsli:raw="The namespace that the current method is defined within.">El espacio de nombres en el que está definido el método actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.">Obtiene el desplazamiento del lenguaje intermedio de Microsoft (MSIL) dentro del método correspondiente a la posición especificada.</summary>
      <param name="document" vsli:raw="The document for which the offset is requested.">Documento del que se solicita el desplazamiento.</param>
      <param name="line" vsli:raw="The document line corresponding to the offset.">Línea del documento correspondiente al desplazamiento.</param>
      <param name="column" vsli:raw="The document column corresponding to the offset.">Columna del documento correspondiente al desplazamiento.</param>
      <returns vsli:raw="The offset within the specified document.">El desplazamiento dentro del documento especificado.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters">
      <summary vsli:raw="Gets the parameters for the current method.">Obtiene los parámetros del método actual.</summary>
      <returns vsli:raw="The array of parameters for the current method.">La matriz de parámetros del método actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) that a given position covers within this method.">Obtiene una matriz de pares de desplazamiento inicial y final correspondiente a los intervalos del lenguaje intermedio de Microsoft (MSIL) que cubre una posición especificada dentro de este método.</summary>
      <param name="document" vsli:raw="The document for which the offset is requested.">Documento del que se solicita el desplazamiento.</param>
      <param name="line" vsli:raw="The document line corresponding to the ranges.">Línea del documento correspondiente a los intervalos.</param>
      <param name="column" vsli:raw="The document column corresponding to the ranges.">Columna del documento correspondiente a los intervalos.</param>
      <returns vsli:raw="An array of start and end offset pairs.">Una matriz de pares de desplazamiento inicial y final.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)">
      <summary vsli:raw="Returns the most enclosing lexical scope when given an offset within a method.">Devuelve el ámbito léxico más envolvente cuando se especifica un desplazamiento en un método.</summary>
      <param name="offset" vsli:raw="The byte offset within the method of the lexical scope.">Desplazamiento de bytes en el método del ámbito léxico.</param>
      <returns vsli:raw="The most enclosing lexical scope for the given byte offset within the method.">El ámbito léxico más envolvente para el desplazamiento de bytes especificado en el método.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Gets the sequence points for the current method.">Obtiene los puntos de secuencia del método actual.</summary>
      <param name="offsets" vsli:raw="The array of byte offsets from the beginning of the method for the sequence points.">Matriz de desplazamientos de bytes desde el principio del método para los puntos de secuencia.</param>
      <param name="documents" vsli:raw="The array of documents in which the sequence points are located.">Matriz de documentos en los que están ubicados los puntos de secuencia.</param>
      <param name="lines" vsli:raw="The array of lines in the documents at which the sequence points are located.">Matriz de líneas de los documentos en las que están ubicados los puntos de secuencia.</param>
      <param name="columns" vsli:raw="The array of columns in the documents at which the sequence points are located.">Matriz de columnas de los documentos en las que están ubicados los puntos de secuencia.</param>
      <param name="endLines" vsli:raw="The array of lines in the documents at which the sequence points end.">Matriz de líneas de los documentos en las que finalizan los puntos de secuencia.</param>
      <param name="endColumns" vsli:raw="The array of columns in the documents at which the sequence points end.">Matriz de columnas de los documentos en las que finalizan los puntos de secuencia.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Gets the start and end positions for the source of the current method.">Obtiene las posiciones inicial y final del origen del método actual.</summary>
      <param name="docs" vsli:raw="The starting and ending source documents.">Documentos de origen iniciales y finales.</param>
      <param name="lines" vsli:raw="The starting and ending lines in the corresponding source documents.">Líneas iniciales y finales de los documentos de origen correspondientes.</param>
      <param name="columns" vsli:raw="The starting and ending columns in the corresponding source documents.">Columnas iniciales y finales de los documentos de origen correspondientes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the positions were defined; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se han definido las posiciones; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope">
      <summary vsli:raw="Gets the root lexical scope for the current method. This scope encloses the entire method.">Obtiene el ámbito léxico raíz del método actual. Este ámbito abarca el método completo.</summary>
      <returns vsli:raw="The root lexical scope that encloses the entire method.">Ámbito léxico raíz que engloba todo el método.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount">
      <summary vsli:raw="Gets a count of the sequence points in the method.">Obtiene un recuento de los puntos de secuencia del método.</summary>
      <returns vsli:raw="The count of the sequence points in the method.">El recuento de los puntos de secuencia del método.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolMethod.Token">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; containing the metadata for the current method.">Obtiene la estructura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> que contiene los metadatos del método actual.</summary>
      <returns vsli:raw="The metadata token for the current method.">Símbolo (token) de metadatos del método actual.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolNamespace">
      <summary vsli:raw="Represents a namespace within a symbol store.">Representa un espacio de nombres dentro de un almacén de símbolos.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetNamespaces">
      <summary vsli:raw="Gets the child members of the current namespace.">Obtiene los miembros secundarios del espacio de nombres actual.</summary>
      <returns vsli:raw="The child members of the current namespace.">Los miembros secundarios del espacio de nombres actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolNamespace.GetVariables">
      <summary vsli:raw="Gets all the variables defined at global scope within the current namespace.">Obtiene todas las variables definidas en el ámbito global del espacio de nombres actual.</summary>
      <returns vsli:raw="The variables defined at global scope within the current namespace.">Las variables definidas en el ámbito global del espacio de nombres actual.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolNamespace.Name">
      <summary vsli:raw="Gets the current namespace.">Obtiene el espacio de nombres actual.</summary>
      <returns vsli:raw="The current namespace.">El espacio de nombres actual.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolReader">
      <summary vsli:raw="Represents a symbol reader for managed code.">Representa un lector de símbolos de código administrado.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary vsli:raw="Gets a document specified by the language, vendor, and type.">Obtiene un documento especificado mediante el lenguaje, el proveedor y el tipo.</summary>
      <param name="url" vsli:raw="The URL that identifies the document.">Dirección URL que identifica el documento.</param>
      <param name="language" vsli:raw="The document language. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Lenguaje del documento. Puede especificar este parámetro como <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor" vsli:raw="The identity of the vendor for the document language. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Identidad del proveedor del lenguaje del documento. Puede especificar este parámetro como <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType" vsli:raw="The type of the document. You can specify this parameter as &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Tipo del documento. Puede especificar este parámetro como <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="The specified document.">El documento especificado.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments">
      <summary vsli:raw="Gets an array of all documents defined in the symbol store.">Obtiene una matriz de todos los documentos definidos en el almacén de símbolos.</summary>
      <returns vsli:raw="An array of all documents defined in the symbol store.">Una matriz de todos los documentos definidos en el almacén de símbolos.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables">
      <summary vsli:raw="Gets all global variables in the module.">Obtiene todas las variables globales del módulo.</summary>
      <returns vsli:raw="An array of all variables in the module.">Una matriz con todas las variables del módulo.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Gets a symbol reader method object when given the identifier of a method.">Obtiene un objeto de método lector de símbolos cuando se especifica el identificador de un método.</summary>
      <param name="method" vsli:raw="The metadata token of the method.">Símbolo (token) de metadatos del método.</param>
      <returns vsli:raw="The symbol reader method object for the specified method identifier.">El objeto del método lector de símbolos para el identificador de método especificado.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
      <summary vsli:raw="Gets a symbol reader method object when given the identifier of a method and its edit and continue version.">Obtiene un objeto de método del lector de símbolos cuando se especifica el identificador de un método y su versión de edición y continuación.</summary>
      <param name="method" vsli:raw="The metadata token of the method.">Símbolo (token) de metadatos del método.</param>
      <param name="version" vsli:raw="The edit and continue version of the method.">Versión de edición y continuación del método.</param>
      <returns vsli:raw="The symbol reader method object for the specified method identifier.">El objeto del método lector de símbolos para el identificador de método especificado.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary vsli:raw="Gets a symbol reader method object that contains a specified position in a document.">Obtiene un objeto de método del lector de símbolos que contiene una posición especificada en un documento.</summary>
      <param name="document" vsli:raw="The document in which the method is located.">Documento en el que está ubicado el método.</param>
      <param name="line" vsli:raw="The position of the line within the document. The lines are numbered, beginning with 1.">Posición de la línea dentro del documento. Las líneas se numeran, comenzando por 1.</param>
      <param name="column" vsli:raw="The position of column within the document. The columns are numbered, beginning with 1.">Posición de la columna dentro del documento. Las columnas se numeran, comenzando por 1.</param>
      <returns vsli:raw="The reader method object for the specified position in the document.">El objeto de método del lector para la posición especificada en el documento.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces">
      <summary vsli:raw="Gets the namespaces that are defined in the global scope within the current symbol store.">Obtiene los espacios de nombres definidos en el ámbito global, dentro del almacén de símbolos actual.</summary>
      <returns vsli:raw="The namespaces defined in the global scope within the current symbol store.">Los espacios de nombres definidos en el ámbito global, dentro del almacén de símbolos actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
      <summary vsli:raw="Gets an attribute value when given the attribute name.">Obtiene un valor de atributo cuando se especifica el nombre de atributo.</summary>
      <param name="parent" vsli:raw="The metadata token for the object for which the attribute is requested.">Símbolo (token) de metadatos del objeto para el que se solicita el atributo.</param>
      <param name="name" vsli:raw="The attribute name.">Nombre del atributo.</param>
      <returns vsli:raw="The value of the attribute.">El valor del atributo.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Gets the variables that are not local when given the parent.">Obtiene las variables que no son locales cuando se especifica la variable principal.</summary>
      <param name="parent" vsli:raw="The metadata token for the type for which the variables are requested.">Símbolo (token) de metadatos del tipo para el que se solicitan las variables.</param>
      <returns vsli:raw="An array of variables for the parent.">Una matriz de variables para la variable principal.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint">
      <summary vsli:raw="Gets the metadata token for the method that was specified as the user entry point for the module, if any.">Obtiene el símbolo (token) de metadatos del método especificado como punto de entrada del usuario para el módulo, en caso de que haya alguno.</summary>
      <returns vsli:raw="The metadata token for the method that is the user entry point for the module.">El símbolo (token) de metadatos del método que constituye el punto de entrada para el módulo.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolScope">
      <summary vsli:raw="Represents a lexical scope within &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolMethod&quot; /&gt;, providing access to the start and end offsets of the scope, as well as its child and parent scopes.">Representa un ámbito léxico dentro de <see cref="T:System.Diagnostics.SymbolStore.ISymbolMethod" />, que proporciona acceso a los desplazamientos inicial y final del ámbito, así como al ámbito principal y a los ámbitos secundarios.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.EndOffset">
      <summary vsli:raw="Gets the end offset of the current lexical scope.">Obtiene el desplazamiento final del ámbito léxico actual.</summary>
      <returns vsli:raw="The end offset of the current lexical scope.">Desplazamiento final del ámbito léxico actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetChildren">
      <summary vsli:raw="Gets the child lexical scopes of the current lexical scope.">Obtiene los ámbitos léxicos secundarios del ámbito léxico actual.</summary>
      <returns vsli:raw="The child lexical scopes that of the current lexical scope.">Los ámbitos léxicos secundarios del ámbito léxico actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetLocals">
      <summary vsli:raw="Gets the local variables within the current lexical scope.">Obtiene las variables locales dentro del ámbito léxico actual.</summary>
      <returns vsli:raw="The local variables within the current lexical scope.">Variables locales dentro del ámbito léxico actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolScope.GetNamespaces">
      <summary vsli:raw="Gets the namespaces that are used within the current scope.">Obtiene los espacios de nombres utilizados dentro del ámbito actual.</summary>
      <returns vsli:raw="The namespaces that are used within the current scope.">Los espacios de nombres utilizados dentro del ámbito actual.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Method">
      <summary vsli:raw="Gets the method that contains the current lexical scope.">Obtiene el método que contiene el ámbito léxico actual.</summary>
      <returns vsli:raw="The method that contains the current lexical scope.">Método que contiene el ámbito léxico actual.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.Parent">
      <summary vsli:raw="Gets the parent lexical scope of the current scope.">Obtiene el ámbito léxico principal del ámbito actual.</summary>
      <returns vsli:raw="The parent lexical scope of the current scope.">El ámbito léxico principal del ámbito actual.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolScope.StartOffset">
      <summary vsli:raw="Gets the start offset of the current lexical scope.">Obtiene el desplazamiento inicial del ámbito léxico actual.</summary>
      <returns vsli:raw="The start offset of the current lexical scope.">El desplazamiento inicial del ámbito léxico actual.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolVariable">
      <summary vsli:raw="Represents a variable within a symbol store.">Representa una variable dentro de un almacén de símbolos.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField1">
      <summary vsli:raw="Gets the first address of a variable.">Obtiene la primera dirección de una variable.</summary>
      <returns vsli:raw="The first address of the variable.">Primera dirección de la variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField2">
      <summary vsli:raw="Gets the second address of a variable.">Obtiene la segunda dirección de una variable.</summary>
      <returns vsli:raw="The second address of the variable.">Segunda dirección de la variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressField3">
      <summary vsli:raw="Gets the third address of a variable.">Obtiene la tercera dirección de una variable.</summary>
      <returns vsli:raw="The third address of the variable.">Tercera dirección de la variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.AddressKind">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymAddressKind&quot; /&gt; value describing the type of the address.">Obtiene el valor de tipo <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" /> que describe el tipo de la dirección.</summary>
      <returns vsli:raw="The type of the address. One of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymAddressKind&quot; /&gt; values.">Tipo de la dirección. Uno de los valores de <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Attributes">
      <summary vsli:raw="Gets the attributes of the variable.">Obtiene los atributos de la variable.</summary>
      <returns vsli:raw="The variable attributes.">Atributos de la variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.EndOffset">
      <summary vsli:raw="Gets the end offset of a variable within the scope of the variable.">Obtiene el desplazamiento final de una variable dentro del ámbito de la variable.</summary>
      <returns vsli:raw="The end offset of the variable.">Desplazamiento final de la variable.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolVariable.GetSignature">
      <summary vsli:raw="Gets the variable signature.">Obtiene la firma de la variable.</summary>
      <returns vsli:raw="The variable signature as an opaque blob.">Firma de la variable en forma de objeto binario opaco.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.Name">
      <summary vsli:raw="Gets the name of the variable.">Obtiene el nombre de la variable.</summary>
      <returns vsli:raw="The name of the variable.">Nombre de la variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.ISymbolVariable.StartOffset">
      <summary vsli:raw="Gets the start offset of the variable within the scope of the variable.">Obtiene el desplazamiento inicial de la variable dentro del ámbito de la variable.</summary>
      <returns vsli:raw="The start offset of the variable.">Desplazamiento inicial de la variable.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.ISymbolWriter">
      <summary vsli:raw="Represents a symbol writer for managed code.">Representa un escritor de símbolos de código administrado.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
      <summary vsli:raw="Closes &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; and commits the symbols to the symbol store.">Cierra <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> y confirma los símbolos en el almacén de símbolos.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
      <summary vsli:raw="Closes the current method.">Cierra el método actual.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
      <summary vsli:raw="Closes the most recent namespace.">Cierra el espacio de nombres más reciente.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
      <summary vsli:raw="Closes the current lexical scope.">Cierra el ámbito léxico actual.</summary>
      <param name="endOffset" vsli:raw="The points past the last instruction in the scope.">Puntos situados a partir de la última instrucción del ámbito.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary vsli:raw="Defines a source document.">Define un documento de origen.</summary>
      <param name="url" vsli:raw="The URL that identifies the document.">Dirección URL que identifica el documento.</param>
      <param name="language" vsli:raw="The document language. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Lenguaje del documento. Este parámetro puede ser <see cref="F:System.Guid.Empty" />.</param>
      <param name="languageVendor" vsli:raw="The identity of the vendor for the document language. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Identidad del proveedor del lenguaje del documento. Este parámetro puede ser <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType" vsli:raw="The type of the document. This parameter can be &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Tipo del documento. Este parámetro puede ser <see cref="F:System.Guid.Empty" />.</param>
      <returns vsli:raw="The object that represents the document.">El objeto que representa el documento.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a field in a type or a global field.">Define un campo de un campo global o tipo.</summary>
      <param name="parent" vsli:raw="The metadata type or method token.">Tipo de metadatos o símbolo (token) del método.</param>
      <param name="name" vsli:raw="The field name.">Nombre de campo.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the field attributes.">Combinación bit a bit de los atributos del campo.</param>
      <param name="signature" vsli:raw="The field signature.">Firma del campo.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt; and &lt;paramref name=&quot;addr2&quot; /&gt;.">Tipos de dirección de <paramref name="addr1" /> y <paramref name="addr2" />.</param>
      <param name="addr1" vsli:raw="The first address for the field specification.">Primera dirección de la especificación de campo.</param>
      <param name="addr2" vsli:raw="The second address for the field specification.">Segunda dirección de la especificación de campo.</param>
      <param name="addr3" vsli:raw="The third address for the field specification.">Tercera dirección de la especificación de campo.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single global variable.">Define una única variable global.</summary>
      <param name="name" vsli:raw="The global variable name.">Nombre de la variable global.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the global variable attributes.">Combinación bit a bit de los atributos de la variable global.</param>
      <param name="signature" vsli:raw="The global variable signature.">Firma de la variable global.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Tipos de dirección de <paramref name="addr1" />, <paramref name="addr2" /> y <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the global variable specification.">Primera dirección de la especificación de variable global.</param>
      <param name="addr2" vsli:raw="The second address for the global variable specification.">Segunda dirección de la especificación de variable global.</param>
      <param name="addr3" vsli:raw="The third address for the global variable specification.">Tercera dirección de la especificación de variable global.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single variable in the current lexical scope.">Define una única variable en el ámbito léxico actual.</summary>
      <param name="name" vsli:raw="The local variable name.">Nombre de la variable local.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the local variable attributes.">Combinación bit a bit de los atributos de la variable local.</param>
      <param name="signature" vsli:raw="The local variable signature.">Firma de la variable local.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Tipos de dirección de <paramref name="addr1" />, <paramref name="addr2" /> y <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the local variable specification.">Primera dirección de la especificación de variable local.</param>
      <param name="addr2" vsli:raw="The second address for the local variable specification.">Segunda dirección de la especificación de variable local.</param>
      <param name="addr3" vsli:raw="The third address for the local variable specification.">Tercera dirección de la especificación de variable local.</param>
      <param name="startOffset" vsli:raw="The start offset for the variable. If this parameter is zero, it is ignored and the variable is defined throughout the entire scope. If the parameter is nonzero, the variable falls within the offsets of the current scope.">Desplazamiento inicial de la variable. Si este parámetro es cero, se omite este parámetro y se define la variable en todo el ámbito. Si el parámetro no es cero, la variable está comprendida dentro de los desplazamientos del ámbito actual.</param>
      <param name="endOffset" vsli:raw="The end offset for the variable. If this parameter is zero, it is ignored and the variable is defined throughout the entire scope. If the parameter is nonzero, the variable falls within the offsets of the current scope.">Desplazamiento final de la variable. Si este parámetro es cero, se omite este parámetro y se define la variable en todo el ámbito. Si el parámetro no es cero, la variable está comprendida dentro de los desplazamientos del ámbito actual.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines a single parameter in the current method. The type of each parameter is taken from its position within the signature of the method.">Define un único parámetro en el método actual. El tipo de cada parámetro se toma de la posición del parámetro dentro de la firma del método.</summary>
      <param name="name" vsli:raw="The parameter name.">Nombre del parámetro.</param>
      <param name="attributes" vsli:raw="A bitwise combination of the parameter attributes.">Combinación bit a bit de los atributos del parámetro.</param>
      <param name="sequence" vsli:raw="The parameter signature.">Firma del parámetro.</param>
      <param name="addrKind" vsli:raw="The address types for &lt;paramref name=&quot;addr1&quot; /&gt;, &lt;paramref name=&quot;addr2&quot; /&gt;, and &lt;paramref name=&quot;addr3&quot; /&gt;.">Tipos de dirección de <paramref name="addr1" />, <paramref name="addr2" /> y <paramref name="addr3" />.</param>
      <param name="addr1" vsli:raw="The first address for the parameter specification.">Primera dirección de la especificación de parámetro.</param>
      <param name="addr2" vsli:raw="The second address for the parameter specification.">Segunda dirección de la especificación de parámetro.</param>
      <param name="addr3" vsli:raw="The third address for the parameter specification.">Tercera dirección de la especificación de parámetro.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary vsli:raw="Defines a group of sequence points within the current method.">Define un grupo de puntos de secuencia dentro del método actual.</summary>
      <param name="document" vsli:raw="The document object for which the sequence points are being defined.">Objeto de documento para el que se definen los puntos de secuencia.</param>
      <param name="offsets" vsli:raw="The sequence point offsets measured from the beginning of methods.">Desplazamientos de puntos de secuencia calculados desde el principio de los métodos.</param>
      <param name="lines" vsli:raw="The document lines for the sequence points.">Líneas de documento de los puntos de secuencia.</param>
      <param name="columns" vsli:raw="The document positions for the sequence points.">Posiciones de documento de los puntos de secuencia.</param>
      <param name="endLines" vsli:raw="The document end lines for the sequence points.">Líneas finales de documento de los puntos de secuencia.</param>
      <param name="endColumns" vsli:raw="The document end positions for the sequence points.">Posiciones finales de documento de los puntos de secuencia.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
      <summary vsli:raw="Sets the metadata emitter interface to associate with a writer.">Establece la interfaz emisora de metadatos que se va a asociar al escritor.</summary>
      <param name="emitter" vsli:raw="The metadata emitter interface.">Interfaz emisora de metadatos.</param>
      <param name="filename" vsli:raw="The file name for which the debugging symbols are written. Some writers require a file name, and others do not. If a file name is specified for a writer that does not use file names, this parameter is ignored.">Nombre del archivo para el que se escriben los símbolos de depuración. Algunos escritores precisan un nombre de archivo, mientras que otros no. Si se especifica un nombre de archivo para un escritor que no usa nombres de archivo, se omite este parámetro.</param>
      <param name="fFullBuild" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; indicates that this is a full rebuild; &lt;see langword=&quot;false&quot; /&gt; indicates that this is an incremental compilation.">
        <see langword="true" /> indica que se trata de una recompilación completa; <see langword="false" /> indica que se trata de una compilación incremental.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Opens a method to place symbol information into.">Abre un método para incluir información de símbolos.</summary>
      <param name="method" vsli:raw="The metadata token for the method to be opened.">Símbolo (token) de metadatos para el método que se va a abrir.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
      <summary vsli:raw="Opens a new namespace.">Abre un nuevo espacio de nombres.</summary>
      <param name="name" vsli:raw="The name of the new namespace.">Nombre del nuevo espacio de nombres.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
      <summary vsli:raw="Opens a new lexical scope in the current method.">Abre un nuevo ámbito léxico en el método actual.</summary>
      <param name="startOffset" vsli:raw="The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.">Desplazamiento en bytes desde el principio del método hasta la primera instrucción del ámbito léxico.</param>
      <returns vsli:raw="An opaque scope identifier that can be used with &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)&quot; /&gt; to define the start and end offsets of a scope at a later time. In this case, the offsets passed to &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)&quot; /&gt; and &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)&quot; /&gt; are ignored. A scope identifier is valid only in the current method.">Identificador de ámbito opaco que puede utilizarse con el método <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> para definir los desplazamientos inicial y final de un ámbito en un momento posterior. En este caso, se omiten los desplazamientos pasados a <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /> y <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" />. Un identificador de ámbito sólo es válido en el método actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
      <summary vsli:raw="Specifies the true start and end of a method within a source file. Use &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)&quot; /&gt; to specify the extent of a method, independent of the sequence points that exist within the method.">Especifica el principio y final reales de un método dentro de un archivo de código fuente. Utilice el método <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /> para especificar la extensión de un método, independientemente de los puntos de secuencia que existan dentro del método.</summary>
      <param name="startDoc" vsli:raw="The document that contains the starting position.">Documento que contiene la posición inicial.</param>
      <param name="startLine" vsli:raw="The starting line number.">Número de línea inicial.</param>
      <param name="startColumn" vsli:raw="The starting column.">Columna inicial.</param>
      <param name="endDoc" vsli:raw="The document that contains the ending position.">Documento que contiene la posición final.</param>
      <param name="endLine" vsli:raw="The ending line number.">Número de línea final.</param>
      <param name="endColumn" vsli:raw="The ending column number.">Número de columna final.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Defines the offset range for the specified lexical scope.">Define el intervalo de desplazamiento del ámbito léxico especificado.</summary>
      <param name="scopeID" vsli:raw="The identifier of the lexical scope.">Identificador del ámbito léxico.</param>
      <param name="startOffset" vsli:raw="The byte offset of the beginning of the lexical scope.">Desplazamiento de bytes del principio del ámbito léxico.</param>
      <param name="endOffset" vsli:raw="The byte offset of the end of the lexical scope.">Desplazamiento de bytes del final del ámbito léxico.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
      <summary vsli:raw="Defines an attribute when given the attribute name and the attribute value.">Define un atributo cuando se especifican el nombre y el valor del atributo.</summary>
      <param name="parent" vsli:raw="The metadata token for which the attribute is being defined.">Símbolo (token) de metadatos para el que se define el atributo.</param>
      <param name="name" vsli:raw="The attribute name.">Nombre del atributo.</param>
      <param name="data" vsli:raw="The attribute value.">Valor del atributo.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
      <summary vsli:raw="Sets the underlying &lt;see langword=&quot;ISymUnmanagedWriter&quot; /&gt; (the corresponding unmanaged interface) that a managed &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; uses to emit symbols.">Establece la interfaz <see langword="ISymUnmanagedWriter" /> subyacente (la interfaz no administrada correspondiente) que un objeto <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> administrado utiliza para emitir símbolos.</summary>
      <param name="underlyingWriter" vsli:raw="A pointer to code that represents the underlying writer.">Puntero al código que representa el escritor subyacente.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Identifies the user-defined method as the entry point for the current module.">Identifica el método definido por el usuario como punto de entrada del módulo actual.</summary>
      <param name="entryMethod" vsli:raw="The metadata token for the method that is the user entry point.">Símbolo (token) de metadatos del método que constituye el punto de entrada del usuario.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
      <summary vsli:raw="Specifies that the given, fully qualified namespace name is used within the open lexical scope.">Indica que el nombre completo del espacio de nombres especificado se utiliza dentro del ámbito léxico abierto.</summary>
      <param name="fullName" vsli:raw="The fully qualified name of the namespace.">Nombre completo del espacio de nombres.</param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymAddressKind">
      <summary vsli:raw="Specifies address types for local variables, parameters, and fields in the methods &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)&quot; /&gt;, &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)&quot; /&gt;, and &lt;see cref=&quot;M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)&quot; /&gt; of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.ISymbolWriter&quot; /&gt; interface.">Especifica los tipos de direcciones de las variables locales, los parámetros y los campos de los métodos <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />, <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> y <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" /> de la interfaz <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.BitField">
      <summary vsli:raw="A bit field. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the position where the field starts, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the field length.">Campo de bits. El parámetro <paramref name="addr1" /> es la posición donde comienza el campo y el parámetro <paramref name="addr2" /> es la longitud del campo.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.ILOffset">
      <summary vsli:raw="A Microsoft intermediate language (MSIL) offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the MSIL local variable or parameter index.">Desplazamiento del Lenguaje intermedio de Microsoft (MSIL). El parámetro <paramref name="addr1" /> es el índice del parámetro o la variable local del MSIL.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset">
      <summary vsli:raw="A native offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the offset from the start of the parent.">Desplazamiento nativo. El parámetro <paramref name="addr1" /> es el desplazamiento desde el principio del elemento primario.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister">
      <summary vsli:raw="A native register address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the register in which the variable is stored.">Dirección del Registro nativo. El parámetro <paramref name="addr1" /> es el Registro en el que está almacenada la variable.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the low-order register, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the high-order register.">Dirección relativa del Registro. El parámetro <paramref name="addr1" /> es el Registro de orden inferior y el parámetro <paramref name="addr2" /> es el Registro de orden superior.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the register, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset.">Dirección relativa del Registro. El parámetro <paramref name="addr1" /> es el Registro y el parámetro <paramref name="addr2" /> es el desplazamiento.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the low-order register, the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the stack register, and the &lt;paramref name=&quot;addr3&quot; /&gt; parameter is the offset from the stack pointer to the high-order part of the value.">Dirección relativa del Registro. El parámetro <paramref name="addr1" /> es el Registro de orden inferior, el parámetro <paramref name="addr2" /> es el Registro de pila y el parámetro <paramref name="addr3" /> es el desplazamiento del indicador de pila a la parte de orden superior del valor.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA">
      <summary vsli:raw="A native Relevant Virtual Address (RVA). The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the RVA in the module.">Dirección relativa virtual (Relative Virtual Address, RVA) nativa. El parámetro <paramref name="addr1" /> es la dirección RVA del módulo.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset">
      <summary vsli:raw="A native section offset. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the section, and the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset.">Desplazamiento de sección nativo. El parámetro <paramref name="addr1" /> es la sección y el parámetro <paramref name="addr2" /> es el desplazamiento.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister">
      <summary vsli:raw="A register-relative address. The &lt;paramref name=&quot;addr1&quot; /&gt; parameter is the stack register, the &lt;paramref name=&quot;addr2&quot; /&gt; parameter is the offset from the stack pointer to the low-order part of the value, and the &lt;paramref name=&quot;addr3&quot; /&gt; parameter is the high-order register.">Dirección relativa del Registro. El parámetro <paramref name="addr1" /> es el Registro de pila, el parámetro <paramref name="addr2" /> es el desplazamiento del indicador de pila a la parte de orden inferior del valor y el parámetro <paramref name="addr3" /> es el Registro de orden superior.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymbolToken">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure is an object representation of a token that represents symbolic information.">La estructura de <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> es una representación de objeto de un símbolo (token) que representa información simbólica.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure when given a value.">Inicializa una nueva instancia de la estructura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> cuando se proporciona un valor.</summary>
      <param name="val" vsli:raw="The value to be used for the token.">El valor que se va a utilizar para el símbolo (token).</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Determines whether &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance.">Determina si <paramref name="obj" /> es igual a esta instancia.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; to check.">
        <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)">
      <summary vsli:raw="Determines whether &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; and is equal to this instance.">Determina si un objeto <paramref name="obj" /> es una instancia de <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> y coincide con esta instancia.</summary>
      <param name="obj" vsli:raw="The object to check.">Objeto que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; and is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> y es igual a esta instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetHashCode">
      <summary vsli:raw="Generates the hash code for the current token.">Genera el código hash del símbolo (token) actual.</summary>
      <returns vsli:raw="The hash code for the current token.">El código hash del símbolo (token) actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.GetToken">
      <summary vsli:raw="Gets the value of the current token.">Obtiene el valor del símbolo (token) actual.</summary>
      <returns vsli:raw="The value of the current token.">El valor del símbolo (token) actual.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Returns a value indicating whether two &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; objects are equal.">Devuelve un valor que indica si dos objetos <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> son iguales.</summary>
      <param name="a" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Estructura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Estructura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="a" /> y <paramref name="b" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)">
      <summary vsli:raw="Returns a value indicating whether two &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; objects are not equal.">Devuelve un valor que indica si dos objetos <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> no son iguales.</summary>
      <param name="a" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Estructura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <param name="b" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymbolToken&quot; /&gt; structure.">Estructura <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="a" /> y <paramref name="b" /> no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocumentType">
      <summary vsli:raw="Holds the public GUIDs for document types to be used with the symbol store.">Contiene los identificadores GUID públicos de los tipos de documentos que se van a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymDocumentType&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.SymbolStore.SymDocumentType" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymDocumentType.Text">
      <summary vsli:raw="Specifies the GUID of the document type to be used with the symbol store.">Especifica el identificador GUID del tipo de documento que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageType">
      <summary vsli:raw="Holds the public GUIDs for language types to be used with the symbol store.">Contiene los identificadores GUID públicos de los tipos de lenguajes que se van a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymLanguageType&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.SymbolStore.SymLanguageType" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Basic">
      <summary vsli:raw="Specifies the GUID of the Basic language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje Basic que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.C">
      <summary vsli:raw="Specifies the GUID of the C language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje C que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Cobol">
      <summary vsli:raw="Specifies the GUID of the Cobol language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje Cobol que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CPlusPlus">
      <summary vsli:raw="Specifies the GUID of the C++ language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje C++ que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.CSharp">
      <summary vsli:raw="Specifies the GUID of the C# language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje C# que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.ILAssembly">
      <summary vsli:raw="Specifies the GUID of the ILAssembly language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje ILAssembly que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Java">
      <summary vsli:raw="Specifies the GUID of the Java language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje Java que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.JScript">
      <summary vsli:raw="Specifies the GUID of the JScript language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje JScript que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.MCPlusPlus">
      <summary vsli:raw="Specifies the GUID of the C++ language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje C++ que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.Pascal">
      <summary vsli:raw="Specifies the GUID of the Pascal language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje Pascal que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageType.SMC">
      <summary vsli:raw="Specifies the GUID of the SMC language type to be used with the symbol store.">Especifica el identificador GUID del tipo de lenguaje SMC que se va a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymLanguageVendor">
      <summary vsli:raw="Holds the public GUIDs for language vendors to be used with the symbol store.">Contiene los identificadores GUID públicos de los proveedores de lenguajes que se van a utilizar con el almacén de símbolos.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymLanguageVendor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SymbolStore.SymLanguageVendor&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.SymbolStore.SymLanguageVendor" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SymbolStore.SymLanguageVendor.Microsoft">
      <summary vsli:raw="Specifies the GUID of the Microsoft language vendor.">Especifica el identificador GUID del proveedor del lenguaje de programación de Microsoft.</summary>
    </member>
  </members>
</doc>