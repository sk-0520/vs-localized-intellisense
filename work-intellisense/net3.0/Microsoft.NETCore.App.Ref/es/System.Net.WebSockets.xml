<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ValueWebSocketReceiveResult">
      <summary>Representa el resultado de realizar una sola operación <see cref="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" /> en un elemento <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ValueWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Inicializa una nueva instancia del struct <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" />. Una instancia de esta estructura representa el resultado de realizar una única operación <c>ReceiveAsync</c> en un elemento <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <param name="count">El número de bytes que ha recibido <see cref="T:System.Net.WebSockets.WebSocket" />.</param>
      <param name="messageType">Uno de los valores de enumeración que indica si el mensaje actual es un mensaje UTF-8 o binario.</param>
      <param name="endOfMessage">
        <see langword="true" /> para indicar que el mensaje se ha recibido completamente; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.Count" />
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.EndOfMessage" />
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.MessageType" />
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>La clase WebSocket permite a las aplicaciones enviar y recibir datos después de que se haya completado la actualización de WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>Anula la conexión de WebSocket y cualquier operación pendiente de E/S.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Cierra la conexión de WebSocket como una operación asincrónica mediante el protocolo de enlace de cierre definido en la sección 7 de la especificación del protocolo WebSocket.</summary>
      <param name="closeStatus">Indica la razón para cerrar la conexión de WebSocket.</param>
      <param name="statusDescription">Especifica una explicación legible acerca de por qué se cierra la conexión.</param>
      <param name="cancellationToken">El token que se puede usar para propagar la notificación de que las operaciones deben cancelarse.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Inicia o completa el protocolo de enlace de cierre definido en la sección 7 de la especificación del protocolo WebSocket.</summary>
      <param name="closeStatus">Indica la razón para cerrar la conexión de WebSocket.</param>
      <param name="statusDescription">Permite a las aplicaciones especificar una explicación legible acerca de por qué se cierra la conexión.</param>
      <param name="cancellationToken">El token que se puede usar para propagar la notificación de que las operaciones deben cancelarse.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>Indica la razón por la que el extremo remoto inició el protocolo de enlace de clausura.</summary>
      <returns>Devuelva <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>Permite que el extremo remoto describa la razón por la que la conexión se cerró.</summary>
      <returns>Devuelva <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
      <summary>Crear los búferes del cliente para utilizar con esta instancia <see cref="T:System.Net.WebSockets.WebSocket" /> .</summary>
      <param name="receiveBufferSize">Tamaño, en bytes, del búfer de recepción de cliente.</param>
      <param name="sendBufferSize">Tamaño, en bytes, del búfer de envío.</param>
      <returns>Una matriz con los búferes del cliente.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
      <summary>Permite que los llamadores creen una clase WebSocket del lado cliente que utilice el WSPC para los marcos.</summary>
      <param name="innerStream">Conexión que se va a usar para operaciones de E/S.</param>
      <param name="subProtocol">El subprotocolo aceptado por el cliente.</param>
      <param name="receiveBufferSize">Tamaño en bytes del búfer de recepción WebSocket de cliente.</param>
      <param name="sendBufferSize">Tamaño en bytes del búfer de envío WebSocket de cliente.</param>
      <param name="keepAliveInterval">Determina la frecuencia con la que se envía una trama a través de una conexión a modo de keep-alive. Solo se aplica cuando la conexión está inactiva.</param>
      <param name="useZeroMaskingKey">Indica si se debe usar una clave aleatoria o una clave estática (solo ceros) para la máscara de WebSocket.</param>
      <param name="internalBuffer">Se usará como el búfer interno en el WPC. El tamaño debe ser al menos <c>2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (16 en 32 bits)</c>.</param>
      <returns>Devuelva <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)">
      <summary>Crea un objeto <see cref="T:System.Net.WebSockets.WebSocket" /> que opera en la secuencia especificada, la cual representa una conexión de socket web.</summary>
      <param name="stream">Secuencia para la conexión.</param>
      <param name="isServer">
        <see langword="true" /> para indicar que es el lado servidor de la conexión; <see langword="false" /> si es el lado cliente.</param>
      <param name="subProtocol">Subprotocolo acordado que se usó al crear la conexión.</param>
      <param name="keepAliveInterval">Intervalo de persistencia que se va a usar o <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> para deshabilitar la persistencia.</param>
      <returns>Nuevo socket web.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
      <summary>Crea un búfer del servidor de WebSocket.</summary>
      <param name="receiveBufferSize">Tamaño, en bytes, del búfer deseado.</param>
      <returns>Devuelva <see cref="T:System.ArraySegment`1" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
      <summary>Obtiene el intervalo de mantenimiento del protocolo WebSocket predeterminado.</summary>
      <returns>El intervalo persistente del protocolo WebSocket predeterminado. El valor típico de este intervalo es de 30 segundos (tal y como se define en el sistema operativo o la plataforma .NET). Se usa para inicializar <see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" /> el valor.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>Se usa para limpiar recursos no administrados para ASP.NET e implementaciones que se hospedan a sí mismas.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
      <summary>Devuelve un valor que indica si la instancia WebSocket tiene como destino .NET Framework 4.5.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.WebSockets.WebSocket" /> tiene como destino .NET Framework 4.5; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
      <summary>Devuelve un valor que indica si el estado de la instancia de WebSocket es cerrada o anulada.</summary>
      <param name="state">Estado actual de WebSocket.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Net.WebSockets.WebSocket" /> se cierra o se anula; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Recibe datos de la conexión de <see cref="T:System.Net.WebSockets.WebSocket" /> de forma asincrónica.</summary>
      <param name="buffer">Hace referencia al búfer de aplicación que es la ubicación de almacenamiento para los datos recibidos.</param>
      <param name="cancellationToken">Propaga la notificación de que las operaciones deben cancelarse.</param>
      <returns>Objeto de tarea que representa la operación asincrónica. La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve una matriz <see cref="T:System.Byte" /> que contiene los datos recibidos.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
      <summary>Permite que los llamadores registren los prefijos para solicitudes de WebSocket (WS y WSS).</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envía datos a través de la conexión <see cref="T:System.Net.WebSockets.WebSocket" /> de forma asincrónica.</summary>
      <param name="buffer">Búfer que se va a enviar a través de la conexión.</param>
      <param name="messageType">Indica si la aplicación envía un mensaje de texto o binario.</param>
      <param name="endOfMessage">Indica si los datos de "buffer" son la última parte de un mensaje.</param>
      <param name="cancellationToken">Token que propaga la notificación de que se deben cancelar las operaciones.</param>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="messageType" />
      <param name="endOfMessage" />
      <param name="cancellationToken" />
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>Devuelve el estado actual de la conexión WebSocket.</summary>
      <returns>Estado actual de la conexión de WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>Obtiene el subprotocolo negociado durante el protocolo de enlace de apertura.</summary>
      <returns>El subprotocolo que se negoció durante el protocolo de enlace de apertura.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
      <summary>Comprueba que la conexión está en un estado esperado.</summary>
      <param name="state">Estado actual del WebSocket que se va a probar con la lista de estados válidos.</param>
      <param name="validStates">Lista de estados de conexión válidos.</param>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>Representa códigos de cierre de WebSocket conocidos tal como se definen en la sección 11.7 de la especificación del protocolo WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>Error no especificado.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) Indica que se está quitando un extremo. El servidor o el cliente no estarán disponibles.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>El servidor cerrará la conexión debido a un error en el servidor.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) El cliente o el servidor está finalizando la conexión porque no puede aceptar el tipo de datos que recibió.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) El cliente o el servidor está finalizando la conexión porque ha recibido datos incoherentes con el tipo de mensaje.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) El cliente está finalizando la conexión porque esperaba al servidor para negociar una extensión.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1004) Reservado para un uso futuro.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) La conexión se ha cerrado después de que se realizara la solicitud.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) La conexión se cerrará porque un extremo ha recibido un mensaje que infringe la directiva.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) El cliente o el servidor está finalizando la conexión debido a un error de protocolo.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketContext">
      <summary>Se usa para tener acceso a la información en el protocolo de enlace WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketContext.#ctor">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketContext" />.</summary>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.CookieCollection">
      <summary>Cookies que se pasaron al servidor durante el protocolo de enlace de apertura.</summary>
      <returns>Devuelva <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Headers">
      <summary>Encabezados HTTP que se enviaron al servidor durante el protocolo de enlace de apertura.</summary>
      <returns>Devuelva <see cref="T:System.Collections.Specialized.NameValueCollection" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsAuthenticated">
      <summary>Si el cliente de WebSocket está autenticado.</summary>
      <returns>Devuelva <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsLocal">
      <summary>Si el cliente de WebSocket está conectado desde el equipo local.</summary>
      <returns>Devuelva <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsSecureConnection">
      <summary>Si la conexión WebSocket está protegida mediante capa de sockets seguros (SSL).</summary>
      <returns>Devuelva <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Origin">
      <summary>El valor del encabezado HTTP Origin incluido en el protocolo de enlace de apertura.</summary>
      <returns>Devuelva <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.RequestUri">
      <summary>Dirección URI solicitada por el cliente WebSocket.</summary>
      <returns>Devuelva <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketKey">
      <summary>Valor del encabezado HTTP SecWebSocketKey incluido en el protocolo de enlace de apertura.</summary>
      <returns>Devuelva <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketProtocols">
      <summary>Valor del encabezado HTTP SecWebSocketKey incluido en el protocolo de enlace de apertura.</summary>
      <returns>Devuelva <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketVersion">
      <summary>Lista de subprotocolos solicitados por el cliente WebSocket.</summary>
      <returns>Devuelva <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.User">
      <summary>Un objeto utilizado para obtener la identidad, la información de autenticación y los roles de seguridad para el cliente WebSocket.</summary>
      <returns>Devuelva <see cref="T:System.Security.Principal.IPrincipal" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.WebSocket">
      <summary>La instancia de WebSocket usada para interactuar (envío, recepción, cierre, etc.) con la conexión de WebSocket.</summary>
      <returns>Devuelva <see cref="T:System.Net.WebSockets.WebSocket" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>Contiene la lista de posibles errores de WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>Indica que la conexión finalizó de forma inesperada.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>Indica un error general.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>Indica que se produjo un error al analizar los encabezados HTTP durante el protocolo de enlace de apertura.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>Indica que se recibió un marco de WebSocket con un código de operación desconocido.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>Indica que WebSocket está en un estado no válido para la operación especificada (por ejemplo se ha cerrado o anulado).</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>Indica que se ha producido un error nativo desconocido.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>Indica que la solicitud entrante no era una solicitud válida de websocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>Indica que no hay información de error nativa para la excepción.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>Indica que el cliente solicitó un subprotocolo WebSocket no compatible.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>Indica que el cliente solicitó una versión no compatible del protocolo WebSocket.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>Representa una excepción que se produjo al realizar una operación en una conexión WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" /> .</summary>
      <param name="nativeError">Código de error nativo de la excepción.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Código de error nativo de la excepción.</param>
      <param name="innerException">Indica la excepción anterior que condujo a la excepción actual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Código de error nativo de la excepción.</param>
      <param name="message">Descripción del error.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Error de la enumeración de WebSocketError.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Error de la enumeración de WebSocketError.</param>
      <param name="innerException">Indica la excepción anterior que condujo a la excepción actual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" /> .</summary>
      <param name="error">Error de la enumeración de WebSocketError.</param>
      <param name="nativeError">Código de error nativo de la excepción.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Error de la enumeración de WebSocketError.</param>
      <param name="nativeError">Código de error nativo de la excepción.</param>
      <param name="innerException">Indica la excepción anterior que condujo a la excepción actual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Error de la enumeración de WebSocketError.</param>
      <param name="nativeError">Código de error nativo de la excepción.</param>
      <param name="message">Descripción del error.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Error de la enumeración de WebSocketError.</param>
      <param name="nativeError">Código de error nativo de la excepción.</param>
      <param name="message">Descripción del error.</param>
      <param name="innerException">Indica la excepción anterior que condujo a la excepción actual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Error de la enumeración de WebSocketError.</param>
      <param name="message">Descripción del error.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Error de la enumeración de WebSocketError.</param>
      <param name="message">Descripción del error.</param>
      <param name="innerException">Indica la excepción anterior que condujo a la excepción actual.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Descripción del error.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Descripción del error.</param>
      <param name="innerException">Indica la excepción anterior que condujo a la excepción actual.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>Código de error nativo para la excepción que se produjo.</summary>
      <returns>Devuelva <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Establece el objeto SerializationInfo con el nombre de archivo y el número de línea en que se ha producido la excepción.</summary>
      <param name="info">Objeto SerializationInfo.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>Devuelve un objeto WebSocketError que indica el tipo de error que se produjo.</summary>
      <returns>Devuelva <see cref="T:System.Net.WebSockets.WebSocketError" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>Indica el tipo de mensaje.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>El mensaje está en formato binario.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>Una operación de recepción se ha completado porque un mensaje cerrado se recibió.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>El mensaje es texto no cifrado.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>Una instancia de esta clase representa el resultado de realizar una única operación ReceiveAsync en un WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Número de bytes recibidos.</param>
      <param name="messageType">Tipo de mensaje que se recibió.</param>
      <param name="endOfMessage">Indica si es este es el mensaje final.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>Crea una instancia de la clase <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Número de bytes recibidos.</param>
      <param name="messageType">Tipo de mensaje que se recibió.</param>
      <param name="endOfMessage">Indica si es este es el mensaje final.</param>
      <param name="closeStatus">Indica el valor <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> de la conexión</param>
      <param name="closeStatusDescription">Descripción de <paramref name="closeStatus" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>Indica el motivo por el cual el punto de conexión remoto inició el protocolo de enlace de cierre.</summary>
      <returns>Devuelva <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>Devuelve la descripción opcional que describe por qué el punto de conexión remoto ha iniciado el protocolo de enlace de cierre.</summary>
      <returns>Devuelva <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>Indica el número de bytes que recibió el WebSocket.</summary>
      <returns>Devuelva <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>Indica si el mensaje se recibió completamente.</summary>
      <returns>Devuelva <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>Indica si el mensaje actual es un mensaje UTF-8 o un mensaje binario.</summary>
      <returns>Devuelva <see cref="T:System.Net.WebSockets.WebSocketMessageType" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary>Define los distintos estados en que puede estar una instancia de WebSockets.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>Reservado para un uso futuro.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>Indica que el protocolo de enlace de clausura de WebSocket se completó correctamente.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>Se recibió un mensaje de cierre desde el extremo remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>Mensaje de cierre que se envió al extremo remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>La conexión está negociando el protocolo de enlace con el extremo remoto.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>Reservado para un uso futuro.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>Estado inicial después de que se haya completado el protocolo de enlace HTTP.</summary>
    </member>
  </members>
</doc>