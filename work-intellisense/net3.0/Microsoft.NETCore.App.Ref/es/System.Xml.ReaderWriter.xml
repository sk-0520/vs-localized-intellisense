<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.ReaderWriter</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary vsli:raw="Specifies the amount of input or output checking that &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; objects perform.">Especifica el número de comprobaciones de entrada o de salida que realizan los objetos <see cref="T:System.Xml.XmlReader" /> y <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object automatically detects whether document-level or fragment-level checking should be performed, and does the appropriate checking. If you're wrapping another &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object, the outer object doesn't do any additional conformance checking. Conformance checking is left up to the underlying object.  &#xA;  &#xA; See the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.ConformanceLevel&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.ConformanceLevel&quot; /&gt; properties for details on how the compliance level is determined.">Los objetos <see cref="T:System.Xml.XmlReader" /> o <see cref="T:System.Xml.XmlWriter" /> detectan automáticamente si se debe realizar la comprobación del documento o fragmento y lleva a cabo la comprobación correspondiente. Si está ajustando otro objeto <see cref="T:System.Xml.XmlReader" /> o <see cref="T:System.Xml.XmlWriter" />, el objeto externo no lleva a cabo ninguna comprobación de conformidad adicional. La comprobación de conformidad se deja al objeto subyacente.  
Vea las propiedades <see cref="P:System.Xml.XmlReaderSettings.ConformanceLevel" /> y <see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel" /> para más información sobre cómo se determina el nivel de cumplimiento.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary vsli:raw="The XML data complies with the rules for a well-formed XML 1.0 document, as defined by the W3C. This level of checking ensures that the stream being read or written can be consumed by any processor as an XML 1.0 document.">Los datos XML cumplen con las reglas de un documento XML 1.0 con el formato correcto, tal como define W3C. Este nivel de comprobación garantiza que el flujo que se lee o escribe pueda consumirse por cualquier procesador como un documento XML 1.0.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary vsli:raw="The XML data is a well-formed XML fragment, as defined by the W3C.  This conformance level represents an XML document that might not have a root element but is otherwise well-formed. This level of checking ensures that the stream being read or written can be consumed by any processor as an XML 1.0 external parsed entity].">Los datos XML son un fragmento XML con el formato correcto, tal como define W3C.  Este nivel de conformidad representa un documento XML que puede que no tenga un elemento raíz, pero que está bien formado. Este nivel de comprobación garantiza que el flujo que se lee o escribe pueda consumirse por cualquier procesador como una  entidad analizada externa XML 1.0].</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary vsli:raw="Specifies the options for processing DTDs. The &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration is used by the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class.">Especifica las opciones para procesar DTD. La clase <see cref="T:System.Xml.DtdProcessing" /> utiliza la enumeración <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary vsli:raw="Causes the DOCTYPE element to be ignored. No DTD processing occurs, and the DTD/DOCTYPE is lost on output.">Hace que se omita el elemento DOCTYPE. No se produce ningún procesamiento de DTD, y DTD/DOCTYPE se pierde en la salida.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary vsli:raw="Used for parsing DTDs.">Se usa para analizar DTD.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary vsli:raw="Specifies that when a DTD is encountered, an &lt;see cref=&quot;T:System.Xml.XmlException&quot; /&gt; is thrown with a message that states that DTDs are prohibited. This is the default behavior.">Especifica que cuando se encuentre una DTD, se produzca una excepción <see cref="T:System.Xml.XmlException" /> con un mensaje que indique que se prohíbe el uso de esa DTD. Éste es el comportamiento predeterminado.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary vsli:raw="Specifies how the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; handle entities.">Especifica cómo <see cref="T:System.Xml.XmlTextReader" /> o <see cref="T:System.Xml.XmlValidatingReader" /> controlan las entidades.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary vsli:raw="Expands character entities and returns general entities as &lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes. &#xA;        &#xA;You must call &lt;see cref=&quot;Overload:System.Xml.XmlReader.ResolveEntity&quot; /&gt; to see what the general entities expand to. This enables you to optimize entity handling by only expanding the entity the first time it is used.  &#xA;  &#xA;When set to &lt;see langword=&quot;ExpandCharEntities&quot; /&gt;, a reader call to the &lt;see cref=&quot;Overload:System.Xml.XmlReader.GetAttribute&quot; /&gt; method expands all entities (both general and character entities).">Expande las entidades de carácter y devuelve las entidades generales como nodos <see cref="F:System.Xml.XmlNodeType.EntityReference" />. 
Debe llamar a <see cref="Overload:System.Xml.XmlReader.ResolveEntity" /> para ver a qué se expanden las entidades generales. Esto le permite optimizar el tratamiento de la entidad expandiendo solo la entidad la primera vez que se usa.  
Cuando se establece en <see langword="ExpandCharEntities" />, una llamada de lector al método <see cref="Overload:System.Xml.XmlReader.GetAttribute" /> expande todas las entidades (las entidades generales y de caracteres).</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary vsli:raw="Expands all entities and returns the expanded nodes.&#xA;        &#xA;&lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes are not returned. The entity text is expanded in place of the entity references.">Expande todas las entidades y devuelve los nodos expandidos.
Los nodos <see cref="F:System.Xml.XmlNodeType.EntityReference" /> no se devuelven. El texto de la entidad se expande en lugar de las referencias de entidad.</summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary vsli:raw="Specifies formatting options for the &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt;.">Especifica las opciones de formato de <see cref="T:System.Xml.XmlTextWriter" />.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary vsli:raw="Causes child elements to be indented according to the &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Indentation&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlTextWriter.IndentChar&quot; /&gt; settings.&#xA;&#xA;This option indents element content only; mixed content is not affected. For the XML 1.0 definitions of these terms, see the World Wide Web Consortium (W3C) documentation Element Content and Mixed Content.">Hace que los elementos secundarios tengan la sangría que indican los valores de las propiedades <see cref="P:System.Xml.XmlTextWriter.Indentation" /> y <see cref="P:System.Xml.XmlTextWriter.IndentChar" />.
Esta opción solo aplica sangría al contenido del elemento; el contenido mixto no se ve afectado. Para las definiciones de XML 1.0 de estos términos, consulte la documentación de World Wide Web Consortium (W3C) sobre contenido del elemento y contenido mixto.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary vsli:raw="No special formatting is applied. This is the default.">No se aplica un formato especial. Este es el valor predeterminado.</summary>
    </member>
    <member name="T:System.Xml.IApplicationResourceStreamResolver">
      <summary vsli:raw="Represents an application resource stream resolver.">Representa una resolución de secuencias de recursos de aplicación.</summary>
    </member>
    <member name="M:System.Xml.IApplicationResourceStreamResolver.GetApplicationResourceStream(System.Uri)">
      <summary vsli:raw="Returns an application resource stream from the specified URI.">Devuelve una secuencia de recursos de aplicación a partir del URI especificado.</summary>
      <param name="relativeUri" vsli:raw="The relative URI.">Dirección URI relativa.</param>
      <returns vsli:raw="An application resource stream.">Un flujo de recursos de la aplicación.</returns>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary vsli:raw="Enables a class to return an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; from the current context or position.">Permite que una clase devuelva <see cref="T:System.Xml.XmlNode" /> desde el contexto o la posición actuales.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; for the current position.">Devuelve el <see cref="T:System.Xml.XmlNode" /> de la posición actual.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; for the current position.">
        <see langword="XmlNode" /> de la posición actual.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary vsli:raw="Provides an interface to enable a class to return line and position information.">Proporciona una interfaz que permite a una clase devolver información de línea y de posición.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">Obtiene un valor que indica si la clase puede devolver información de línea.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Xml.IXmlLineInfo.LineNumber&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.IXmlLineInfo.LinePosition&quot; /&gt; can be provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se pueden proporcionar <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> y <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary vsli:raw="Gets the current line number.">Obtiene el número de línea actual.</summary>
      <returns vsli:raw="The current line number or 0 if no line information is available (for example, &lt;see cref=&quot;M:System.Xml.IXmlLineInfo.HasLineInfo&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).">Número de línea actual o 0 si no hay información de línea disponible (por ejemplo, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> devuelve <see langword="false" />).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary vsli:raw="Gets the current line position.">Obtiene la posición de línea actual.</summary>
      <returns vsli:raw="The current line position or 0 if no line information is available (for example, &lt;see cref=&quot;M:System.Xml.IXmlLineInfo.HasLineInfo&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).">Posición de línea actual o 0 si no hay información de línea disponible (por ejemplo, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> devuelve <see langword="false" />).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary vsli:raw="Provides read-only access to a set of prefix and namespace mappings.">Proporciona acceso de solo lectura a un conjunto de asignaciones de prefijos y espacios de nombres.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection of defined prefix-namespace mappings that are currently in scope.">Obtiene una colección de asignaciones de prefijos y espacios de nombres que están actualmente en el ámbito.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the current in-scope namespaces.">
        <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que hay actualmente en el ámbito.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI mapped to the specified prefix.">Obtiene el URI del espacio de nombres asignado al prefijo especificado.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you wish to find.">Prefijo cuyo URI de espacio de nombres se desea buscar.</param>
      <returns vsli:raw="The namespace URI that is mapped to the prefix; &lt;see langword=&quot;null&quot; /&gt; if the prefix is not mapped to a namespace URI.">Identificador URI del espacio de nombres que está asignado al prefijo; es <see langword="null" /> si el prefijo no está asignado a ningún URI de espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary vsli:raw="Gets the prefix that is mapped to the specified namespace URI.">Obtiene el prefijo asignado al URI del espacio de nombres especificado.</summary>
      <param name="namespaceName" vsli:raw="The namespace URI whose prefix you wish to find.">URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <returns vsli:raw="The prefix that is mapped to the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if the namespace URI is not mapped to a prefix.">Prefijo asignado al URI del espacio de nombres; es <see langword="null" /> si este URI no está asignado a ningún prefijo.</returns>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary vsli:raw="Specifies whether to remove duplicate namespace declarations in the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Especifica si se van a quitar las declaraciones de espacio de nombres duplicadas en <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary vsli:raw="Specifies that duplicate namespace declarations will not be removed.">Especifica que no se quitarán las declaraciones de espacio de nombres duplicadas.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary vsli:raw="Specifies that duplicate namespace declarations will be removed. For the duplicate namespace to be removed, the prefix and the namespace must match.">Especifica que se quitarán las declaraciones de espacio de nombres duplicadas. Para poder quitar el espacio de nombres duplicado, el prefijo y el espacio de nombres deben coincidir.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary vsli:raw="Implements a single-threaded &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Implementa <see cref="T:System.Xml.XmlNameTable" /> de un único subproceso.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;NameTable&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="NameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Atomizes the specified string and adds it to the &lt;see langword=&quot;NameTable&quot; /&gt;.">Subdivide la cadena especificada y la agrega a <see langword="NameTable" />.</summary>
      <param name="key" vsli:raw="The character array containing the string to add.">Matriz de caracteres que contiene la cadena que se va a agregar.</param>
      <param name="start" vsli:raw="The zero-based index into the array specifying the first character of the string.">Índice de base cero de la matriz que especifica el primer carácter de la cadena.</param>
      <param name="len" vsli:raw="The number of characters in the string.">Número de caracteres de la cadena.</param>
      <returns vsli:raw="The atomized string or the existing string if one already exists in the &lt;see langword=&quot;NameTable&quot; /&gt;. If &lt;paramref name=&quot;len&quot; /&gt; is zero, String.Empty is returned.">Cadena subdividida o cadena existente si ya está en <see langword="NameTable" />. Si <paramref name="len" /> es cero, se devuelve String.Empty.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;start&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;start&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;len&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;len&quot; /&gt; =0.">0 &gt; <paramref name="start" />  
O bien 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 
O bien 
 <paramref name="len" /> &gt;= <paramref name="key" />.Length 
Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="len" /> = 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0.">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary vsli:raw="Atomizes the specified string and adds it to the &lt;see langword=&quot;NameTable&quot; /&gt;.">Subdivide la cadena especificada y la agrega a <see langword="NameTable" />.</summary>
      <param name="key" vsli:raw="The string to add.">Cadena que se va a agregar.</param>
      <returns vsli:raw="The atomized string or the existing string if it already exists in the &lt;see langword=&quot;NameTable&quot; /&gt;.">Cadena subdividida o cadena existente si ya está en <see langword="NameTable" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Gets the atomized string containing the same characters as the specified range of characters in the given array.">Obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.</summary>
      <param name="key" vsli:raw="The character array containing the name to find.">Matriz de caracteres que contiene el nombre que se va a buscar.</param>
      <param name="start" vsli:raw="The zero-based index into the array specifying the first character of the name.">Índice de base cero de la matriz que especifica el primer carácter del nombre.</param>
      <param name="len" vsli:raw="The number of characters in the name.">Número de caracteres del nombre.</param>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized. If &lt;paramref name=&quot;len&quot; /&gt; is zero, String.Empty is returned.">Cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todavía. Si <paramref name="len" /> es cero, se devuelve String.Empty.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;start&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;start&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;len&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;len&quot; /&gt; =0.">0 &gt; <paramref name="start" />  
o bien 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 
O bien 
 <paramref name="len" /> &gt;= <paramref name="key" />.Length 
Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="len" /> = 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0.">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary vsli:raw="Gets the atomized string with the specified value.">Obtiene la cadena subdividida con el valor especificado.</summary>
      <param name="value" vsli:raw="The name to find.">Nombre que se va a buscar.</param>
      <returns vsli:raw="The atomized string object or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized.">Objeto de cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todavía.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary vsli:raw="Specifies how to handle line breaks.">Especifica cómo controlar los saltos de línea.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary vsli:raw="New line characters are entitized. This setting preserves all characters when the output is read by a normalizing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Los nuevos caracteres de la línea tienen entidades. Esta configuración conserva todos los caracteres cuando el resultado se lee mediante un <see cref="T:System.Xml.XmlReader" /> de normalización.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary vsli:raw="The new line characters are unchanged. The output is the same as the input.">Los nuevos caracteres de línea no se modifican. El resultado es igual que la entrada.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary vsli:raw="New line characters are replaced to match the character specified in the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.NewLineChars&quot; /&gt; property.">Los nuevos caracteres de línea se reemplazan para coincidir con el carácter especificado en la propiedad <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary vsli:raw="Specifies the state of the reader.">Especifica el estado del lector.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Xml.XmlReader.Close&quot; /&gt; method has been called.">Se ha llamado al método <see cref="M:System.Xml.XmlReader.Close" />.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary vsli:raw="The end of the file has been reached successfully.">Se ha llegado al final del archivo correctamente.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary vsli:raw="An error occurred that prevents the read operation from continuing.">Se ha producido un error que impide que continúe la operación de lectura.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary vsli:raw="The &lt;see langword=&quot;Read&quot; /&gt; method has not been called.">No se ha llamado al método <see langword="Read" />.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary vsli:raw="The &lt;see langword=&quot;Read&quot; /&gt; method has been called. Additional methods may be called on the reader.">Se ha llamado al método <see langword="Read" />. Se puede llamar a otros métodos en el lector.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlKnownDtds&quot; /&gt; enumeration is used by the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; and defines which well-known DTDs that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; recognizes.">
        <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> usa la enumeración <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> y define las DTD conocidas que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconoce.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize all currently supported DTDs. This is the default behavior.">Especifica que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconocerá todas las DTD actualmente compatibles. Éste es el comportamiento predeterminado.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will not recognize any of the predefined DTDs.">Especifica que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> no reconocerá ninguna de las DTD predefinidas.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize DTDs and entities that are defined in RSS 0.91.">Especifica que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconocerá las DTD y entidades definidas en RSS 0.91.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize DTDs and entities that are defined in XHTML 1.0.">Especifica que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconocerá las DTD y entidades definidas en XHTML 1.0.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary vsli:raw="Represents a class that is used to prepopulate the cache with DTDs or XML streams.">Representa una clase que se usa para rellenar previamente la memoria caché con DTD o secuencias XML.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified preloaded well-known DTDs.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> con las DTD conocidas cargadas previamente especificadas.</summary>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into the cache.">DTD conocidas que se deben rellenar previamente en la memoria caché.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> con la resolución de reserva especificada.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> o su propia resolución.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver and preloaded well-known DTDs.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> con la resolución de reserva especificada y las DTD conocidas cargadas previamente.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> o su propia resolución.</param>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into the cache.">DTD conocidas que se deben rellenar previamente en la memoria caché.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> con la resolución de reserva, las DTD conocidas cargadas previamente y el comparador de igualdad de identificadores URI especificados.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> o su propia resolución.</param>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into cache.">DTD conocidas que se deben rellenar previamente en la memoria caché.</param>
      <param name="uriComparer" vsli:raw="The implementation of the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; generic interface to use when you compare URIs.">Implementación de la interfaz genérica <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> que se usa al comparar identificadores URI.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary vsli:raw="Adds a byte array to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">Agrega una matriz de bytes al <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> almacenado y le asigna a un URI. Si el almacén ya contiene una asignación para el mismo URI, se invalida la asignación existente.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI de los datos que se van a agregar al almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value" vsli:raw="A byte array with the data that corresponds to the provided URI.">Matriz de bytes con los datos correspondientes al identificador URI especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Adds a byte array to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">Agrega una matriz de bytes al <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> almacenado y le asigna a un URI. Si el almacén ya contiene una asignación para el mismo URI, se invalida la asignación existente.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI de los datos que se van a agregar al almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value" vsli:raw="A byte array with the data that corresponds to the provided URI.">Matriz de bytes con los datos correspondientes al identificador URI especificado.</param>
      <param name="offset" vsli:raw="The offset in the provided byte array where the data starts.">Desplazamiento en la matriz de bytes proporcionada donde comienzan los datos.</param>
      <param name="count" vsli:raw="The number of bytes to read from the byte array, starting at the provided offset.">Número de bytes que se leen de la matriz de bytes, empezando desde el desplazamiento especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> o <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of the &lt;paramref name=&quot;value&quot; /&gt; minus &lt;paramref name=&quot;offset&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="offset" /> o <paramref name="count" /> es menor que 0.  
O bien 
La longitud de <paramref name="value" /> menos <paramref name="offset" /> es menor que <paramref name="count." /></exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">Agrega un <see cref="T:System.IO.Stream" /> al <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> almacenado y lo asigna a un URI. Si el almacén ya contiene una asignación para el mismo URI, se invalida la asignación existente.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI de los datos que se van a agregar al almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; with the data that corresponds to the provided URI.">Objeto <see cref="T:System.IO.Stream" /> con los datos correspondientes al identificador URI especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary vsli:raw="Adds a string with preloaded data to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">Agrega una cadena con datos cargados previamente al almacén de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> y la asigna a un URI. Si el almacén ya contiene una asignación para el mismo URI, se invalida la asignación existente.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI de los datos que se van a agregar al almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value" vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; with the data that corresponds to the provided URI.">Objeto <see langword="String" /> con los datos correspondientes al identificador URI especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary vsli:raw="Sets the credentials that are used to authenticate the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt;.">Establece credenciales que se usan para autenticar <see cref="T:System.Net.WebRequest" /> subyacentes.</summary>
      <returns vsli:raw="The credentials that are used to authenticate the underlying web request.">Credenciales que se usan para autenticar la solicitud web subyacente.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource.">Asigna un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.">La versión actual de .NET Framework para Silverlight no utiliza este parámetro al resolver los URI. Este parámetro se incluye para futuros fines de extensibilidad. Por ejemplo, este parámetro se puede asignar a xlink:role y usar como argumento específico de la implementación en otros escenarios.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; supports &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; objects for URIs that were added as &lt;see langword=&quot;String&quot; /&gt;. If the requested type is not supported by the resolver, an exception will be thrown. Use the &lt;see cref=&quot;M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)&quot; /&gt; method to determine whether a certain &lt;see langword=&quot;Type&quot; /&gt; is supported by this resolver.">Tipo de objeto que se va a devolver. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> admite objetos <see cref="T:System.IO.Stream" /> y objetos <see cref="T:System.IO.TextReader" /> para los identificadores URI que se agregaron como <see langword="String" />. Si la resolución no admite el tipo solicitado, se producirá una excepción. Use el método <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> para determinar si esta resolución admite un <see langword="Type" /> determinado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; object that corresponds to the actual source.">Un objeto de <see cref="T:System.IO.Stream" /> o <see cref="T:System.IO.TextReader" /> que corresponde al origen real.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Cannot resolve URI passed in &lt;paramref name=&quot;absoluteUri&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is not of a supported type.">No puede resolver el URI pasado en el parámetro <paramref name="absoluteUri" />.  
O bien 
 <paramref name="ofObjectToReturn" /> no tiene un tipo compatible.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.">La versión actual de .NET Framework para Silverlight no utiliza este parámetro al resolver los URI. Este parámetro se incluye para futuros fines de extensibilidad. Por ejemplo, este parámetro se puede asignar a xlink:role y usar como argumento específico de la implementación en otros escenarios.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; supports &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; objects for URIs that were added as &lt;see langword=&quot;String&quot; /&gt;. If the requested type is not supported by the resolver, an exception will be thrown. Use the &lt;see cref=&quot;M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)&quot; /&gt; method to determine whether a certain &lt;see langword=&quot;Type&quot; /&gt; is supported by this resolver.">Tipo de objeto que se va a devolver. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> admite objetos <see cref="T:System.IO.Stream" /> y objetos <see cref="T:System.IO.TextReader" /> para los identificadores URI que se agregaron como <see langword="String" />. Si la resolución no admite el tipo solicitado, se producirá una excepción. Use el método <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> para determinar si esta resolución admite un <see langword="Type" /> determinado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; object that corresponds to the actual source.">Un objeto de <see cref="T:System.IO.Stream" /> o <see cref="T:System.IO.TextReader" /> que corresponde al origen real.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary vsli:raw="Gets a collection of preloaded URIs.">Obtiene una colección de identificadores URI cargados previamente.</summary>
      <returns vsli:raw="The collection of preloaded URIs.">Colección de identificadores URI cargados previamente.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary vsli:raw="Removes the data that corresponds to the URI from the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt;.">Quita los datos correspondientes al identificador URI de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
      <param name="uri" vsli:raw="The URI of the data that should be removed from the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI de los datos que deben quitarse del almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs.">Resuelve el URI absoluto a partir de los URI base y relativo.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">Identificador URI base que se utiliza para resolver el identificador URI relativo</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un identificador URI absoluto.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; representing the absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">
        <see cref="T:System.Uri" /> que representa el URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary vsli:raw="Determines whether the resolver supports other &lt;see cref=&quot;T:System.Type&quot; /&gt;s than just &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Determina si la resolución admite otros objetos <see cref="T:System.Type" /> además de <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri" vsli:raw="The absolute URI to check.">Identificador URI absoluto que se va a comprobar.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to return.">Objeto <see cref="T:System.Type" /> que se va a devolver.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Type&quot; /&gt; is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se admite el elemento <see cref="T:System.Type" />; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary vsli:raw="Defines the post-schema-validation infoset of a validated XML node.">Define el conjunto de información posterior a la validación del esquema de un nodo XML validado.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary vsli:raw="Gets a value indicating if this validated XML node was set as the result of a default being applied during XML Schema Definition Language (XSD) schema validation.">Obtiene un valor que indica si el nodo XML validado se ha establecido como resultado de la aplicación de un valor predeterminado durante la validación del esquema del lenguaje de definición de esquemas XML (XSD).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this validated XML node was set as the result of a default being applied during schema validation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este nodo XML validado se estableció como resultado de aplicar un valor predeterminado durante la validación del esquema; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary vsli:raw="Gets a value indicating if the value for this validated XML node is nil.">Obtiene un valor que indica si el valor de este nodo XML validado es nil.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value for this validated XML node is nil; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor para este nodo XML validado es nulo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary vsli:raw="Gets the dynamic schema type for this validated XML node.">Obtiene el tipo de esquema dinámico de este nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object that represents the dynamic schema type for this validated XML node.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo de esquema dinámico para este nodo XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary vsli:raw="Gets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; that corresponds to this validated XML node.">Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilado correspondiente a este nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; that corresponds to this validated XML node.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> que corresponde a este nodo XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary vsli:raw="Gets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; that corresponds to this validated XML node.">Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilado correspondiente a este nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; that corresponds to this validated XML node.">
        <see cref="T:System.Xml.Schema.XmlSchemaElement" /> que corresponde a este nodo XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary vsli:raw="Gets the static XML Schema Definition Language (XSD) schema type of this validated XML node.">Obtiene el tipo estático de esquema del lenguaje de definición de esquemas XML (XSD) del nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; of this validated XML node.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> de este nodo XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">Obtiene el valor de <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> del nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">Valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> de este nodo XML validado.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary vsli:raw="Returns detailed information related to the &lt;see langword=&quot;ValidationEventHandler&quot; /&gt;.">Devuelve información detallada relacionada con <see langword="ValidationEventHandler" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; associated with the validation event.">Obtiene la excepción <see cref="T:System.Xml.Schema.XmlSchemaException" /> asociada al evento de validación.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaException&quot; /&gt; associated with the validation event.">Excepción <see langword="XmlSchemaException" /> asociada al evento de validación.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary vsli:raw="Gets the text description corresponding to the validation event.">Obtiene la descripción de texto correspondiente al evento de validación.</summary>
      <returns vsli:raw="The text description.">Descripción de texto.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary vsli:raw="Gets the severity of the validation event.">Obtiene la gravedad del evento de validación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSeverityType&quot; /&gt; value representing the severity of the validation event.">Valor de <see cref="T:System.Xml.Schema.XmlSeverityType" /> que representa la gravedad del evento de validación.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary vsli:raw="Represents the callback method that will handle XML schema validation events and the &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventArgs&quot; /&gt;.">Representa el método de devolución de llamada que controlará los eventos de validación del esquema XML y <see cref="T:System.Xml.Schema.ValidationEventArgs" />.</summary>
      <param name="sender" vsli:raw="The source of the event.  &#xA;  &#xA; Note Determine the type of a sender before using it in your code. You cannot assume that the sender is an instance of a particular type. The sender is also not guaranteed to not  be null. Always surround your casts with failure handling logic.">Origen del evento.  
 Nota: Establezca el tipo de un remitente antes de usarlo en el código. No puede suponer que el remitente es una instancia de un tipo determinado. Tampoco se garantiza que el remitente no sea nulo. Rodee siempre las conversiones de tipos con lógica de control de errores.</param>
      <param name="e" vsli:raw="The event data.">Datos del evento.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary vsli:raw="Represents the typed value of a validated XML element or attribute. The &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; class cannot be inherited.">Representa el valor con tipo de un atributo o elemento XML validado. La clase <see cref="T:System.Xml.Schema.XmlAtomicValue" /> no se puede heredar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">Devuelve una copia de este objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">Copia del objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" /> de este objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary vsli:raw="Gets a value indicating whether the validated XML element or attribute is an XPath node or an atomic value.">Obtiene un valor que indica si el atributo o el elemento XML validado es un nodo XPath o un valor atómico.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the validated XML element or attribute is an XPath node; &lt;see langword=&quot;false&quot; /&gt; if the validated XML element or attribute is an atomic value.">Es <see langword="true" /> si el atributo o elemento XML validado es un nodo XPath; <see langword="false" /> si el atributo o elemento XML validado es un valor atómico.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlAtomicValue.Clone&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</summary>
      <returns vsli:raw="A copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">Copia de este objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary vsli:raw="Gets the &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">Obtiene el valor <see langword="string" /> del atributo o elemento XML validado.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">Valor <see langword="string" /> del atributo o elemento XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary vsli:raw="Gets the current validated XML element or attribute as a boxed object of the most appropriate .NET type according to its schema type.">Obtiene el atributo o elemento XML validado actual en forma de objeto empaquetado del tipo más apropiado de Microsoft .NET Framework según el tipo de esquema.</summary>
      <returns vsli:raw="The current validated XML element or attribute as a boxed object of the most appropriate .NET type.">Atributo o elemento XML validado actual en forma de objeto empaquetado del tipo de .NET Framework que sea más adecuado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">Obtiene el valor <see langword="string" /> del atributo o elemento XML validado.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">Valor <see langword="string" /> del atributo o elemento XML validado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Returns the validated XML element or attribute's value as the type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Devuelve el valor del atributo o elemento XML validado como el tipo especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de espacio de nombres.</summary>
      <param name="type" vsli:raw="The type to return the validated XML element or attribute's value as.">Tipo en el que se devolverá el atributo o elemento XML validado.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de los espacios de nombres.</param>
      <returns vsli:raw="The value of the validated XML element or attribute as the type requested.">Valor del atributo o elemento XML validado como el tipo solicitado.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the target type.">El valor del atributo o elemento XML validado no tiene el formato correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Valor del atributo o elemento XML validado en forma de <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; type.">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Boolean" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Valor del atributo o elemento XML validado en forma de <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; type.">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">La conversión a <see cref="T:System.DateTime" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Valor del atributo o elemento XML validado en forma de <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Double&quot; /&gt; type.">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Double" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary vsli:raw="Gets the validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Int32" />.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Valor del atributo o elemento XML validado en forma de <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Int32" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary vsli:raw="Gets the validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Int64" />.</summary>
      <returns vsli:raw="The validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Valor del atributo o elemento XML validado en forma de <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; type.">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Int64" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary vsli:raw="Gets the .NET type of the validated XML element or attribute.">Obtiene el tipo de Microsoft .NET Framework del atributo o elemento XML validado.</summary>
      <returns vsli:raw="The .NET type of the validated XML element or attribute. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">Tipo de .NET Framework del atributo o elemento XML validado. El valor predeterminado es <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the validated XML element or attribute.">Obtiene el valor <see cref="T:System.Xml.Schema.XmlSchemaType" /> del atributo o elemento XML validado.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the validated XML element or attribute.">Valor <see cref="T:System.Xml.Schema.XmlSchemaType" /> del atributo o elemento XML validado.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary vsli:raw="An in-memory representation of an XML Schema, as specified in the World Wide Web Consortium (W3C) XML Schema Part 1: Structures and XML Schema Part 2: Datatypes].">Una representación en memoria de un esquema XML, según se especifica en Esquema XML, parte 1: estructuras y en Esquema XML, parte 2: tipos de datos] del World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary vsli:raw="Gets or sets the form for attributes declared in the target namespace of the schema.">Obtiene o establece el formato de los atributos declarados en el espacio de nombres de destino del esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; value that indicates if attributes from the target namespace are required to be qualified with the namespace prefix. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">El valor de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> que indica si es necesario calificar los atributos del espacio de nombres de destino con el espacio de nombres como prefijo. De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary vsli:raw="Gets the post-schema-compilation value of all the global attribute groups in the schema.">Obtiene el valor posterior a la compilación del esquema de todos los grupos de atributos globales del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the global attribute groups in the schema.">Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los grupos de atributos globales del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary vsli:raw="Gets the post-schema-compilation value for all the attributes in the schema.">Obtiene el valor posterior a la compilación del esquema para todos los atributos del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the attributes in the schema.">Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los atributos del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;blockDefault&quot; /&gt; attribute which sets the default value of the &lt;see langword=&quot;block&quot; /&gt; attribute on element and complex types in the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the schema.">Obtiene o establece el atributo <see langword="blockDefault" />, que establece el valor predeterminado del atributo <see langword="block" /> en elementos y tipos complejos en el <see langword="targetNamespace" /> del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; value representing the different methods for preventing derivation. The default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;.">Un valor de <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representa los distintos métodos para impedir la derivación. El valor predeterminado es <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Compiles the XML Schema Object Model (SOM) into schema information for validation. Used to check the syntactic and semantic structure of the programmatically built SOM. Semantic validation checking is performed during compilation.">Compila el Modelo de objetos de esquemas XML (SOM) en información de esquemas para la validación. Se usa para comprobar la estructura sintáctica y semántica del SOM creado mediante programación. La comprobación de la validación semántica se realiza durante la compilación.</summary>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about XML Schema validation errors.">Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XML Schema Object Model (SOM) into schema information for validation. Used to check the syntactic and semantic structure of the programmatically built SOM. Semantic validation checking is performed during compilation.">Compila el Modelo de objetos de esquemas XML (SOM) en información de esquemas para la validación. Se usa para comprobar la estructura sintáctica y semántica del SOM creado mediante programación. La comprobación de la validación semántica se realiza durante la compilación.</summary>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema validation errors.">Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML.</param>
      <param name="resolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements.">Objeto <see langword="XmlResolver" /> utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos <see langword="include" /> e <see langword="import" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary vsli:raw="Gets or sets the form for elements declared in the target namespace of the schema.">Obtiene o establece el formato de los elementos declarados en el espacio de nombres de destino del esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; value that indicates if elements from the target namespace are required to be qualified with the namespace prefix. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">El valor de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> que indica si es necesario calificar los elementos del espacio de nombres de destino con el espacio de nombres como prefijo. De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary vsli:raw="Gets the post-schema-compilation value for all the elements in the schema.">Obtiene el valor posterior a la compilación del esquema para todos los elementos del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the elements in the schema.">Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los elementos del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;finalDefault&quot; /&gt; attribute which sets the default value of the &lt;see langword=&quot;final&quot; /&gt; attribute on elements and complex types in the target namespace of the schema.">Obtiene o establece el atributo <see langword="finalDefault" /> que establece el valor predeterminado del atributo <see langword="final" /> en elementos y tipos complejos en el espacio de nombres de destino del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; value representing the different methods for preventing derivation. The default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;.">Un valor de <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representa los distintos métodos para impedir la derivación. El valor predeterminado es <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary vsli:raw="Gets the post-schema-compilation value of all the groups in the schema.">Obtiene el valor posterior a la compilación del esquema de todos los grupos del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the groups in the schema.">Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los grupos del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary vsli:raw="Gets or sets the string ID.">Obtiene o establece el identificador de cadena.</summary>
      <returns vsli:raw="The ID of the string. The default value is &lt;see langword=&quot;String.Empty&quot; /&gt;.">Identificador de cadena. El valor predeterminado es <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary vsli:raw="Gets the collection of included and imported schemas.">Obtiene la colección de esquemas incluidos e importados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of the included and imported schemas.">Una <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de los esquemas incluidos e importados.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary vsli:raw="The XML schema instance namespace. This field is constant.">El espacio de nombres de instancia del esquema XML. Este campo es constante.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary vsli:raw="Indicates if the schema has been compiled.">Indica si el esquema se ha compilado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if schema has been compiled, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el esquema se ha compilado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary vsli:raw="Gets the collection of schema elements in the schema and is used to add new element types at the &lt;see langword=&quot;schema&quot; /&gt; element level.">Obtiene la colección de elementos de esquema del esquema y se utiliza para agregar nuevos tipos de elemento en el nivel de elemento <see langword="schema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of schema elements in the schema.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de los elementos de esquema del esquema.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary vsli:raw="The XML schema namespace. This field is constant.">El espacio de nombres del esquema XML. Este campo es constante.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary vsli:raw="Gets the post-schema-compilation value for all notations in the schema.">Obtiene el valor posterior a la compilación del esquema para todas las notaciones del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all notations in the schema.">Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todas las notaciones del esquema.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied stream.">Lee un esquema XML del flujo proporcionado.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">Flujo de datos suministrado.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about XML Schema syntax errors.">Controlador de eventos de validación que recibe información acerca de los errores de sintaxis del esquema XML.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lee un esquema XML del objeto <see cref="T:System.IO.TextReader" /> proporcionado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML Schema to read.">Objeto <see langword="TextReader" /> que contiene el esquema XML que se va a leer.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema syntax errors.">Controlador de eventos de validación que recibe información acerca de los errores de sintaxis del esquema XML.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lee un esquema XML del objeto <see cref="T:System.Xml.XmlReader" /> proporcionado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML Schema to read.">Objeto <see langword="XmlReader" /> que contiene el esquema XML que se va a leer.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema syntax errors.">Controlador de eventos de validación que recibe información acerca de los errores de sintaxis del esquema XML.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary vsli:raw="Gets the post-schema-compilation value of all schema types in the schema.">Obtiene el valor posterior a la compilación del esquema de todos los tipos de esquema del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of all schema types in the schema.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de todos los tipos de esquema del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) of the schema target namespace.">Obtiene o establece el identificador uniforme de recursos (URI) del espacio de nombres de destino del esquema.</summary>
      <returns vsli:raw="The schema target namespace.">El espacio de nombres de destino del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes which do not belong to the schema target namespace.">Obtiene o establece los atributos cualificados que no pertenecen al espacio de nombres de destino del esquema.</summary>
      <returns vsli:raw="An array of qualified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema target namespace.">Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> calificados que no pertenecen al espacio de nombres de destino del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary vsli:raw="Gets or sets the version of the schema.">Obtiene o establece la versión del esquema.</summary>
      <returns vsli:raw="The version of the schema. The default value is &lt;see langword=&quot;String.Empty&quot; /&gt;.">Versión del esquema. El valor predeterminado es <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary vsli:raw="Writes the XML Schema to the supplied data stream.">Escribe el esquema XML en el flujo de datos suministrado.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">Flujo de datos suministrado.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; specified.">Escribe el esquema XML en el <see cref="T:System.IO.Stream" /> proporcionado utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> especificado.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">Flujo de datos suministrado.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Escribe el esquema XML en el objeto <see cref="T:System.IO.TextWriter" /> proporcionado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to write to.">
        <see cref="T:System.IO.TextWriter" /> en el que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Escribe el esquema XML en el objeto <see cref="T:System.IO.TextWriter" /> proporcionado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to write to.">
        <see cref="T:System.IO.TextWriter" /> en el que se va a escribir.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el esquema XML en el objeto <see cref="T:System.Xml.XmlWriter" /> proporcionado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; parameter is null.">El parámetro <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el esquema XML en el objeto <see cref="T:System.Xml.XmlWriter" /> proporcionado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;all&quot; /&gt; element (compositor).">Representa el elemento <see langword="all" /> (compositor) del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAll" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary vsli:raw="Gets the collection of &lt;see langword=&quot;XmlSchemaElement&quot; /&gt; elements contained within the &lt;see langword=&quot;all&quot; /&gt; compositor.">Obtiene la colección de los elementos <see langword="XmlSchemaElement" /> incluidos en el compositor <see langword="all" />.</summary>
      <returns vsli:raw="The collection of elements contained in &lt;see langword=&quot;XmlSchemaAll&quot; /&gt;.">Colección de elementos incluidos en <see langword="XmlSchemaAll" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary vsli:raw="The base class for any element that can contain annotation elements.">Clase base de cualquier elemento que pueda contener elementos de anotación.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotated&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">Obtiene o establece la propiedad <see langword="annotation" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt; representing the &lt;see langword=&quot;annotation&quot; /&gt; property.">
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" /> que representa la propiedad <see langword="annotation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary vsli:raw="Gets or sets the string id.">Obtiene o establece el identificador de cadena.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">Identificador de cadena. El valor predeterminado es <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes that do not belong to the current schema's target namespace.">Obtiene o establece los atributos calificados que no pertenecen al espacio de nombres de destino del esquema actual.</summary>
      <returns vsli:raw="An array of qualified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema's target namespace.">Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> calificados que no pertenecen al espacio de nombres de destino del esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;annotation&quot; /&gt; element.">Representa el elemento <see langword="annotation" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary vsli:raw="Gets or sets the string id.">Obtiene o establece el identificador de cadena.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">Identificador de cadena. El valor predeterminado es <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary vsli:raw="Gets the &lt;see langword=&quot;Items&quot; /&gt; collection that is used to store the &lt;see langword=&quot;appinfo&quot; /&gt; and &lt;see langword=&quot;documentation&quot; /&gt; child elements.">Obtiene la colección <see langword="Items" /> que se utiliza para almacenar los elementos secundarios <see langword="appinfo" /> y <see langword="documentation" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of &lt;see langword=&quot;appinfo&quot; /&gt; and &lt;see langword=&quot;documentation&quot; /&gt; child elements.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de elementos secundarios <see langword="appinfo" /> y <see langword="documentation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes that do not belong to the schema's target namespace.">Obtiene o establece los atributos calificados que no pertenecen al espacio de nombres de destino del esquema.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema's target namespace.">Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> que no pertenecen al espacio de nombres de destino del esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;any&quot; /&gt; element.">Representa el elemento <see langword="any" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary vsli:raw="Gets or sets the namespaces containing the elements that can be used.">Obtiene o establece los espacios de nombres que contienen los elementos que pueden utilizarse.</summary>
      <returns vsli:raw="Namespaces for elements that are available for use. The default is &lt;see langword=&quot;##any&quot; /&gt;. Optional.">Espacios de nombres de los elementos que están disponibles para su uso. De manera predeterminada, es <see langword="##any" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary vsli:raw="Gets or sets information about how an application or XML processor should handle the validation of XML documents for the elements specified by the &lt;see langword=&quot;any&quot; /&gt; element.">Obtiene o establece información sobre la forma en que una aplicación o un procesador XML deben controlar la validación de documentos XML para los elementos especificados por el elemento <see langword="any" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentProcessing&quot; /&gt; values. If no &lt;see langword=&quot;processContents&quot; /&gt; attribute is specified, the default is &lt;see langword=&quot;Strict&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si no se especifica ningún atributo <see langword="processContents" />, el valor predeterminado es <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">Representa el elemento <see langword="anyAttribute" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespaces containing the attributes that can be used.">Obtiene o establece los espacios de nombres que contienen los atributos que pueden utilizarse.</summary>
      <returns vsli:raw="Namespaces for attributes that are available for use. The default is &lt;see langword=&quot;##any&quot; /&gt;. Optional.">Espacios de nombres de los atributos que están disponibles para su uso. De manera predeterminada, es <see langword="##any" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary vsli:raw="Gets or sets information about how an application or XML processor should handle the validation of XML documents for the attributes specified by the &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">Obtiene o establece información sobre la forma en que una aplicación o un procesador XML deben controlar la validación de documentos XML para los atributos especificados por el elemento <see langword="anyAttribute" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentProcessing&quot; /&gt; values. If no &lt;see langword=&quot;processContents&quot; /&gt; attribute is specified, the default is &lt;see langword=&quot;Strict&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si no se especifica ningún atributo <see langword="processContents" />, el valor predeterminado es <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;appinfo&quot; /&gt; element.">Representa el elemento <see langword="appinfo" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAppInfo&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary vsli:raw="Gets or sets an array of &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects that represents the &lt;see langword=&quot;appinfo&quot; /&gt; child nodes.">Obtiene o establece una matriz de objetos <see cref="T:System.Xml.XmlNode" /> que representa los nodos secundarios de <see langword="appinfo" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects that represents the &lt;see langword=&quot;appinfo&quot; /&gt; child nodes.">Una matriz de objetos <see cref="T:System.Xml.XmlNode" /> que representa los nodos secundarios de <see langword="appinfo" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary vsli:raw="Gets or sets the source of the application information.">Obtiene o establece el origen de la información de la aplicación.</summary>
      <returns vsli:raw="A Uniform Resource Identifier (URI) reference. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">Referencia a un identificador uniforme de recurso (URI). De manera predeterminada, es <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attribute&quot; /&gt; element from the XML Schema as specified by the World Wide Web Consortium (W3C). Attributes provide additional information for other document elements. The attribute tag is nested between the tags of a document's element for the schema. The XML document displays attributes as named items in the opening tag of an element.">Representa el elemento <see langword="attribute" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Los atributos facilitan información adicional sobre otros elementos de documento. La etiqueta de atributo se anida entre las etiquetas de un elemento de documento del esquema. El documento XML muestra los atributos como elementos con nombre en la etiqueta de apertura de un elemento.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object representing the type of the attribute based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName&quot; /&gt; of the attribute.">Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del atributo basado en <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> o <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> del atributo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary vsli:raw="Gets the common language runtime (CLR) object based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName&quot; /&gt; of the attribute that holds the post-compilation value of the &lt;see langword=&quot;AttributeType&quot; /&gt; property.">Obtiene el objeto de Common Language Runtime (CLR) en función del <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> o del <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> del atributo que contiene el valor posterior a la compilación de la propiedad <see langword="AttributeType" />.</summary>
      <returns vsli:raw="The common runtime library (CLR) object that holds the post-compilation value of the &lt;see langword=&quot;AttributeType&quot; /&gt; property.">Objeto Common Runtime Library (CLR) que contiene el valor posterior a la compilación de la propiedad <see langword="AttributeType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the attribute.">Obtiene o establece el valor predeterminado del atributo.</summary>
      <returns vsli:raw="The default value for the attribute. The default is a null reference. Optional.">Valor predeterminado del atributo. El valor predeterminado es una referencia nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary vsli:raw="Gets or sets the fixed value for the attribute.">Obtiene o establece el valor fijo del atributo.</summary>
      <returns vsli:raw="The fixed value for the attribute. The default is null. Optional.">Valor fijo del atributo. El valor predeterminado es null. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary vsli:raw="Gets or sets the form for the attribute.">Obtiene o establece el formato del atributo.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is the value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchema.AttributeFormDefault&quot; /&gt; of the schema element containing the attribute. Optional.">Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. El valor predeterminado es el valor de <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> del elemento de esquema en el que está contenido el atributo. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary vsli:raw="Gets or sets the name of the attribute.">Obtiene o establece el nombre del atributo.</summary>
      <returns vsli:raw="The name of the attribute.">El nombre del atributo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary vsli:raw="Gets the qualified name for the attribute.">Obtiene el nombre completo del atributo.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">Valor posterior a la compilación de la propiedad <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary vsli:raw="Gets or sets the name of an attribute declared in this schema (or another schema indicated by the specified namespace).">Obtiene o establece el nombre de un atributo declarado en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns vsli:raw="The name of the attribute declared.">Nombre del atributo declarado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary vsli:raw="Gets or sets the attribute type to a simple type.">Obtiene el tipo de atributo o establece el tipo de atributo en un tipo simple.</summary>
      <returns vsli:raw="The simple type defined in this schema.">Tipo simple definido en este esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary vsli:raw="Gets or sets the name of the simple type defined in this schema (or another schema indicated by the specified namespace).">Obtiene o establece el nombre del tipo simple definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns vsli:raw="The name of the simple type.">Nombre del tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary vsli:raw="Gets or sets information about how the attribute is used.">Obtiene o establece información sobre la forma de utilizar el atributo.</summary>
      <returns vsli:raw="One of the following values: None, Prohibited, Optional, or Required. The default is Optional. Optional.">Puede tener uno de los siguientes valores: None, Prohibited, Optional o Required. El valor predeterminado es Optional. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attributeGroup&quot; /&gt; element from the XML Schema as specified by the World Wide Web Consortium (W3C). AttributesGroups provides a mechanism to group a set of attribute declarations so that they can be incorporated as a group into complex type definitions.">Representa el elemento <see langword="attributeGroup" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). AttributesGroups proporciona un mecanismo para agrupar un conjunto de declaraciones de atributos de forma que puedan incorporarse como un grupo en definiciones de tipos complejos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the attribute group.">Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del grupo de atributos.</summary>
      <returns vsli:raw="The World Wide Web Consortium (W3C) &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">Elemento <see langword="anyAttribute" /> del consorcio W3C</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the attribute group. Contains &lt;see langword=&quot;XmlSchemaAttribute&quot; /&gt; and &lt;see langword=&quot;XmlSchemaAttributeGroupRef&quot; /&gt; elements.">Obtiene la colección de atributos del grupo de atributos. Contiene los elementos <see langword="XmlSchemaAttribute" /> y <see langword="XmlSchemaAttributeGroupRef" />.</summary>
      <returns vsli:raw="The collection of attributes for the attribute group.">Colección de atributos del grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary vsli:raw="Gets or sets the name of the attribute group.">Obtiene o establece el nombre del grupo de atributos.</summary>
      <returns vsli:raw="The name of the attribute group.">Nombre del grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the attribute group.">Obtiene el nombre completo del grupo de atributos.</summary>
      <returns vsli:raw="The qualified name of the attribute group.">Nombre completo del grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary vsli:raw="Gets the redefined attribute group property from the XML Schema.">Obtiene la propiedad de grupo del atributo redefinido del esquema XML.</summary>
      <returns vsli:raw="The redefined attribute group property.">Propiedad de grupo del atributo redefinido.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attributeGroup&quot; /&gt; element with the &lt;see langword=&quot;ref&quot; /&gt; attribute from the XML Schema as specified by the World Wide Web Consortium (W3C). AttributesGroupRef is the reference for an attributeGroup, name property contains the attribute group being referenced.">Representa el elemento <see langword="attributeGroup" /> con el atributo <see langword="ref" /> del esquema XML según especifica el World Wide Web Consortium (W3C). AttributesGroupRef es la referencia para un attributeGroup, la propiedad de nombre contiene el grupo de atributos al que se hace referencia.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary vsli:raw="Gets or sets the name of the referenced &lt;see langword=&quot;attributeGroup&quot; /&gt; element.">Obtiene o establece el nombre del elemento <see langword="attributeGroup" /> al que se hace referencia.</summary>
      <returns vsli:raw="The name of the referenced attribute group. The value must be a QName.">Nombre del grupo de atributos al que se hace referencia. El valor debe ser de tipo QName.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary vsli:raw="Represents the &lt;see langword=&quot;choice&quot; /&gt; element (compositor) from the XML Schema as specified by the World Wide Web Consortium (W3C). The &lt;see langword=&quot;choice&quot; /&gt; allows only one of its children to appear in an instance.">Representa el elemento <see langword="choice" /> (compositor) del esquema XML, tal y como lo especificó el consorcio World Wide Web (W3C). <see langword="choice" /> sólo permite que aparezca uno de sus elementos secundarios en una instancia.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaChoice" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary vsli:raw="Gets the collection of the elements contained with the compositor (&lt;see langword=&quot;choice&quot; /&gt;): &lt;see langword=&quot;XmlSchemaElement&quot; /&gt;, &lt;see langword=&quot;XmlSchemaGroupRef&quot; /&gt;, &lt;see langword=&quot;XmlSchemaChoice&quot; /&gt;, &lt;see langword=&quot;XmlSchemaSequence&quot; /&gt;, or &lt;see langword=&quot;XmlSchemaAny&quot; /&gt;.">Obtiene la colección de los elementos incluidos con el compositor (<see langword="choice" />): <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />, <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" /> o <see langword="XmlSchemaAny" />.</summary>
      <returns vsli:raw="The collection of elements contained within &lt;see langword=&quot;XmlSchemaChoice&quot; /&gt;.">Colección de elementos incluidos en <see langword="XmlSchemaChoice" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary vsli:raw="Contains a cache of XML Schema definition language (XSD) and XML-Data Reduced (XDR) schemas. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCollection&quot; /&gt; class is obsolete. Use &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instead.">Contiene una caché de esquemas del lenguaje de definición de esquemas XML (esquemas XSD) y esquemas reducidos de datos XML (esquemas XDR). La clase <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> está obsoleta. Utilice <see cref="T:System.Xml.Schema.XmlSchemaSet" /> en su lugar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="XmlSchemaCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;. The &lt;see langword=&quot;XmlNameTable&quot; /&gt; is used when loading schemas.">Inicializa una nueva instancia de la clase <see langword="XmlSchemaCollection" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado. <see langword="XmlNameTable" /> se utiliza cuando se cargan esquemas.</summary>
      <param name="nametable" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds the schema located by the given URL into the schema collection.">Agrega el esquema localizado por la dirección URL especificada a la colección de esquemas.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será <see langword="targetNamespace" />.</param>
      <param name="uri" vsli:raw="The URL that specifies the schema to load.">Dirección URL que especifica el esquema que se va a cargar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; <see langword="null" /> si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">El esquema no es válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Adds the schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the schema collection.">Agrega el esquema que contiene el objeto <see cref="T:System.Xml.XmlReader" /> a la colección de esquemas.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será <see langword="targetNamespace" />.</param>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the schema to add.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el esquema que se va a agregar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; <see langword="null" /> si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">El esquema no es válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary vsli:raw="Adds the schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the schema collection. The specified &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is used to resolve any external resources.">Agrega el esquema que contiene el objeto <see cref="T:System.Xml.XmlReader" /> a la colección de esquemas. El <see cref="T:System.Xml.XmlResolver" /> especificado se utiliza para resolver los recursos externos.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será <see langword="targetNamespace" />.</param>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the schema to add.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el esquema que se va a agregar.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements or &lt;see langword=&quot;x-schema&quot; /&gt; attribute (XDR schemas). If this is &lt;see langword=&quot;null&quot; /&gt;, external references are not resolved.">Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos <see langword="include" /> e <see langword="import" /> o en el atributo <see langword="x-schema" /> (esquemas XDR). Si es <see langword="null" />, las referencias externas no se resuelven.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; <see langword="null" /> si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">El esquema no es válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the collection.">Agrega <see cref="T:System.Xml.Schema.XmlSchema" /> a la colección.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; to add to the collection.">
        <see langword="XmlSchema" /> que se agrega a la colección.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; object.">Objeto <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the collection. The specified &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is used to resolve any external references.">Agrega <see cref="T:System.Xml.Schema.XmlSchema" /> a la colección. El <see cref="T:System.Xml.XmlResolver" /> especificado se utiliza para resolver las referencias externas.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; to add to the collection.">
        <see langword="XmlSchema" /> que se agrega a la colección.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external references are not resolved.">Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos <see langword="include" /> e <see langword="import" />. Si es <see langword="null" />, las referencias externas no se resuelven.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; added to the schema collection.">
        <see langword="XmlSchema" /> agregado a la colección de esquemas.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">El esquema no es válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary vsli:raw="Adds all the namespaces defined in the given collection (including their associated schemas) to this collection.">Agrega todos los espacios de nombres definidos en una colección especificada (incluidos sus esquemas asociados) a esta colección.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; you want to add to this collection.">
        <see langword="XmlSchemaCollection" /> que desea agregar a esta colección.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a schema with the specified namespace is in the collection.">Obtiene un valor que indica si un esquema con el espacio de nombres especificado se encuentra en la colección.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the target namespace.">URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será el espacio de nombres de destino.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a schema with the specified namespace is in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un esquema con el espacio de nombres especificado se encuentra en la colección; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is in the collection.">Obtiene un valor que indica si el <see langword="targetNamespace" /> del <see cref="T:System.Xml.Schema.XmlSchema" /> especificado se encuentra en la colección.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; object.">Objeto <see langword="XmlSchema" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a schema in the collection with the same &lt;see langword=&quot;targetNamespace&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe un esquema en la colección con el mismo <see langword="targetNamespace" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see langword=&quot;XmlSchema&quot; /&gt; objects from this collection into the given array starting at the given index.">Copia todos los objetos <see langword="XmlSchema" /> de esta colección en la matriz especificada a partir del índice indicado.</summary>
      <param name="array" vsli:raw="The array to copy the objects to.">Matriz en la que se van a copiar los objetos.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying will begin.">Índice de <paramref name="array" /> donde se iniciará la copia.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary vsli:raw="Gets the number of namespaces defined in this collection.">Obtiene el número de espacios de nombres definidos en esta colección.</summary>
      <returns vsli:raw="The number of namespaces defined in this collection.">Número de espacios de nombres definidos en esta colección.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary vsli:raw="Provides support for the &quot;for each&quot; style iteration over the collection of schemas.">Proporciona compatibilidad con la iteración de estilo "for each" a través de la colección de esquemas.</summary>
      <returns vsli:raw="An enumerator for iterating over all schemas in the current collection.">Enumerador para la iteración a través de todos los esquemas de la colección actual.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; associated with the given namespace URI.">Obtiene el <see cref="T:System.Xml.Schema.XmlSchema" /> asociado al URI del espacio de nombres especificado.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema you want to return. This will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the schema.">URI del espacio de nombres asociado al esquema que desea que se devuelva. Normalmente será el <see langword="targetNamespace" /> del esquema.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; associated with the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if there is no loaded schema associated with the given namespace or if the namespace is associated with an XDR schema.">
        <see langword="XmlSchema" /> asociado al URI del espacio de nombres; <see langword="null" /> si no se ha cargado ningún esquema asociado al espacio de nombres especificado o si el espacio de nombres está asociado a un esquema XDR.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary vsli:raw="Gets the default &lt;see langword=&quot;XmlNameTable&quot; /&gt; used by the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; when loading new schemas.">Obtiene el valor predeterminado de <see langword="XmlNameTable" /> que <see langword="XmlSchemaCollection" /> utiliza al cargar nuevos esquemas.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">Una clase <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
      <param name="array" vsli:raw="The array to copy the objects to.">Matriz en la que se van a copiar los objetos.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying will begin.">Índice de <paramref name="array" /> donde se iniciará la copia.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.Count&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
      <returns vsli:raw="The count of the items in the collection.">Recuento de los elementos de la colección.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección está sincronizada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt; object that can be used to synchronize access to the collection.">
        <see cref="P:System.Collections.ICollection.SyncRoot" /> Objeto que se puede utilizar para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">
        <see cref="T:System.Collections.IEnumerator" /> para la colección.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary vsli:raw="Sets an event handler for receiving information about the XDR and XML schema validation errors.">Establece un controlador de eventos para recibir información sobre errores de validación de esquemas XDR y XML.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary vsli:raw="Supports a simple iteration over a collection. This class cannot be inherited.">Admite una iteración simple a través de una colección. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; in the collection.">Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> actual de la colección.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;XmlSchema&quot; /&gt; in the collection.">
        <see langword="XmlSchema" /> actual de la colección.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next schema in the collection.">Desplaza el enumerador al siguiente esquema de la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move was successful; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> si el desplazamiento se realizó correctamente; <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.</summary>
      <returns vsli:raw="The current node.">Nodo actual.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.</summary>
      <returns vsli:raw="The next node.">Siguiente nodo.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary vsli:raw="Provides schema compilation options for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class This class cannot be inherited.">Proporciona opciones de compilación de esquema para la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Esta clase no se puede heredar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; should check for Unique Particle Attribution (UPA) violations.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> debe comprobar las infracciones de atribución de partícula única (UPA, Unique Particle Attribution).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; should check for Unique Particle Attribution (UPA) violations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> debe comprobar las infracciones de atribución de partícula única (UPA); de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary vsli:raw="Represents the &lt;see langword=&quot;complexContent&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class represents the complex content model for complex types. It contains extensions or restrictions on a complex type that has either only elements or mixed content.">Representa el elemento <see langword="complexContent" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase representa el modelo de contenido complejo para los tipos complejos. Contiene extensiones o restricciones con respecto a un tipo complejo que sólo contiene elementos o contenido mixto.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContent&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary vsli:raw="Gets or sets the content.">Obtiene o establece el contenido.</summary>
      <returns vsli:raw="One of either the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentRestriction&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentExtension&quot; /&gt; classes.">Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary vsli:raw="Gets or sets information that determines if the type has a mixed content model.">Obtiene o establece la información que determina si el tipo tiene un modelo de contenido mixto.</summary>
      <returns vsli:raw="If this property is &lt;see langword=&quot;true&quot; /&gt;, character data is allowed to appear between the child elements of the complex type (mixed content model). The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si esta propiedad es <see langword="true" />, se permite que aparezcan datos de caracteres entre los elementos secundarios del tipo complejo (modelo de contenido mixto). De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary vsli:raw="Represents the &lt;see langword=&quot;extension&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for complex types with complex content model derived by extension. It extends the complex type by adding attributes or elements.">Representa el elemento <see langword="extension" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase es para tipos complejos con un modelo de contenido complejo derivado mediante extension. Extiende el tipo complejo agregando atributos o elementos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentExtension&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex content. Contains &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; elements.">Obtiene la colección de atributos del contenido complejo. Contiene los elementos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns vsli:raw="The collection of attributes for the complex content.">Colección de atributos del contenido complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the complex type from which this type is derived by extension.">Obtiene o establece el nombre del tipo complejo del que se deriva este tipo mediante Extension.</summary>
      <returns vsli:raw="The name of the complex type from which this type is derived by extension.">Nombre del tipo complejo del que se deriva este tipo mediante Extension.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for complex types with a complex content model derived by restriction. It restricts the contents of the complex type to a subset of the inherited complex type.">Representa el elemento <see langword="restriction" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase es para tipos complejos con un modelo de contenido complejo derivado mediante restriction. Restringe el contenido del tipo complejo a un subconjunto del tipo complejo heredado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentRestriction&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex type. Contains the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; elements.">Obtiene la colección de atributos del tipo complejo. Contiene los elementos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns vsli:raw="The collection of attributes for the complex type.">Colección de atributos del tipo complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of a complex type from which this type is derived by restriction.">Obtiene o establece el nombre de un tipo complejo del que se deriva este tipo mediante Restriction.</summary>
      <returns vsli:raw="The name of the complex type from which this type is derived by restriction.">Nombre del tipo complejo del que se deriva este tipo mediante Restriction.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary vsli:raw="Represents the &lt;see langword=&quot;complexType&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines a complex type that determines the set of attributes and content of an element.">Representa el elemento <see langword="complexType" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase define un tipo complejo que determina el conjunto de atributos y el contenido de un elemento.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary vsli:raw="Gets or sets the value for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex type.">Obtiene o establece el valor del componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del tipo complejo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex type.">Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del tipo complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex type.">Obtiene la colección de atributos del tipo complejo.</summary>
      <returns vsli:raw="Contains &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; classes.">Contiene las clases <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary vsli:raw="Gets the collection of all the complied attributes of this complex type and its base types.">Obtiene la colección de todos los atributos compilados de este tipo complejo y sus tipos base.</summary>
      <returns vsli:raw="The collection of all the attributes from this complex type and its base types. The post-compilation value of the &lt;see langword=&quot;AttributeUses&quot; /&gt; property.">Colección de todos los atributos de este tipo complejo y sus tipos base. Valor posterior a la compilación de la propiedad <see langword="AttributeUses" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary vsli:raw="Gets the post-compilation value for &lt;see langword=&quot;anyAttribute&quot; /&gt; for this complex type and its base type(s).">Obtiene el valor posterior a la compilación para <see langword="anyAttribute" /> para este tipo complejo y sus tipos base.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">Valor posterior a la compilación del elemento <see langword="anyAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;block&quot; /&gt; attribute.">Obtiene o establece el atributo <see langword="block" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;block&quot; /&gt; attribute prevents a complex type from being used in the specified type of derivation. The default is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">El atributo <see langword="block" /> impide un tipo complejo se utilice en el tipo de derivación especificado. De manera predeterminada, es <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary vsli:raw="Gets the value after the type has been compiled to the post-schema-validation information set (infoset). This value indicates how the type is enforced when &lt;see langword=&quot;xsi:type&quot; /&gt; is used in the instance document.">Obtiene el valor una vez que el tipo se compila en el conjunto de información posterior a la validación del esquema (infoset). Este valor indica la forma en que se aplica el tipo cuando <see langword="xsi:type" /> se utiliza en el documento de instancia.</summary>
      <returns vsli:raw="The post-schema-validated infoset value. The default is &lt;see langword=&quot;BlockDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">Valor del conjunto de información posterior a la validación del esquema. El valor predeterminado es <see langword="BlockDefault" /> en el elemento <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary vsli:raw="Gets or sets the post-compilation &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentModel&quot; /&gt; of this complex type.">Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> posterior a la compilación de este tipo complejo.</summary>
      <returns vsli:raw="The content model type that is one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContent&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContent&quot; /&gt; classes.">Tipo de modelo de contenido que es una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary vsli:raw="Gets the content model of the complex type which holds the post-compilation value.">Obtiene el modelo de contenido del tipo complejo que contiene el valor posterior a la compilación.</summary>
      <returns vsli:raw="The post-compilation value of the content model for the complex type.">Valor posterior a la compilación del modelo de contenido para el tipo complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary vsli:raw="Gets the particle that holds the post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaComplexType.ContentType&quot; /&gt; particle.">Obtiene la partícula que contiene el valor posterior a la compilación de la partícula <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</summary>
      <returns vsli:raw="The particle for the content type. The post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaComplexType.ContentType&quot; /&gt; particle.">Partícula para el tipo de contenido. Valor posterior a la compilación de la partícula <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary vsli:raw="Gets or sets the information that determines if the &lt;see langword=&quot;complexType&quot; /&gt; element can be used in the instance document.">Obtiene o establece la información que determina si el elemento <see langword="complexType" /> puede utilizarse en el documento de instancia.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, an element cannot use this &lt;see langword=&quot;complexType&quot; /&gt; element directly and must use a complex type that is derived from this &lt;see langword=&quot;complexType&quot; /&gt; element. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si es <see langword="true" />, un elemento no puede utilizar este elemento <see langword="complexType" /> directamente y debe utilizar un tipo complejo que se deriva de este elemento <see langword="complexType" />. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary vsli:raw="Gets or sets information that determines if the complex type has a mixed content model (markup within the content).">Obtiene o establece la información que determina si el tipo complejo tiene un modelo de contenido mixto (marcado dentro del contenido).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if character data can appear between child elements of this complex type; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">
        <see langword="true" /> si pueden aparecer datos de caracteres entre los elementos secundarios de este tipo complejo; en caso contrario <see langword="false" />. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary vsli:raw="Gets or sets the compositor type as one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Obtiene o establece el tipo de compositor como una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns vsli:raw="The compositor type.">Tipo de compositor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary vsli:raw="An abstract class for schema content.">Clase abstracta para el contenido del esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContent&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary vsli:raw="Specifies the order and structure of the child elements of a type.">Especifica el orden y la estructura de los elementos secundarios de un tipo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentModel&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary vsli:raw="Gets or sets the content of the type.">Obtiene o establece el contenido del tipo.</summary>
      <returns vsli:raw="Provides the content of the type.">Proporciona el contenido del tipo.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary vsli:raw="Provides information about the validation mode of &lt;see langword=&quot;any&quot; /&gt; and &lt;see langword=&quot;anyAttribute&quot; /&gt; element replacements.">Proporciona información acerca del modo de validación del reemplazo de los elementos <see langword="any" /> y <see langword="anyAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary vsli:raw="If the associated schema is found, the document items will be validated. No errors will be thrown otherwise.&#xA;        &#xA;If the item is not validated, the XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt;. If a validation event handler has not been set up, no information is returned when the warning is produced.">Si se encuentra el esquema asociado, se validarán los elementos del documento. De lo contrario, no se iniciará ningún error.
Si no se valida el elemento, el procesador XML intenta notificarlo al cliente a través de un controlador de eventos de validación con <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Si no se ha configurado un controlador de eventos de validación, no se devuelve ninguna información cuando se genera la advertencia.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary vsli:raw="Document items are not validated.">Los elementos de documento no se validan.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary vsli:raw="Document items must consist of well-formed XML and are not validated by the schema.&#xA;        &#xA;The XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt; that no validation took place for the given item. If a validation event handler has not been set up, no information is returned when the warning is produced.">Los elementos de documento deben estar formado por código XML de formato correcto y no se validan mediante el esquema.
El procesador XML intenta notificar al cliente a través de un controlador de eventos de validación con <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" /> que no se produjo ninguna validación para el elemento proporcionado. Si no se ha configurado un controlador de eventos de validación, no se devuelve ninguna información cuando se genera la advertencia.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary vsli:raw="The schema processor must find a schema associated with the indicated namespace to validate the document items.&#xA;        &#xA;If the processor cannot find a schema or if the items are not valid, the XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt;. If a validation error occurs and a validation event handler is not provided, an exception is thrown.">El procesador del esquema debe encontrar un esquema asociado al espacio de nombres indicado para validar los elementos del documento.
Si el procesador no encuentra un esquema o los elementos no son válidos, el procesador XML intenta notificarlo al cliente a través de un controlador de eventos de validación con <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Si se produce un error de validación y no se proporciona un controlador de eventos de validación, se produce una excepción.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary vsli:raw="Enumerations for the content model of the complex type. This represents the content in the post-schema-validation information set (infoset).">Enumeraciones para el modelo de contenido del tipo complejo. Representa el contenido del conjunto de información posterior a la validación del esquema (infoset).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary vsli:raw="Element-only content.">Contenido de sólo elemento.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary vsli:raw="Empty content.">Contenido vacío.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary vsli:raw="Mixed content.">Contenido mixto.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary vsli:raw="Text-only content.">Contenido de sólo texto.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.">La clase <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> es una clase abstracta para asignar los tipos del lenguaje de definición de esquemas XML (XSD) a los tipos de Common Language Runtime (CLR).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, to the CLR type specified.">Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, en el tipo CLR especificado.</summary>
      <param name="value" vsli:raw="The input value to convert to the specified type.">El valor de entrada que se va a convertir al tipo especificado.</param>
      <param name="targetType" vsli:raw="The target type to convert the input value to.">Tipo de destino en el que se va a convertir el valor de entrada.</param>
      <returns vsli:raw="The converted input value.">Valor de entrada convertido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <see cref="T:System.Object" /> o <see cref="T:System.Type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; does not support a conversion from type of the value specified to the type specified.">El tipo representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> no admite una conversión del tipo del valor especificado al tipo especificado.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, to the CLR type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; represents the xs:QName type or a type derived from it.">Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, en el tipo CLR especificado mediante <see cref="T:System.Xml.IXmlNamespaceResolver" /> si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName o un tipo derivado de éste.</summary>
      <param name="value" vsli:raw="The input value to convert to the specified type.">El valor de entrada que se va a convertir al tipo especificado.</param>
      <param name="targetType" vsli:raw="The target type to convert the input value to.">Tipo de destino en el que se va a convertir el valor de entrada.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; used for resolving namespace prefixes. This is only of use if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; represents the xs:QName type or a type derived from it.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver los prefijos de espacio de nombres. Esto sólo sirve si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName o un tipo derivado de éste.</param>
      <returns vsli:raw="The converted input value.">Valor de entrada convertido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <see cref="T:System.Object" /> o <see cref="T:System.Type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; does not support a conversion from type of the value specified to the type specified.">El tipo representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> no admite una conversión del tipo del valor especificado al tipo especificado.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)&quot; /&gt; method always returns &lt;see langword=&quot;false&quot; /&gt;.">El método <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> siempre devuelve <see langword="false" />.</summary>
      <param name="datatype" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, validates the &lt;see langword=&quot;string&quot; /&gt; specified against a built-in or user-defined simple type.">Cuando se reemplaza en una clase derivada, valida el objeto <see langword="string" /> especificado frente a un tipo simple integrado o definido por el usuario.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to validate against the simple type.">
        <see langword="string" /> que se validará frente al tipo simple.</param>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use for atomization while parsing the &lt;see langword=&quot;string&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; object represents the xs:NCName type.">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para la atomización mientras se analiza <see langword="string" /> si este objeto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:NCName.</param>
      <param name="nsmgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object to use while parsing the &lt;see langword=&quot;string&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; object represents the xs:QName type.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se va a utilizar mientras se analiza <see langword="string" /> si este objeto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be cast safely to the type returned by the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaDatatype.ValueType&quot; /&gt; property.">Objeto <see cref="T:System.Object" /> que se puede convertir sin ningún riesgo en el tipo que devuelve la propiedad <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The input value is not a valid instance of this W3C XML Schema type.">El valor de entrada no es una instancia válida de este tipo de esquema XML de W3C.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value to parse cannot be &lt;see langword=&quot;null&quot; /&gt;.">El valor que se va a analizar no puede ser <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary vsli:raw="When overridden in a derived class, gets the type for the &lt;see langword=&quot;string&quot; /&gt; as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.">Cuando se reemplaza en una clase derivada, obtiene el tipo de <see langword="string" /> de la forma descrita en las especificaciones de XML 1.0 del World Wide Web Consortium (W3C).</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlTokenizedType&quot; /&gt; value for the &lt;see langword=&quot;string&quot; /&gt;.">Valor <see cref="T:System.Xml.XmlTokenizedType" /> de <see langword="string" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; value for the simple type.">Obtiene el valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo simple.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; value for the simple type.">Valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary vsli:raw="When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.">Cuando se reemplaza en una clase derivada, obtiene el tipo Common Language Runtime (CLR) del elemento.</summary>
      <returns vsli:raw="The Common Language Runtime (CLR) type of the item.">El tipo de Common Language Runtime (CLR) del elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatypeVariety&quot; /&gt; value for the simple type.">Obtiene el valor <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> del tipo simple.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatypeVariety&quot; /&gt; value for the simple type.">Valor <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> del tipo simple.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary vsli:raw="Specifies the W3C XML schema data type variety of the type.">Especifica la variedad de tipo de datos del esquema del consorcio XML W3C del tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary vsli:raw="A W3C XML schema atomic type.">Tipo atómico del esquema XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary vsli:raw="A W3C XML schema list type.">Tipo de lista del esquema XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary vsli:raw="A W3C XML schema union type.">Tipo de unión del esquema XML W3C.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary vsli:raw="Provides different methods for preventing derivation.">Proporciona distintos métodos para impedir la derivación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary vsli:raw="&lt;see langword=&quot;#all&quot; /&gt;. Refers to all derivation methods.">
        <see langword="#all" />. Hace referencia a todos los métodos de derivación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary vsli:raw="Override default derivation method to allow any derivation.">Reemplaza el método de derivación predeterminado para permitir cualquier derivación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Extension&quot; /&gt;.">Hace referencia a derivaciones mediante <see langword="Extension" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;List&quot; /&gt;.">Hace referencia a derivaciones mediante <see langword="List" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary vsli:raw="Accepts the default derivation method.">Acepta el método de derivación predeterminado.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Restriction&quot; /&gt;.">Hace referencia a derivaciones mediante <see langword="Restriction" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Substitution&quot; /&gt;.">Hace referencia a derivaciones mediante <see langword="Substitution" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Union&quot; /&gt;.">Hace referencia a derivaciones mediante <see langword="Union" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary vsli:raw="Represents the &lt;see langword=&quot;documentation&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class specifies information to be read or used by humans within an &lt;see langword=&quot;annotation&quot; /&gt;.">Representa el elemento <see langword="documentation" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase especifica la información los usuarios van a leer o utilizar en una <see langword="annotation" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDocumentation&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute. This serves as an indicator of the language used in the contents.">Obtiene o establece el atributo <see langword="xml:lang" />. Sirve como indicador del lenguaje utilizado en el contenido.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; attribute. Optional.">Atributo <see langword="xml:lang" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary vsli:raw="Gets or sets an array of &lt;see langword=&quot;XmlNodes&quot; /&gt; that represents the documentation child nodes.">Obtiene o establece una matriz de <see langword="XmlNodes" /> que representa los nodos secundarios de la documentación.</summary>
      <returns vsli:raw="The array that represents the documentation child nodes.">Matriz que representa los nodos secundarios de la documentación.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) source of the information.">Obtiene o establece el origen del Identificador uniforme de recursos (Identificador URI) de la información.</summary>
      <returns vsli:raw="A URI reference. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">Referencia de la dirección URI. De manera predeterminada, es <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary vsli:raw="Represents the &lt;see langword=&quot;element&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is the base class for all particle types and is used to describe an element in an XML document.">Representa el elemento <see langword="element" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase es la clase base para todos los tipos de partícula y se utiliza para describir un elemento en un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary vsli:raw="Gets or sets a &lt;see langword=&quot;Block&quot; /&gt; derivation.">Obtiene o establece una derivación <see langword="Block" />.</summary>
      <returns vsli:raw="The attribute used to block a type derivation. Default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">Atributo utilizado para bloquear un tipo de derivación. El valor predeterminado es <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see langword=&quot;Block&quot; /&gt; property.">Obtiene el valor posterior a la compilación de la propiedad <see langword="Block" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Block&quot; /&gt; property. The default is the &lt;see langword=&quot;BlockDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">Valor posterior a la compilación de la propiedad <see langword="Block" />. El valor predeterminado es <see langword="BlockDefault" /> en el elemento <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary vsli:raw="Gets the collection of constraints on the element.">Obtiene la colección de restricciones del elemento.</summary>
      <returns vsli:raw="The collection of constraints.">Colección de restricciones.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the element if its content is a simple type or content of the element is &lt;see langword=&quot;textOnly&quot; /&gt;.">Obtiene o establece el valor predeterminado del elemento si su contenido es un tipo simple o el contenido del elemento es <see langword="textOnly" />.</summary>
      <returns vsli:raw="The default value for the element. The default is a null reference. Optional.">Valor predeterminado del elemento. El valor predeterminado es una referencia nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object representing the type of the element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaElement.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName&quot; /&gt; values of the element.">Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa el tipo del elemento basado en <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> o los valores <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> del elemento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary vsli:raw="Gets a common language runtime (CLR) object based on the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; of the element, which holds the post-compilation value of the &lt;see langword=&quot;ElementType&quot; /&gt; property.">Obtiene un objeto Common Language Runtime (CLR) en función del <see cref="T:System.Xml.Schema.XmlSchemaElement" /> o del <see cref="T:System.Xml.Schema.XmlSchemaElement" /> del elemento, que contiene el valor posterior a la compilación de la propiedad <see langword="ElementType" />.</summary>
      <returns vsli:raw="The common language runtime object. The post-compilation value of the &lt;see langword=&quot;ElementType&quot; /&gt; property.">Objeto Common Language Runtime. Valor posterior a la compilación de la propiedad <see langword="ElementType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;Final&quot; /&gt; property to indicate that no further derivations are allowed.">Obtiene o establece la propiedad <see langword="Final" /> para indicar que no se permiten más derivaciones.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;Final&quot; /&gt; property. The default is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">Propiedad <see langword="Final" /> De manera predeterminada, es <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see langword=&quot;Final&quot; /&gt; property.">Obtiene el valor posterior a la compilación de la propiedad <see langword="Final" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Final&quot; /&gt; property. Default value is the &lt;see langword=&quot;FinalDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">Valor posterior a la compilación de la propiedad <see langword="Final" />. El valor predeterminado es el valor <see langword="FinalDefault" /> del elemento <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary vsli:raw="Gets or sets the fixed value.">Obtiene o establece el valor fijo.</summary>
      <returns vsli:raw="The fixed value that is predetermined and unchangeable. The default is a null reference. Optional.">Valor fijo predeterminado que no puede modificarse. El valor predeterminado es una referencia nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary vsli:raw="Gets or sets the form for the element.">Obtiene o establece el formato del elemento.</summary>
      <returns vsli:raw="The form for the element. The default is the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchema.ElementFormDefault&quot; /&gt; value. Optional.">Formato del elemento. El valor predeterminado es <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary vsli:raw="Gets or sets information to indicate if the element can be used in an instance document.">Obtiene o establece la información que indica si el elemento puede utilizarse en un documento de instancia.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the element cannot appear in the instance document. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si es <see langword="true" />, el elemento no puede aparecer en el documento de instancia. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary vsli:raw="Gets or sets information that indicates if &lt;see langword=&quot;xsi:nil&quot; /&gt; can occur in the instance data. Indicates if an explicit nil value can be assigned to the element.">Obtiene o establece la información que indica si <see langword="xsi:nil" /> puede aparecer en los datos de instancia. Indica si puede asignarse un valor nulo explícito al elemento.</summary>
      <returns vsli:raw="If nillable is &lt;see langword=&quot;true&quot; /&gt;, this enables an instance of the element to have the &lt;see langword=&quot;nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;. The &lt;see langword=&quot;nil&quot; /&gt; attribute is defined as part of the XML Schema namespace for instances. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si nil es <see langword="true" />, permite que una instancia del elemento tenga el atributo <see langword="nil" /> establecido en <see langword="true" />. El atributo <see langword="nil" /> se define como parte del espacio de nombres del esquema XML para las instancias. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary vsli:raw="Gets or sets the name of the element.">Obtiene o establece el nombre del elemento.</summary>
      <returns vsli:raw="The name of the element. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;.">Nombre del elemento. De manera predeterminada, es <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary vsli:raw="Gets the actual qualified name for the given element.">Obtiene el nombre calificado real del elemento especificado.</summary>
      <returns vsli:raw="The qualified name of the element. The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">Nombre completo del elemento. Valor posterior a la compilación de la propiedad <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary vsli:raw="Gets or sets the reference name of an element declared in this schema (or another schema indicated by the specified namespace).">Obtiene o establece el nombre de referencia de un elemento declarado en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns vsli:raw="The reference name of the element.">Nombre de referencia del elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary vsli:raw="Gets or sets the type of the element. This can either be a complex type or a simple type.">Obtiene o establece el tipo del elemento. Puede ser un tipo complejo o un tipo simple.</summary>
      <returns vsli:raw="The type of the element.">Tipo del elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type defined in this schema or another schema indicated by the specified namespace.">Obtiene o establece un tipo de datos integrado definido en este esquema u otro esquema indicado por el espacio de nombres especificado.</summary>
      <returns vsli:raw="The name of the built-in data type.">Nombre del tipo de datos integrado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary vsli:raw="Gets or sets the name of an element that is being substituted by this element.">Obtiene o establece el nombre de un elemento que se sustituye por este elemento.</summary>
      <returns vsli:raw="The qualified name of an element that is being substituted by this element. Optional.">Nombre calificado de un elemento que se sustituye por este elemento. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;enumeration&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class specifies a list of valid values for a simpleType element. Declaration is contained within a &lt;see langword=&quot;restriction&quot; /&gt; declaration.">Representa la faceta <see langword="enumeration" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase especifica una lista de valores válidos para un elemento simpleType. La declaración está contenida dentro de una declaración <see langword="restriction" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary vsli:raw="Returns detailed information about the schema exception.">Devuelve información detallada acerca de la excepción del esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Constructs a new &lt;see langword=&quot;XmlSchemaException&quot; /&gt; object with the given &lt;see langword=&quot;SerializationInfo&quot; /&gt; and &lt;see langword=&quot;StreamingContext&quot; /&gt; information that contains all the properties of the &lt;see langword=&quot;XmlSchemaException&quot; /&gt;.">Construye un nuevo objeto <see langword="XmlSchemaException" /> con la información de <see langword="SerializationInfo" /> y <see langword="StreamingContext" /> especificada que contiene todas las propiedades de la excepción <see langword="XmlSchemaException" />.</summary>
      <param name="info" vsli:raw="SerializationInfo.">SerializationInfo.</param>
      <param name="context" vsli:raw="StreamingContext.">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción especificado.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Descripción <see langword="string" /> de la condición de error.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message and original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción y el objeto <see cref="T:System.Exception" /> original que ha producido la excepción especificada.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Descripción <see langword="string" /> de la condición de error.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">Objeto T:System.Exception original que ha producido esta excepción.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message specified, and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, line number, and line position of the XML that cause this exception specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción especificado y el objeto <see cref="T:System.Exception" /> original, el número de línea y la posición de la línea del código XML que produce la excepción especificada.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Descripción <see langword="string" /> de la condición de error.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">Objeto T:System.Exception original que ha producido esta excepción.</param>
      <param name="lineNumber" vsli:raw="The line number of the XML that caused this exception.">Número de línea del código XML que ha producido esta excepción.</param>
      <param name="linePosition" vsli:raw="The line position of the XML that caused this exception.">Posición de la línea del código XML que ha producido esta excepción.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XmlSchemaException&quot; /&gt; properties into the &lt;see langword=&quot;SerializationInfo&quot; /&gt; class for the given &lt;see langword=&quot;StreamingContext&quot; /&gt;.">Transmite todas las propiedades <see langword="XmlSchemaException" /> a la clase <see langword="SerializationInfo" /> para el <see langword="StreamingContext" /> dado.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt;.">
        <see langword="SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; information.">Información de <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred.">Obtiene el número de línea que indica dónde se produjo el error.</summary>
      <returns vsli:raw="The line number indicating where the error occurred.">Número de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred.">Obtiene la posición de línea que indica dónde se produjo el error.</summary>
      <returns vsli:raw="The line position indicating where the error occurred.">Posición de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary vsli:raw="Gets the description of the error condition of this exception.">Obtiene la descripción de la condición de error de esta excepción.</summary>
      <returns vsli:raw="The description of the error condition of this exception.">La descripción de la condición de error de esta excepción.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary vsli:raw="The &lt;see langword=&quot;XmlSchemaObject&quot; /&gt; that produced the &lt;see langword=&quot;XmlSchemaException&quot; /&gt;.">
        <see langword="XmlSchemaObject" /> que ha producido la excepción <see langword="XmlSchemaException" />.</summary>
      <returns vsli:raw="A valid object instance represents a structural validation error in the XML Schema Object Model (SOM).">Una instancia de objeto válida representa un error de validación estructural en el modelo de objeto de esquema (SOM) XML.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) location of the schema that caused the exception.">Obtiene la ubicación del Identificador uniforme de recursos (URI) del esquema que produjo la excepción.</summary>
      <returns vsli:raw="The URI location of the schema that caused the exception.">La ubicación del URI del esquema que produjo la excepción.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary vsli:raw="An abstract class. Provides information about the included schema.">Clase abstracta. Proporciona información sobre el esquema incluido.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaExternal&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaExternal" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary vsli:raw="Gets or sets the string id.">Obtiene o establece el identificador de cadena.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">Identificador de cadena. El valor predeterminado es <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;XmlSchema&quot; /&gt; for the referenced schema.">Obtiene o establece el <see langword="XmlSchema" /> del esquema al que se hace referencia.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; for the referenced schema.">
        <see langword="XmlSchema" /> del esquema al que se hace referencia.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) location for the schema, which tells the schema processor where the schema physically resides.">Obtiene o establece la ubicación del identificador URI (Identificador de recursos uniforme) del esquema, que indica al procesador del esquema dónde reside el esquema físicamente.</summary>
      <returns vsli:raw="The URI location for the schema. Optional for imported schemas.">Ubicación de la dirección URI del esquema. Opcional para esquemas importados.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes, which do not belong to the schema target namespace.">Obtiene o establece los atributos cualificados que no pertenecen al espacio de nombres de destino del esquema.</summary>
      <returns vsli:raw="Qualified attributes that belong to another target namespace.">Atributos calificados que pertenecen a otro espacio de nombres de destino.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary vsli:raw="Abstract class for all facets that are used when simple types are derived by restriction.">Clase abstracta para todas las facetas que se utilizan cuando los tipos simples se derivan mediante Restriction.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaFacet" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary vsli:raw="Gets or sets information that indicates that this facet is fixed.">Obtiene o establece la información que indica que esta faceta es fija.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, value is fixed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si es <see langword="true" />, el valor es fijo; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;value&quot; /&gt; attribute of the facet.">Obtiene o establece el atributo <see langword="value" /> de la faceta.</summary>
      <returns vsli:raw="The value attribute.">Atributo de valor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary vsli:raw="Indicates if attributes or elements need to be qualified with a namespace prefix.">Indica si los atributos o los elementos deben calificarse con un espacio de nombres como prefijo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary vsli:raw="Element and attribute form is not specified in the schema.">El formato de elemento y de atributo no se especifica en el esquema.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary vsli:raw="Elements and attributes must be qualified with a namespace prefix.">Los atributos y los elementos deben estar calificados con el espacio de nombres como prefijo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary vsli:raw="Elements and attributes are not required to be qualified with a namespace prefix.">Los elementos y los atributos no deben estar calificados con el espacio de nombres como prefijo.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary vsli:raw="Specifies a restriction on the number of digits that can be entered for the fraction value of a simpleType element. The value of fractionDigits must be a positive integer. Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;fractionDigits&quot; /&gt; facet.">Especifica una restricción del número de dígitos que se pueden especificar para el valor de fracción de un elemento simpleType. El valor de fractionDigits debe ser un entero positivo. Representa la faceta <see langword="fractionDigits" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary vsli:raw="Represents the &lt;see langword=&quot;group&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines groups at the &lt;see langword=&quot;schema&quot; /&gt; level that are referenced from the complex types. It groups a set of element declarations so that they can be incorporated as a group into complex type definitions.">Representa el elemento <see langword="group" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase define grupos en el nivel del <see langword="schema" /> a los que se hace referencia desde los tipos complejos. Agrupa un conjunto de declaraciones de elementos de forma que puedan incorporarse como un grupo en definiciones de tipos complejos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary vsli:raw="Gets or sets the name of the schema group.">Obtiene o establece el nombre del grupo de esquemas.</summary>
      <returns vsli:raw="The name of the schema group.">Nombre del grupo de esquemas.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the schema group.">Obtiene el nombre completo del grupo de esquemas.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object representing the qualified name of the schema group.">Un objeto <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre completo del grupo de esquemas.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary vsli:raw="An abstract class for &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt;.">Clase abstracta para <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary vsli:raw="This collection is used to add new elements to the compositor.">Esta colección se utiliza para agregar nuevos elementos al compositor.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Una clase <see langword="XmlSchemaObjectCollection" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary vsli:raw="Represents the &lt;see langword=&quot;group&quot; /&gt; element with &lt;see langword=&quot;ref&quot; /&gt; attribute from the XML Schema as specified by the World Wide Web Consortium (W3C). This class is used within complex types that reference a &lt;see langword=&quot;group&quot; /&gt; defined at the &lt;see langword=&quot;schema&quot; /&gt; level.">Representa el elemento <see langword="group" /> con el atributo <see langword="ref" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase se utiliza dentro de tipos complejos que hacen referencia a un <see langword="group" /> definido en el nivel <see langword="schema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary vsli:raw="Gets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes, which holds the post-compilation value of the &lt;see langword=&quot;Particle&quot; /&gt; property.">Obtiene una de las clases <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> que contiene el valor posterior a la compilación de la propiedad <see langword="Particle" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Particle&quot; /&gt; property, which is one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Valor posterior a la compilación de la propiedad <see langword="Particle" /> que es una de las clases <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary vsli:raw="Gets or sets the name of a group defined in this schema (or another schema indicated by the specified namespace).">Obtiene o establece el nombre de un grupo definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns vsli:raw="The name of a group defined in this schema.">Nombre de un grupo definido en este esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary vsli:raw="Class for the identity constraints: &lt;see langword=&quot;key&quot; /&gt;, &lt;see langword=&quot;keyref&quot; /&gt;, and &lt;see langword=&quot;unique&quot; /&gt; elements.">Clase para las restricciones de identidad: elementos <see langword="key" />, <see langword="keyref" /> y <see langword="unique" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaIdentityConstraint&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary vsli:raw="Gets the collection of fields that apply as children for the XML Path Language (XPath) expression selector.">Obtiene la colección de campos que se aplican como elementos secundarios del selector de expresiones del lenguaje Xpath (XML Path Language, lenguaje de rutas XML).</summary>
      <returns vsli:raw="The collection of fields.">Colección de campos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary vsli:raw="Gets or sets the name of the identity constraint.">Obtiene o establece el nombre de la restricción de identidad.</summary>
      <returns vsli:raw="The name of the identity constraint.">Nombre de la restricción de identidad.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the identity constraint, which holds the post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">Obtiene el nombre completo de la restricción de identidad, que contiene el valor posterior a la compilación de la propiedad <see langword="QualifiedName" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">Valor posterior a la compilación de la propiedad <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary vsli:raw="Gets or sets the XPath expression &lt;see langword=&quot;selector&quot; /&gt; element.">Obtiene o establece el elemento <see langword="selector" /> de la expresión XPath.</summary>
      <returns vsli:raw="The XPath expression &lt;see langword=&quot;selector&quot; /&gt; element.">Elemento <see langword="selector" /> de la expresión XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary vsli:raw="Represents the &lt;see langword=&quot;import&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is used to import schema components from other schemas.">Representa el elemento <see langword="import" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase se utiliza para importar componentes del esquema desde otros esquemas.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaImport&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaImport" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">Obtiene o establece la propiedad <see langword="annotation" />.</summary>
      <returns vsli:raw="The annotation.">Anotación.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary vsli:raw="Gets or sets the target namespace for the imported schema as a Uniform Resource Identifier (URI) reference.">Obtiene o establece el espacio de nombres de destino del esquema importado como referencia del Identificador de recursos uniforme (URI).</summary>
      <returns vsli:raw="The target namespace for the imported schema as a URI reference. Optional.">Espacio de nombres de destino del esquema importado como referencia de la dirección URI. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary vsli:raw="Represents the &lt;see langword=&quot;include&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is used to include declarations and definitions from an external schema. The included declarations and definitions are then available for processing in the containing schema.">Representa el elemento <see langword="include" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase se utiliza para incluir declaraciones y definiciones a partir de un esquema externo. Las declaraciones y definiciones incluidas están disponibles entonces para su procesamiento en el esquema contenedor.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInclude&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInclude" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">Obtiene o establece la propiedad <see langword="annotation" />.</summary>
      <returns vsli:raw="The annotation.">Anotación.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from an XML document. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class cannot be inherited.">Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir de un documento XML. La clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> no se puede heredar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary vsli:raw="Affects occurrence and type information inferred by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class for elements and attributes in an XML document.">Afecta a la aparición y a la información de tipos que infiere la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> para los atributos y elementos de un documento XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary vsli:raw="Indicates that a less restrictive schema declaration should be inferred for a particular element or attribute.">Indica que debería inferirse una declaración de esquema menos restrictiva para un elemento o atributo concreto.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary vsli:raw="Indicates that a more restrictive schema declaration should be inferred for a particular element or attribute.">Indica que debería inferirse una declaración de esquema más restrictiva para un elemento o atributo concreto.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir del documento XML incluido en el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="instanceDocument" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object containing the XML document to infer a schema from.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML del que se va a inferir un esquema.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the inferred schemas.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas inferidos.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML document is not well-formed.">El documento XML no tiene un formato correcto.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is not positioned on the root node or on an element. An error occurs during the schema inference process.">El objeto <see cref="T:System.Xml.XmlReader" /> no se coloca en el nodo raíz ni en un elemento. Se produce un error durante el proceso de inferencia del esquema.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified, and refines the inferred schema using an existing schema in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object specified with the same target namespace.">Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir del documento XML incluido en el objeto <see cref="T:System.Xml.XmlReader" /> especificado, y refina el esquema inferido utilizando un esquema existente en el objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado con el mismo espacio de nombres de destino.</summary>
      <param name="instanceDocument" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object containing the XML document to infer a schema from.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML del que se va a inferir un esquema.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing an existing schema used to refine the inferred schema.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene un esquema existente utilizado para refinar el esquema inferido.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the inferred schemas.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas inferidos.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML document is not well-formed.">El documento XML no tiene un formato correcto.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is not positioned on the root node or on an element. An error occurs during the schema inference process.">El objeto <see cref="T:System.Xml.XmlReader" /> no se coloca en el nodo raíz ni en un elemento. Se produce un error durante el proceso de inferencia del esquema.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; value that affects schema occurrence declarations inferred from the XML document.">Obtiene o establece el valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afecta a las declaraciones de aparición de esquemas que se infieren del documento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; value that affects types inferred from the XML document.">Obtiene o establece el valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afecta a los tipos que se infieren del documento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary vsli:raw="Returns information about errors encountered by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class while inferring a schema from an XML document.">Devuelve información sobre los errores que encuentra la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> al inferir un esquema de un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects specified that contain all the properties of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados que contienen todas las propiedades de <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="A description of the error.">Descripción del error.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado y la <see cref="T:System.Exception" /> original que ha producido la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> especificada.</summary>
      <param name="message" vsli:raw="A description of the error.">Descripción del error.</param>
      <param name="innerException" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object containing the original exception that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Objeto <see cref="T:System.Exception" /> que contiene la excepción original que ha producido <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified, the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; specified, and the line number and line position of the error in the XML document specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado, la <see cref="T:System.Exception" /> original que ha producido la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> especificada y el número y la posición de la línea en la que se encuentra el error del documento XML especificado.</summary>
      <param name="message" vsli:raw="A description of the error.">Descripción del error.</param>
      <param name="innerException" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object containing the original exception that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Objeto <see cref="T:System.Exception" /> que contiene la excepción original que ha producido <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="lineNumber" vsli:raw="The line number in the XML document that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Número de línea del documento XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="linePosition" vsli:raw="The line position in the XML document that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Posición de la línea del documento XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; object properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object specified for the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object specified.">Transmite todas las propiedades del objeto <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> al objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado para el objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificado.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary vsli:raw="Represents the post-schema-validation infoset of a validated XML node.">Representa el conjunto de información posterior a la validación del esquema de un nodo XML validado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentType&quot; /&gt; object that corresponds to the content type of this validated XML node.">Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> correspondiente al tipo de contenido de este nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentType&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary vsli:raw="Gets or sets a value indicating if this validated XML node was set as the result of a default being applied during XML Schema Definition Language (XSD) schema validation.">Obtiene o establece un valor que indica si el nodo XML validado se ha establecido como resultado de la aplicación de un valor predeterminado durante la validación de esquema del lenguaje de definición de esquemas XML (XSD).</summary>
      <returns vsli:raw="A &lt;see langword=&quot;bool&quot; /&gt; value.">Valor <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary vsli:raw="Gets or sets a value indicating if the value for this validated XML node is nil.">Obtiene o establece un valor que indica si el valor del nodo XML validado es nil.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;bool&quot; /&gt; value.">Valor <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary vsli:raw="Gets or sets the dynamic schema type for this validated XML node.">Obtiene o establece el tipo de esquema dinámico de este nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary vsli:raw="Gets or sets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; object that corresponds to this validated XML node.">Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilado correspondiente a este nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary vsli:raw="Gets or sets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; object that corresponds to this validated XML node.">Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilado correspondiente a este nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary vsli:raw="Gets or sets the static XML Schema Definition Language (XSD) schema type of this validated XML node.">Obtiene o establece el tipo de esquema estático del lenguaje de definición de esquemas XML (XSD) de este nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">Obtiene o establece el valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> del nodo XML validado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value.">Valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary vsli:raw="This class represents the &lt;see langword=&quot;key&quot; /&gt; element from XMLSchema as specified by the World Wide Web Consortium (W3C).">Esta clase representa el elemento <see langword="key" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaKey&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaKey" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary vsli:raw="This class represents the &lt;see langword=&quot;keyref&quot; /&gt; element from XMLSchema as specified by the World Wide Web Consortium (W3C).">Esta clase representa el elemento <see langword="keyref" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaKeyref&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary vsli:raw="Gets or sets the name of the key that this constraint refers to in another simple or complex type.">Obtiene o establece el nombre de la clave a la que hace referencia esta restricción en otro tipo simple o complejo.</summary>
      <returns vsli:raw="The QName of the key that this constraint refers to.">Tipo QName de la clave a la que hace referencia esta restricción.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;length&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the length of a &lt;see langword=&quot;simpleType&quot; /&gt; element on the data type.">Representa la faceta <see langword="length" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud de un elemento <see langword="simpleType" /> en el tipo de datos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxExclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be less than the value of the &lt;see langword=&quot;maxExclusive&quot; /&gt; element.">Representa el elemento <see langword="maxExclusive" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor máximo de un elemento <see langword="simpleType" />. El valor del elemento debe ser menor que el valor del elemento <see langword="maxExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxInclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be less than or equal to the value of the &lt;see langword=&quot;maxInclusive&quot; /&gt; element.">Representa el elemento <see langword="maxInclusive" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor máximo de un elemento <see langword="simpleType" />. El valor del elemento debe ser menor o igual que el valor del elemento <see langword="maxInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxLength&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum length of the data value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The length must be less than the value of the &lt;see langword=&quot;maxLength&quot; /&gt; element.">Representa el elemento <see langword="maxLength" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud máxima del valor de datos de un elemento <see langword="simpleType" />. La longitud debe ser menor que el valor del elemento <see langword="maxLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minExclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be greater than the value of the &lt;see langword=&quot;minExclusive&quot; /&gt; element.">Representa el elemento <see langword="minExclusive" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor mínimo de un elemento <see langword="simpleType" />. El valor del elemento debe ser mayor que el valor del elemento <see langword="minExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minInclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum value of a simpleType element. The element value must be greater than or equal to the value of the &lt;see langword=&quot;minInclusive&quot; /&gt; element.">Representa el elemento <see langword="minInclusive" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor mínimo de un elemento simpleType. El valor del elemento debe ser mayor o igual que el valor del elemento <see langword="minInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minLength&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum length of the data value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The length must be greater than the value of the &lt;see langword=&quot;minLength&quot; /&gt; element.">Representa el elemento <see langword="minLength" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud mínima del valor de datos de un elemento <see langword="simpleType" />. La longitud debe ser mayor que el valor del elemento <see langword="minLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary vsli:raw="Represents the &lt;see langword=&quot;notation&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). An XML Schema &lt;see langword=&quot;notation&quot; /&gt; declaration is a reconstruction of &lt;see langword=&quot;XML 1.0 NOTATION&quot; /&gt; declarations. The purpose of notations is to describe the format of non-XML data within an XML document.">Representa el elemento <see langword="notation" /> del esquema XML como especificado por el Consorcio WWC (W3C). Una declaración <see langword="notation" /> del Esquema XML es una reconstrucción de declaraciones <see langword="XML 1.0 NOTATION" />. El propósito de las notaciones es describir el formato de los datos que no sean de tipo XML de un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary vsli:raw="Gets or sets the name of the notation.">Obtiene o establece el nombre de la notación.</summary>
      <returns vsli:raw="The name of the notation.">Nombre de la notación.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;public&quot; /&gt; identifier.">Obtiene o establece el identificador <see langword="public" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;public&quot; /&gt; identifier. The value must be a valid Uniform Resource Identifier (URI).">Identificador <see langword="public" />. El valor debe ser un identificador de recursos uniforme (URI) válido.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;system&quot; /&gt; identifier.">Obtiene o establece el identificador <see langword="system" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;system&quot; /&gt; identifier. The value must be a valid URI.">Identificador <see langword="system" />. El valor debe ser una dirección URI válida.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary vsli:raw="Abstract class for defining &lt;see langword=&quot;numeric&quot; /&gt; facets. This class is the base class for numeric facet classes such as &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;.">Clase que se utiliza para definir facetas <see langword="numeric" />. Esta clase es la clase base para las clases de faceta numérica como <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" /></summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNumericFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary vsli:raw="Represents the root class for the Xml schema object model hierarchy and serves as a base class for classes such as the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class.">Representa la clase raíz para la jerarquía del modelo de objetos de esquema Xml y actúa como clase base para clases como <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary vsli:raw="Gets or sets the line number in the file to which the &lt;see langword=&quot;schema&quot; /&gt; element refers.">Obtiene o establece el número de línea del archivo al que hace referencia el elemento <see langword="schema" />.</summary>
      <returns vsli:raw="The line number.">Número de línea.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary vsli:raw="Gets or sets the line position in the file to which the &lt;see langword=&quot;schema&quot; /&gt; element refers.">Obtiene o establece la posición de la línea en el archivo al que hace referencia el elemento <see langword="schema" />.</summary>
      <returns vsli:raw="The line position.">Posición de línea.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; to use with this schema object.">Obtiene o establece el objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que se va a utilizar con este objeto de esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; property for the schema object.">Propiedad <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> del objeto de esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary vsli:raw="Gets or sets the parent of this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Obtiene o establece el elemento primario de este <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> primario de este <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary vsli:raw="Gets or sets the source location for the file that loaded the schema.">Obtiene o establece la ubicación de origen del archivo que cargó el esquema.</summary>
      <returns vsli:raw="The source location (URI) for the file.">Ubicación de origen (dirección URI) del archivo.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;s.">Una colección de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt; class that takes an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Inicializa una nueva instancia de la clase <see langword="XmlSchemaObjectCollection" /> que toma un <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="parent" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> al objeto <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns vsli:raw="The index at which the item has been added.">Índice donde se ha agregado el elemento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see langword=&quot;Count&quot; /&gt;.">
        <paramref name="index" /> es menor que cero.  
o bien 
 <paramref name="index" /> es mayor que <see langword="Count" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter specified is not of type &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaExternal&quot; /&gt; or its derived types &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaImport&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInclude&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaRedefine&quot; /&gt;.">El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado no es de tipo <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> o sus tipos derivados <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> y <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Indicates if the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; is in the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Indica si el <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado existe en <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified qualified name is in the collection; otherwise, returns &lt;see langword=&quot;false&quot; /&gt;. If null is supplied, &lt;see langword=&quot;false&quot; /&gt; is returned because there is no qualified name with a null name.">
        <see langword="true" /> si el nombre calificado especificado se encuentra en la colección; en caso contrario, devuelve <see langword="false" />. Si se suministra un valor null, se devuelve <see langword="false" /> porque no existe ningún nombre calificado con un nombre nulo.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;s from the collection into the given array, starting at the given index.">Copia todos los <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de la colección a la matriz especificada, a partir del índice indicado.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;. The array must have zero-based indexing.">Matriz unidimensional que constituye el destino de los elementos copiados desde <see langword="XmlSchemaObjectCollection" />. La matriz debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Índice de base cero de la matriz donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="array" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multi-dimensional.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; is greater than the available space from index to the end of the destination array.">
        <paramref name="array" /> es multi-dimensional.  
o bien 
 <paramref name="index" /> es igual o mayor que la longitud de <paramref name="array" />.  
o bien 
El número de elementos del <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de origen es mayor que el espacio disponible desde el índice hasta el final de la matriz de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; cannot be cast automatically to the type of the destination array.">El tipo del <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de origen no puede convertirse automáticamente al tipo de la matriz de destino.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for iterating through the &lt;see langword=&quot;XmlSchemaObjects&quot; /&gt; contained in the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Devuelve un enumerador para recorrer en iteración los <see langword="XmlSchemaObjects" /> incluidos en <see langword="XmlSchemaObjectCollection" />.</summary>
      <returns vsli:raw="The iterator returns &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectEnumerator&quot; /&gt;.">El iterador devuelve <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Gets the collection index corresponding to the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Obtiene el índice de colección correspondiente al objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; whose index you want to return.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> cuyo índice se desea devolver.</param>
      <returns vsli:raw="The index corresponding to the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Índice correspondiente al objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Inserta <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which an item should be inserted.">Índice de base cero donde debe insertarse el elemento.</param>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to insert.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see langword=&quot;Count&quot; /&gt;.">
        <paramref name="index" /> es menor que cero.  
o bien 
 <paramref name="index" /> es mayor que <see langword="Count" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; at the specified index.">Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Índice del objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; at the specified index.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary vsli:raw="&lt;see langword=&quot;OnClear&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Clear&quot; /&gt; behavior. For more information, see OnClear method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnClear" /> se invoca antes que el comportamiento <see langword="Clear" /> estándar. Para obtener más información, vea el método OnClear para <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnInsert&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Insert&quot; /&gt; behavior. For more information, see &lt;see langword=&quot;OnInsert&quot; /&gt; method &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnInsert" /> se invoca antes que el comportamiento <see langword="Insert" /> estándar. Para obtener más información, vea el método <see langword="OnInsert" /> para <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item" vsli:raw="The item.">El elemento.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnRemove&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Remove&quot; /&gt; behavior. For more information, see the &lt;see langword=&quot;OnRemove&quot; /&gt; method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnRemove" /> se invoca antes que el comportamiento <see langword="Remove" /> estándar. Para obtener más información, vea el método <see langword="OnRemove" /> para <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item" vsli:raw="The item.">El elemento.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnSet&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Set&quot; /&gt; behavior. For more information, see the OnSet method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnSet" /> se invoca antes que el comportamiento <see langword="Set" /> estándar. Para obtener más información, vea el método OnSet para <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="oldValue" vsli:raw="The old value.">Valor antiguo.</param>
      <param name="newValue" vsli:raw="The new value.">Nuevo valor.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; from the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Quita un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> del objeto <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to remove.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que se va a quitar.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary vsli:raw="Represents the enumerator for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt;.">Representa el enumerador para <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; in the collection.">Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actual de la colección.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actual.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary vsli:raw="Moves to the next item in the collection.">Se desplaza al siguiente elemento de la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; at the end of the collection.">
        <see langword="false" /> al final de la colección.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary vsli:raw="Resets the enumerator to the start of the collection.">Restablece el enumerador al principio de la colección.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actual.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.</summary>
      <returns vsli:raw="The next &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">La clase <see cref="T:System.Xml.Schema.XmlSchemaObject" /> siguiente.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary vsli:raw="Provides the collections for contained elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class (for example, Attributes, AttributeGroups, Elements, and so on).">Proporciona las colecciones para los elementos contenidos en la clase <see cref="T:System.Xml.Schema.XmlSchema" /> (por ejemplo, Attributes, AttributeGroups, Elements, etcétera).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Determines if the qualified name specified exists in the collection.">Determina si el nombre completo especificado existe en la colección.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the qualified name specified exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nombre completo especificado se encuentra en la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Obtiene el número de elementos contenidos en <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Número de elementos contenidos en <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Devuelve un enumerador que puede recorrer en iteración <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; that can iterate through &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">El objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que puede recorrer en iteración la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns the element in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; specified by qualified name.">Devuelve el elemento de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> especificada por su nombre completo.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the element to return.">Nombre <see cref="T:System.Xml.XmlQualifiedName" /> del elemento que se va a devolver.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the element in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; specified by qualified name.">El objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> del elemento de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> especificada por su nombre completo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary vsli:raw="Returns a collection of all the named elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Devuelve una colección de todos los elementos con nombre de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns vsli:raw="A collection of all the named elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Una colección de todos los elementos con nombre de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary vsli:raw="Returns a collection of all the values for all the elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Devuelve una colección de todos los valores de todos los elementos de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns vsli:raw="A collection of all the values for all the elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Una colección de todos los valores de todos los elementos de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary vsli:raw="Abstract class for that is the base class for all particle types (e.g. &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt;).">La clase abstracta para ello es la clase base para todos los tipos de partícula (por ejemplo, <see cref="T:System.Xml.Schema.XmlSchemaAny" />).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaParticle&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaParticle" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary vsli:raw="Gets or sets the maximum number of times the particle can occur.">Obtiene o establece el número máximo de veces que puede producirse la partícula.</summary>
      <returns vsli:raw="The maximum number of times the particle can occur. The default is 1.">Número máximo de veces que puede producirse la partícula. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary vsli:raw="Gets or sets the number as a string value. Maximum number of times the particle can occur.">Obtiene o establece el número en forma de valor de tipo cadena. Número máximo de veces que puede producirse la partícula.</summary>
      <returns vsli:raw="The number as a string value. &lt;see langword=&quot;String.Empty&quot; /&gt; indicates that &lt;see langword=&quot;MaxOccurs&quot; /&gt; is equal to the default value. The default is a null reference.">El número como valor de cadena. <see langword="String.Empty" /> indica que <see langword="MaxOccurs" /> es igual al valor predeterminado. El valor predeterminado es una referencia nula.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary vsli:raw="Gets or sets the minimum number of times the particle can occur.">Obtiene o establece el número mínimo de veces que puede producirse la partícula.</summary>
      <returns vsli:raw="The minimum number of times the particle can occur. The default is 1.">Número mínimo de veces que puede producirse la partícula. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary vsli:raw="Gets or sets the number as a string value. The minimum number of times the particle can occur.">Obtiene o establece el número en forma de valor de tipo cadena. Número mínimo de veces que puede producirse la partícula.</summary>
      <returns vsli:raw="The number as a string value. &lt;see langword=&quot;String.Empty&quot; /&gt; indicates that &lt;see langword=&quot;MinOccurs&quot; /&gt; is equal to the default value. The default is a null reference.">El número como valor de cadena. <see langword="String.Empty" /> indica que <see langword="MinOccurs" /> es igual al valor predeterminado. El valor predeterminado es una referencia nula.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;pattern&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the value entered for a &lt;see langword=&quot;simpleType&quot; /&gt; element.">Representa el elemento <see langword="pattern" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor introducido para un elemento <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary vsli:raw="Represents the &lt;see langword=&quot;redefine&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to allow simple and complex types, groups and attribute groups from external schema files to be redefined in the current schema. This class can also be used to provide versioning for the schema elements.">Representa el elemento <see langword="redefine" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para permitir redefinir tipos simples y complejos, grupos y grupos de atributos de archivos de esquema externos en el esquema actual. Esta clase también puede utilizarse para proporcionar la versión para los elementos del esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaRedefine&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; , for all attributes in the schema, which holds the post-compilation value of the &lt;see langword=&quot;AttributeGroups&quot; /&gt; property.">Obtiene <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los atributos del esquema, que contiene el valor posterior a la compilación de la propiedad <see langword="AttributeGroups" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all attributes in the schema. The post-compilation value of the &lt;see langword=&quot;AttributeGroups&quot; /&gt; property.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los atributos del esquema. Valor posterior a la compilación de la propiedad <see langword="AttributeGroups" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;, for all groups in the schema, which holds the post-compilation value of the &lt;see langword=&quot;Groups&quot; /&gt; property.">Obtiene la tabla <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los grupos del esquema, donde se incluye el valor posterior a la compilación de la propiedad <see langword="Groups" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all groups in the schema. The post-compilation value of the &lt;see langword=&quot;Groups&quot; /&gt; property.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los grupos del esquema. Valor posterior a la compilación de la propiedad <see langword="Groups" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary vsli:raw="Gets the collection of the following classes: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;.">Obtiene la colección de las siguientes clases: <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> y <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
      <returns vsli:raw="The elements contained within the redefine element.">Elementos incluidos en el elemento redefinido.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;, for all simple and complex types in the schema, which holds the post-compilation value of the &lt;see langword=&quot;SchemaTypes&quot; /&gt; property.">Obtiene <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los tipos simples y complejos del esquema, donde se incluye el valor posterior a la compilación de la propiedad <see langword="SchemaTypes" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all schema types in the schema. The post-compilation value of the &lt;see langword=&quot;SchemaTypes&quot; /&gt; property.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los tipos de esquema del esquema. Valor posterior a la compilación de la propiedad <see langword="SchemaTypes" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary vsli:raw="Represents the &lt;see langword=&quot;sequence&quot; /&gt; element (compositor) from the XML Schema as specified by the World Wide Web Consortium (W3C). The &lt;see langword=&quot;sequence&quot; /&gt; requires the elements in the group to appear in the specified sequence within the containing element.">Representa el elemento <see langword="sequence" /> (compositor) del esquema XML, tal y como lo especificó el consorcio World Wide Web (W3C). <see langword="sequence" /> requiere que los elementos del grupo aparezcan en la secuencia especificada dentro del elemento que los contiene.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary vsli:raw="The elements contained within the compositor. Collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt;.">Elementos incluidos dentro del compositor. Colección de <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> o <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
      <returns vsli:raw="The elements contained within the compositor.">Elementos incluidos dentro del compositor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary vsli:raw="Contains a cache of XML Schema definition language (XSD) schemas.">Contiene una caché de esquemas del lenguaje de definición de esquemas XML (XSD).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object to use.">Objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.XmlNameTable" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary vsli:raw="Adds the XML Schema definition language (XSD) schema at the URL specified to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Agrega el esquema del lenguaje de definición de esquemas XML (XSD) de la dirección URL especificada a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property, or &lt;see langword=&quot;null&quot; /&gt; to use the &lt;paramref name=&quot;targetNamespace&quot; /&gt; specified in the schema.">Propiedad de esquema <paramref name="targetNamespace" /> o valor <see langword="null" /> para utilizar el <paramref name="targetNamespace" /> especificado en el esquema.</param>
      <param name="schemaUri" vsli:raw="The URL that specifies the schema to load.">Dirección URL que especifica el esquema que se va a cargar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor <see langword="null" /> y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The URL passed as a parameter is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">La dirección URL que se pasa como parámetro es <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Adds the XML Schema definition language (XSD) schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Agrega el esquema del lenguaje de definición de esquemas XML (XSD) incluido en <see cref="T:System.Xml.XmlReader" /> a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property, or &lt;see langword=&quot;null&quot; /&gt; to use the &lt;paramref name=&quot;targetNamespace&quot; /&gt; specified in the schema.">Propiedad de esquema <paramref name="targetNamespace" /> o valor <see langword="null" /> para utilizar el <paramref name="targetNamespace" /> especificado en el esquema.</param>
      <param name="schemaDocument" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor <see langword="null" /> y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.XmlReader" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds the given &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Agrega el <see cref="T:System.Xml.Schema.XmlSchema" /> predeterminado a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to add to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar a la colección <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor <see langword="null" /> y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Adds all the XML Schema definition language (XSD) schemas in the given &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Agrega todos los esquemas del lenguaje de definición de esquemas XML (XSD) de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificada a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="A schema in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; is not valid.">Un esquema de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> para <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;. The default is an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; instance with the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> para <see cref="T:System.Xml.Schema.XmlSchemaSet" />. El valor predeterminado es una instancia de <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> con la propiedad <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> establecida en <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary vsli:raw="Compiles the XML Schema definition language (XSD) schemas added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; into one logical schema.">Compila los esquemas del lenguaje de definición de esquemas XML (XSD) agregados a <see cref="T:System.Xml.Schema.XmlSchemaSet" /> en un esquema lógico.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An error occurred when validating and compiling the schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Se ha producido un error al validar y compilar los esquemas de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary vsli:raw="Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Indica si un esquema del lenguaje de definición de esquemas XML (XSD) con el URI del espacio de nombres de destino especificado está en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property.">Propiedad de esquema <paramref name="targetNamespace" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a schema with the specified target namespace URI is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay un esquema con el URI de espacio de nombres de destino especificado en <see cref="T:System.Xml.Schema.XmlSchemaSet" />; en el caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Indicates whether the specified XML Schema definition language (XSD) &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Indica si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado del lenguaje de definición de esquemas XML (XSD) está en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> está en el <see cref="T:System.Xml.Schema.XmlSchemaSet" />; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to the given array, starting at the given index.">Copia todos los objetos <see cref="T:System.Xml.Schema.XmlSchema" /> de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> en la matriz especificada a partir del índice indicado.</summary>
      <param name="schemas" vsli:raw="The array to copy the objects to.">Matriz en la que se van a copiar los objetos.</param>
      <param name="index" vsli:raw="The index in the array where copying will begin.">Índice de la matriz en la que se iniciará la copia.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary vsli:raw="Gets the number of logical XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtiene el número de esquemas lógicos del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The number of logical schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Número de esquemas lógicos que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary vsli:raw="Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtiene todos los atributos globales de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The collection of global attributes.">Colección de atributos globales.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary vsli:raw="Gets all the global elements in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtiene todos los elementos globales de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The collection of global elements.">Colección de elementos globales.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary vsli:raw="Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtiene todos los tipos simples y complejos de los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The collection of global simple and complex types.">La colección de todos los tipos simples y complejos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; have been compiled.">Obtiene un valor que indica si los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" /> han sido compilados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; have been compiled since the last time a schema was added or removed from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los esquemas de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> se han compilado desde la última vez que se agregó o quitó un esquema de <see cref="T:System.Xml.Schema.XmlSchemaSet" />; de lo contrario, devolverá <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; when loading new XML Schema definition language (XSD) schemas.">Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> predeterminado que utiliza <see cref="T:System.Xml.Schema.XmlSchemaSet" /> al cargar los nuevos esquemas del lenguaje de definición de esquemas XML (XSD).</summary>
      <returns vsli:raw="A table of atomized string objects.">Tabla de objetos en forma de cadena subdividida.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the specified XML Schema definition language (XSD) schema from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Quita el esquema del lenguaje de definición de esquemas XML (XSD) especificado de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to remove from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object removed from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the schema was not found in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se ha eliminado de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> o el valor <see langword="null" /> si no se ha encontrado el esquema en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not a valid schema.">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Quita el esquema del lenguaje de definición de esquemas XML (XSD) especificado y todos los esquemas que importa de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaToRemove" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to remove from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object and all its imports were successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> y todas sus importaciones se han eliminado correctamente; de lo contrario, devuelve <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Reprocesses an XML Schema definition language (XSD) schema that already exists in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Vuelve a procesar un esquema del lenguaje de definición de esquemas XML (XSD) que ya existe en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema" vsli:raw="The schema to reprocess.">Esquema que se va a volver a procesar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is a valid schema. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica un <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor <see langword="null" /> y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter does not already exist in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro no se encuentra todavía en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary vsli:raw="Returns a collection of all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve una colección de todos los esquemas del lenguaje de definición de esquemas XML (XSD) de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing all the schemas that have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;. If no schemas have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, an empty &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object is returned.">Objeto <see cref="T:System.Collections.ICollection" /> que contiene todos los esquemas que se han agregado a <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Si no se ha agregado ningún esquema a <see cref="T:System.Xml.Schema.XmlSchemaSet" />, se devuelve un objeto <see cref="T:System.Collections.ICollection" /> vacío.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary vsli:raw="Returns a collection of all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that belong to the given namespace.">Devuelve una colección de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" /> y que pertenecen al espacio de nombres especificado.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property.">Propiedad de esquema <paramref name="targetNamespace" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing all the schemas that have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that belong to the given namespace. If no schemas have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, an empty &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object is returned.">Objeto <see cref="T:System.Collections.ICollection" /> que contiene todos los esquemas agregados a la clase<see cref="T:System.Xml.Schema.XmlSchemaSet" /> que pertenece al espacio de nombres especificado. Si no se ha agregado ningún esquema a <see cref="T:System.Xml.Schema.XmlSchemaSet" />, se devuelve un objeto <see cref="T:System.Collections.ICollection" /> vacío.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary vsli:raw="Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.">Especifica un controlador de eventos para recibir información sobre los errores de validación de esquemas del lenguaje de definición de esquemas XML (XSD).</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces or locations referenced in include and import elements of a schema.">Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver espacios de nombres o ubicaciones a las que se hace referencia en los elementos de inclusión e importación de un esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces or locations referenced in include and import elements of a schema.">Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres y ubicaciones a las que se hace referencia en los elementos de inclusión e importación de un esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary vsli:raw="Represents the &lt;see langword=&quot;simpleContent&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for simple and complex types with simple content model.">Representa el elemento <see langword="simpleContent" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase es para los tipos simples y complejos con modelo de contenido simple.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContent&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary vsli:raw="Gets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentRestriction&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentExtension&quot; /&gt;.">Obtiene una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> o <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
      <returns vsli:raw="The content contained within the &lt;see langword=&quot;XmlSchemaSimpleContentRestriction&quot; /&gt; or &lt;see langword=&quot;XmlSchemaSimpleContentExtension&quot; /&gt; class.">Contenido incluido en la clase <see langword="XmlSchemaSimpleContentRestriction" /> o <see langword="XmlSchemaSimpleContentExtension" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary vsli:raw="Represents the &lt;see langword=&quot;extension&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to derive simple types by extension. Such derivations are used to extend the simple type content of the element by adding attributes.">Representa el elemento <see langword="extension" /> de contenido sencillo del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede utilizarse para derivar tipos simples mediante extension. Esas derivaciones se utilizan para extender el contenido de tipo simple del elemento agregando atributos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentExtension&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;XmlSchemaAnyAttribute&quot; /&gt; to be used for the attribute value.">Obtiene o establece el <see langword="XmlSchemaAnyAttribute" /> que se va a utilizar para el valor del atributo.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaAnyAttribute&quot; /&gt;. Optional.">
        <see langword="XmlSchemaAnyAttribute" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt;.">Obtiene la colección de <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns vsli:raw="The collection of attributes for the &lt;see langword=&quot;simpleType&quot; /&gt; element.">Colección de atributos del elemento <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type or simple type from which this type is extended.">Obtiene o establece el nombre de un tipo de datos integrado o de un tipo simple a partir del que se extiende este tipo.</summary>
      <returns vsli:raw="The base type name.">Nombre del tipo base.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to derive simple types by restriction. Such derivations can be used to restrict the range of values for the element to a subset of the values specified in the inherited simple type.">Representa el elemento <see langword="restriction" /> de contenido sencillo del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede utilizarse para derivar tipos simples mediante restriction. Esas derivaciones pueden utilizarse para restringir el intervalo de valores para el elemento a un subconjunto de los valores especificados en el tipo simple heredado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentRestriction&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; to be used for the attribute value.">Obtiene o establece un <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> que se va a utilizar para el valor del atributo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; for the attribute value. Optional.">
        <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> para el valor del atributo. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; collection of attributes for the simple type.">Obtiene la colección <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> de atributos para el tipo simple.</summary>
      <returns vsli:raw="The collection of attributes for a simple type.">Colección de atributos de un tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary vsli:raw="Gets or sets the simple type base value.">Obtiene o establece el valor base del tipo simple.</summary>
      <returns vsli:raw="The simple type base value.">Valor base del tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the built-in data type or simple type from which this type is derived.">Obtiene o establece el nombre del tipo de datos integrado o del tipo simple a partir del que se deriva este tipo.</summary>
      <returns vsli:raw="The name of the base type.">Nombre del tipo base.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary vsli:raw="Gets or sets an Xml Schema facet.">Obtiene o establece una faceta del Esquema XML.</summary>
      <returns vsli:raw="One of the following facet classes:  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt;.">Una de las clases de faceta siguientes: 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary vsli:raw="Represents the &lt;see langword=&quot;simpleType&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines a simple type. Simple types can specify information and constraints for the value of attributes or elements with text-only content.">Representa el elemento <see langword="simpleType" /> de contenido sencillo del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase define un tipo simple. Los tipos simples pueden especificar información y restricciones para el valor de atributos o elementos que sólo contengan texto.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary vsli:raw="Gets or sets one of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeUnion&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeList&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction&quot; /&gt;.">Obtiene o establece <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> o <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
      <returns vsli:raw="One of &lt;see langword=&quot;XmlSchemaSimpleTypeUnion&quot; /&gt;, &lt;see langword=&quot;XmlSchemaSimpleTypeList&quot; /&gt;, or &lt;see langword=&quot;XmlSchemaSimpleTypeRestriction&quot; /&gt;.">
        <see langword="XmlSchemaSimpleTypeUnion" />, <see langword="XmlSchemaSimpleTypeList" /> o <see langword="XmlSchemaSimpleTypeRestriction" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary vsli:raw="Abstract class for simple type content classes.">Clase abstracta para las clases de contenido de tipo simple.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeContent&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary vsli:raw="Represents the &lt;see langword=&quot;list&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to define a &lt;see langword=&quot;simpleType&quot; /&gt; element as a list of values of a specified data type.">Representa el elemento <see langword="list" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para definir un elemento <see langword="simpleType" /> como una lista de valores de un tipo de datos especificado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeList&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName&quot; /&gt; values of the simple type.">Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento <see langword="simpleType" /> basándose en los valores <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> y <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" /> del tipo simple.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;simpleType&quot; /&gt; element that is derived from the type specified by the base value.">Obtiene o establece el elemento <see langword="simpleType" /> que se deriva del tipo especificado por el valor base.</summary>
      <returns vsli:raw="The item type for the simple type element.">Tipo de elemento para el elemento de tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type or &lt;see langword=&quot;simpleType&quot; /&gt; element defined in this schema (or another schema indicated by the specified namespace).">Obtiene o establece el nombre de un tipo de datos integrado o de un elemento <see langword="simpleType" /> definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns vsli:raw="The type name of the simple type list.">Nombre de tipo de la lista de tipos simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element for simple types from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used restricting &lt;see langword=&quot;simpleType&quot; /&gt; element.">Representa el elemento <see langword="restriction" /> de los tipos sencillos del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede utilizarse para restringir el elemento <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary vsli:raw="Gets or sets information on the base type.">Obtiene o establece información sobre el tipo base.</summary>
      <returns vsli:raw="The base type for the &lt;see langword=&quot;simpleType&quot; /&gt; element.">Tipo base del elemento <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the qualified base type.">Obtiene o establece el nombre del tipo base calificado.</summary>
      <returns vsli:raw="The qualified name of the simple type restriction base type.">Nombre completo del tipo base de restricción del tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary vsli:raw="Gets or sets an Xml Schema facet.">Obtiene o establece una faceta del Esquema XML.</summary>
      <returns vsli:raw="One of the following facet classes:  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt;.">Una de las clases de faceta siguientes: 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary vsli:raw="Represents the &lt;see langword=&quot;union&quot; /&gt; element for simple types from XML Schema as specified by the World Wide Web Consortium (W3C). A &lt;see langword=&quot;union&quot; /&gt; datatype can be used to specify the content of a &lt;see langword=&quot;simpleType&quot; /&gt;. The value of the &lt;see langword=&quot;simpleType&quot; /&gt; element must be any one of a set of alternative datatypes specified in the union. Union types are always derived types and must comprise at least two alternative datatypes.">Representa el elemento <see langword="union" /> de los tipos sencillos del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Un tipo de datos <see langword="union" /> puede utilizarse para especificar el contenido de un <see langword="simpleType" />. El valor del elemento <see langword="simpleType" /> debe ser cualquiera de un conjunto de tipos de datos alternativos especificado en la unión. Los tipos Union siempre son tipos derivados y deben comprender al menos dos tipos de datos alternativos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeUnion&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; objects representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes&quot; /&gt; values of the simple type.">Obtiene una matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representan el tipo del elemento <see langword="simpleType" /> basándose en los valores <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> y <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> del tipo simple.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; objects representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element.">Una matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento <see langword="simpleType" /> especificado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary vsli:raw="Gets the collection of base types.">Obtiene la colección de tipos base.</summary>
      <returns vsli:raw="The collection of simple type base values.">Colección de valores base de tipos simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary vsli:raw="Gets or sets the array of qualified member names of built-in data types or &lt;see langword=&quot;simpleType&quot; /&gt; elements defined in this schema (or another schema indicated by the specified namespace).">Obtiene o establece la matriz de nombres completos de miembros de tipos de datos integrados o de elementos <see langword="simpleType" /> definidos en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns vsli:raw="An array that consists of a list of members of built-in data types or simple types.">Matriz que consta de una lista de miembros de tipos de datos integrados o tipos simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;totalDigits&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the number of digits that can be entered for the value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. That value of &lt;see langword=&quot;totalDigits&quot; /&gt; must be a positive integer.">Representa la faceta <see langword="totalDigits" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede utilizarse para especificar una restricción en cuanto al número de dígitos que se pueden especificar para el valor de un elemento <see langword="simpleType" />. El valor de <see langword="totalDigits" /> debe ser un entero positivo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary vsli:raw="The base class for all simple types and complex types.">Clase base para todos los tipos simples y complejos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary vsli:raw="Gets the post-compilation object type or the built-in XML Schema Definition Language (XSD) data type, simpleType element, or complexType element. This is a post-schema-compilation infoset property.">Obtiene el tipo de objeto posterior a la compilación o el tipo de datos del lenguaje de definición de esquemas XML (XSD) integrado, el elemento simpleType o el elemento complexType. Se trata de una propiedad del conjunto de información posterior a la compilación del esquema.</summary>
      <returns vsli:raw="The built-in XSD data type, simpleType element, or complexType element.">Tipo de datos XSD integrado, elemento simpleType o elemento complexType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary vsli:raw="Gets the post-compilation value for the base type of this schema type.">Obtiene el valor posterior a la compilación para el tipo base de este tipo de esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object representing the base type of this schema type.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa el tipo base de este tipo de esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary vsli:raw="Gets the post-compilation value for the data type of the complex type.">Obtiene el valor posterior a la compilación para el tipo de datos del tipo complejo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; post-schema-compilation value.">Valor <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> de la compilación posterior al esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary vsli:raw="Gets the post-compilation information on how this element was derived from its base type.">Obtiene la información posterior a la compilación sobre cómo se ha derivado este elemento de su tipo base.</summary>
      <returns vsli:raw="One of the valid &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values.">Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> válidos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary vsli:raw="Gets or sets the final attribute of the type derivation that indicates if further derivations are allowed.">Obtiene o establece el atributo final de la derivación de tipo que indica si se permiten más derivaciones.</summary>
      <returns vsli:raw="One of the valid &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaDerivationMethod.None&quot; /&gt;.">Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> válidos. De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaType.Final&quot; /&gt; property.">Obtiene el valor posterior a la compilación de la propiedad <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaType.Final&quot; /&gt; property. The default is the &lt;see langword=&quot;finalDefault&quot; /&gt; attribute value of the &lt;see langword=&quot;schema&quot; /&gt; element.">Valor posterior a la compilación de la propiedad <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />. El valor predeterminado es el valor del atributo <see langword="finalDefault" /> del elemento <see langword="schema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type of the complex type specified.">Devuelve el valor <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado del tipo complejo especificado.</summary>
      <param name="typeCode" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values representing the complex type.">Uno de los valores <see cref="T:System.Xml.Schema.XmlTypeCode" /> que representan el tipo complejo.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type of the complex type specified by qualified name.">Devuelve el valor <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado del tipo complejo especificado mediante un nombre calificado.</summary>
      <param name="qualifiedName" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the complex type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> del tipo complejo.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <see cref="T:System.Xml.XmlQualifiedName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type of the specified simple type.">Devuelve una clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado del tipo simple especificado.</summary>
      <param name="typeCode" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values representing the simple type.">Uno de los valores <see cref="T:System.Xml.Schema.XmlTypeCode" /> que representan el tipo simple.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type of the simple type that is specified by the qualified name.">Devuelve una clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado del tipo simple especificado por el nombre calificado.</summary>
      <param name="qualifiedName" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the simple type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> del tipo simple.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <see cref="T:System.Xml.XmlQualifiedName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary vsli:raw="Returns a value indicating if the derived schema type specified is derived from the base schema type specified.">Devuelve un valor que indica si el tipo de esquema derivado especificado se deriva del tipo de esquema base especificado</summary>
      <param name="derivedType" vsli:raw="The derived &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; to test.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> derivado que se va a probar.</param>
      <param name="baseType" vsli:raw="The base &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; to test the derived &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; against.">Tipo <see cref="T:System.Xml.Schema.XmlSchemaType" /> base que se toma como referencia para probar el tipo <see cref="T:System.Xml.Schema.XmlSchemaType" /> derivado.</param>
      <param name="except" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values representing a type derivation method to exclude from testing.">Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representan un método de derivación de tipos que se va a excluir de la prueba.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the derived type is derived from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el tipo derivado se derivado del tipo base; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary vsli:raw="Gets or sets a value indicating if this type has a mixed content model. This property is only valid in a complex type.">Obtiene o establece un valor que indica si el modelo de contenido de este tipo es mixto. Esta propiedad sólo es válida en un tipo complejo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type has a mixed content model; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el modelo de contenido del tipo es mixto; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary vsli:raw="Gets or sets the name of the type.">Obtiene o establece el nombre del tipo.</summary>
      <returns vsli:raw="The name of the type.">Nombre del tipo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary vsli:raw="Gets the qualified name for the type built from the &lt;see langword=&quot;Name&quot; /&gt; attribute of this type. This is a post-schema-compilation property.">Obtiene el nombre calificado del tipo creado a partir del atributo <see langword="Name" /> de este tipo. Se trata de una propiedad posterior a la compilación del esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; for the type built from the &lt;see langword=&quot;Name&quot; /&gt; attribute of this type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> del tipo creado a partir del atributo <see langword="Name" /> de este tipo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; of the type.">Obtiene el valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Xml.Schema.XmlTypeCode" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary vsli:raw="Represents the &lt;see langword=&quot;unique&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to identify a unique constraint among a set of elements.">Representa el elemento <see langword="unique" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para identificar una restricción única entre un conjunto de elementos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaUnique&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaUnique" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary vsli:raw="Indicator of how the attribute is used.">Indicador de la forma en que se utiliza el atributo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary vsli:raw="Attribute use not specified.">No se ha especificado la forma de utilizar el atributo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary vsli:raw="Attribute is optional.">El atributo es opcional.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary vsli:raw="Attribute cannot be used.">El atributo no puede utilizarse.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary vsli:raw="Attribute must appear once.">El atributo debe aparecer una vez.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary vsli:raw="Represents the exception thrown when XML Schema Definition Language (XSD) schema validation errors and warnings are encountered in an XML document being validated.">Representa la excepción que se produce cuando se detectan advertencias y errores de validación de esquema del lenguaje de definición de esquemas XML (XSD) que se está validando.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción especificado.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Descripción <see langword="string" /> de la condición de error.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message and original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción y el objeto <see cref="T:System.Exception" /> original que ha producido la excepción especificada.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Descripción <see langword="string" /> de la condición de error.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">Objeto <see cref="T:System.Exception" /> original que ha producido esta excepción.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message specified, and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, line number, and line position of the XML that cause this exception specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción especificado y el objeto <see cref="T:System.Exception" /> original, el número de línea y la posición de la línea del código XML que produce la excepción especificada.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Descripción <see langword="string" /> de la condición de error.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">Objeto <see cref="T:System.Exception" /> original que ha producido esta excepción.</param>
      <param name="lineNumber" vsli:raw="The line number of the XML that caused this exception.">Número de línea del código XML que ha producido esta excepción.</param>
      <param name="linePosition" vsli:raw="The line position of the XML that caused this exception.">Posición de la línea del código XML que ha producido esta excepción.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; information that contains all the properties of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">Construye un nuevo objeto <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con la información de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificada que contiene todas las propiedades de la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <param name="info" vsli:raw="&lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context" vsli:raw="&lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary vsli:raw="Sets the XML node that causes the error.">Establece el nodo XML que produce el error.</summary>
      <param name="sourceObject" vsli:raw="The source object.">Objeto de origen.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary vsli:raw="Gets the XML node that caused this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">Obtiene el nodo XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <returns vsli:raw="The XML node that caused this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">Nodo XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary vsli:raw="Specifies schema validation options used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; classes.">Especifica las opciones de validación del esquema utilizadas por las clases <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> y <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary vsli:raw="Allow xml:* attributes even if they are not defined in the schema. The attributes will be validated based on their data type.">Permitir atributos xml:* aunque no estén definidos en el esquema. Los atributos se validarán según su tipo de datos.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary vsli:raw="Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.">No procese restricciones de identidad, esquemas en línea ni sugerencias de ubicación de esquemas, y no cree informes de advertencia de validación de esquema.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary vsli:raw="Process identity constraints (&lt;c&gt;xs:ID&lt;/c&gt;, &lt;c&gt;xs:IDREF&lt;/c&gt;, &lt;c&gt;xs:key&lt;/c&gt;, &lt;c&gt;xs:keyref&lt;/c&gt;, &lt;c&gt;xs:unique&lt;/c&gt;) encountered during validation.">Procesa las restricciones de identidad (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) detectadas durante la validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary vsli:raw="Process inline schemas encountered during validation.">Procese los esquemas en línea que encuentre durante la validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary vsli:raw="Process schema location hints (&lt;c&gt;xsi:schemaLocation&lt;/c&gt;, &lt;c&gt;xsi:noNamespaceSchemaLocation&lt;/c&gt;) encountered during validation.">Procesa las sugerencias de ubicación de esquemas (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) detectadas durante la validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary vsli:raw="Report schema validation warnings encountered during validation.">Cree informes de las advertencias de validación de esquemas que encuentre durante la validación.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary vsli:raw="Represents an XML Schema Definition Language (XSD) Schema validation engine. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class cannot be inherited.">Representa un motor de validación de esquema del lenguaje de definición de esquemas XML (XSD). La clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> no se puede heredar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <param name="nameTable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object containing element and attribute names as atomized strings.">Los objetos <see cref="T:System.Xml.XmlNameTable" /> contienen nombres de atributos y elementos en forma de cadenas subdivididas.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the XML Schema Definition Language (XSD) schemas used for validation.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas del lenguaje de definición de esquemas XML (XSD) utilizado para la validación.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used for resolving namespaces encountered during validation.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los espacios de nombres que se encuentran durante la validación.</param>
      <param name="validationFlags" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationFlags&quot; /&gt; value specifying schema validation options.">Valor <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> que especifica las opciones de validación de esquemas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">Uno o varios parámetros especificados son <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An error occurred while compiling schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; parameter.">Se ha producido un error durante la compilación de los esquemas en el parámetro <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.">Agrega un esquema del lenguaje de definición de esquemas XML (XSD) al conjunto de esquemas utilizado para la validación.</summary>
      <param name="schema" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to add to the set of schemas used for validation.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar al conjunto de esquemas utilizado para la validación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter specified is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> especificado es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The target namespace of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter matches that of any element or attribute already encountered by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">El espacio de nombres de destino del parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> coincide con el de cualquier elemento o atributo que haya encontrado el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter is invalid.">El parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> no es válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary vsli:raw="Ends validation and checks identity constraints for the entire XML document.">Finaliza la validación y comprueba las restricciones de identidad de todo el documento XML.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="An identity constraint error was found in the XML document.">Se ha encontrado un error de restricción de identidad en el documento XML.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary vsli:raw="Returns the expected attributes for the current element context.">Devuelve los atributos esperados para el contexto del elemento actual.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects or an empty array if there are no expected attributes.">Matriz de los objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> o matriz vacía si no hay ningún atributo esperado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary vsli:raw="Returns the expected particles in the current element context.">Devuelve las partículas esperadas en el contexto del elemento actual.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaParticle&quot; /&gt; objects or an empty array if there are no expected particles.">Matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> o matriz vacía si no hay ninguna partícula esperada.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary vsli:raw="Validates identity constraints on the default attributes and populates the &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; specified with &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects for any attributes with default values that have not been previously validated using the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method in the element context.">Valida restricciones de identidad en los atributos predeterminados y rellena la lista <see cref="T:System.Collections.ArrayList" /> especificada con objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> de todos los atributos con valores predeterminados que no se hayan validado previamente usando el método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en el contexto del elemento.</summary>
      <param name="defaultAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; to populate with &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects for any attributes not yet encountered during validation in the element context.">
        <see cref="T:System.Collections.ArrayList" /> que se va a rellenar con los objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> de los atributos que no se hayan encontrado durante la validación en el contexto del elemento.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary vsli:raw="Initializes the state of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">Inicializa el estado del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.Initialize&quot; /&gt; method is valid immediately after the construction of an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object or after a call to &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.EndValidation&quot; /&gt; only.">La llamada al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> es válida si se realiza inmediatamente después de la creación de un objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> o después de llamar sólo a <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Initializes the state of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object using the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; specified for partial validation.">Inicializa el estado del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> utilizando el objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado para la validación parcial.</summary>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object used to initialize the validation context of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object for partial validation.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> o <see cref="T:System.Xml.Schema.XmlSchemaType" /> utilizado para inicializar el contexto de validación del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para realizar una validación parcial.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.Initialize&quot; /&gt; method is valid immediately after the construction of an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object or after a call to &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.EndValidation&quot; /&gt; only.">La llamada al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> es válida si se realiza inmediatamente después de la creación de un objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> o después de llamar sólo a <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter is not an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> no es un objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ni <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> no puede ser <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary vsli:raw="Gets or sets the line number information for the XML node being validated.">Obtiene o establece la información del número de línea del nodo XML que se está validando.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlLineInfo&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.IXmlLineInfo" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Skips validation of the current element content and prepares the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object to validate content in the parent element's context.">Omite la validación del contenido del elemento actual y prepara el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validar contenido en el contexto del elemento primario.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set if the current element content is successfully skipped. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si el contenido del elemento actual se omite correctamente. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">No se llamó al método <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary vsli:raw="Gets or sets the source URI for the XML node being validated.">Obtiene o establece el URI de origen del nodo XML que se está validando.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; object representing the source URI for the XML node being validated; the default is &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Uri" /> que representa el URI de origen del nodo XML que se está validando; el valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the attribute name, namespace URI, and value in the current element context.">Valida el nombre del atributo, el espacio de nombres del URI y el valor en el contexto del elemento actual.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to validate.">Nombre local del atributo que se va a validar.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute to validate.">Espacio de nombres del URI del atributo que se va a validar.</param>
      <param name="attributeValue" vsli:raw="The value of the attribute to validate.">Valor del atributo que se va a validar.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the attribute. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del atributo se realiza correctamente. Este parámetro puede ser <see langword="null" />.</param>
      <returns vsli:raw="The validated attribute's value.">Valor del atributo validado.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The attribute is not valid in the current element context.">El atributo no es válido en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">Uno o varios parámetros especificados son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the attribute name, namespace URI, and value in the current element context.">Valida el nombre del atributo, el espacio de nombres del URI y el valor en el contexto del elemento actual.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to validate.">Nombre local del atributo que se va a validar.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute to validate.">Espacio de nombres del URI del atributo que se va a validar.</param>
      <param name="attributeValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> que se usa para pasar el valor del atributo como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the attribute. This parameter and can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del atributo se realiza correctamente. Este parámetro puede ser <see langword="null" />.</param>
      <returns vsli:raw="The validated attribute's value.">Valor del atributo validado.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The attribute is not valid in the current element context.">El atributo no es válido en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">Uno o varios parámetros especificados son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the element in the current context.">Valida el elemento en el contexto actual.</summary>
      <param name="localName" vsli:raw="The local name of the element to validate.">Nombre local del elemento que se va a validar.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element to validate.">URI del espacio de nombres del elemento que se va a validar.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element's name. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del nombre del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's name is not valid in the current context.">El nombre del elemento no es válido en el contexto actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Validates the element in the current context with the &lt;c&gt;xsi:Type&lt;/c&gt;, &lt;c&gt;xsi:Nil&lt;/c&gt;, &lt;c&gt;xsi:SchemaLocation&lt;/c&gt;, and &lt;c&gt;xsi:NoNamespaceSchemaLocation&lt;/c&gt; attribute values specified.">Valida el elemento en el contexto actual con los valores de atributo <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> y <c>xsi:NoNamespaceSchemaLocation</c> especificados.</summary>
      <param name="localName" vsli:raw="The local name of the element to validate.">Nombre local del elemento que se va a validar.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element to validate.">URI del espacio de nombres del elemento que se va a validar.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element's name. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del nombre del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="xsiType" vsli:raw="The &lt;c&gt;xsi:Type&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Valor del atributo <c>xsi:Type</c> del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="xsiNil" vsli:raw="The &lt;c&gt;xsi:Nil&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Valor del atributo <c>xsi:Nil</c> del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="xsiSchemaLocation" vsli:raw="The &lt;c&gt;xsi:SchemaLocation&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Valor del atributo <c>xsi:SchemaLocation</c> del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="xsiNoNamespaceSchemaLocation" vsli:raw="The &lt;c&gt;xsi:NoNamespaceSchemaLocation&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Valor del atributo <c>xsi:NoNamespaceSchemaLocation</c> del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's name is not valid in the current context.">El nombre del elemento no es válido en el contexto actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.">Comprueba si el contenido de texto del elemento es válido según su tipo de datos para los elementos con contenido simple y si el contenido del elemento actual está completo para los elementos con contenido complejo.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del elemento se realiza correctamente. Este parámetro puede ser <see langword="null" />.</param>
      <returns vsli:raw="The parsed, typed text value of the element if the element has simple content.">Valor de texto con tipo analizado del elemento si el contenido de éste es simple</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's content is not valid.">El contenido del elemento no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method is called after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary vsli:raw="Verifies if the text content of the element specified is valid according to its data type.">Comprueba si el contenido del texto del elemento especificado es válido según su tipo de datos.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the text content of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del contenido del texto del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="typedValue" vsli:raw="The typed text content of the element.">Contenido del texto con tipo del elemento.</param>
      <returns vsli:raw="The parsed, typed simple content of the element.">Contenido del texto con tipo analizado del elemento.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's text content is not valid.">El contenido del texto del elemento no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method was not called in the correct sequence (for example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method is called after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;), calls to the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method have been previously made, or the element has complex content.">No se ha llamado al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> utilizando la secuencia correcta (por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), se han realizado llamadas al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> anteriormente o el contenido del elemento es complejo.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The typed text content parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del contenido del texto con tipo no puede ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Verifies whether all the required attributes in the element context are present and prepares the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object to validate the child content of the element.">Comprueba si todos los atributos requeridos del contexto del elemento están presentes y prepara el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validar el contenido secundario del elemento.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful verification that all the required attributes in the element context are present. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al comprobar satisfactoriamente que están presentes todos los atributos necesarios en el contexto del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="One or more of the required attributes in the current element context were not found.">No se han encontrado uno o varios los atributos necesarios en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">No se llamó al método <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">Uno o varios parámetros especificados son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary vsli:raw="Validates whether the text &lt;see langword=&quot;string&quot; /&gt; specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.">Valida si la cadena <see langword="string" /> de texto especificada se permite en el contexto del elemento actual y acumula el texto para la validación si el contenido del elemento actual es simple.</summary>
      <param name="elementValue" vsli:raw="A text &lt;see langword=&quot;string&quot; /&gt; to validate in the current element context.">
        <see langword="string" /> de texto que se va a validar en el contexto del elemento actual.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; specified is not allowed in the current element context.">La cadena <see langword="string" /> de texto especificada no se permite en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">El parámetro de la cadena <see langword="string" /> de texto no puede ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary vsli:raw="Validates whether the text returned by the &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt; object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.">Valida si el texto que devuelve el objeto <see cref="T:System.Xml.Schema.XmlValueGetter" /> especificado se permite en el contexto del elemento actual y acumula el texto para la validación si el contenido del elemento actual es simple.</summary>
      <param name="elementValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> que se usa para pasar el valor de texto como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; specified is not allowed in the current element context.">La cadena <see langword="string" /> de texto especificada no se permite en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">El parámetro de la cadena <see langword="string" /> de texto no puede ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary vsli:raw="Validates whether the white space in the &lt;see langword=&quot;string&quot; /&gt; specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.">Valida si se permite el espacio en blanco de la cadena <see langword="string" /> especificada en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.</summary>
      <param name="elementValue" vsli:raw="A white space &lt;see langword=&quot;string&quot; /&gt; to validate in the current element context.">
        <see langword="string" /> de espacio en blanco que se va a validar en el contexto del elemento actual.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="White space is not allowed in the current element context.">No se permite el espacio en blanco en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary vsli:raw="Validates whether the white space returned by the &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt; object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.">Valida si se permite el espacio en blanco que devuelve el objeto <see cref="T:System.Xml.Schema.XmlValueGetter" /> especificado en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.</summary>
      <param name="elementValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> que se usa para pasar el valor de espacio en blanco como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="White space is not allowed in the current element context.">No se permite el espacio en blanco en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that receives schema validation warnings and errors encountered during schema validation.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe advertencias y errores detectados durante la validación del esquema.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary vsli:raw="Gets or sets the object sent as the sender object of a validation event.">Obtiene o establece el objeto enviado como objeto de remitente de un evento de validación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;; the default is this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">
        <see cref="T:System.Object" />; el valor predeterminado es el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object used to resolve &lt;c&gt;xs:import&lt;/c&gt; and &lt;c&gt;xs:include&lt;/c&gt; elements as well as &lt;c&gt;xsi:schemaLocation&lt;/c&gt; and &lt;c&gt;xsi:noNamespaceSchemaLocation&lt;/c&gt; attributes.">Establece el objeto <see cref="T:System.Xml.XmlResolver" /> usado para resolver los elementos <c>xs:import</c> y <c>xs:include</c>, así como los atributos <c>xsi:schemaLocation</c> y <c>xsi:noNamespaceSchemaLocation</c>.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object; the default is an &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlResolver" />; el valor predeterminado es un objeto <see cref="T:System.Xml.XmlUrlResolver" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary vsli:raw="Represents the validity of an XML item validated by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class.">Representa la validez de un elemento XML validado por la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary vsli:raw="The XML item is invalid.">El elemento XML no es válido.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary vsli:raw="The validity of the XML item is not known.">Se desconoce la validez del elemento XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary vsli:raw="The XML item is valid.">El elemento XML es válido.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;whiteSpace&quot; /&gt; facet.">Representa la faceta <see langword="whiteSpace" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;selector&quot; /&gt; element.">Representa el elemento <see langword="selector" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaXPath&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaXPath" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary vsli:raw="Gets or sets the attribute for the XPath expression.">Obtiene o establece el atributo de la expresión de XPath.</summary>
      <returns vsli:raw="The string attribute value for the XPath expression.">Valor del atributo de tipo cadena de la expresión XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary vsli:raw="Represents the severity of the validation event.">Representa la gravedad del evento de validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary vsli:raw="Indicates a validation error occurred when validating the instance document. This applies to document type definitions (DTDs) and XML Schema definition language (XSD) schemas. The World Wide Web Consortium (W3C) validity constraints are considered errors. If no validation event handler has been created, errors throw an exception.">Indica que se ha producido un error de validación al validar el documento de instancia. Esto es válido para las definiciones de tipo de documento (DTD) y los esquemas del Lenguaje de definición de esquemas XML (XSD, Schema Definition Language). Las restricciones de validación del Consorcio W3C se consideran errores. Si no se ha creado ningún controlador de eventos de validación, los errores producen una excepción.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary vsli:raw="Indicates that a validation event occurred that is not an error. A warning is typically issued when there is no DTD, or XML Schema to validate a particular element or attribute against. Unlike errors, warnings do not throw an exception if there is no validation event handler.">Indica que se ha producido un evento de validación que no es un error. Normalmente se emite una advertencia cuando no existe una DTD o un esquema XML con respecto a los cuales validar un elemento o atributo determinado. A diferencia de los errores, las advertencias no producen una excepción si no hay un controlador de eventos de validación.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary vsli:raw="Represents the W3C XML Schema Definition Language (XSD) schema types.">Representa los tipos de esquema del Lenguaje de definición de esquemas XML (XSD) del consorcio W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary vsli:raw="Any atomic value of a union.">Cualquier valor atómico de una unión.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:anyURI&quot; /&gt; type.">Tipo <see langword="xs:anyURI" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:base64Binary&quot; /&gt; type.">Tipo <see langword="xs:base64Binary" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:boolean&quot; /&gt; type.">Tipo <see langword="xs:boolean" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:byte&quot; /&gt; type.">Tipo <see langword="xs:byte" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:date&quot; /&gt; type.">Tipo <see langword="xs:date" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:dateTime&quot; /&gt; type.">Tipo <see langword="xs:dateTime" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:decimal&quot; /&gt; type.">Tipo <see langword="xs:decimal" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:double&quot; /&gt; type.">Tipo <see langword="xs:double" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:Duration&quot; /&gt; type.">Tipo <see langword="xs:Duration" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:ENTITY&quot; /&gt; type.">Tipo <see langword="xs:ENTITY" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:float&quot; /&gt; type.">Tipo <see langword="xs:float" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gDay&quot; /&gt; type.">Tipo <see langword="xs:gDay" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gMonth&quot; /&gt; type.">Tipo <see langword="xs:gMonth" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gMonthDay&quot; /&gt; type.">Tipo <see langword="xs:gMonthDay" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gYear&quot; /&gt; type.">Tipo <see langword="xs:gYear" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gYearMonth&quot; /&gt; type.">Tipo <see langword="xs:gYearMonth" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:hexBinary&quot; /&gt; type.">Tipo <see langword="xs:hexBinary" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:ID&quot; /&gt; type.">Tipo <see langword="xs:ID" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:IDREF&quot; /&gt; type.">Tipo <see langword="xs:IDREF" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:int&quot; /&gt; type.">Tipo <see langword="xs:int" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:integer&quot; /&gt; type.">Tipo <see langword="xs:integer" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary vsli:raw="An item such as a node or atomic value.">Un elemento como un nodo o un valor atómico.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:language&quot; /&gt; type.">Tipo <see langword="xs:language" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:long&quot; /&gt; type.">Tipo <see langword="xs:long" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:Name&quot; /&gt; type.">Tipo <see langword="xs:Name" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NCName&quot; /&gt; type.">Tipo <see langword="xs:NCName" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:negativeInteger&quot; /&gt; type.">Tipo <see langword="xs:negativeInteger" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NMTOKEN&quot; /&gt; type.">Tipo <see langword="xs:NMTOKEN" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary vsli:raw="No type information.">Ninguna información de tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:nonNegativeInteger&quot; /&gt; type.">Tipo <see langword="xs:nonNegativeInteger" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:nonPositiveInteger&quot; /&gt; type.">Tipo <see langword="xs:nonPositiveInteger" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:normalizedString&quot; /&gt; type.">Tipo <see langword="xs:normalizedString" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NOTATION&quot; /&gt; type.">Tipo <see langword="xs:NOTATION" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:positiveInteger&quot; /&gt; type.">Tipo <see langword="xs:positiveInteger" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:QName&quot; /&gt; type.">Tipo <see langword="xs:QName" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:short&quot; /&gt; type.">Tipo <see langword="xs:short" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:string&quot; /&gt; type.">Tipo <see langword="xs:string" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:time&quot; /&gt; type.">Tipo <see langword="xs:time" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:token&quot; /&gt; type.">Tipo <see langword="xs:token" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedByte&quot; /&gt; type.">Tipo <see langword="xs:unsignedByte" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedInt&quot; /&gt; type.">Tipo <see langword="xs:unsignedInt" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedLong&quot; /&gt; type.">Tipo <see langword="xs:unsignedLong" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedShort&quot; /&gt; type.">Tipo <see langword="xs:unsignedShort" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary vsli:raw="An untyped atomic value.">Valor atómico sin tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary vsli:raw="A &lt;see langword=&quot;delegate&quot; /&gt; used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class to pass attribute, text, and white space values as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute, text, or white space.">
        <see langword="delegate" /> que utiliza la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para pasar los valores de atributo, texto, y espacio en blanco en forma de tipo de Common Language Runtime (CLR) compatible con el tipo del atributo, el texto o el espacio en blanco del lenguaje de definición de esquemas XML (XSD).</summary>
      <returns vsli:raw="An object containing the attribute, text, or white space value. The object is a CLR type that corresponds to the XSD type of the attribute, text, or white space value.">Un objeto que contiene el valor de atributo, texto o espacio en blanco. El objeto es un tipo CLR que se corresponde con el tipo XSD del valor de atributo, texto o espacio en blanco.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary vsli:raw="Provides custom formatting for XML serialization and deserialization.">Proporciona formato personalizado para la serialización y deserialización XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary vsli:raw="This method is reserved and should not be used. When implementing the &lt;see langword=&quot;IXmlSerializable&quot; /&gt; interface, you should return &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaProviderAttribute&quot; /&gt; to the class.">Este método está reservado y no debe utilizarse. Al implementar la interfaz <see langword="IXmlSerializable" />, debe devolver <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) desde este método y, en su lugar, si se requiere especificar un esquema personalizado, aplique <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> a la clase.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto producido por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">Genera un objeto a partir de su representación XML.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; stream from which the object is deserialized.">Secuencia de <see cref="T:System.Xml.XmlReader" /> desde la que se deserializa el objeto.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">Convierte un objeto en su representación XML.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">Secuencia <see cref="T:System.Xml.XmlWriter" /> a la que se serializa el objeto.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary vsli:raw="Specifies that the member (a field that returns an array of &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects) can contain any XML attributes.">Especifica que el miembro (un campo que devuelve una matriz de objetos <see cref="T:System.Xml.XmlAttribute" />) puede contener cualquier atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary vsli:raw="Constructs a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; class.">Construye una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary vsli:raw="Specifies that the member (a field that returns an array of &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.">Especifica que el miembro (un campo que devuelve una matriz de objetos <see cref="T:System.Xml.XmlElement" /> o <see cref="T:System.Xml.XmlNode" />) contiene objetos que representan los elementos XLM que no tienen un miembro correspondiente en el objeto que se está serializando o deserializando.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.</summary>
      <param name="name" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document and its XML namespace.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML y su espacio de nombres XML.</summary>
      <param name="name" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="ns" vsli:raw="The XML namespace of the XML element.">Espacio de nombres XML del elemento XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary vsli:raw="Gets or sets the XML element name.">Obtiene o establece el nombre del elemento XML.</summary>
      <returns vsli:raw="The name of the XML element.">Nombre del elemento XML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The element name of an array member does not match the element name specified by the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAnyElementAttribute.Name&quot; /&gt; property.">El nombre de elemento de un miembro de la matriz no coincide con el nombre de elemento especificado por la propiedad <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace generated in the XML document.">Obtiene o establece el espacio de nombres XML generado en el documento XML.</summary>
      <returns vsli:raw="An XML namespace.">Espacio de nombres XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</summary>
      <returns vsli:raw="The order of the code generation.">Orden de la generación de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an XML attribute.">Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el miembro de la clase como un atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class and specifies the name of the generated XML attribute.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> y especifica el nombre del atributo XML generado.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Nombre del atributo XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute that is generated.">Nombre del atributo XML que se genera.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; used to store the attribute.">
        <see cref="T:System.Type" /> utilizado para almacenar el atributo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; used to store the attribute.">
        <see cref="T:System.Type" /> utilizado para almacenar el atributo.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute.">Obtiene o establece el nombre del atributo XML.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member name.">Nombre del atributo XML. El valor predeterminado es el nombre del miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XSD data type of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtiene o establece el tipo de datos XSD del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="An XSD (XML Schema Document) data type.">Un tipo de datos XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML attribute name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified.">Obtiene o establece un valor que indica si está calificado el nombre del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlForm.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. De manera predeterminada, es <see langword="XmlForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">Obtiene o establece el espacio de nombres XML del atributo XML.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">Espacio de nombres XML del atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary vsli:raw="Gets or sets the complex type of the XML attribute.">Obtiene o establece el tipo complejo del atributo XML.</summary>
      <returns vsli:raw="The type of the XML attribute.">Tipo del atributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary vsli:raw="Indicates that a public field or property represents an XML element when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes or deserializes the object that contains it.">Indica que un campo público o una propiedad pública representa un elemento XML, cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o deserializa el objeto que lo contiene.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class and specifies the name of the XML element.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Nombre de elemento XML del miembro serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; and specifies the name of the XML element and a derived type for the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; is applied. This member type is used when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the object that contains it.">Inicializa una nueva instancia de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML así como un tipo derivado del miembro al que se ha aplicado <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. Este tipo de miembro se utiliza cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el objeto que lo contiene.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Nombre de elemento XML del miembro serializado.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of an object derived from the member's type.">
        <see cref="T:System.Type" /> de un objeto derivado del tipo de miembro.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class and specifies a type for the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; is applied. This type is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when serializing or deserializing object that contains it.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica un tipo de miembro al que <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> es aplicado. Este tipo es utilizado por <see cref="T:System.Xml.Serialization.XmlSerializer" /> al serializar o deserializar el objeto que lo contiene.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of an object derived from the member's type.">
        <see cref="T:System.Type" /> de un objeto derivado del tipo de miembro.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtiene o establece el tipo de datos de la definición de esquemas XML (XSD) del elemento XM1 generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="An XML Schema data type.">Un tipo de datos de esquema XML.</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the.NET data type.">El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Obtiene o establece el nombre del elemento XML generado.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the element is qualified.">Obtiene o establece un valor que indica si el elemento está calificado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that is set to &lt;see langword=&quot;null&quot; /&gt; as an empty tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en <see langword="null" /> como una etiqueta vacía con el atributo <see langword="xsi:nil" /> establecido en <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace assigned to the XML element that results when the class is serialized.">Obtiene o establece el espacio de nombres asignado al elemento XML como resultado de la serialización de la clase.</summary>
      <returns vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</summary>
      <returns vsli:raw="The order of the code generation.">Orden de la generación de código.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary vsli:raw="Gets or sets the object type used to represent the XML element.">Obtiene o establece el tipo de objeto utilizado para representar el elemento XML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member.">
        <see cref="T:System.Type" /> del miembro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Controla el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; class, and specifies the XML value that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates or recognizes (when it serializes or deserializes the enumeration, respectively).">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> y especifica el valor XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera o reconoce al serializar o deserializar la enumeración, respectivamente.</summary>
      <param name="name" vsli:raw="The overriding name of the enumeration member.">Nombre de reemplazo del miembro de enumeración.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML-document instance when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">Obtiene o establece el valor generado en una instancia de documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración o el valor reconocido cuando deserializa el miembro de enumeración.</summary>
      <returns vsli:raw="The value generated in an XML-document instance when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it is deserializes the enumeration member.">Valor generado en una instancia de documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa la enumeración o valor reconocido cuando deserializa el miembro de enumeración.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">Instruye al método <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que no serialice el valor de campo público o propiedad pública de lectura/escritura.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIgnoreAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary vsli:raw="Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.">Especifica que la propiedad, parámetro, valor devuelto o miembro de clase de destino contiene prefijos asociados a espacios de nombres que se utilizan en un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary vsli:raw="Controls XML serialization of the attribute target as an XML root element.">Controla la serialización XML del destino de atributo como elemento raíz XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; class and specifies the name of the XML root element.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> y especifica el nombre del elemento raíz XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML root element.">Nombre del elemento raíz XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary vsli:raw="Gets or sets the XSD data type of the XML root element.">Obtiene o establece el tipo de datos XSD del elemento raíz XML.</summary>
      <returns vsli:raw="An XSD (XML Schema Document) data type.">Un tipo de datos XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the XML element that is generated and recognized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class's &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)&quot; /&gt; methods, respectively.">Obtiene o establece el nombre del elemento XML que generan y reconocen los métodos <see cref="T:System.Xml.Serialization.XmlSerializer" /> y <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />, respectivamente, de la clase <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />.</summary>
      <returns vsli:raw="The name of the XML root element that is generated and recognized in an XML-document instance. The default is the name of the serialized class.">Nombre del elemento raíz XML generado y reconocido en una instancia de documento XML. El valor predeterminado es el nombre de la clase serializada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that is set to &lt;see langword=&quot;null&quot; /&gt; into the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en <see langword="null" /> en el atributo <see langword="xsi:nil" /> establecido,a su vez, en <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML root element.">Obtiene o establece el espacio de nombres del elemento raíz XML.</summary>
      <returns vsli:raw="The namespace for the XML element.">Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary vsli:raw="When applied to a type, stores the name of a static method of the type that returns an XML schema and a &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; (or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for anonymous types) that controls the serialization of the type.">Cuando se aplica a un tipo, almacena el nombre de un método estático del tipo que devuelve un esquema XML y un <see cref="T:System.Xml.XmlQualifiedName" /> (o <see cref="T:System.Xml.Schema.XmlSchemaType" /> para los tipos anónimos) que controla la serialización del tipo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaProviderAttribute&quot; /&gt; class, taking the name of the static method that supplies the type's XML schema.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />, tomando el nombre del método estático que proporciona el esquema XML del tipo.</summary>
      <param name="methodName" vsli:raw="The name of the static method that must be implemented.">El nombre del método estático que se debe implementar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary vsli:raw="Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an &lt;see langword=&quot;xs:any&quot; /&gt; element.">Obtiene o establece un valor que determina si la clase de destino es un carácter comodín o que el esquema para la clase contiene sólo un elemento <see langword="xs:any" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the class is a wildcard, or if the schema contains only the &lt;see langword=&quot;xs:any&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si la clase es un comodín, o si el esquema contiene sólo el elemento <see langword="xs:any" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary vsli:raw="Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.">Obtiene el nombre del método estático que proporciona el esquema XML del tipo y el nombre de su tipo de datos de esquemas XML.</summary>
      <returns vsli:raw="The name of the method that is invoked by the XML infrastructure to return an XML schema.">Nombre del método que invoca la infraestructura de XML para devolver un esquema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary vsli:raw="Contains the XML namespaces and prefixes that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; uses to generate qualified names in an XML-document instance.">Contiene los espacios de nombres XML y prefijos que <see cref="T:System.Xml.Serialization.XmlSerializer" /> utiliza para generar nombres calificados en una instancia de documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class, using the specified instance of &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; containing the collection of prefix and namespace pairs.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, utilizando la instancia especificada de <see langword="XmlSerializerNamespaces" /> que contiene la colección de pares prefijo y espacio de nombres.</summary>
      <param name="namespaces" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; containing the namespace and prefix pairs.">Una instancia de <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los pares de espacio de nombres y prefijo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="namespaces" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary vsli:raw="Adds a prefix and namespace pair to an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object.">Agrega un par de prefijo y espacio de nombres a un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="prefix" vsli:raw="The prefix associated with an XML namespace.">Prefijo asociado a un espacio de nombres XML.</param>
      <param name="ns" vsli:raw="An XML namespace.">Espacio de nombres XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary vsli:raw="Gets the number of prefix and namespace pairs in the collection.">Obtiene el número de pares de prefijo y espacio de nombres de la colección.</summary>
      <returns vsli:raw="The number of prefix and namespace pairs in the collection.">Número de pares de prefijo y espacio de nombres de la colección.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary vsli:raw="Gets the array of prefix and namespace pairs in an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object.">Obtiene la matriz de pares de prefijo y espacio de nombres en un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects that are used as qualified names in an XML document.">Matriz de objetos <see cref="T:System.Xml.XmlQualifiedName" /> que se utilizan como nombres calificados en un documento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary vsli:raw="Indicates to the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; that the member must be treated as XML text when the class that contains it is serialized or deserialized.">Indica a <see cref="T:System.Xml.Serialization.XmlSerializer" /> que el miembro debe tratarse como texto XML cuando se serializa o se deserializa la clase contenedora.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member to be serialized.">
        <see cref="T:System.Type" /> del miembro que se va a serializar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the text generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del texto generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="An XML Schema (XSD) data type.">Un tipo de datos de esquema XML (XSD).</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.">El tipo de datos de esquemas XML especificado no es válido para la propiedad y no se puede convertir al tipo de miembro.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the member.">Obtiene o establece el tipo del miembro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member.">
        <see cref="T:System.Type" /> del miembro.</returns>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary vsli:raw="Specifies the type of validation to perform.">Especifica el tipo de validación que se va a realizar.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary vsli:raw="Validates if DTD or schema information is found. &#xA;&#xA;Starting with .NET Framework 2.0, this field is obsolete. It applies only to the obsolete &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class.">Valida si se encuentra información de esquema o de DTD. 
A partir de .NET Framework 2.0, este campo está obsoleto. Se aplica solo a la clase <see cref="T:System.Xml.XmlValidatingReader" /> obsoleta.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary vsli:raw="Validates according to the DTD.">Valida según el archivo DTD.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary vsli:raw="No validation is performed, and no validation errors are thrown. This setting creates an XML 1.0 compliant non-validating parser.&#xA;        &#xA;Calls to &lt;see cref=&quot;M:System.Xml.XmlReader.ResolveEntity&quot; /&gt; report default attributes and resolve general entities. The DOCTYPE is not used for validation purposes.">No se realiza ninguna validación ni se generan errores de validación. Esta configuración crea un analizador que no valida y que satisface XML 1.0.
Las llamadas a <see cref="M:System.Xml.XmlReader.ResolveEntity" /> informan de los atributos predeterminados y resuelven entidades generales. El DOCTYPE no se utiliza para la validación.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary vsli:raw="Validate according to XML Schema definition language (XSD) schemas, including inline XML Schemas. XML Schemas are associated with namespace URIs either by using the &lt;see langword=&quot;schemaLocation&quot; /&gt; attribute or the provided &lt;see langword=&quot;Schemas&quot; /&gt; property.">Valide según los esquemas del lenguaje de definición de esquemas XML (XSD), incluyendo los esquemas XML en línea. Los esquemas XML se asocian a los indicadores URI de espacio de nombres mediante el atributo <see langword="schemaLocation" /> o la propiedad <see langword="Schemas" /> proporcionada.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary vsli:raw="Validate according to XML-Data Reduced (XDR) schemas, including inline XDR schemas. XDR schemas are recognized using the &lt;see langword=&quot;x-schema&quot; /&gt; namespace prefix or the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.Schemas&quot; /&gt; property.&#xA;        &#xA;Starting with .NET Framework 2.0, this field is obsolete. It applies only to the obsolete &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class.">Valide según los esquemas reducidos de datos XML (XDR), incluyendo los esquemas XDR en línea. Los esquemas XDR se reconocen mediante el prefijo de espacio de nombres <see langword="x-schema" /> o la propiedad <see cref="P:System.Xml.XmlValidatingReader.Schemas" />.
A partir de .NET Framework 2.0, este campo está obsoleto. Se aplica solo a la clase <see cref="T:System.Xml.XmlValidatingReader" /> obsoleta.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary vsli:raw="Specifies how white space is handled.">Especifica cómo se controla el espacio en blanco.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary vsli:raw="Return &lt;see langword=&quot;Whitespace&quot; /&gt; and &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes. This is the default.">Se devuelven nodos <see langword="Whitespace" /> y <see langword="SignificantWhitespace" />. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary vsli:raw="Return no &lt;see langword=&quot;Whitespace&quot; /&gt; and no &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes.">No se devuelven nodos <see langword="Whitespace" /> ni <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary vsli:raw="Return &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes only.">Sólo se devuelven nodos <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary vsli:raw="Specifies the state of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Especifica el estado de <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary vsli:raw="Indicates that an attribute value is being written.">Indica que se escribe un valor de atributo.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method has been called.">Indica que se ha llamado al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary vsli:raw="Indicates that element content is being written.">Indica que se está escribiendo contenido del elemento.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary vsli:raw="Indicates that an element start tag is being written.">Indica que se está escribiendo una etiqueta de apertura de elemento.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary vsli:raw="An exception has been thrown, which has left the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; in an invalid state. You can call the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method to put the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; in the &lt;see cref=&quot;F:System.Xml.WriteState.Closed&quot; /&gt; state. Any other &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method calls results in an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt;.&#xA;&#xA;This field was added in .NET Framework 2.0.">Se ha iniciado una excepción que ha dejado <see cref="T:System.Xml.XmlWriter" /> en un estado no válido. Puede llamar al método <see cref="M:System.Xml.XmlWriter.Close" /> para poner <see cref="T:System.Xml.XmlWriter" /> en el estado <see cref="F:System.Xml.WriteState.Closed" />. Cualquier otra llamada al método <see cref="T:System.Xml.XmlWriter" /> hará que se inicie una excepción <see cref="T:System.InvalidOperationException" />.
Este campo se agregó en .NET Framework 2.0.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary vsli:raw="Indicates that the prolog is being written.">Indica que se escribe el prólogo.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary vsli:raw="Indicates that a Write method has not yet been called.">Indica que todavía no se ha llamado a un método Write.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary vsli:raw="Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.">Representa un atributo. Los valores válidos y predeterminados del atributo se definen en una definición de tipo de documento (DTD) o en un esquema.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace uniform resource identifier (URI).">Identificador de recursos uniforme (URI) de este espacio de nombres.</param>
      <param name="doc" vsli:raw="The parent XML document.">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the end of the list of child nodes, of this node.">Agrega el nodo especificado al final de la lista de nodos secundarios de este nodo.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to add.">
        <see cref="T:System.Xml.XmlNode" /> que se va a agregar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; added.">
        <see cref="T:System.Xml.XmlNode" /> agregado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
Este nodo es de sólo lectura.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the node.">Obtiene el Identificador de recursos uniforme (URI) del nodo.</summary>
      <returns vsli:raw="The location from which the node was loaded or String.Empty if the node has no base URI. Attribute nodes have the same base URI as their owner element. If an attribute node does not have an owner element, &lt;see langword=&quot;BaseURI&quot; /&gt; returns String.Empty.">Ubicación desde la que se cargó el nodo o String.Empty si el nodo no tiene un identificador URI base. Los nodos de atributo tienen el mismo identificador URI base que el elemento al que pertenecen. Si un nodo de atributo no pertenece a ningún elemento, <see langword="BaseURI" /> devuelve String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">Es <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado y <see langword="false" /> para clonar sólo el nodo en sí.</param>
      <returns vsli:raw="The duplicate node.">Nodo duplicado.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary vsli:raw="Sets the concatenated values of the node and all its children.">Establece los valores concatenados del nodo y de todos sus nodos secundarios.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children. For attribute nodes, this property has the same functionality as the &lt;see cref=&quot;P:System.Xml.XmlAttribute.Value&quot; /&gt; property.">Valores concatenados del nodo y de todos sus nodos secundarios. Para nodos de atributo, esta propiedad tiene la misma funcionalidad que la propiedad <see cref="P:System.Xml.XmlAttribute.Value" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary vsli:raw="Sets the value of the attribute.">Establece el valor del atributo.</summary>
      <returns vsli:raw="The attribute value.">Valor del atributo.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">El código XML especificado al establecer esta propiedad no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately after the specified reference node.">Inserta el nodo especificado inmediatamente detrás del nodo de referencia igualmente especificado.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to insert.">
        <see cref="T:System.Xml.XmlNode" /> que se va a insertar.</param>
      <param name="refChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is the reference node. The &lt;paramref name=&quot;newChild&quot; /&gt; is placed after the &lt;paramref name=&quot;refChild&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> que es el nodo de referencia. <paramref name="newChild" /> se coloca detrás de <paramref name="refChild" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; inserted.">
        <see cref="T:System.Xml.XmlNode" /> insertado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
<paramref name="refChild" /> no es un nodo secundario de este nodo.  
Este nodo es de sólo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately before the specified reference node.">Inserta el nodo especificado inmediatamente antes del nodo de referencia igualmente especificado.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to insert.">
        <see cref="T:System.Xml.XmlNode" /> que se va a insertar.</param>
      <param name="refChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is the reference node. The &lt;paramref name=&quot;newChild&quot; /&gt; is placed before this node.">
        <see cref="T:System.Xml.XmlNode" /> que es el nodo de referencia. <paramref name="newChild" /> se coloca delante de este nodo.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; inserted.">
        <see cref="T:System.Xml.XmlNode" /> insertado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">El nodo actual es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
<paramref name="refChild" /> no es un nodo secundario de este nodo.  
Este nodo es de sólo lectura.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="The name of the attribute node with the prefix removed. In the following example &amp;lt;book bk:genre= 'novel'&amp;gt;, the &lt;see langword=&quot;LocalName&quot; /&gt; of the attribute is &lt;see langword=&quot;genre&quot; /&gt;.">Nombre del nodo de atributo sin prefijo. &lt;En el ejemplo siguiente, libro BK: Genre = ' novela&gt;', <see langword="LocalName" /> el del atributo es <see langword="genre" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="The qualified name of the attribute node.">Nombre completo del nodo de atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">Obtiene el identificador URI de espacio de nombres de este nodo.</summary>
      <returns vsli:raw="The namespace URI of this node. If the attribute is not explicitly given a namespace, this property returns String.Empty.">Identificador URI de espacio de nombres de este nodo. Si no se da al atributo un espacio de nombres explícitamente, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="The node type for &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes is XmlNodeType.Attribute.">El tipo de nodo de los nodos <see langword="XmlAttribute" /> es XmlNodeType.Attribute.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">Obtiene la clase <see cref="T:System.Xml.XmlDocument" /> a la que pertenece este nodo.</summary>
      <returns vsli:raw="An XML document to which this node belongs.">Un documento XML al que este nodo pertenece.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; to which the attribute belongs.">Obtiene el <see cref="T:System.Xml.XmlElement" /> al que pertenece el atributo.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; that the attribute belongs to or &lt;see langword=&quot;null&quot; /&gt; if this attribute is not part of an &lt;see langword=&quot;XmlElement&quot; /&gt;.">
        <see langword="XmlElement" /> al que pertenece el atributo o <see langword="null" /> si este atributo no forma parte de un <see langword="XmlElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary vsli:raw="Gets the parent of this node. For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property always returns &lt;see langword=&quot;null&quot; /&gt;.">Obtiene el nodo principal de este nodo. Para nodos <see langword="XmlAttribute" />, esta propiedad devuelve siempre <see langword="null" />.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property always returns &lt;see langword=&quot;null&quot; /&gt;.">Para nodos <see langword="XmlAttribute" />, esta propiedad devuelve siempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">Obtiene o establece el prefijo de espacio de nombres de este nodo.</summary>
      <returns vsli:raw="The namespace prefix of this node. If there is no prefix, this property returns String.Empty.">Prefijo de espacio de nombres de este nodo. Si no hay prefijo, esta propiedad devuelve String.Empty.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Este nodo es de sólo lectura.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The namespaceURI of this node is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; The specified prefix is &quot;xml&quot;, and the namespaceURI of this node is different from &quot;http://www.w3.org/XML/1998/namespace&quot;.  &#xA;  &#xA; This node is an attribute, the specified prefix is &quot;xmlns&quot;, and the namespaceURI of this node is different from &quot;http://www.w3.org/2000/xmlns/&quot;.  &#xA;  &#xA; This node is an attribute, and the qualifiedName of this node is &quot;xmlns&quot; [Namespaces].">El prefijo especificado contiene un carácter no válido.  
El prefijo especificado tiene un formato incorrecto.  
El identificador URI de espacio de nombres de este nodo es <see langword="null" />.  
El prefijo especificado es "xml" y el URI del espacio de nombres de este nodo es diferente de "http://www.w3.org/XML/1998/namespace".  
Este nodo es un atributo, el prefijo especificado es "xmlns" y su identificador URI de espacio de nombres no es "http://www.w3.org/2000/xmlns/".  
Este nodo es un atributo y su nombre completo es "xmlns" [espacios de nombres].</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the beginning of the list of child nodes for this node.">Agrega el nodo especificado al principio de la lista de nodos secundarios de este nodo.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to add. If it is an &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt;, the entire contents of the document fragment are moved into the child list of this node.">
        <see cref="T:System.Xml.XmlNode" /> que se va a agregar. Si es un objeto <see cref="T:System.Xml.XmlDocumentFragment" />, todo el contenido del fragmento de documento se desplaza a la lista de nodos secundarios de este nodo.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; added.">
        <see cref="T:System.Xml.XmlNode" /> agregado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
Este nodo es de sólo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary vsli:raw="Removes the specified child node.">Quita el nodo secundario especificado.</summary>
      <param name="oldChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to remove.">
        <see cref="T:System.Xml.XmlNode" /> que se va a quitar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; removed.">
        <see cref="T:System.Xml.XmlNode" /> quitado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node. Or this node is read-only.">
        <paramref name="oldChild" /> no es un nodo secundario de este nodo. O este nodo es de sólo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Replaces the child node specified with the new child node specified.">Reemplaza el nodo secundario especificado con el nuevo nodo secundario especificado.</summary>
      <param name="newChild" vsli:raw="The new child &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">El nuevo <see cref="T:System.Xml.XmlNode" /> secundario.</param>
      <param name="oldChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to replace.">Objeto <see cref="T:System.Xml.XmlNode" /> que se va a reemplazar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; replaced.">
        <see cref="T:System.Xml.XmlNode" /> reemplazado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.  &#xA;  &#xA; The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
Este nodo es de sólo lectura.  
<paramref name="oldChild" /> no es un nodo secundario de este nodo.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary vsli:raw="Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.">Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; containing the post-schema-validation-infoset of this node.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary vsli:raw="Gets a value indicating whether the attribute value was explicitly set.">Obtiene un valor que indica si el valor de atributo se estableció explícitamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute was explicitly given a value in the original instance document; otherwise, &lt;see langword=&quot;false&quot; /&gt;. A value of &lt;see langword=&quot;false&quot; /&gt; indicates that the value of the attribute came from the DTD.">Es <see langword="true" /> si a este atributo se le dio explícitamente un valor en la instancia original del documento; en caso contrario, es <see langword="false" />. El valor <see langword="false" /> indica que el valor del atributo procedía de la DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtiene o establece el valor del nodo.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property is the value of attribute.">El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo: Para nodos <see langword="XmlAttribute" />, esta propiedad es el valor de atributo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only and a set operation is called.">El nodo es de sólo lectura y se llama a una operación de conjunto.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary vsli:raw="Represents a collection of attributes that can be accessed by name or index.">Representa una colección de atributos a los que se puede obtener acceso por nombre o por índice.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute as the last node in the collection.">Inserta el atributo especificado como último nodo de la colección.</summary>
      <param name="node" vsli:raw="The attribute to insert.">Atributo que se va a insertar.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to append to the collection.">
        <see langword="XmlAttribute" /> que se va a agregar a la colección.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; was created from a document different from the one that created this collection.">Se creó <paramref name="node" /> a partir de un documento diferente que el que creó esta colección.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects from this collection into the given array.">Copia todos los objetos <see cref="T:System.Xml.XmlAttribute" /> de esta colección en la matriz dada.</summary>
      <param name="array" vsli:raw="The array that is the destination of the objects copied from this collection.">Matriz que representa el destino de los objetos copiados de esta colección.</param>
      <param name="index" vsli:raw="The index in the array where copying begins.">Índice de la matriz en que se inicia la copia.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute immediately after the specified reference attribute.">Inserta el atributo especificado inmediatamente después del atributo de referencia igualmente especificado.</summary>
      <param name="newNode" vsli:raw="The attribute to insert.">Atributo que se va a insertar.</param>
      <param name="refNode" vsli:raw="The reference attribute. &lt;paramref name=&quot;newNode&quot; /&gt; is placed after the &lt;paramref name=&quot;refNode&quot; /&gt;.">Atributo de referencia. El parámetro <paramref name="newNode" /> se coloca detrás de <paramref name="refNode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to insert into the collection.">
        <see langword="XmlAttribute" /> que se va a insertar en la colección.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newNode&quot; /&gt; was created from a document different from the one that created this collection. Or the &lt;paramref name=&quot;refNode&quot; /&gt; is not a member of this collection.">Se creó <paramref name="newNode" /> a partir de un documento diferente al que creó esta colección. O <paramref name="refNode" /> no es un miembro de esta colección.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute immediately before the specified reference attribute.">Inserta el atributo especificado inmediatamente delante del atributo de referencia especificado.</summary>
      <param name="newNode" vsli:raw="The attribute to insert.">Atributo que se va a insertar.</param>
      <param name="refNode" vsli:raw="The reference attribute. &lt;paramref name=&quot;newNode&quot; /&gt; is placed before the &lt;paramref name=&quot;refNode&quot; /&gt;.">Atributo de referencia. El parámetro <paramref name="newNode" /> se coloca delante de <paramref name="refNode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to insert into the collection.">
        <see langword="XmlAttribute" /> que se va a insertar en la colección.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newNode&quot; /&gt; was created from a document different from the one that created this collection. Or the &lt;paramref name=&quot;refNode&quot; /&gt; is not a member of this collection.">Se creó <paramref name="newNode" /> a partir de un documento diferente al que creó esta colección. O <paramref name="refNode" /> no es un miembro de esta colección.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary vsli:raw="Gets the attribute with the specified index.">Obtiene el atributo que tiene el índice especificado.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Índice del atributo.</param>
      <returns vsli:raw="The attribute at the specified index.">Atributo que se encuentra en el índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index being passed in is out of range.">El índice a pasándose está fuera del intervalo.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary vsli:raw="Gets the attribute with the specified name.">Obtiene el atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="The attribute with the specified name. If the attribute does not exist, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Atributo con el nombre especificado. Si el atributo no existe, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary vsli:raw="Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">Obtiene el atributo que tiene el nombre local e Identificador uniforme de recursos (URI) de espacio de nombres especificados.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The attribute with the specified local name and namespace URI. If the attribute does not exist, this property returns &lt;see langword=&quot;null&quot; /&gt;.">El atributo con el nombre local y el URI de espacio de nombres especificados. Si el atributo no existe, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute as the first node in the collection.">Inserta el atributo especificado como primer nodo de la colección.</summary>
      <param name="node" vsli:raw="The attribute to insert.">Atributo que se va a insertar.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; added to the collection.">
        <see langword="XmlAttribute" /> agregado a la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary vsli:raw="Removes the specified attribute from the collection.">Quita el atributo especificado de la colección.</summary>
      <param name="node" vsli:raw="The attribute to remove.">Atributo que se va a quitar.</param>
      <returns vsli:raw="The node removed or &lt;see langword=&quot;null&quot; /&gt; if it is not found in the collection.">Nodo que se ha quitado o <see langword="null" /> si no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary vsli:raw="Removes all attributes from the collection.">Quita todos los atributos de la colección.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the attribute corresponding to the specified index from the collection.">Quita de la colección el atributo correspondiente al índice especificado.</summary>
      <param name="i" vsli:raw="The index of the node to remove. The first node has index 0.">Índice del nodo que se va a quitar. El primer nodo tiene índice 0.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt; if there is no attribute at the specified index.">Devuelve <see langword="null" /> si no hay ningún atributo en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; using its &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property.">Agrega un <see cref="T:System.Xml.XmlNode" /> mediante su propiedad <see cref="P:System.Xml.XmlNode.Name" /></summary>
      <param name="node" vsli:raw="An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.">Nodo de atributo que se almacenará en la colección. Posteriormente se podrá obtener acceso al nodo utilizando el nombre del nodo en cuestión. Si ya hay un nodo con ese nombre en la colección, se reemplazará por el nuevo; en caso contrario, el nodo se agregará al final de la colección.</param>
      <returns vsli:raw="If the &lt;paramref name=&quot;node&quot; /&gt; replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.">Si <paramref name="node" /> reemplaza a un nodo existente con el mismo nombre, se devolverá el nodo antiguo; en caso contrario, se devolverá el nodo agregado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; was created from a different &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; than the one that created this collection.  &#xA;  &#xA; This &lt;see langword=&quot;XmlAttributeCollection&quot; /&gt; is read-only.">Se creó <paramref name="node" /> a partir de un <see cref="T:System.Xml.XmlDocument" /> distinto al que creó esta colección.  
Esta <see langword="XmlAttributeCollection" /> es de sólo lectura.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that is already an attribute of another &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; object. To re-use attributes in other elements, you must clone the &lt;see langword=&quot;XmlAttribute&quot; /&gt; objects you want to re-use.">
        <paramref name="node" /> es un <see cref="T:System.Xml.XmlAttribute" /> que, a su vez, es un atributo de otro objeto <see cref="T:System.Xml.XmlElement" />. Para volver a utilizar atributos en otros elementos, hay que duplicar los objetos <see langword="XmlAttribute" /> que se deseen volver a utilizar.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</summary>
      <param name="array" vsli:raw="The array that is the destination of the objects copied from this collection.">Matriz que representa el destino de los objetos copiados de esta colección.</param>
      <param name="index" vsli:raw="The index in the array where copying begins.">Índice de la matriz en que se inicia la copia.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; that contains the count of the attributes.">Un <see langword="int" /> que contiene el recuento de los atributos.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized.">
        <see langword="true" />Si la colección está sincronizada.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the root of the collection.">
        <see cref="T:System.Object" /> Que es la raíz de la colección.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary vsli:raw="Represents a CDATA section.">Representa una sección CDATA.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlCDataSection" />.</summary>
      <param name="data" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains character data.">Objeto <see cref="T:System.String" /> que contiene los datos de caracteres.</param>
      <param name="doc" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because CDATA nodes do not have children, regardless of the parameter setting, the cloned node will always include the data content.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Dado que los nodos CDATA no tienen elementos secundarios, con independencia del valor del parámetro, el nodo clonado incluirá siempre el contenido de los datos.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For CDATA nodes, the local name is &lt;see langword=&quot;#cdata-section&quot; /&gt;.">En el caso de nodos CDATA, el nombre local es <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For CDATA nodes, the name is &lt;see langword=&quot;#cdata-section&quot; /&gt;.">En el caso de nodos CDATA, el nombre es <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="The node type. For CDATA nodes, the value is XmlNodeType.CDATA.">Tipo de nodo. En el caso de nodos CDATA, el valor es XmlNodeType.CDATA.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">
        <see langword="XmlNode" /> que es el elemento principal del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado del árbol, el elemento principal es <see langword="null" />. Para todos los demás nodos, el valor devuelto depende de <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Devuelva <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary vsli:raw="Provides text manipulation methods that are used by several classes.">Proporciona métodos de manipulación de texto que son utilizados por varias clases.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlCharacterData&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlCharacterData" />.</summary>
      <param name="data" vsli:raw="String that contains character data to be added to document.">Cadena que contiene datos de caracteres que se van a agregar a un documento.</param>
      <param name="doc" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to contain character data.">
        <see cref="T:System.Xml.XmlDocument" /> que va a contener los datos de caracteres.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary vsli:raw="Appends the specified string to the end of the character data of the node.">Anexa la cadena especificada al final de los datos de caracteres del nodo.</summary>
      <param name="strData" vsli:raw="The string to insert into the existing string.">Cadena que se va a insertar en la cadena existente.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary vsli:raw="Contains the data of the node.">Contiene los datos del nodo.</summary>
      <returns vsli:raw="The data of the node.">Datos del nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary vsli:raw="Removes a range of characters from the node.">Quita un intervalo de caracteres del nodo.</summary>
      <param name="offset" vsli:raw="The position within the string to start deleting.">Posición dentro de la cadena donde se va a iniciar la eliminación.</param>
      <param name="count" vsli:raw="The number of characters to delete.">Número de caracteres que se va a eliminar.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all the children of the node.">Obtiene o establece los valores concatenados del nodo y todos su nodos secundarios.</summary>
      <returns vsli:raw="The concatenated values of the node and all the children of the node.">Valores concatenados del nodo y todos su nodos secundarios.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary vsli:raw="Inserts the specified string at the specified character offset.">Inserta la cadena especificada en el desplazamiento de caracteres especificado.</summary>
      <param name="offset" vsli:raw="The position within the string to insert the supplied string data.">Posición dentro de la cadena donde se van a insertar los datos de cadena proporcionados.</param>
      <param name="strData" vsli:raw="The string data that is to be inserted into the existing string.">Datos de cadena que se van a insertar en la cadena existente.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary vsli:raw="Gets the length of the data, in characters.">Obtiene la longitud de los datos en caracteres.</summary>
      <returns vsli:raw="The length, in characters, of the string in the &lt;see cref=&quot;P:System.Xml.XmlCharacterData.Data&quot; /&gt; property. The length may be zero; that is, CharacterData nodes can be empty.">Longitud en caracteres de la cadena de la propiedad <see cref="P:System.Xml.XmlCharacterData.Data" />. La longitud puede ser cero; es decir, los nodos CharacterData pueden estar vacíos.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Replaces the specified number of characters starting at the specified offset with the specified string.">Reemplaza el número de caracteres especificado, empezando en el desplazamiento especificado, por la cadena especificada.</summary>
      <param name="offset" vsli:raw="The position within the string to start replacing.">Posición dentro de la cadena donde se va a iniciar la sustitución.</param>
      <param name="count" vsli:raw="The number of characters to replace.">Número de caracteres que se va a reemplazar.</param>
      <param name="strData" vsli:raw="The new data that replaces the old string data.">Datos nuevos que reemplazan a los datos de cadena antiguos.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves a substring of the full string from the specified range.">Recupera una subcadena de la cadena completa en el intervalo especificado.</summary>
      <param name="offset" vsli:raw="The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data.">Posición dentro de la cadena donde se va a iniciar la recuperación. Un desplazamiento de cero indica que el punto inicial es el principio de los datos.</param>
      <param name="count" vsli:raw="The number of characters to retrieve.">Número de caracteres que se va a recuperar.</param>
      <returns vsli:raw="The substring corresponding to the specified range.">Subcadena que corresponde al intervalo especificado.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtiene o establece el valor del nodo.</summary>
      <returns vsli:raw="The value of the node.">Valor del nodo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Node is read-only.">El nodo es de sólo lectura.</exception>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary vsli:raw="Represents the content of an XML comment.">Representa el contenido de un comentario XML.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlComment" />.</summary>
      <param name="comment" vsli:raw="The content of the comment element.">Contenido del elemento de comentario.</param>
      <param name="doc" vsli:raw="The parent XML document.">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because comment nodes do not have children, the cloned node always includes the text content, regardless of the parameter setting.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Dado que los nodos Comment no tienen elementos secundarios, el nodo clonado incluye siempre el contenido del texto, con independencia del valor del parámetro.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For comment nodes, the value is &lt;see langword=&quot;#comment&quot; /&gt;.">Para los nodos de comentarios, el valor es <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For comment nodes, the value is &lt;see langword=&quot;#comment&quot; /&gt;.">Para los nodos de comentarios, el valor es <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="For comment nodes, the value is XmlNodeType.Comment.">Para los nodos de comentarios, el valor es XmlNodeType.Comment.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. Because comment nodes do not have children, this method has no effect.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Dado que los nodos de comentario no tienen elementos secundarios, este método no tiene ningún efecto.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary vsli:raw="Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types. When converting data types, the values returned are locale-independent.">Codifica y descodifica nombres XML y proporciona métodos de conversión entre tipos de Common Language Runtime y tipos de lenguajes de definición de esquema XML (XSD). Cuando se convierten tipos de datos, los valores devueltos no dependen de la configuración regional.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlConvert&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlConvert" />.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary vsli:raw="Decodes a name. This method does the reverse of the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeLocalName(System.String)&quot; /&gt; methods.">Descodifica un nombre. Este método hace lo contrario que los métodos <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> y <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.</summary>
      <param name="name" vsli:raw="The name to be transformed.">Nombre que se va a transformar.</param>
      <returns vsli:raw="The decoded name.">Nombre descodificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary vsli:raw="Converts the name to a valid XML local name.">Convierte el nombre en un nombre XML local válido.</summary>
      <param name="name" vsli:raw="The name to be encoded.">Nombre que se va a codificar.</param>
      <returns vsli:raw="The encoded name.">Nombre codificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary vsli:raw="Converts the name to a valid XML name.">Convierte el nombre en un nombre XML válido.</summary>
      <param name="name" vsli:raw="A name to be translated.">Nombre que se va a convertir.</param>
      <returns vsli:raw="The name with any invalid characters replaced by an escape string.">Nombre con los caracteres no válidos reemplazados por una cadena de escape.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary vsli:raw="Verifies the name is valid according to the XML specification.">Comprueba que el nombre es válido de acuerdo con la especificación XML.</summary>
      <param name="name" vsli:raw="The name to be encoded.">Nombre que se va a codificar.</param>
      <returns vsli:raw="The encoded name.">Nombre codificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary vsli:raw="Checks whether the passed-in character is a valid non-colon character type.">Comprueba si el carácter pasado es un tipo de carácter distinto de dos puntos válido.</summary>
      <param name="ch" vsli:raw="The character to verify as a non-colon character.">Carácter que se va a comprobar que no sea un carácter distinto de dos puntos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character is a valid non-colon character type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el carácter es un tipo de carácter válido (pero no de dos puntos); de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary vsli:raw="Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise &lt;see langword=&quot;null&quot; /&gt;.">Devuelve la instancia de carácter pasada si el carácter del argumento es un carácter de identificador público válido; en caso contrario, <see langword="null" />.</summary>
      <param name="ch" vsli:raw="&lt;see cref=&quot;T:System.Char&quot; /&gt; object to validate.">Objeto <see cref="T:System.Char" /> que se va a validar.</param>
      <returns vsli:raw="The passed-in character if the character is a valid public id character, otherwise &lt;see langword=&quot;null&quot; /&gt;.">Carácter pasado, si se trata de un carácter de id. público válido; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid Start Name Character type.">Comprueba si el carácter pasado es un tipo Start Name Character válido.</summary>
      <param name="ch" vsli:raw="The character to validate.">Carácter que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character is a valid Start Name Character type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el carácter es un tipo Start Name Character válido; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid XML whitespace character.">Comprueba si el carácter pasado es un carácter de espacio en blanco XML válido.</summary>
      <param name="ch" vsli:raw="The character to validate.">Carácter que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in character is a valid XML whitespace character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el carácter pasado es uno de espacio en blanco XML válido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid XML character.">Comprueba si el carácter pasado es un carácter XML válido.</summary>
      <param name="ch" vsli:raw="The character to validate.">Carácter que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in character is a valid XML character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el carácter pasado es uno de XML válido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary vsli:raw="Checks if the passed-in surrogate pair of characters is a valid XML character.">Comprueba si el par de caracteres suplentes pasado es un carácter XML válido.</summary>
      <param name="lowChar" vsli:raw="The surrogate character to validate.">Carácter suplente que se va a validar.</param>
      <param name="highChar" vsli:raw="The surrogate character to validate.">Carácter suplente que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in surrogate pair of characters is a valid XML character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el par de caracteres suplente pasado es uno de XML válido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Boolean" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value, that is, &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Valor <see langword="Boolean" />; es decir, <see langword="true" /> o <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; does not represent a &lt;see langword=&quot;Boolean&quot; /&gt; value.">
        <paramref name="s" /> no representa un valor <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Byte" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Byte&quot; /&gt; equivalent of the string.">Equivalente <see langword="Byte" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Byte.MinValue&quot;&gt;Byte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Byte.MaxValue&quot;&gt;Byte.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Byte.MinValue" /> o mayor que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Char&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Char" /> equivalente.</summary>
      <param name="s" vsli:raw="The string containing a single character to convert.">Cadena que contiene un carácter único que se va a convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Char&quot; /&gt; representing the single character.">
        <see langword="Char" /> que representa el carácter único.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of the &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El valor del parámetro <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter contains more than one character.">El parámetro <paramref name="s" /> contiene más de un carácter.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">Equivalente <see langword="DateTime" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is an empty string or is not in the correct format.">
        <paramref name="s" /> es una cadena vacía o no tiene el formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="format" vsli:raw="The format structure to apply to the converted &lt;see langword=&quot;DateTime&quot; /&gt;. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets. The string is validated against this format.">Estructura de formato que se va a aplicar al <see langword="DateTime" /> convertido. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos. La cadena se valida comparándola con este formato.</param>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">Equivalente <see langword="DateTime" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or &lt;paramref name=&quot;format&quot; /&gt; is String.Empty  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;s&quot; /&gt; does not contain a date and time that corresponds to &lt;paramref name=&quot;format&quot; /&gt;.">
        <paramref name="s" /> o <paramref name="format" /> es String.Empty 
o bien 
 <paramref name="s" /> no contiene ninguna fecha ni hora que se correspondan con <paramref name="format" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="formats" vsli:raw="An array containing the format structures to apply to the converted &lt;see langword=&quot;DateTime&quot; /&gt;. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets.">Matriz que contiene las estructuras de formato que se van a aplicar al <see langword="DateTime" /> convertido. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</param>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">Equivalente <see langword="DateTime" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or an element of &lt;paramref name=&quot;formats&quot; /&gt; is String.Empty  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;s&quot; /&gt; does not contain a date and time that corresponds to any of the elements of &lt;paramref name=&quot;formats&quot; /&gt;.">
        <paramref name="s" /> o un elemento de <paramref name="formats" /> es String.Empty 
O bien 
 <paramref name="s" /> no contiene una fecha y hora que se correspondan con ninguno de los elementos de <paramref name="formats" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; specified.">Convierte <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> mediante el <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; value to convert.">Valor <see cref="T:System.String" /> que se va a convertir.</param>
      <param name="dateTimeOption" vsli:raw="One of the enumeration values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.">Uno de los valores de la enumeración que especifican si la fecha debe convertirse a la hora local o mantenerse como hora universal coordinada (UTC), en el caso de que se trate de una fecha de UTC.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent of the &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.DateTime" /> equivalente de la <see cref="T:System.String" />.</returns>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dateTimeOption&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dateTimeOption" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is an empty string or is not in a valid format.">
        <paramref name="s" /> es una cadena vacía o su formato no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s" vsli:raw="The string to convert. The string must conform to a subset of the W3C Recommendation for the XML dateTime type. For more information, see the dateTime section of the XML Schema specification.">Cadena que se va a convertir.  
 Nota La cadena debe ajustarse a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The argument passed to this method is outside the range of allowable values. For information about allowable values, see &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">El argumento pasado a este método está fuera del intervalo de valores permitidos. Para obtener información sobre los valores permitidos, vea <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type. For more information, see the dateTime section of the XML Schema specification.">El argumento pasado a este método no se ajusta a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="format" vsli:raw="The format from which &lt;paramref name=&quot;s&quot; /&gt; is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..) The string &lt;paramref name=&quot;s&quot; /&gt; is validated against this format.">Formato desde el que se convierte <paramref name="s" />. El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML. La cadena <paramref name="s" /> se valida comparándola con este formato.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or &lt;paramref name=&quot;format&quot; /&gt; is an empty string or is not in the specified format.">
        <paramref name="s" /> o <paramref name="format" /> es una cadena vacía o no tiene el formato especificado.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="formats" vsli:raw="An array of formats from which &lt;paramref name=&quot;s&quot; /&gt; can be converted. Each format in &lt;paramref name=&quot;formats&quot; /&gt; can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..) The string &lt;paramref name=&quot;s&quot; /&gt; is validated against one of these formats.">Matriz de formatos a partir de los cuales puede convertirse <paramref name="s" />. Cada formato de <paramref name="formats" /> puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML. La cadena <paramref name="s" /> se valida comparándola con uno de estos formatos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Decimal" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Decimal&quot; /&gt; equivalent of the string.">Equivalente <see langword="Decimal" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Decimal.MinValue&quot;&gt;Decimal.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Decimal.MinValue" /> o mayor que <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Double" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; equivalent of the string.">Equivalente <see langword="Double" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Double.MinValue&quot;&gt;Double.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Double.MinValue" /> o mayor que <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Guid" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Guid&quot; /&gt; equivalent of the string.">Equivalente <see langword="Guid" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int16&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Int16" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int16&quot; /&gt; equivalent of the string.">
        <see langword="Int16" /> equivalente de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int16.MinValue&quot;&gt;Int16.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int16.MaxValue&quot;&gt;Int16.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int16.MinValue" /> o mayor que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int32&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Int32" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; equivalent of the string.">
        <see langword="Int32" /> equivalente de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int32.MinValue" /> o mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int64&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Int64" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; equivalent of the string.">
        <see langword="Int64" /> equivalente de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int64.MinValue" /> o mayor que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.SByte&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.SByte" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="An &lt;see langword=&quot;SByte&quot; /&gt; equivalent of the string.">
        <see langword="SByte" /> equivalente de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.SByte.MinValue&quot;&gt;SByte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.SByte.MaxValue&quot;&gt;SByte.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.SByte.MinValue" /> o mayor que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Single" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; equivalent of the string.">Equivalente <see langword="Single" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Single.MinValue&quot;&gt;Single.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Single.MinValue" /> o mayor que <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Boolean" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Boolean&quot; /&gt;, that is, &quot;true&quot; or &quot;false&quot;.">Representación de cadena de <see langword="Boolean" />; es decir, "true" o "false".</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Byte&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Byte" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Byte&quot; /&gt;.">Representación de cadena de <see langword="Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Char&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Char" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Char&quot; /&gt;.">Representación de cadena de <see langword="Char" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.DateTime" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;DateTime&quot; /&gt; in the format yyyy-MM-ddTHH:mm:ss where 'T' is a constant literal.">Representación de cadena de <see langword="DateTime" /> con el formato yyyy-MM-ddTHH:mm:ss donde "T" es una constante literal.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.DateTime" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <param name="format" vsli:raw="The format structure that defines how to display the converted string. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets.">Estructura de formato que define cómo se muestra la cadena convertida. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;DateTime&quot; /&gt; in the specified format.">Representación de cadena de <see langword="DateTime" /> en el formato especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; specified.">Convierte <see cref="T:System.DateTime" /> en <see cref="T:System.String" /> mediante el <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to convert.">Valor <see cref="T:System.DateTime" /> que se va a convertir.</param>
      <param name="dateTimeOption" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; values that specify how to treat the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Uno de los valores de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifica cómo tratar el valor <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; equivalent of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.String" /> equivalente de la <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;dateTimeOption&quot; /&gt; value is not valid.">El valor <paramref name="dateTimeOption" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; or &lt;paramref name=&quot;dateTimeOption&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="value" /> o <paramref name="dateTimeOption" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte el <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to be converted.">
        <see cref="T:System.DateTimeOffset" /> que va a convertirse.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Representación de tipo <see cref="T:System.String" /> del <see cref="T:System.DateTimeOffset" /> proporcionado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt; in the specified format.">Convierte el <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" /> con el formato especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to be converted.">
        <see cref="T:System.DateTimeOffset" /> que va a convertirse.</param>
      <param name="format" vsli:raw="The format to which &lt;paramref name=&quot;s&quot; /&gt; is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..)">Formato al que se convierte <paramref name="s" />. El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation in the specified format of the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Representación <see cref="T:System.String" /> con el formato especificado del <see cref="T:System.DateTimeOffset" /> proporcionado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Decimal" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Decimal&quot; /&gt;.">Representación de cadena de <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Double" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Representación de cadena de <see langword="Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Guid&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Guid" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Guid&quot; /&gt;.">Representación de cadena de <see langword="Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int16&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Int16" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">Representación de cadena de <see langword="Int16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int32&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Int32" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Representación de cadena de <see langword="Int32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int64&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Int64" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Representación de cadena de <see langword="Int64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.SByte&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.SByte" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;SByte&quot; /&gt;.">Representación de cadena de <see langword="SByte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Single&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.Single" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Representación de cadena de <see langword="Single" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.TimeSpan" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;TimeSpan&quot; /&gt;.">Representación de cadena de <see langword="TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt16&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.UInt16" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">Representación de cadena de <see langword="UInt16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt32&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.UInt32" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Representación de cadena de <see langword="UInt32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt64&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte la clase <see cref="T:System.UInt64" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valor que se va a convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Representación de cadena de <see langword="UInt64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.TimeSpan" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert. The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.">Cadena que se va a convertir. El formato de la cadena debe cumplir la recomendación relativa a la duración del Consorcio W3C "XML Schema Part 2: Datatypes" (Parte 2 del esquema XML: tipos de datos).</param>
      <returns vsli:raw="A &lt;see langword=&quot;TimeSpan&quot; /&gt; equivalent of the string.">Equivalente <see langword="TimeSpan" /> de la cadena.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in correct format to represent a &lt;see langword=&quot;TimeSpan&quot; /&gt; value.">
        <paramref name="s" /> no tiene el formato correcto para representar un valor <see langword="TimeSpan" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt16&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.UInt16" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt16&quot; /&gt; equivalent of the string.">Equivalente <see langword="UInt16" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt16.MinValue&quot;&gt;UInt16.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt16.MinValue" /> o mayor que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.UInt32" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; equivalent of the string.">Equivalente <see langword="UInt32" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt32.MinValue" /> o mayor que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt; equivalent.">Convierte el <see cref="T:System.String" /> en un <see cref="T:System.UInt64" /> equivalente.</summary>
      <param name="s" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; equivalent of the string.">Equivalente <see langword="UInt64" /> de la cadena.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt64.MinValue" /> o mayor que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary vsli:raw="Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.">Comprueba que el nombre sea válido de acuerdo con la recomendación sobre el lenguaje de marcado extensible del Consorcio W3C.</summary>
      <param name="name" vsli:raw="The name to verify.">Nombre que se va a comprobar.</param>
      <returns vsli:raw="The name, if it is a valid XML name.">Nombre, si es un nombre XML válido.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name.">
        <paramref name="name" /> no es un nombre XML válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or String.Empty.">
        <paramref name="name" /> es <see langword="null" /> o String.Empty.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary vsli:raw="Verifies that the name is a valid &lt;see langword=&quot;NCName&quot; /&gt; according to the W3C Extended Markup Language recommendation. An &lt;see langword=&quot;NCName&quot; /&gt; is a name that cannot contain a colon.">Comprueba que el nombre sea un <see langword="NCName" /> válido de acuerdo con la recomendación sobre el lenguaje de marcado extensible del Consorcio W3C. <see langword="NCName" /> es un nombre que no puede contener un carácter de dos puntos.</summary>
      <param name="name" vsli:raw="The name to verify.">Nombre que se va a comprobar.</param>
      <returns vsli:raw="The name, if it is a valid NCName.">Nombre, si es un nombre NCName válido.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" /> o <c>String.Empty</c>.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid non-colon name.">
        <paramref name="name" /> no es un nombre distinto de dos puntos válido.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary vsli:raw="Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation.">Comprueba que la cadena sea un elemento NMTOKEN válido de acuerdo con la recomendación del Consorcio W3C "XML Schema Part 2: Datatypes" (Parte 2 del esquema XML: tipos de datos).</summary>
      <param name="name" vsli:raw="The string you wish to verify.">La cadena que desea comprobar.</param>
      <returns vsli:raw="The name token, if it is a valid NMTOKEN.">Token del nombre, si es un NMTOKEN válido.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The string is not a valid name token.">La cadena no es un símbolo (token) de nombre válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary vsli:raw="Returns the passed in string instance if all the characters in the string argument are valid public id characters.">Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de identificadores públicos válidos.</summary>
      <param name="publicId" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the id to validate.">Objeto <see cref="T:System.String" /> que contiene el Id. que se va a validar.</param>
      <returns vsli:raw="The passed-in string if all the characters in the argument are valid public id characters.">Cadena pasada si todos los caracteres del argumento son caracteres de identificadores públicos válidos.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary vsli:raw="Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.">Comprueba que la cadena sea un token válido de acuerdo con la recomendación del Consorcio W3C "XML Schema Part 2: Datatypes" (Parte 2 del esquema XML: tipos de datos).</summary>
      <param name="token" vsli:raw="The string value you wish to verify.">Valor de cadena que desea comprobar.</param>
      <returns vsli:raw="The token, if it is a valid token.">Símbolo, si es un token válido.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The string value is not a valid token.">El valor de cadena no es un símbolo (token) válido.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary vsli:raw="Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.">Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de espacio en blanco válidos.</summary>
      <param name="content" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; to verify.">Objeto <see cref="T:System.String" /> que se va a comprobar.</param>
      <returns vsli:raw="The passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise &lt;see langword=&quot;null&quot; /&gt;.">Instancia de la cadena pasada si todos los caracteres del argumento de la cadena son caracteres de espacio en blanco válidos; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary vsli:raw="Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an &lt;see langword=&quot;XmlException&quot; /&gt; is thrown with information on the first invalid character encountered.">Devuelve la cadena que se pasa si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos, en caso contrario se produce una <see langword="XmlException" /> con información sobre el primer carácter no válido encontrado.</summary>
      <param name="content" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains characters to verify.">
        <see cref="T:System.String" /> que contiene los caracteres que se van a comprobar.</param>
      <returns vsli:raw="The passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an &lt;see langword=&quot;XmlException&quot; /&gt; is thrown with information on the first invalid character encountered.">Cadena que se pasa si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos. En caso contrario, se produce una excepción <see langword="XmlException" /> con información sobre el primer carácter no válido encontrado.</returns>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary vsli:raw="Specifies how to treat the time value when converting between string and &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Especifica cómo tratar el valor de tiempo al realizar una conversión entre una cadena y <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary vsli:raw="Treat as local time. If the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object represents a Coordinated Universal Time (UTC), it is converted to the local time.">Se trata como hora local. Si el objeto <see cref="T:System.DateTime" /> representa la hora universal coordinada (UTC), se convierte a la hora local.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary vsli:raw="Time zone information should be preserved when converting.">La información de la zona horaria se debe conservar al realizar la conversión.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary vsli:raw="Treat as a local time if a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is being converted to a string. If a string is being converted to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, convert to a local time if a time zone is specified.">Se trata como hora local si <see cref="T:System.DateTime" /> se convierte en cadena. Si una cadena se está convirtiendo a <see cref="T:System.DateTime" />, conviértala a una hora local si se especifica una zona horaria.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary vsli:raw="Treat as a UTC. If the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object represents a local time, it is converted to a UTC.">Se trata como UTC. Si el objeto <see cref="T:System.DateTime" /> representa una hora local, se convierte en UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary vsli:raw="Represents the XML declaration node &amp;lt;?xml version='1.0'...?&amp;gt;.">Representa el nodo de la declaración XML &lt;?xml version='1.0'...?&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDeclaration&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDeclaration" />.</summary>
      <param name="version" vsli:raw="The XML version; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Version&quot; /&gt; property.">Versión de XML; vea la propiedad <see cref="P:System.Xml.XmlDeclaration.Version" />.</param>
      <param name="encoding" vsli:raw="The encoding scheme; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Encoding&quot; /&gt; property.">Esquema de la codificación; vea la propiedad <see cref="P:System.Xml.XmlDeclaration.Encoding" />.</param>
      <param name="standalone" vsli:raw="Indicates whether the XML document depends on an external DTD; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Standalone&quot; /&gt; property.">Indica si el documento XML depende de una DTD externa; vea la propiedad <see cref="P:System.Xml.XmlDeclaration.Standalone" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Dado que los nodos <see langword="XmlDeclaration" /> no tienen elementos secundarios, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding level of the XML document.">Obtiene o establece el nivel de codificación del documento XML.</summary>
      <returns vsli:raw="The valid character encoding name. The most commonly supported character encoding names for XML are the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Category&lt;/term&gt;&lt;description&gt; Encoding Names&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Unicode&lt;/term&gt;&lt;description&gt; UTF-8, UTF-16&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ISO 10646&lt;/term&gt;&lt;description&gt; ISO-10646-UCS-2, ISO-10646-UCS-4&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ISO 8859&lt;/term&gt;&lt;description&gt; ISO-8859-n (where &quot;n&quot; is a digit from 1 to 9)&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; JIS X-0208-1997&lt;/term&gt;&lt;description&gt; ISO-2022-JP, Shift_JIS, EUC-JP&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; This value is optional. If a value is not set, this property returns String.Empty.  &#xA;  &#xA; If an encoding attribute is not included, UTF-8 encoding is assumed when the document is written or saved out.">El nombre de codificación de caracteres válidos. Los nombres de codificación de caracteres que presentan mayor compatibilidad en documentos XML son los siguientes:  
  Categoría  

  Nombres de codificación  

  Unicode  

  UTF-8, UTF-16  

  ISO 10646  

  ISO-10646-UCS-2, ISO-10646-UCS-4  

  ISO 8859  

  ISO-8859-n (donde "n" es un dígito de 1 a 9)  

  JIS X-0208-1997  

  ISO-2022-JP, Shift_JIS, EUC-JP  

   

 Este valor es opcional. Si no se establece un valor, esta propiedad devuelve String.Empty.  
Si no se incluye un atributo de codificación, se supone la codificación UTF-8 cuando el documento se escribe o se guarda.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt;.">Obtiene o establece los valores concatenados de <see langword="XmlDeclaration" />.</summary>
      <returns vsli:raw="The concatenated values of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt; (that is, everything between &lt;c&gt;&amp;lt;?xml&lt;/c&gt; and &lt;c&gt;?&amp;gt;&lt;/c&gt;).">Los valores concatenados de los <see langword="XmlDeclaration" /> (es decir, lo que aparece entre <c>&lt;? xml</c> y <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, the local name is &lt;see langword=&quot;xml&quot; /&gt;.">Para nodos <see langword="XmlDeclaration" />, el nombre local es <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, the name is &lt;see langword=&quot;xml&quot; /&gt;.">En el caso de nodos <see langword="XmlDeclaration" />, el nombre es <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, this value is XmlNodeType.XmlDeclaration.">En el caso de nodos <see langword="XmlDeclaration" />, este valor es XmlNodeType.XmlDeclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the value of the standalone attribute.">Obtiene o establece el valor del atributo independiente.</summary>
      <returns vsli:raw="Valid values are &lt;see langword=&quot;yes&quot; /&gt; if all entity declarations required by the XML document are contained within the document or &lt;see langword=&quot;no&quot; /&gt; if an external document type definition (DTD) is required. If a standalone attribute is not present in the XML declaration, this property returns String.Empty.">Los valores válidos son <see langword="yes" /> si todas las declaraciones de entidad necesarias para el documento XML se encuentran en el documento o <see langword="no" /> si se necesita una definición de tipo de documento (DTD) externa. Si no existe un atributo independiente en la declaración XML, estas propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt;.">Obtiene o establece el valor de <see langword="XmlDeclaration" />.</summary>
      <returns vsli:raw="The contents of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt; (that is, everything between &lt;c&gt;&amp;lt;?xml&lt;/c&gt; and &lt;c&gt;?&amp;gt;&lt;/c&gt;).">El contenido de la <see langword="XmlDeclaration" /> (es decir, lo que aparece entre <c>&lt;? xml</c> y <c>?&gt;</c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary vsli:raw="Gets the XML version of the document.">Obtiene la versión XML del documento.</summary>
      <returns vsli:raw="The value is always &lt;see langword=&quot;1.0&quot; /&gt;.">El valor es siempre <see langword="1.0" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. Because &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes do not have children, this method has no effect.">Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Debido a que los nodos <see langword="XmlDeclaration" /> no tienen elementos secundarios, este método no tiene ningún efecto.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary vsli:raw="Represents an XML document. You can use this class to load, validate, edit, add, and position XML in a document.">Representa un documento XML. Puede usar esta clase para cargar, validar, editar, agregar y posicionar el código XML en un documento.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt;.">Inicializa una nueva instancia de la clase <see langword="XmlDocument" /> con el objeto <see cref="T:System.Xml.XmlImplementation" /> especificado.</summary>
      <param name="imp" vsli:raw="The &lt;see langword=&quot;XmlImplementation&quot; /&gt; to use.">Objeto <see langword="XmlImplementation" /> que se va a usar.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see langword="XmlDocument" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtiene el identificador URI base del nodo actual.</summary>
      <returns vsli:raw="The location from which the node was loaded.">Ubicación desde la que se cargó el nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns vsli:raw="The cloned &lt;see langword=&quot;XmlDocument&quot; /&gt; node.">Nodo <see langword="XmlDocument" /> clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Crea un objeto <see cref="T:System.Xml.XmlAttribute" /> con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute. If the name contains a colon, the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property reflects the part of the name preceding the first colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property reflects the part of the name following the first colon. The &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt; remains empty unless the prefix is a recognized built-in prefix such as xmlns. In this case &lt;see langword=&quot;NamespaceURI&quot; /&gt; has a value of &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;.">Nombre completo del atributo. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> refleja la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> refleja la parte que va detrás. El <see cref="P:System.Xml.XmlNode.NamespaceURI" /> queda vacío, a menos que el prefijo sea un prefijo integrado conocido, como xmlns. En este caso, <see langword="NamespaceURI" /> tiene un valor de <c></c>.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">Nuevo objeto <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified qualified name and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crea un <see cref="T:System.Xml.XmlAttribute" /> con el nombre completo especificados y el <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName" vsli:raw="The qualified name of the attribute. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property will reflect the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property will reflect the part of the name after the colon.">Nombre completo del atributo. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> reflejará la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> reflejará la parte que va detrás.</param>
      <param name="namespaceURI" vsli:raw="The namespaceURI of the attribute. If the qualified name includes a prefix of xmlns, then this parameter must be &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;.">URI del espacio de nombres del atributo. Si el nombre completo incluye un prefijo de xmlns, este parámetro debe ser <c></c>.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">Nuevo objeto <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crea un <see cref="T:System.Xml.XmlAttribute" /> con los <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Prefijo del atributo, si lo tiene. String.Empty y <see langword="null" /> son equivalentes.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent. If &lt;paramref name=&quot;prefix&quot; /&gt; is xmlns, then this parameter must be &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;; otherwise an exception is thrown.">URI del espacio de nombres del atributo, si lo tiene. String.Empty y <see langword="null" /> son equivalentes. Si <paramref name="prefix" /> es xmlns, este parámetro debe ser <c></c>; de lo contrario, se produce una excepción.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">Nuevo objeto <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; containing the specified data.">Crea un <see cref="T:System.Xml.XmlCDataSection" /> que contiene los datos especificados.</summary>
      <param name="data" vsli:raw="The content of the new &lt;see langword=&quot;XmlCDataSection&quot; /&gt;.">Contenido del nuevo objeto <see langword="XmlCDataSection" />.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlCDataSection&quot; /&gt;.">Nuevo objeto <see langword="XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; containing the specified data.">Crea un <see cref="T:System.Xml.XmlComment" /> que contiene los datos especificados.</summary>
      <param name="data" vsli:raw="The content of the new &lt;see langword=&quot;XmlComment&quot; /&gt;.">Contenido del nuevo objeto <see langword="XmlComment" />.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlComment&quot; /&gt;.">Nuevo objeto <see langword="XmlComment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a default attribute with the specified prefix, local name and namespace URI.">Crea un atributo predeterminado con el prefijo, el nombre local y el identificador URI de espacio de nombres especificados.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute (if any).">Prefijo del atributo, si lo tiene.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute (if any).">URI del espacio de nombres del atributo, si lo tiene.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">Nuevo objeto <see cref="T:System.Xml.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt;.">Crea una interfaz <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt;.">Nuevo objeto <see langword="XmlDocumentFragment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Xml.XmlDocumentType&quot; /&gt; object.">Devuelve un nuevo objeto <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name" vsli:raw="Name of the document type.">Nombre del tipo de documento.</param>
      <param name="publicId" vsli:raw="The public identifier of the document type or &lt;see langword=&quot;null&quot; /&gt;. You can specify a public URI and also a system identifier to identify the location of the external DTD subset.">Identificador público del tipo de documento o <see langword="null" />. Puede especificar un URI público, así como un identificador de sistema para identificar la ubicación del subconjunto DTD externo.</param>
      <param name="systemId" vsli:raw="The system identifier of the document type or &lt;see langword=&quot;null&quot; /&gt;. Specifies the URL of the file location for the external DTD subset.">Identificador del sistema del tipo de documento o <see langword="null" />. Especifica la dirección URL de la ubicación del archivo para el subconjunto DTD externo.</param>
      <param name="internalSubset" vsli:raw="The DTD internal subset of the document type or &lt;see langword=&quot;null&quot; /&gt;.">Subconjunto interno de la DTD del tipo de documento o <see langword="null" />.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocumentType&quot; /&gt;.">Nuevo objeto <see langword="XmlDocumentType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary vsli:raw="Creates an element with the specified name.">Crea un elemento con el nombre especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the element. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property reflects the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property reflects the part of the name after the colon. The qualified name cannot include a prefix of 'xmlns'.">Nombre completo del elemento. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> refleja la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> refleja la parte que va detrás. El nombre completo no puede incluir un prefijo de 'xmlns'.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlElement&quot; /&gt;.">Nuevo objeto <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the qualified name and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crea un <see cref="T:System.Xml.XmlElement" /> con el nombre completo y el <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName" vsli:raw="The qualified name of the element. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property will reflect the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property will reflect the part of the name after the colon. The qualified name cannot include a prefix of 'xmlns'.">Nombre completo del elemento. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> reflejará la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> reflejará la parte que va detrás. El nombre completo no puede incluir un prefijo de 'xmlns'.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlElement&quot; /&gt;.">Nuevo objeto <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crea un elemento con los <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Prefijo del nuevo elemento, si lo tiene. String.Empty y <see langword="null" /> son equivalentes.</param>
      <param name="localName" vsli:raw="The local name of the new element.">Nombre local del nuevo elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new element (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Identificador URI de espacio de nombres del nuevo elemento, si lo tiene. String.Empty y <see langword="null" /> son equivalentes.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Nuevo objeto <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Crea un objeto <see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Nombre de la referencia a entidad.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlEntityReference&quot; /&gt;.">Nuevo objeto <see langword="XmlEntityReference" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name is invalid (for example, names starting with'#' are invalid.)">El nombre no es válido (por ejemplo, los nombres que empiezan por “#” no son válidos).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document.">Crea un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document positioned on the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; specified.">Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento colocado en <see cref="T:System.Xml.XmlNode" /> especificado.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">
        <see cref="T:System.Xml.XmlNode" /> en el que se desea que el explorador se sitúe inicialmente.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified node type, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crea un <see cref="T:System.Xml.XmlNode" /> con el tipo de nodo especificado, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="nodeTypeString" vsli:raw="String version of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the new node. This parameter must be one of the values listed in the table below.">Versión de cadena del <see cref="T:System.Xml.XmlNodeType" /> del nuevo nodo. Este parámetro debe ser uno de los valores de la tabla que figura más abajo.</param>
      <param name="name" vsli:raw="The qualified name of the new node. If the name contains a colon, it is parsed into &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; components.">Nombre completo del nuevo nodo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes <see cref="P:System.Xml.XmlNode.Prefix" /> y <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">Identificador URI de espacio de nombres del nuevo nodo.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">Nuevo objeto <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name; or &lt;paramref name=&quot;nodeTypeString&quot; /&gt; is not one of the strings listed below.">No se ha proporcionado el nombre y <see langword="XmlNodeType" /> requiere un nombre; o <paramref name="nodeTypeString" /> no es una de las cadenas enumeradas a continuación.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crea un <see cref="T:System.Xml.XmlNode" /> con los <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="type" vsli:raw="The &lt;see langword=&quot;XmlNodeType&quot; /&gt; of the new node.">
        <see langword="XmlNodeType" /> del nuevo nodo.</param>
      <param name="name" vsli:raw="The qualified name of the new node. If the name contains a colon then it is parsed into &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; components.">Nombre completo del nuevo nodo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes <see cref="P:System.Xml.XmlNode.Prefix" /> y <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">Identificador URI de espacio de nombres del nuevo nodo.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">Nuevo objeto <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name.">No se ha proporcionado el nombre y <see langword="XmlNodeType" /> requiere un nombre.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crea un <see cref="T:System.Xml.XmlNode" /> con los <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="type" vsli:raw="The &lt;see langword=&quot;XmlNodeType&quot; /&gt; of the new node.">
        <see langword="XmlNodeType" /> del nuevo nodo.</param>
      <param name="prefix" vsli:raw="The prefix of the new node.">Prefijo del nuevo nodo.</param>
      <param name="name" vsli:raw="The local name of the new node.">Nombre local del nuevo nodo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">Identificador URI de espacio de nombres del nuevo nodo.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">Nuevo objeto <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name.">No se ha proporcionado el nombre y <see langword="XmlNodeType" /> requiere un nombre.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlProcessingInstruction&quot; /&gt; with the specified name and data.">Crea un <see cref="T:System.Xml.XmlProcessingInstruction" /> con el nombre y los datos especificados.</summary>
      <param name="target" vsli:raw="The name of the processing instruction.">Nombre de la instrucción de procesamiento.</param>
      <param name="data" vsli:raw="The data for the processing instruction.">Datos para la instrucción de procesamiento.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlProcessingInstruction&quot; /&gt;.">Nuevo objeto <see langword="XmlProcessingInstruction" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; node.">Crea un nodo <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="text" vsli:raw="The string must contain only the following characters &amp;amp;#20; &amp;amp;#10; &amp;amp;#13; and &amp;amp;#9;.">La cadena debe contener solo los caracteres siguientes:&amp;#20; &amp;#10; &amp;#13; y &amp;#9;</param>
      <returns vsli:raw="A new &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; node.">Nuevo nodo <see langword="XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; with the specified text.">Crea un objeto <see cref="T:System.Xml.XmlText" />con el texto especificado.</summary>
      <param name="text" vsli:raw="The text for the Text node.">Texto del nodo Text.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlText&quot; /&gt; node.">Nuevo nodo <see langword="XmlText" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; node.">Crea un nodo <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="text" vsli:raw="The string must contain only the following characters &amp;amp;#20; &amp;amp;#10; &amp;amp;#13; and &amp;amp;#9;.">La cadena debe contener solo los caracteres siguientes:&amp;#20; &amp;#10; &amp;#13; y &amp;#9;</param>
      <returns vsli:raw="A new &lt;see langword=&quot;XmlWhitespace&quot; /&gt; node.">Nuevo nodo <see langword="XmlWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDeclaration&quot; /&gt; node with the specified values.">Crea un nodo <see cref="T:System.Xml.XmlDeclaration" /> con los valores especificados.</summary>
      <param name="version" vsli:raw="The version must be &quot;1.0&quot;.">La versión debe ser "1.0".</param>
      <param name="encoding" vsli:raw="The value of the encoding attribute. This is the encoding that is used when you save the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to a file or a stream; therefore, it must be set to a string supported by the &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; class, otherwise &lt;see cref=&quot;M:System.Xml.XmlDocument.Save(System.String)&quot; /&gt; fails. If this is &lt;see langword=&quot;null&quot; /&gt; or String.Empty, the &lt;see langword=&quot;Save&quot; /&gt; method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.  &#xA;  &#xA; Note: If the &lt;see langword=&quot;XmlDocument&quot; /&gt; is saved to either a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or an &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt;, this encoding value is discarded. Instead, the encoding of the &lt;see langword=&quot;TextWriter&quot; /&gt; or the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; is used. This ensures that the XML written out can be read back using the correct encoding.">Valor del atributo de codificación. Es la codificación que se usa cuando se guarda <see cref="T:System.Xml.XmlDocument" /> en un archivo o en un flujo; por tanto, se debe establecer en una cadena admitida por la clase <see cref="T:System.Text.Encoding" /> ya que, en caso contrario, <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> produce un error. Si es <see langword="null" /> o String.Empty, el método <see langword="Save" /> no escribe un atributo de codificación en la declaración XML y, por tanto, se usa la codificación predeterminada, UTF-8.  
Nota: Si <see langword="XmlDocument" /> se guarda en <see cref="T:System.IO.TextWriter" /> o en <see cref="T:System.Xml.XmlTextWriter" />, se descartará este valor de codificación. En su lugar, se usa la codificación de <see langword="TextWriter" /> o de <see langword="XmlTextWriter" />. De este modo se garantiza que el fragmento XML que se escribe se puede volver a leer usando la codificación correcta.</param>
      <param name="standalone" vsli:raw="The value must be either &quot;yes&quot; or &quot;no&quot;. If this is &lt;see langword=&quot;null&quot; /&gt; or String.Empty, the &lt;see langword=&quot;Save&quot; /&gt; method does not write a standalone attribute on the XML declaration.">Este valor debe ser "yes" o "no". Si es <see langword="null" /> o String.Empty, el método <see langword="Save" /> no escribe un atributo independiente en la declaración XML.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDeclaration&quot; /&gt; node.">Nuevo nodo <see langword="XmlDeclaration" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The values of &lt;paramref name=&quot;version&quot; /&gt; or &lt;paramref name=&quot;standalone&quot; /&gt; are something other than the ones specified above.">Los valores de <paramref name="version" /> o <paramref name="standalone" /> son algo diferentes de los especificados anteriormente.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary vsli:raw="Gets the root &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for the document.">Obtiene el <see cref="T:System.Xml.XmlElement" /> raíz del documento.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; that represents the root of the XML document tree. If no root exists, &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <see langword="XmlElement" /> que representa la raíz del árbol del documento XML. Si no hay raíz, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary vsli:raw="Gets the node containing the DOCTYPE declaration.">Obtiene el nodo que contiene la declaración DOCTYPE.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; containing the DocumentType (DOCTYPE declaration).">
        <see cref="T:System.Xml.XmlNode" /> que contiene el DocumentType (declaración DOCTYPE).</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">Obtiene el <see cref="T:System.Xml.XmlElement" /> con el identificador especificado.</summary>
      <param name="elementId" vsli:raw="The attribute ID to match.">Identificador de atributo con el que debe haber una coincidencia.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; with the matching ID or &lt;see langword=&quot;null&quot; /&gt; if no matching element is found.">
        <see langword="XmlElement" /> con el identificador coincidente o <see langword="null" /> si no se encuentra un elemento coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">Nombre completo que se va a hacer coincidir. Se compara con la propiedad <see langword="Name" /> del nodo coincidente. El valor especial "*" coincide con todas las etiquetas.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. If no nodes match &lt;paramref name=&quot;name&quot; /&gt;, the returned collection will be empty.">Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. Si ningún nodo coincide con <paramref name="name" />, se devolverá la colección vacía.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="localName" vsli:raw="The LocalName to match. The special value &quot;*&quot; matches all tags.">Nombre local que se va a hacer coincidir. El valor especial "*" coincide con todas las etiquetas.</param>
      <param name="namespaceURI" vsli:raw="NamespaceURI to match.">Identificador URI de espacio de nombres con el que debe haber una coincidencia.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. If no nodes match the specified &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceURI&quot; /&gt;, the returned collection will be empty.">Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. Si ningún nodo coincide con el <paramref name="localName" /> y <paramref name="namespaceURI" /> especificados, se devolverá la colección vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; object for the current document.">Obtiene el objeto <see cref="T:System.Xml.XmlImplementation" /> del documento actual.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlImplementation&quot; /&gt; object for the current document.">Objeto <see langword="XmlImplementation" /> del documento actual.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary vsli:raw="Imports a node from another document to the current document.">Importa un nodo de otro documento al documento actual.</summary>
      <param name="node" vsli:raw="The node being imported.">Nodo que se va a importar.</param>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to perform a deep clone; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para producir un clon profundo; en caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The imported &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> que se importó.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling this method on a node type which cannot be imported.">Llamar a este método en un tipo de nodo que no se pueden importar.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary vsli:raw="Throws an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; in all cases.">Produce una <see cref="T:System.InvalidOperationException" /> en todos los casos.</summary>
      <returns vsli:raw="The values of the node and all its child nodes.">Valores del nodo y de todos sus nodos secundarios.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">En todos los casos.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the children of the current node.">Obtiene o establece el marcado que representa los nodos secundarios del nodo actual.</summary>
      <returns vsli:raw="The markup of the children of the current node.">Marcado de los nodos secundarios del nodo actual.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">El código XML especificado al establecer esta propiedad no es correcto.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the current node is read-only.">Obtiene un valor que indica si el nodo actual es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes always return &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nodo actual es de solo lectura; en caso contrario, es <see langword="false" />. Los nodos <see langword="XmlDocument" /> siempre devuelven <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the XML document from the specified stream.">Carga el documento XML desde el flujo especificado.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">Secuencia que contiene el documento XML que se va a cargar.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, a &lt;see cref=&quot;T:System.IO.FileNotFoundException&quot; /&gt; is raised.">Hay un error de carga o de análisis en el archivo XML. En este caso, se genera una <see cref="T:System.IO.FileNotFoundException" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the XML document from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Carga el documento XML desde el <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">
        <see langword="TextReader" /> que se usa para introducir los datos XML en el documento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">Hay un error de carga o de análisis en el archivo XML. En este caso, el documento permanece vacío.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary vsli:raw="Loads the XML document from the specified URL.">Carga el documento XML desde la dirección URL especificada.</summary>
      <param name="filename" vsli:raw="URL for the file containing the XML document to load. The URL can be either a local file or an HTTP URL (a Web address).">Dirección URL del archivo que contiene el documento XML que se va a cargar. La dirección URL puede ser un archivo local o una dirección HTTP URL (una dirección web).</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, a &lt;see cref=&quot;T:System.IO.FileNotFoundException&quot; /&gt; is raised.">Hay un error de carga o de análisis en el archivo XML. En este caso, se genera una <see cref="T:System.IO.FileNotFoundException" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="filename" /> es una cadena de longitud cero que solo contiene espacios en blanco o uno o varios caracteres no válidos definidos por <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="filename" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid (for example, it is on an unmapped drive).">La ruta de acceso especificada no es válida (por ejemplo, está en una unidad no asignada).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred while opening the file.">Se produjo un error de E/S al abrir el archivo.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; specified a file that is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;filename&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="filename" /> especificó un archivo que es de solo lectura.  
o bien 
Esta operación no es compatible con la plataforma actual.  
o bien 
 <paramref name="filename" /> especificó un directorio.  
O bien 
El llamador no dispone del permiso requerido.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;filename&quot; /&gt; was not found.">No se encontró el archivo especificado en <paramref name="filename" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is in an invalid format.">
        <paramref name="filename" /> está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the XML document from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Carga el documento XML desde el <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; used to feed the XML data into the document.">
        <see langword="XmlReader" /> que se usa para introducir los datos XML en el documento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">Hay un error de carga o de análisis en el archivo XML. En este caso, el documento permanece vacío.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary vsli:raw="Loads the XML document from the specified string.">Carga el documento XML desde la cadena especificada.</summary>
      <param name="xml" vsli:raw="String containing the XML document to load.">Cadena que contiene el documento XML que se va a cargar.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">Hay un error de carga o de análisis en el archivo XML. En este caso, el documento permanece vacío.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, the local name is #document.">Para nodos <see langword="XmlDocument" />, el nombre local es #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, the name is #document.">Para nodos <see langword="XmlDocument" />, el nombre es #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the document.">
        <see langword="XmlNameTable" /> que permite obtener la versión subdivida de una cadena en el documento.</returns>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Xml.XmlNode.Value&quot; /&gt; of a node belonging to this document has been changed.">Se produce cuando el <see cref="P:System.Xml.XmlNode.Value" /> de un nodo que pertenece a este documento se modifica.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Xml.XmlNode.Value&quot; /&gt; of a node belonging to this document is about to be changed.">Se produce cuando el <see cref="P:System.Xml.XmlNode.Value" /> de un nodo que pertenece a este documento se va a modificar.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary vsli:raw="Occurs when a node belonging to this document has been inserted into another node.">Se produce cuando un nodo que pertenece a este documento se ha insertado en otro nodo.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary vsli:raw="Occurs when a node belonging to this document is about to be inserted into another node.">Se produce cuando un nodo que pertenece a este documento se va a insertar en otro nodo.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary vsli:raw="Occurs when a node belonging to this document has been removed from its parent.">Se produce cuando un nodo que pertenece a este documento se ha quitado de su nodo primario.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary vsli:raw="Occurs when a node belonging to this document is about to be removed from the document.">Se produce cuando un nodo que pertenece a este documento se va a quitar del documento.</summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, this value is XmlNodeType.Document.">Tipo de nodo. Para los nodos <see langword="XmlDocument" />, este valor es XmlNodeType.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which the current node belongs.">Obtiene el <see cref="T:System.Xml.XmlDocument" /> al que pertenece el nodo actual.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes (&lt;see cref=&quot;P:System.Xml.XmlDocument.NodeType&quot; /&gt; equals XmlNodeType.Document), this property always returns &lt;see langword=&quot;null&quot; /&gt;.">Para nodos <see langword="XmlDocument" /> (<see cref="P:System.Xml.XmlDocument.NodeType" /> equivale a XmlNodeType.Document), esta propiedad devuelve siempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary vsli:raw="Gets the parent node of this node (for nodes that can have parents).">Obtiene el nodo primario de este nodo, en los nodos que pueden tener nodos primarios.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary vsli:raw="Gets or sets a value indicating whether to preserve white space in element content.">Obtiene o establece un valor que indica si se va a conservar el espacio en blanco del contenido del elemento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve white space; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para conservar el espacio en blanco; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object based on the information in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The reader must be positioned on a node or attribute.">Crea un objeto <see cref="T:System.Xml.XmlNode" /> tomando como base la información de <see cref="T:System.Xml.XmlReader" />. El lector debe estar situado en un nodo o en un atributo.</summary>
      <param name="reader" vsli:raw="The XML source.">XML de origen.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if no more nodes exist.">Nuevo <see langword="XmlNode" /> o <see langword="null" /> si no hay más nodos.</returns>
      <exception cref="T:System.NullReferenceException" vsli:raw="The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).">El lector está situado en un tipo de nodo que no se traslada a un nodo DOM válido (por ejemplo, EndElement o EndEntity).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Saves the XML document to the specified stream.">Guarda el documento XML en el flujo especificado.</summary>
      <param name="outStream" vsli:raw="The stream to which you want to save.">Secuencia en la que se desea guardar.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">La operación no generarái un documento XML bien formado (por ejemplo, ningún documento duplicado o declaraciones XML duplicadas).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Saves the XML document to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Guarda el documento XML en el <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see langword=&quot;TextWriter&quot; /&gt; to which you want to save.">
        <see langword="TextWriter" /> en el que se desea guardar.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">La operación no generarái un documento XML bien formado (por ejemplo, ningún documento duplicado o declaraciones XML duplicadas).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary vsli:raw="Saves the XML document to the specified file. If the specified file exists, this method overwrites it.">Guarda el documento XML en el archivo especificado. Si existe el archivo especificado, este método lo sobrescribe.</summary>
      <param name="filename" vsli:raw="The location of the file where you want to save the document.">Ubicación del archivo donde se desea guardar el documento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">La operación no generarái un documento XML bien formado (por ejemplo, ningún documento duplicado o declaraciones XML duplicadas).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the XML document to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el documento XML en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">La operación no generarái un documento XML bien formado (por ejemplo, ningún documento duplicado o declaraciones XML duplicadas).</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary vsli:raw="Returns the Post-Schema-Validation-Infoset (PSVI) of the node.">Devuelve el conjunto de información posterior a la validación del esquema (PSVI, Post-Schema-Validation-Infoset) del nodo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object representing the PSVI of the node.">Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que representa el PSVI del nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object associated with this &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> asociado a este objeto <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the XML Schema Definition Language (XSD) schemas associated with this &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;; otherwise, an empty &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas XSD (lenguaje de definición de esquemas XML) asociado a este <see cref="T:System.Xml.XmlDocument" />; en caso contrario, un objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vacío.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Validates the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; against the XML Schema Definition Language (XSD) schemas contained in the &lt;see cref=&quot;P:System.Xml.XmlDocument.Schemas&quot; /&gt; property.">Valida el objeto <see cref="T:System.Xml.XmlDocument" /> según los esquemas del lenguaje de definición de esquemas XML (XSD) de la propiedad <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object that receives information about schema validation warnings and errors.">Objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación de esquemas.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation event occurred and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object was specified.">Se ha producido un evento de validación de esquema y no se ha especificado ningún objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary vsli:raw="Validates the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object specified against the XML Schema Definition Language (XSD) schemas in the &lt;see cref=&quot;P:System.Xml.XmlDocument.Schemas&quot; /&gt; property.">Valida el objeto <see cref="T:System.Xml.XmlNode" /> especificado según los esquemas del lenguaje de definición de esquemas XML (XSD) de la propiedad <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object that receives information about schema validation warnings and errors.">Objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación de esquemas.</param>
      <param name="nodeToValidate" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object created from an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to validate.">Objeto <see cref="T:System.Xml.XmlNode" /> creado a partir de un <see cref="T:System.Xml.XmlDocument" /> que se va a validar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object parameter was not created from an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">El parámetro de objeto <see cref="T:System.Xml.XmlNode" /> no se creó a partir de un <see cref="T:System.Xml.XmlDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object parameter is not an element, attribute, document fragment, or the root node.">El parámetro de objeto <see cref="T:System.Xml.XmlNode" /> no es un elemento, atributo, fragmento de documento ni el nodo raíz.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation event occurred and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object was specified.">Se ha producido un evento de validación de esquema y no se ha especificado ningún objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the &lt;see langword=&quot;XmlDocument&quot; /&gt; node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda todos los nodos secundarios del nodo <see langword="XmlDocument" /> en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="xw" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the &lt;see langword=&quot;XmlDocument&quot; /&gt; node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo <see langword="XmlDocument" /> en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use for resolving external resources.">Establece el objeto <see cref="T:System.Xml.XmlResolver" /> para usarlo en la resolución de recursos externos.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use.  &#xA;  &#xA; In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">Objeto <see langword="XmlResolver" /> que se va a usar.  
En la versión 1.1 de .NET Framework, el llamador debe ser de confianza para especificar un <see langword="XmlResolver" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="This property is set to &lt;see langword=&quot;null&quot; /&gt; and an external DTD or entity is encountered.">Esta propiedad se establece en <see langword="null" /> y se encuentra una DTD o entidad externa.</exception>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary vsli:raw="Represents a lightweight object that is useful for tree insert operations.">Representa un objeto pequeño tamaño, que resulta útil para realizar operaciones de inserción de árboles.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <param name="ownerDocument" vsli:raw="The XML document that is the source of the fragment.">El documento XML que es el origen del fragmento.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the children of this node.">Obtiene o establece el marcado que representa los nodos secundarios de este nodo.</summary>
      <returns vsli:raw="The markup of the children of this node.">Marcado de los nodos secundarios de este nodo.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">El código XML especificado al establecer esta propiedad no es correcto.</exception>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, the local name is &lt;see langword=&quot;#document-fragment&quot; /&gt;.">Para nodos <see langword="XmlDocumentFragment" />, el nombre local es <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt;, the name is &lt;see langword=&quot;#document-fragment&quot; /&gt;.">Para <see langword="XmlDocumentFragment" />, el nombre es <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, this value is XmlNodeType.DocumentFragment.">Para nodos <see langword="XmlDocumentFragment" />, este valor es XmlNodeType.DocumentFragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">Obtiene la clase <see cref="T:System.Xml.XmlDocument" /> a la que pertenece este nodo.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlDocument&quot; /&gt; to which this node belongs.">
        <see langword="XmlDocument" /> al que pertenece este nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns vsli:raw="The parent of this node.  &#xA;  &#xA; For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, this property is always &lt;see langword=&quot;null&quot; /&gt;.">Elemento principal de este nodo.  
Para nodos <see langword="XmlDocumentFragment" />, esta propiedad siempre es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary vsli:raw="Represents the document type declaration.">Representa la declaración de tipos de documento.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocumentType&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name" vsli:raw="The qualified name; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.Name&quot; /&gt; property.">Nombre completo; vea la propiedad <see cref="P:System.Xml.XmlDocumentType.Name" />.</param>
      <param name="publicId" vsli:raw="The public identifier; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.PublicId&quot; /&gt; property.">Identificador público; vea la propiedad <see cref="P:System.Xml.XmlDocumentType.PublicId" />.</param>
      <param name="systemId" vsli:raw="The system identifier; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.SystemId&quot; /&gt; property.">Identificador del sistema; vea la propiedad <see cref="P:System.Xml.XmlDocumentType.SystemId" />.</param>
      <param name="internalSubset" vsli:raw="The DTD internal subset; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.InternalSubset&quot; /&gt; property.">Subconjunto interno de la DTD; vea la propiedad <see cref="P:System.Xml.XmlDocumentType.InternalSubset" />.</param>
      <param name="doc" vsli:raw="The parent document.">Documento primario.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Para los nodos de tipo de documento, el nodo clonado incluye siempre el subárbol, independientemente del valor del parámetro.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; nodes declared in the document type declaration.">Obtiene la colección de nodos <see cref="T:System.Xml.XmlEntity" /> declarada en la declaración de tipos de documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamedNodeMap&quot; /&gt; containing the &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes. The returned &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <see cref="T:System.Xml.XmlNamedNodeMap" /> que contiene los nodos <see langword="XmlEntity" />. El objeto <see langword="XmlNamedNodeMap" /> devuelto es de sólo lectura.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary vsli:raw="Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration.">Obtiene el valor del subconjunto interno de DTD (definición de tipo de documento) de la declaración DOCTYPE.</summary>
      <returns vsli:raw="The DTD internal subset on the DOCTYPE. If there is no DTD internal subset, String.Empty is returned.">Subconjunto interno de la DTD en la declaración DOCTYPE. Si no hay subconjunto interno de la DTD, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because DocumentType nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Si el nodo es de solo lectura; en caso <see langword="false" />contrario,.  
Como los nodos DocumentType son de sólo lectura, esta propiedad siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For DocumentType nodes, this property returns the name of the document type.">Para nodos DocumentType, esta propiedad devuelve el nombre del tipo de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For DocumentType nodes, this property returns the name of the document type.">Para nodos DocumentType, esta propiedad devuelve el nombre del tipo de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="For DocumentType nodes, this value is XmlNodeType.DocumentType.">Para nodos DocumentType, este valor es XmlNodeType.DocumentType.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; nodes present in the document type declaration.">Obtiene la colección de nodos <see cref="T:System.Xml.XmlNotation" /> que está en la declaración de tipos de documento.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamedNodeMap&quot; /&gt; containing the &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes. The returned &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <see cref="T:System.Xml.XmlNamedNodeMap" /> que contiene los nodos <see langword="XmlNotation" />. El objeto <see langword="XmlNamedNodeMap" /> devuelto es de sólo lectura.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the DOCTYPE declaration.">Obtiene el valor del identificador público de la declaración DOCTYPE.</summary>
      <returns vsli:raw="The public identifier on the DOCTYPE. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificador público de la declaración DOCTYPE. Si no hay un identificador público, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the DOCTYPE declaration.">Obtiene el valor del identificador de sistema de la declaración DOCTYPE.</summary>
      <returns vsli:raw="The system identifier on the DOCTYPE. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificador del sistema de la declaración DOCTYPE. Si no hay un identificador del sistema, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlDocumentType&quot; /&gt; nodes, this method has no effect.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos <see langword="XmlDocumentType" />, este método no surte ningún efecto.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary vsli:raw="Represents an element.">Representa un elemento.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix; see the &lt;see cref=&quot;P:System.Xml.XmlElement.Prefix&quot; /&gt; property.">Prefijo del espacio de nombres; vea la propiedad <see cref="P:System.Xml.XmlElement.Prefix" />.</param>
      <param name="localName" vsli:raw="The local name; see the &lt;see cref=&quot;P:System.Xml.XmlElement.LocalName&quot; /&gt; property.">Nombre local; vea la propiedad <see cref="P:System.Xml.XmlElement.LocalName" />.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI; see the &lt;see cref=&quot;P:System.Xml.XmlElement.NamespaceURI&quot; /&gt; property.">URI del espacio de nombres; vea la propiedad <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Documento XML primario.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the list of attributes for this node.">Obtiene una <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene la lista de atributos de este nodo.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the list of attributes for this node.">
        <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene la lista de atributos de este nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself (and its attributes if the node is an &lt;see langword=&quot;XmlElement&quot; /&gt;).">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí (y sus atributos si el nodo es <see langword="XmlElement" />).</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary vsli:raw="Returns the value for the attribute with the specified name.">Devuelve el valor del atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the attribute to retrieve. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">Nombre del atributo que se va a recuperar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente.</param>
      <returns vsli:raw="The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.">Valor del atributo especificado. Se devuelve una cadena vacía si no se encuentra un atributo coincidente o si el atributo no tiene un valor especificado o un valor predeterminado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Returns the value for the attribute with the specified local name and namespace URI.">Devuelve el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to retrieve.">Nombre local del atributo que se va a recuperar.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to retrieve.">Identificador URI de espacio de nombres del atributo que se va a recuperar.</param>
      <returns vsli:raw="The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.">Valor del atributo especificado. Se devuelve una cadena vacía si no se encuentra un atributo coincidente o si el atributo no tiene un valor especificado o un valor predeterminado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary vsli:raw="Returns the &lt;see langword=&quot;XmlAttribute&quot; /&gt; with the specified name.">Devuelve el <see langword="XmlAttribute" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the attribute to retrieve. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">Nombre del atributo que se va a recuperar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente.</param>
      <returns vsli:raw="The specified &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching attribute was not found.">
        <see langword="XmlAttribute" /> especificado o <see langword="null" /> si no se ha encontrado un atributo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified local name and namespace URI.">Devuelve el <see cref="T:System.Xml.XmlAttribute" /> con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The specified &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching attribute was not found.">
        <see langword="XmlAttribute" /> especificado o <see langword="null" /> si no se ha encontrado un atributo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlElement.Name&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlElement.Name" /> especificado.</summary>
      <param name="name" vsli:raw="The name tag to match. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node. The asterisk (*) is a special value that matches all tags.">Etiqueta de nombre que se va a hacer coincidir. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente. El asterisco (*) es un valor especial que coincide con todas las etiquetas.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. The list is empty if there are no matching nodes.">Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. La lista está vacía si no hay ningún nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlElement.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlElement.NamespaceURI&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlElement.LocalName" /> y <see cref="P:System.Xml.XmlElement.NamespaceURI" /> especificados.</summary>
      <param name="localName" vsli:raw="The local name to match. The asterisk (*) is a special value that matches all tags.">Nombre local que se va a hacer coincidir. El asterisco (*) es un valor especial que coincide con todas las etiquetas.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI to match.">Identificador URI de espacio de nombres que se va a hacer coincidir.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. The list is empty if there are no matching nodes.">Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. La lista está vacía si no hay ningún nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary vsli:raw="Determines whether the current node has an attribute with the specified name.">Determina si el nodo actual tiene un atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the attribute to find. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">Nombre del atributo que se va a buscar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has the specified attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nodo actual tiene el atributo especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary vsli:raw="Determines whether the current node has an attribute with the specified local name and namespace URI.">Determina si el nodo actual tiene un atributo con el nombre local y el identificador URI de espacio de nombres especificados.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to find.">Nombre local del atributo que se va a buscar.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to find.">Identificador URI de espacio de nombres del atributo que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has the specified attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nodo actual tiene el atributo especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary vsli:raw="Gets a &lt;see langword=&quot;boolean&quot; /&gt; value indicating whether the current node has any attributes.">Obtiene un valor <see langword="boolean" /> que indica si el nodo actual tiene atributos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nodo actual tiene atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its children.">Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children.">Valores concatenados del nodo y de todos sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing just the children of this node.">Obtiene o establece el marcado que representa sólo los nodos secundarios de este nodo.</summary>
      <returns vsli:raw="The markup of the children of this node.">Marcado de los nodos secundarios de este nodo.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">El código XML especificado al establecer esta propiedad no es correcto.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary vsli:raw="Gets or sets the tag format of the element.">Obtiene o establece el formato de etiqueta del elemento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is to be serialized in the short tag format &quot;&amp;lt;item/&amp;gt;&quot;; &lt;see langword=&quot;false&quot; /&gt; for the long format &quot;&amp;lt;item&amp;gt;&amp;lt;/item&amp;gt;&quot;.  &#xA;  &#xA; When setting this property, if set to &lt;see langword=&quot;true&quot; /&gt;, the children of the element are removed and the element is serialized in the short tag format. If set to &lt;see langword=&quot;false&quot; /&gt;, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.  &#xA;  &#xA; This property is a Microsoft extension to the Document Object Model (DOM).">
        <see langword="true" />Si el elemento se va a serializar en el formato de etiqueta corto&lt;"Item&gt;/"; &lt;&gt;para el formato largo "Item&lt;/Item&gt;". <see langword="false" />  
Cuando se configura esta propiedad, si se establece en <see langword="true" />, se quitan los elementos secundarios del elemento y el elemento se serializa en el formato corto de etiqueta. Si se establece en <see langword="false" />, se cambia el valor de la propiedad (independientemente de que el elemento tenga o no contenido); si el elemento está vacío, se serializa en el formato largo.  
Esta propiedad es una extensión de Microsoft para Document Object Model (DOM).</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">Obtiene el nombre local del nodo actual.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is book for the element &amp;lt;bk:book&amp;gt;.">Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es el libro del elemento &lt;BK: Book&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="The qualified name of the node. For &lt;see langword=&quot;XmlElement&quot; /&gt; nodes, this is the tag name of the element.">Nombre completo del nodo. Para nodos <see langword="XmlElement" />, éste es el nombre de etiqueta del elemento.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">Obtiene el identificador URI de espacio de nombres de este nodo.</summary>
      <returns vsli:raw="The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.">Identificador URI de espacio de nombres de este nodo. Si no hay identificador URI de espacio de nombres, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; immediately following this element.">Obtiene el <see cref="T:System.Xml.XmlNode" /> inmediatamente siguiente a este elemento.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; immediately following this element.">
        <see langword="XmlNode" /> inmediatamente siguiente a este elemento.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlElement&quot; /&gt; nodes, this value is XmlNodeType.Element.">Tipo de nodo. Para nodos <see langword="XmlElement" />, este valor es XmlNodeType.Element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">Obtiene la clase <see cref="T:System.Xml.XmlDocument" /> a la que pertenece este nodo.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlDocument&quot; /&gt; to which this element belongs.">
        <see langword="XmlDocument" /> al que pertenece este elemento.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">
        <see langword="XmlNode" /> que es el elemento principal del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado del árbol, el elemento principal es <see langword="null" />. Para todos los demás nodos, el valor devuelto depende de <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">Obtiene o establece el prefijo de espacio de nombres de este nodo.</summary>
      <returns vsli:raw="The namespace prefix of this node. If there is no prefix, this property returns String.Empty.">Prefijo de espacio de nombres de este nodo. Si no hay prefijo, esta propiedad devuelve String.Empty.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Este nodo es de sólo lectura.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The namespaceURI of this node is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; The specified prefix is &quot;xml&quot; and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.">El prefijo especificado contiene un carácter no válido.  
El prefijo especificado tiene un formato incorrecto.  
El identificador URI de espacio de nombres de este nodo es <see langword="null" />.  
El prefijo especificado es "xml" y el URI del espacio de nombres de este nodo es diferente de http://www.w3.org/XML/1998/namespace.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary vsli:raw="Removes all specified attributes and children of the current node. Default attributes are not removed.">Quita todos los atributos y nodos secundarios especificados del nodo actual. Los atributos predeterminados no se quitan.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary vsli:raw="Removes all specified attributes from the element. Default attributes are not removed.">Quita todos los atributos especificados del elemento. Los atributos predeterminados no se quitan.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary vsli:raw="Removes an attribute by name.">Quita un atributo por el nombre.</summary>
      <param name="name" vsli:raw="The name of the attribute to remove. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">Nombre del atributo que se va a quitar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">El nodo es de solo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary vsli:raw="Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).">Quita un atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado. (Si el atributo eliminado tiene un valor predeterminado, se reemplaza inmediatamente).</summary>
      <param name="localName" vsli:raw="The local name of the attribute to remove.">Nombre local del atributo que se va a quitar.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to remove.">Identificador URI de espacio de nombres del atributo que se va a quitar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">El nodo es de solo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary vsli:raw="Removes the attribute node with the specified index from the element. (If the removed attribute has a default value, it is immediately replaced).">Quita del elemento el nodo de atributo con el índice especificado. (Si el atributo eliminado tiene un valor predeterminado, se reemplaza inmediatamente).</summary>
      <param name="i" vsli:raw="The index of the node to remove. The first node has index 0.">Índice del nodo que se va a quitar. El primer nodo tiene índice 0.</param>
      <returns vsli:raw="The attribute node removed or &lt;see langword=&quot;null&quot; /&gt; if there is no node at the given index.">Nodo de atributo que se quita o <see langword="null" /> si no hay un nodo en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; specified by the local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).">Quita el <see cref="T:System.Xml.XmlAttribute" /> especificado mediante el nombre local y el identificador URI de espacio de nombres. (Si el atributo eliminado tiene un valor predeterminado, se reemplaza inmediatamente).</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The removed &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see langword=&quot;XmlElement&quot; /&gt; does not have a matching attribute node.">
        <see langword="XmlAttribute" /> que se ha quitado o <see langword="null" /> si <see langword="XmlElement" /> no tiene un nodo de atributo coincidente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Este nodo es de sólo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">Quita el objeto <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="oldAttr" vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; node to remove. If the removed attribute has a default value, it is immediately replaced.">Nodo <see langword="XmlAttribute" /> que se va a quitar. Si el atributo que se quita tiene un valor predeterminado, se reemplaza inmediatamente.</param>
      <returns vsli:raw="The removed &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;oldAttr&quot; /&gt; is not an attribute node of the &lt;see langword=&quot;XmlElement&quot; /&gt;.">
        <see langword="XmlAttribute" /> que se ha quitado o <see langword="null" /> si <paramref name="oldAttr" /> no es un nodo de atributo de <see langword="XmlElement" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Este nodo es de sólo lectura.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary vsli:raw="Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.">Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the post schema validation infoset of this node.">Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary vsli:raw="Sets the value of the attribute with the specified name.">Establece el valor del atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components.">Nombre del atributo que se va a crear o modificar. Es un nombre completo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes de prefijo y nombre local.</param>
      <param name="value" vsli:raw="The value to set for the attribute.">Valor en que se va a establecer el atributo.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified name contains an invalid character.">El nombre especificado contiene un carácter no válido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">El nodo es de solo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Sets the value of the attribute with the specified local name and namespace URI.">Establece el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <param name="value" vsli:raw="The value to set for the attribute.">Valor en que se va a establecer el atributo.</param>
      <returns vsli:raw="The attribute value.">Valor del atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">Agrega el <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to add.">
        <see langword="XmlAttribute" /> que se va a agregar.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">Agrega el <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="newAttr" vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; node to add to the attribute collection for this element.">Nodo <see langword="XmlAttribute" /> que se va a agregar a la colección de atributos de este elemento.</param>
      <returns vsli:raw="If the attribute replaces an existing attribute with the same name, the old &lt;see langword=&quot;XmlAttribute&quot; /&gt; is returned; otherwise, &lt;see langword=&quot;null&quot; /&gt; is returned.">Si el atributo reemplaza a un atributo existente del mismo nombre, se devolverá el <see langword="XmlAttribute" /> antiguo; en caso contrario, se devolverá <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newAttr&quot; /&gt; was created from a different document than the one that created this node. Or this node is read-only.">
        <paramref name="newAttr" /> se creó a partir de un documento diferente del que creó este nodo. O este nodo es de sólo lectura.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;newAttr&quot; /&gt; is already an attribute of another &lt;see langword=&quot;XmlElement&quot; /&gt; object. You must explicitly clone &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes to re-use them in other &lt;see langword=&quot;XmlElement&quot; /&gt; objects.">
        <paramref name="newAttr" /> ya es un atributo de otro objeto <see langword="XmlElement" />. Los nodos <see langword="XmlAttribute" /> se deben clonar explícitamente para volver a utilizarlos en otros objetos <see langword="XmlElement" />.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the current node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo actual en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary vsli:raw="Represents an entity declaration, such as &amp;lt;!ENTITY... &amp;gt;.">Representa una declaración de entidad, como &lt;!ENTITY... &gt;.</summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the current node.">Obtiene el identificador uniforme de recursos (URI) del nodo actual.</summary>
      <returns vsli:raw="The location from which the node was loaded.">Ubicación desde la que se cargó el nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node. Entity nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; object throws an exception.">Crea un duplicado de este nodo. Los nodos de entidad no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlEntity" />, se produce una excepción.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; from which the method is called.">Copia del nodo <see cref="T:System.Xml.XmlNode" /> desde el que se llamó al método.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Entity nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; object throws an exception.">Los nodos de entidad no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlEntity" />, se produce una excepción.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary vsli:raw="Gets the concatenated values of the entity node and all its children.">Obtiene valores concatenados del nodo de la entidad y de todos su nodos secundarios.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children.">Valores concatenados del nodo y de todos sus nodos secundarios.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">Se intentó establecer la propiedad.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary vsli:raw="Gets the markup representing the children of this node.">Obtiene el marcado que representa los nodos secundarios de este nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, String.Empty is returned.">Para nodos <see langword="XmlEntity" />, se devuelve String.Empty.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">Se intentó establecer la propiedad.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Si el nodo es de solo lectura; en caso <see langword="false" />contrario,.  
Como los nodos <see langword="XmlEntity" /> son de sólo lectura, esta propiedad siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary vsli:raw="Gets the name of the node without the namespace prefix.">Obtiene el nombre del nodo sin el prefijo de espacio de nombres.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this property returns the name of the entity.">Para nodos <see langword="XmlEntity" />, esta propiedad devuelve el nombre de la entidad.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary vsli:raw="Gets the name of the node.">Obtiene el nombre del nodo.</summary>
      <returns vsli:raw="The name of the entity.">Nombre de la entidad.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary vsli:raw="Gets the type of the node.">Obtiene el tipo del nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, the value is XmlNodeType.Entity.">Tipo de nodo. Para nodos <see langword="XmlEntity" />, el valor es XmlNodeType.Entity.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary vsli:raw="Gets the name of the optional NDATA attribute on the entity declaration.">Obtiene el nombre del atributo opcional NDATA en la declaración de la entidad.</summary>
      <returns vsli:raw="The name of the NDATA attribute. If there is no NDATA, &lt;see langword=&quot;null&quot; /&gt; is returned.">Nombre del atributo NDATA. Si no hay un atributo NDATA, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary vsli:raw="Gets the markup representing this node and all its children.">Obtiene el marcado que representa este nodo y todos sus nodos secundarios.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, String.Empty is returned.">Para nodos <see langword="XmlEntity" />, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the entity declaration.">Obtiene el valor del identificador público de la declaración de entidad.</summary>
      <returns vsli:raw="The public identifier on the entity. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificador público de la entidad. Si no hay un identificador público, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the entity declaration.">Obtiene el valor del identificador de sistema de la declaración de entidad.</summary>
      <returns vsli:raw="The system identifier on the entity. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificador de sistema de la entidad. Si no hay un identificador del sistema, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this method has no effect.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos <see langword="XmlEntity" />, este método no surte ningún efecto.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this method has no effect.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos <see langword="XmlEntity" />, este método no surte ningún efecto.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary vsli:raw="Represents an entity reference node.">Representa un nodo de referencia a entidad.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlEntityReference" />.</summary>
      <param name="name" vsli:raw="The name of the entity reference; see the &lt;see cref=&quot;P:System.Xml.XmlEntityReference.Name&quot; /&gt; property.">Nombre de la referencia de entidad; vea la propiedad <see cref="P:System.Xml.XmlEntityReference.Name" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Documento XML primario.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the current node.">Obtiene el identificador uniforme de recursos (URI) del nodo actual.</summary>
      <returns vsli:raw="The location from which the node was loaded.">Ubicación desde la que se cargó el nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this method always returns an entity reference node with no children. The replacement text is set when the node is inserted into a parent.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Para nodos <see langword="XmlEntityReference" />, este método devuelve siempre un nodo de referencia a entidad sin nodos secundarios. El texto de reemplazo se establece al insertar el nodo en otro primario.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si el nodo es de sólo lectura; en caso contrario, es <see langword="false" />.  
Como los nodos <see langword="XmlEntityReference" /> son de sólo lectura, esta propiedad siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this property returns the name of the entity referenced.">Para nodos <see langword="XmlEntityReference" />, esta propiedad devuelve el nombre de la entidad a la que se hace referencia.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary vsli:raw="Gets the name of the node.">Obtiene el nombre del nodo.</summary>
      <returns vsli:raw="The name of the entity referenced.">Nombre de la entidad a la que se hace referencia.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary vsli:raw="Gets the type of the node.">Obtiene el tipo del nodo.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, the value is XmlNodeType.EntityReference.">Tipo de nodo. Para nodos <see langword="XmlEntityReference" />, el valor es XmlNodeType.EntityReference.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtiene o establece el valor del nodo.</summary>
      <returns vsli:raw="The value of the node. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Valor del nodo. Para nodos <see langword="XmlEntityReference" />, esta propiedad devuelve <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Node is read-only.">El nodo es de sólo lectura.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the property.">Establecer la propiedad.</exception>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary vsli:raw="Returns detailed information about the last exception.">Devuelve información detallada sobre la última excepción.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="XmlException" />.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see langword="XmlException" /> utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XmlException&quot; /&gt;.">Objeto <see langword="SerializationInfo" /> que contiene todas las propiedades de una <see langword="XmlException" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object containing the context information.">Objeto <see langword="StreamingContext" /> que contiene la información de contexto.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class with a specified error message.">Inicializa una nueva instancia de la clase <see langword="XmlException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="The error description.">Descripción de error.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="XmlException" />.</summary>
      <param name="message" vsli:raw="The description of the error condition.">Descripción de la condición de error.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that threw the &lt;see langword=&quot;XmlException&quot; /&gt;, if any. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Exception" /> que inició <see langword="XmlException" />, en caso de que exista. Este valor puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class with the specified message, inner exception, line number, and line position.">Inicializa una nueva instancia de la clase <see langword="XmlException" /> con el mensaje, la excepción interna, el número de línea y la posición de línea especificados.</summary>
      <param name="message" vsli:raw="The error description.">Descripción de error.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Excepción que es la causa de la excepción actual. Este valor puede ser <see langword="null" />.</param>
      <param name="lineNumber" vsli:raw="The line number indicating where the error occurred.">Número de línea que indica dónde se produjo el error.</param>
      <param name="linePosition" vsli:raw="The line position indicating where the error occurred.">Posición de línea que indica dónde se produjo el error.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XmlException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Transmite todas las propiedades <see langword="XmlException" /> a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">Objeto <see langword="SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">Objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred. Line numbers start at 1.">Obtiene el número de línea que indica dónde se produjo el error.</summary>
      <returns vsli:raw="The line number indicating where the error occurred.">Número de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred. Line position starts at 1.">Obtiene la posición de línea que indica dónde se produjo el error.</summary>
      <returns vsli:raw="The line position indicating where the error occurred.">Posición de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary vsli:raw="Gets a message describing the current exception.">Obtiene un mensaje que describe la excepción actual.</summary>
      <returns vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary vsli:raw="Gets the location of the XML file.">Obtiene la ubicación del archivo XML.</summary>
      <returns vsli:raw="The source URI for the XML data. If there is no source URI, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Identificador URI de origen de los datos XML. Si no hay ningún URI de origen, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary vsli:raw="Defines the context for a set of &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; objects.">Define el contexto para un conjunto de objetos <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; class with the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; specified.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlImplementation" /> con el <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlNameTable" />.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">Crea un nuevo <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocument&quot; /&gt; object.">El nuevo objeto <see langword="XmlDocument" /> .</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary vsli:raw="Tests if the Document Object Model (DOM) implementation implements a specific feature.">Comprueba si la implementación de DOM (Document Object Model) incluye una característica específica.</summary>
      <param name="strFeature" vsli:raw="The package name of the feature to test. This name is not case-sensitive.">Nombre del paquete de la característica que se va a comprobar. Este nombre no distingue entre mayúsculas y minúsculas.</param>
      <param name="strVersion" vsli:raw="This is the version number of the package name to test. If the version is not specified (&lt;see langword=&quot;null&quot; /&gt;), supporting any version of the feature causes the method to return &lt;see langword=&quot;true&quot; /&gt;.">Se trata del número de versión del nombre del paquete que se va a comprobar. Si no se ha especificado la versión (<see langword="null" />), la compatibilidad con cualquier versión de la característica hace que el método devuelva <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the feature is implemented in the specified version; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; The following table shows the combinations that cause &lt;see langword=&quot;HasFeature&quot; /&gt; to return &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; strFeature&lt;/term&gt;&lt;description&gt; strVersion&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 1.0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 2.0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Es <see langword="true" /> si la característica se implementa en la versión especificada; en caso contrario, es <see langword="false" />.  
La siguiente tabla muestra las combinaciones que hacen que <see langword="HasFeature" /> devuelva <see langword="true" />.  
  strFeature 
  strVersion 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary vsli:raw="Gets the node immediately preceding or following this node.">Obtiene el nodo inmediatamente anterior o siguiente a éste.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary vsli:raw="Gets the node immediately following this node.">Obtiene el nodo inmediatamente siguiente a éste.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; immediately following this node or &lt;see langword=&quot;null&quot; /&gt; if one does not exist.">
        <see cref="T:System.Xml.XmlNode" /> inmediatamente siguiente a este nodo o <see langword="null" /> en caso de que uno no exista.</returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary vsli:raw="Gets the node immediately preceding this node.">Obtiene el nodo inmediatamente anterior a éste.</summary>
      <returns vsli:raw="The preceding &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if one does not exist.">
        <see cref="T:System.Xml.XmlNode" /> anterior o <see langword="null" /> en caso de que uno no exista.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary vsli:raw="Represents a collection of nodes that can be accessed by name or index.">Representa una colección de nodos a los que se puede tener acceso por nombre o por índice.</summary>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">Obtiene el número de nodos de <see langword="XmlNamedNodeMap" />.</summary>
      <returns vsli:raw="The number of nodes.">Número de nodos.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary vsli:raw="Provides support for the &quot;foreach&quot; style iteration over the collection of nodes in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">Proporciona funcionalidad para la iteración de estilo "foreach" en la colección de nodos de <see langword="XmlNamedNodeMap" />.</summary>
      <returns vsli:raw="An enumerator object.">Objeto enumerador.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary vsli:raw="Retrieves an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; specified by name.">Recupera un objeto <see cref="T:System.Xml.XmlNode" /> especificado por el nombre.</summary>
      <param name="name" vsli:raw="The qualified name of the node to retrieve. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property of the matching node.">Nombre completo del nodo que se va a recuperar. Se compara con la propiedad <see cref="P:System.Xml.XmlNode.Name" /> del nodo coincidente.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNode&quot; /&gt; with the specified name or &lt;see langword=&quot;null&quot; /&gt; if a matching node is not found.">
        <see langword="XmlNode" /> con el nombre especificado o <see langword="null" /> si no se encuentra ningún nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary vsli:raw="Retrieves a node with the matching &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Recupera un nodo con <see cref="P:System.Xml.XmlNode.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> coincidentes.</summary>
      <param name="localName" vsli:raw="The local name of the node to retrieve.">Nombre local del nodo que se va a recuperar.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the node to retrieve.">El Identificador uniforme de recursos (Identificador URI) del espacio de nombres del nodo a recuperar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the matching local name and namespace URI or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">
        <see cref="T:System.Xml.XmlNode" /> con el nombre local y el identificador URI de espacio de nombres coincidentes o <see langword="null" /> si no se ha encontrado un nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary vsli:raw="Retrieves the node at the specified index in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">Recupera el nodo que se encuentra en el índice especificado en <see langword="XmlNamedNodeMap" />.</summary>
      <param name="index" vsli:raw="The index position of the node to retrieve from the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;. The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is &lt;see cref=&quot;P:System.Xml.XmlNamedNodeMap.Count&quot; /&gt; -1.">Posición de índice del nodo que se va a recuperar de <see langword="XmlNamedNodeMap" />. El índice es de base cero, por lo que el índice del primer nodo es 0 y el del último nodo es <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> - 1.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; at the specified index. If &lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the &lt;see cref=&quot;P:System.Xml.XmlNamedNodeMap.Count&quot; /&gt; property, &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <see cref="T:System.Xml.XmlNode" /> en el índice especificado. Si <paramref name="index" /> es menor que 0 o mayor o igual que la propiedad <see cref="P:System.Xml.XmlNamedNodeMap.Count" />, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary vsli:raw="Removes the node from the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">Quita el nodo de <see langword="XmlNamedNodeMap" />.</summary>
      <param name="name" vsli:raw="The qualified name of the node to remove. The name is matched against the &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property of the matching node.">Nombre completo del nodo que se va a quitar. El nombre se compara con la propiedad <see cref="P:System.Xml.XmlNode.Name" /> del nodo coincidente.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; removed from this &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">
        <see langword="XmlNode" /> quitado de este <see langword="XmlNamedNodeMap" /> o <see langword="null" /> si no se ha encontrado un nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary vsli:raw="Removes a node with the matching &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Quita un nodo con <see cref="P:System.Xml.XmlNode.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> coincidentes.</summary>
      <param name="localName" vsli:raw="The local name of the node to remove.">Nombre local del nodo que se va a quitar.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the node to remove.">Identificador URI de espacio de nombres del nodo que se va a quitar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; removed or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">
        <see cref="T:System.Xml.XmlNode" /> quitado o <see langword="null" /> si no se ha encontrado un nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; using its &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property.">Agrega un <see cref="T:System.Xml.XmlNode" /> mediante su propiedad <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <param name="node" vsli:raw="An &lt;see langword=&quot;XmlNode&quot; /&gt; to store in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;. If a node with that name is already present in the map, it is replaced by the new one.">
        <see langword="XmlNode" /> que se almacenará en <see langword="XmlNamedNodeMap" />. Si ya hay un nodo con ese nombre en el mapa, se reemplazará por el nuevo.</param>
      <returns vsli:raw="If the &lt;paramref name=&quot;node&quot; /&gt; replaces an existing node with the same name, the old node is returned; otherwise, &lt;see langword=&quot;null&quot; /&gt; is returned.">Si <paramref name="node" /> reemplaza a un nodo existente con el mismo nombre, se devolverá el nodo antiguo; en caso contrario, se devolverá <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;node&quot; /&gt; was created from a different &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; than the one that created the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;; or the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <paramref name="node" /> se creó a partir de un <see cref="T:System.Xml.XmlDocument" /> distinto al que creó <see langword="XmlNamedNodeMap" />, o <see langword="XmlNamedNodeMap" /> es de sólo lectura.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary vsli:raw="Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.">Resuelve, agrega y quita espacios de nombres en una colección y proporciona la administración del ámbito de estos espacios de nombres.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNamespaceManager" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; is passed to the constructor.">El constructor recibe <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary vsli:raw="Adds the given namespace to the collection.">Agrega el espacio de nombres especificado a la colección.</summary>
      <param name="prefix" vsli:raw="The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.  &#xA;  &#xA; Note If the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified. If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace. For more information about XPath expressions and the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, refer to the &lt;see cref=&quot;M:System.Xml.XmlNode.SelectNodes(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)&quot; /&gt; methods.">Prefijo que se va a asociar al espacio de nombres que se agrega. Utilice String.Empty para agregar un espacio de nombres predeterminado.  
 Nota Si se usa <see cref="T:System.Xml.XmlNamespaceManager" /> para resolver los espacios de nombres en una expresión XPath (XML Path Language), se ha de especificar un prefijo. Si una expresión XPath no incluye un prefijo, se supone que el identificador uniforme de recursos (URI) del espacio de nombres corresponde al espacio de nombres vacío. Para obtener más información sobre las expresiones XPath y <see cref="T:System.Xml.XmlNamespaceManager" />, vea los métodos <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> y <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</param>
      <param name="uri" vsli:raw="The namespace to add.">Espacio de nombres que se va a agregar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for &lt;paramref name=&quot;prefix&quot; /&gt; is &quot;xml&quot; or &quot;xmlns&quot;.">El valor de <paramref name="prefix" /> es "xml" o "xmlns".</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="prefix" /> o <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary vsli:raw="Gets the namespace URI for the default namespace.">Obtiene el identificador URI de espacio de nombres del espacio de nombres predeterminado.</summary>
      <returns vsli:raw="The namespace URI for the default namespace, or an empty string if there is no default namespace.">Identificador URI de espacio de nombres para el espacio de nombres predeterminado o una cadena vacía si no hay espacio de nombres predeterminado.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary vsli:raw="Returns an enumerator to use to iterate through the namespaces in the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">Devuelve un enumerador que se utilizará para recorrer en iteración los espacios de nombres de <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; containing the prefixes stored by the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> que contiene los prefijos almacenados por <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.">Obtiene una colección de nombres de espacios de nombres por clave de prefijo que se puede utilizar para enumerar los espacios de nombres que actualmente se encuentran en el ámbito.</summary>
      <param name="scope" vsli:raw="An enumeration value that specifies the type of namespace nodes to return.">Un valor de enumeración que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
      <returns vsli:raw="A collection of namespace and prefix pairs currently in scope.">Una colección de espacios de nombres y prefijos que se encuentran actualmente en el ámbito.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary vsli:raw="Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.">Obtiene un valor que indica si el prefijo proporcionado tiene un espacio de nombres definido para el ámbito que se ha insertado.</summary>
      <param name="prefix" vsli:raw="The prefix of the namespace you want to find.">Prefijo del espacio de nombres que se desea buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a namespace defined; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha definido un espacio de nombres; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI for the specified prefix.">Obtiene el identificador URI de espacio de nombres del prefijo especificado.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase String.Empty.</param>
      <returns vsli:raw="The namespace URI for &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if there is no mapped namespace. The returned string is atomized.  &#xA;  &#xA; For more information on atomized strings, see the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; class.">Identificador URI de espacio de nombres de <paramref name="prefix" /> o <see langword="null" /> si no se ha asignado un espacio de nombres. La cadena devuelta está subdividida.  
Para obtener más información sobre cadenas subdivididas, vea la clase <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary vsli:raw="Finds the prefix declared for the given namespace URI.">Busca el prefijo declarado para el identificador URI de espacio de nombres especificado.</summary>
      <param name="uri" vsli:raw="The namespace to resolve for the prefix.">Espacio de nombres que se va a resolver para el prefijo.</param>
      <returns vsli:raw="The matching prefix. If there is no mapped prefix, the method returns String.Empty. If a null value is supplied, then &lt;see langword=&quot;null&quot; /&gt; is returned.">Prefijo que coincide. Si no hay ningún prefijo asignado, el método devuelve String.Empty. Si se proporciona un valor nulo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this object.">Obtiene la <see cref="T:System.Xml.XmlNameTable" /> asociada a este objeto.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used by this object.">
        <see cref="T:System.Xml.XmlNameTable" /> que utiliza este objeto.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary vsli:raw="Pops a namespace scope off the stack.">Extrae un ámbito de espacio de nombres de la pila.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are namespace scopes left on the stack; &lt;see langword=&quot;false&quot; /&gt; if there are no more namespaces to pop.">Es <see langword="true" /> si quedan ámbitos de espacio de nombres en la pila; es <see langword="false" /> si no quedan espacios de nombres para extraer.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary vsli:raw="Pushes a namespace scope onto the stack.">Inserta un ámbito de espacio de nombres en la pila.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary vsli:raw="Removes the given namespace for the given prefix.">Quita el espacio de nombres dado del prefijo especificado.</summary>
      <param name="prefix" vsli:raw="The prefix for the namespace.">Prefijo del espacio de nombres.</param>
      <param name="uri" vsli:raw="The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored.">Espacio de nombres que se va a quitar del prefijo especificado. El espacio de nombres quitado pertenece al ámbito de espacio de nombres actual. Los espacios de nombres que no pertenecen al ámbito actual no se tienen en cuenta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="prefix" /> o <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary vsli:raw="Defines the namespace scope.">Define el ámbito del espacio de nombres.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary vsli:raw="All namespaces defined in the scope of the current node. This includes the xmlns:xml namespace which is always declared implicitly. The order of the namespaces returned is not defined.">Todos los espacios de nombres definidos en el ámbito del nodo actual. Esto incluye el espacio de nombres xmlns:xml que siempre se declara de manera implícita. No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary vsli:raw="All namespaces defined in the scope of the current node, excluding the xmlns:xml namespace, which is always declared implicitly. The order of the namespaces returned is not defined.">Todos los espacios de nombres definidos en el ámbito del nodo actual, excluido el espacio de nombres xmlns:xml, que siempre se declara implícitamente. No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary vsli:raw="All namespaces that are defined locally at the current node.">Todos los espacios de nombres definidos localmente en el nodo actual.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary vsli:raw="Table of atomized string objects.">Tabla de objetos en forma de cadena subdividida.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, atomizes the specified string and adds it to the &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a <see langword="XmlNameTable" />.</summary>
      <param name="array" vsli:raw="The character array containing the name to add.">Matriz de caracteres que contiene el nombre que se va a agregar.</param>
      <param name="offset" vsli:raw="Zero-based index into the array specifying the first character of the name.">Índice de base cero de la matriz que especifica el primer carácter del nombre.</param>
      <param name="length" vsli:raw="The number of characters in the name.">Número de caracteres del nombre.</param>
      <returns vsli:raw="The new atomized string or the existing one if it already exists. If length is zero, String.Empty is returned.">Cadena subdividida nueva o cadena existente si ya hay una. Si la longitud es cero, se devuelve String.Empty.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;offset&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;length&quot; /&gt; =0.">0 &gt; <paramref name="offset" />  
O bien 
 <paramref name="offset" /> &gt;= <paramref name="array" />.Length 
o bien 
 <paramref name="length" /> &gt; <paramref name="array" />.Length 
Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="length" /> = 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; &amp;lt; 0.">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary vsli:raw="When overridden in a derived class, atomizes the specified string and adds it to the &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a <see langword="XmlNameTable" />.</summary>
      <param name="array" vsli:raw="The name to add.">Nombre que se va a agregar.</param>
      <returns vsli:raw="The new atomized string or the existing one if it already exists.">Cadena subdividida nueva o cadena existente si ya hay una.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.">Cuando se invalida en una clase derivada, se obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.</summary>
      <param name="array" vsli:raw="The character array containing the name to look up.">Matriz de caracteres que contiene el nombre que se va a buscar.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying the first character of the name.">Índice de base cero de la matriz que especifica el primer carácter del nombre.</param>
      <param name="length" vsli:raw="The number of characters in the name.">Número de caracteres del nombre.</param>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized. If &lt;paramref name=&quot;length&quot; /&gt; is zero, String.Empty is returned.">Cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todavía. Si <paramref name="length" /> es cero, se devuelve String.Empty.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;offset&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;length&quot; /&gt; =0.">0 &gt; <paramref name="offset" />  
O bien 
 <paramref name="offset" /> &gt;= <paramref name="array" />.Length 
O bien 
 <paramref name="length" /> &gt; <paramref name="array" />.Length 
Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="length" /> = 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; &amp;lt; 0.">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the atomized string containing the same value as the specified string.">Cuando se invalida en una clase derivada, obtiene la cadena subdividida que contiene el mismo valor que la cadena especificada.</summary>
      <param name="array" vsli:raw="The name to look up.">Nombre que se va a buscar.</param>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized.">Cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todavía.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary vsli:raw="Represents a single node in the XML document.">Representa un único nodo en el documento XML.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the end of the list of child nodes, of this node.">Agrega el nodo especificado al final de la lista de nodos secundarios de este nodo.</summary>
      <param name="newChild" vsli:raw="The node to add. All the contents of the node to be added are moved into the specified location.">Nodo que se va a agregar. Todo el contenido del nodo que se va a agregar se pasa a la ubicación especificada.</param>
      <returns vsli:raw="The node added.">Nodo agregado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
Este nodo es de sólo lectura.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the attributes of this node.">Obtiene un objeto <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene los atributos de este nodo.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlAttributeCollection&quot; /&gt; containing the attributes of the node.  &#xA;  &#xA; If the node is of type XmlNodeType.Element, the attributes of the node are returned. Otherwise, this property returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="XmlAttributeCollection" /> que contiene los atributos de este nodo.  
Si el nodo es del tipo XmlNodeType.Element, se devuelven sus atributos. En caso contrario, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtiene el identificador URI base del nodo actual.</summary>
      <returns vsli:raw="The location from which the node was loaded or String.Empty if the node has no base URI.">Ubicación desde la que se cargó el nodo o String.Empty si el nodo no tiene un identificador URI base.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary vsli:raw="Gets all the child nodes of the node.">Obtiene todos los nodos secundarios del nodo.</summary>
      <returns vsli:raw="An object that contains all the child nodes of the node.  &#xA;  &#xA; If there are no child nodes, this property returns an empty &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt;.">Objeto que contiene todos los nodos secundarios del nodo.  
Si no hay ningún nodo secundario, esta propiedad devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> vacío.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the node, when overridden in a derived class.">Crea un duplicado del nodo, cuando se invalida en una clase derivada.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling this method on a node type that cannot be cloned.">Llamar a este método en un tipo de nodo que no se puede clonar.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; for navigating this object.">Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para desplazarse por este objeto.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; object used to navigate the node. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node from which the method was called. It is not positioned on the root of the document.">Un objeto <see langword="XPathNavigator" /> utilizado para navegar por el nodo. <see langword="XPathNavigator" /> se sitúa en el nodo desde el que se llamó al método. No se sitúa en la raíz del documento.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary vsli:raw="Gets the first child of the node.">Obtiene el primer nodo secundario del nodo.</summary>
      <returns vsli:raw="The first child of the node. If there is no such node, &lt;see langword=&quot;null&quot; /&gt; is returned.">Primer nodo secundario del nodo. Si no hay nodo secundario, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that iterates through the child nodes in the current node.">Obtiene un enumerador que recorre en iteración los nodos secundarios del nodo actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the child nodes in the current node.">Objeto <see cref="T:System.Collections.IEnumerator" /> que puede utilizarse para recorrer en iteración los nodos secundarios en el nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Looks up the closest xmlns declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.">Busca la declaración xmlns más cercana para el prefijo especificado que está en el ámbito del nodo actual y devuelve el identificador URI de espacio de nombres de la declaración.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to find.">Prefijo cuyo URI de espacio de nombres se desea buscar.</param>
      <returns vsli:raw="The namespace URI of the specified prefix.">Identificador URI de espacio de nombres del prefijo especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary vsli:raw="Looks up the closest xmlns declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.">Busca la declaración xmlns más cercana para el identificador URI de espacio de nombres especificado que está en el ámbito del nodo actual y devuelve el prefijo definido en la declaración.</summary>
      <param name="namespaceURI" vsli:raw="The namespace URI whose prefix you want to find.">Identificador URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <returns vsli:raw="The prefix for the specified namespace URI.">Prefijo del identificador URI de espacio de nombres especificado.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary vsli:raw="Gets a value indicating whether this node has any child nodes.">Obtiene un valor que indica si este nodo tiene nodos secundarios.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node has child nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nodo tiene nodos secundarios; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its child nodes.">Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.</summary>
      <returns vsli:raw="The concatenated values of the node and all its child nodes.">Valores concatenados del nodo y de todos sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing only the child nodes of this node.">Obtiene o establece el marcado que representa solo los nodos secundarios de este nodo.</summary>
      <returns vsli:raw="The markup of the child nodes of this node, not including default attributes.">Marcado de los nodos secundarios de este nodo.  
 <see langword="InnerXml" /> no devuelve los atributos predeterminados.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property on a node that cannot have child nodes.">Establecer esta propiedad en un nodo que no puede tener secundarios.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">El código XML especificado al establecer esta propiedad no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately after the specified reference node.">Inserta el nodo especificado inmediatamente detrás del nodo de referencia igualmente especificado.</summary>
      <param name="newChild" vsli:raw="The node to insert.">Nodo que se va a insertar.</param>
      <param name="refChild" vsli:raw="The reference node. &lt;paramref name=&quot;newChild&quot; /&gt; is placed after &lt;paramref name=&quot;refChild&quot; /&gt;.">Nodo de referencia. Parámetro <paramref name="newChild" /> se coloca detrás de <paramref name="refChild" />.</param>
      <returns vsli:raw="The node being inserted.">Nodo que se va a insertar.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
<paramref name="refChild" /> no es un nodo secundario de este nodo.  
Este nodo es de sólo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately before the specified reference node.">Inserta el nodo especificado inmediatamente antes del nodo de referencia igualmente especificado.</summary>
      <param name="newChild" vsli:raw="The node to insert.">Nodo que se va a insertar.</param>
      <param name="refChild" vsli:raw="The reference node. &lt;paramref name=&quot;newChild&quot; /&gt; is placed before this node.">Nodo de referencia. <paramref name="newChild" /> se coloca delante de este nodo.</param>
      <returns vsli:raw="The node being inserted.">Nodo que se va a insertar.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">El nodo actual es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
<paramref name="refChild" /> no es un nodo secundario de este nodo.  
Este nodo es de sólo lectura.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si el nodo es de solo lectura; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary vsli:raw="Gets the first child element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt;.">Obtiene el primer elemento secundario con el <see cref="P:System.Xml.XmlNode.Name" /> especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the element to retrieve.">Nombre completo del elemento que se va a recuperar.</param>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; that matches the specified name. It returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if there is no match.">Primer <see cref="T:System.Xml.XmlElement" /> que coincide con el nombre especificado. Devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ninguna coincidencia.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary vsli:raw="Gets the first child element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Obtiene el primer elemento secundario con el <see cref="P:System.Xml.XmlNode.LocalName" /> y el <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="localname" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the matching &lt;paramref name=&quot;localname&quot; /&gt; and &lt;paramref name=&quot;ns&quot; /&gt;. It returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if there is no match.">Primer <see cref="T:System.Xml.XmlElement" /> con los parámetros <paramref name="localname" /> y <paramref name="ns" /> coincidentes. . Devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ninguna coincidencia.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary vsli:raw="Gets the last child of the node.">Obtiene el último nodo secundario del nodo.</summary>
      <returns vsli:raw="The last child of the node. If there is no such node, &lt;see langword=&quot;null&quot; /&gt; is returned.">Último nodo secundario del nodo. Si no hay nodo secundario, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary vsli:raw="Gets the local name of the node, when overridden in a derived class.">Obtiene el nombre local del nodo, cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The name of the node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is book for the element &amp;lt;bk:book&amp;gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The local name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; #cdata-section&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; #comment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt; #document&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt; #document-fragment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; The local name of the element.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt; The name of the entity.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt; The notation name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; #text&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; #whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; #significant-whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; #xml-declaration&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre del nodo sin prefijo. Por ejemplo, <see langword="LocalName" /> es el libro del elemento &lt;BK: Book&gt;.  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
  Tipo 
  nombre 
  Atributo 
  Nombre local del atributo.  
  CDATA 
  #cdata-section 
  Comentario 
  #comment 
  Documento 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType 
  Nombre del tipo de documento.  
  Elemento 
  Nombre local del elemento.  
  Entity 
  Nombre de la entidad.  
  EntityReference 
  Nombre de la entidad a la que se hace referencia.  
  Notation 
  Nombre de la notación.  
  ProcessingInstruction 
  Destino de la instrucción de procesamiento.  
  Texto 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary vsli:raw="Gets the qualified name of the node, when overridden in a derived class.">Cuando se invalida en una clase derivada, obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="The qualified name of the node. The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The qualified name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; #cdata-section&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; #comment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt; #document&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt; #document-fragment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; The qualified name of the element.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt; The name of the entity.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt; The notation name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; #text&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; #whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; #significant-whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; #xml-declaration&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre completo del nodo. El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
  Tipo 
  nombre 
  Atributo 
  Nombre completo del atributo.  
  CDATA 
  #cdata-section 
  Comentario 
  #comment 
  Documento 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType 
  Nombre del tipo de documento.  
  Elemento 
  Nombre completo del elemento.  
  Entity 
  Nombre de la entidad.  
  EntityReference 
  Nombre de la entidad a la que se hace referencia.  
  Notation 
  Nombre de la notación.  
  ProcessingInstruction 
  Destino de la instrucción de procesamiento.  
  Texto 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">Obtiene el identificador URI de espacio de nombres de este nodo.</summary>
      <returns vsli:raw="The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.">Identificador URI de espacio de nombres de este nodo. Si no hay identificador URI de espacio de nombres, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary vsli:raw="Gets the node immediately following this node.">Obtiene el nodo inmediatamente siguiente a éste.</summary>
      <returns vsli:raw="The next &lt;see langword=&quot;XmlNode&quot; /&gt;. If there is no next node, &lt;see langword=&quot;null&quot; /&gt; is returned.">La clase <see langword="XmlNode" /> siguiente. Si no hay nodo siguiente, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary vsli:raw="Gets the type of the current node, when overridden in a derived class.">Obtiene el tipo del nodo actual cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Xml.XmlNodeType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary vsli:raw="Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a &quot;normal&quot; form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.">Hace que todos los nodos XmlText de toda la profundidad del subárbol situado bajo XmlNode aparezcan de forma "normal", de modo que solo el marcado (es decir, las etiquetas, comentarios, instrucciones de procesamiento, secciones CDATA y referencias a entidades) separa los nodos XmlText, es decir, no hay nodos XmlText adyacentes.</summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary vsli:raw="Gets the markup containing this node and all its child nodes.">Obtiene el marcado que contiene este nodo y todos sus nodos secundarios.</summary>
      <returns vsli:raw="The markup containing this node and all its child nodes, not including default attributes.">Marcado que contiene este nodo y todos sus nodos secundarios.  
 <see langword="OuterXml" /> no devuelve los atributos predeterminados.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">Obtiene la clase <see cref="T:System.Xml.XmlDocument" /> a la que pertenece este nodo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.  &#xA;  &#xA; If the node is an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; (NodeType equals XmlNodeType.Document), this property returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDocument" /> al que pertenece este nodo.  
Si el nodo es <see cref="T:System.Xml.XmlDocument" /> (NodeType es igual que XmlNodeType.Document), esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; NodeType&lt;/term&gt;&lt;description&gt; Return Value of ParentNode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute, Document, DocumentFragment, Entity, Notation&lt;/term&gt;&lt;description&gt; Returns &lt;see langword=&quot;null&quot; /&gt;; these nodes do not have parents.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; Returns the element or entity reference containing the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; Returns the element, entity reference, document type, or document containing the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; Returns the document node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; Returns the parent node of the element. If the element is the root node in the tree, the parent is the document node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; Returns the element, attribute, or entity reference containing the entity reference.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; Returns the document, element, document type, or entity reference containing the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; Returns the parent element, attribute, or entity reference containing the text node.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="XmlNode" /> que es el elemento principal del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado del árbol, el elemento principal es <see langword="null" />. Para todos los demás nodos, el valor devuelto depende de <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad <see langword="ParentNode" />.  
  NodeType 
  Valor devuelto de ParentNode 
  Attribute, Document, DocumentFragment, Entity, Notation 
  Devuelve <see langword="null" />; estos nodos no tienen nodos primarios.  

  CDATA 
  Devuelve el elemento o la referencia a entidad que contiene la sección CDATA.  

  Comentario 
  Devuelve el elemento, la referencia a entidad, el tipo de documento o el documento que contiene el comentario.  

  DocumentType 
  Devuelve el nodo de documento.  

  Elemento 
  Devuelve el nodo primario del elemento. Si el elemento es el nodo raíz del árbol, el nodo primario es el nodo de documento.  

  EntityReference 
  Devuelve el elemento, el atributo o la referencia a entidad que contiene la referencia a entidad.  

  ProcessingInstruction 
  Devuelve el documento, el elemento, el tipo de documento o la referencia a entidad que contiene la instrucción de procesamiento.  

  Texto 
  Devuelve el elemento primario, el atributo o la referencia a entidad que contiene el nodo de texto.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">Obtiene o establece el prefijo de espacio de nombres de este nodo.</summary>
      <returns vsli:raw="The namespace prefix of this node. For example, &lt;see langword=&quot;Prefix&quot; /&gt; is bk for the element &amp;lt;bk:book&amp;gt;. If there is no prefix, this property returns String.Empty.">Prefijo de espacio de nombres de este nodo. Por ejemplo, <see langword="Prefix" /> es BK para el elemento &lt;BK: Book&gt;. Si no hay prefijo, esta propiedad devuelve String.Empty.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Este nodo es de sólo lectura.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The specified prefix is &quot;xml&quot; and the namespaceURI of this node is different from &quot;http://www.w3.org/XML/1998/namespace&quot;.  &#xA;  &#xA; This node is an attribute and the specified prefix is &quot;xmlns&quot; and the namespaceURI of this node is different from &quot;http://www.w3.org/2000/xmlns/ &quot;.  &#xA;  &#xA; This node is an attribute and the qualifiedName of this node is &quot;xmlns&quot;.">El prefijo especificado contiene un carácter no válido.  
 El prefijo especificado tiene un formato incorrecto.  
 El prefijo especificado es "xml" y el URI del espacio de nombres de este nodo es diferente de "http://www.w3.org/XML/1998/namespace".  
 Este nodo es un atributo, el prefijo especificado es "xmlns" y su identificador URI de espacio de nombres no es "http://www.w3.org/2000/xmlns/".  
 Este nodo es un atributo y su nombre completo es "xmlns".</exception>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the beginning of the list of child nodes for this node.">Agrega el nodo especificado al principio de la lista de nodos secundarios de este nodo.</summary>
      <param name="newChild" vsli:raw="The node to add. All the contents of the node to be added are moved into the specified location.">Nodo que se va a agregar. Todo el contenido del nodo que se va a agregar se pasa a la ubicación especificada.</param>
      <returns vsli:raw="The node added.">Nodo agregado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
Este nodo es de sólo lectura.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary vsli:raw="Gets the node immediately preceding this node.">Obtiene el nodo inmediatamente anterior a éste.</summary>
      <returns vsli:raw="The preceding &lt;see langword=&quot;XmlNode&quot; /&gt;. If there is no preceding node, &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <see langword="XmlNode" /> anterior. Si no hay nodo anterior, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Devuelva <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary vsli:raw="Removes all the child nodes and/or attributes of the current node.">Quita todos los atributos y nodos secundarios del nodo actual.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary vsli:raw="Removes specified child node.">Quita el nodo secundario especificado.</summary>
      <param name="oldChild" vsli:raw="The node being removed.">Nodo que se va a quitar.</param>
      <returns vsli:raw="The node removed.">Nodo que se quita.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node. Or this node is read-only.">
        <paramref name="oldChild" /> no es un nodo secundario de este nodo. O este nodo es de sólo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Replaces the child node &lt;paramref name=&quot;oldChild&quot; /&gt; with &lt;paramref name=&quot;newChild&quot; /&gt; node.">Reemplaza el nodo secundario <paramref name="oldChild" /> por el nodo <paramref name="newChild" />.</summary>
      <param name="newChild" vsli:raw="The new node to put in the child list.">Nuevo nodo que se va a agregar a la lista de nodos secundarios.</param>
      <param name="oldChild" vsli:raw="The node being replaced in the list.">Nodo que se va a reemplazar en la lista.</param>
      <returns vsli:raw="The node replaced.">Nodo que se reemplaza.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.  &#xA;  &#xA; The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node.">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
Este nodo es de sólo lectura.  
<paramref name="oldChild" /> no es un nodo secundario de este nodo.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary vsli:raw="Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.">Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the post schema validation infoset of this node.">Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary vsli:raw="Selects a list of nodes matching the XPath expression.">Selecciona una lista de nodos que coinciden con la expresión XPath.</summary>
      <param name="xpath" vsli:raw="The XPath expression.">Expresión XPath.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a collection of nodes matching the XPath query.">
        <see cref="T:System.Xml.XmlNodeList" /> que contiene una colección de nodos que coinciden con la consulta XPath.</returns>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix. See XPath Examples.">La expresión XPath contiene un prefijo. Vea ejemplos de XPath.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Selects a list of nodes matching the XPath expression. Any prefixes found in the XPath expression are resolved using the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">Selecciona una lista de nodos que coinciden con la expresión XPath. Los prefijos encontrados en la expresión XPath se resuelven utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">Expresión XPath. Vea ejemplos de XPath.</param>
      <param name="nsmgr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for resolving namespaces for prefixes in the XPath expression.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se utiliza para resolver los espacios de nombres de los prefijos de la expresión XPath.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a collection of nodes matching the XPath query.">
        <see cref="T:System.Xml.XmlNodeList" /> que contiene una colección de nodos que coinciden con la consulta XPath.</returns>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix which is not defined in the &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">La expresión XPath contiene un prefijo que no está definido en <see langword="XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary vsli:raw="Selects the first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath expression.">Selecciona el primer <see langword="XmlNode" /> que coincide con la expresión XPath.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">Expresión XPath. Vea ejemplos de XPath.</param>
      <returns vsli:raw="The first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath query or &lt;see langword=&quot;null&quot; /&gt; if no matching node is found.">Primer <see langword="XmlNode" /> que coincide con la consulta XPath o <see langword="null" /> si no se encuentra un nodo coincidente.</returns>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix.">La expresión XPath contiene un prefijo.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Selects the first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath expression. Any prefixes found in the XPath expression are resolved using the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">Selecciona el primer <see langword="XmlNode" /> que coincide con la expresión XPath. Los prefijos encontrados en la expresión XPath se resuelven utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">Expresión XPath. Vea ejemplos de XPath.</param>
      <param name="nsmgr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for resolving namespaces for prefixes in the XPath expression.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se utiliza para resolver los espacios de nombres de los prefijos de la expresión XPath.</param>
      <returns vsli:raw="The first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath query or &lt;see langword=&quot;null&quot; /&gt; if no matching node is found.">Primer <see langword="XmlNode" /> que coincide con la consulta XPath o <see langword="null" /> si no se encuentra un nodo coincidente.</returns>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix which is not defined in the &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">La expresión XPath contiene un prefijo que no está definido en <see langword="XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary vsli:raw="Tests if the DOM implementation implements a specific feature.">Comprueba si la implementación de DOM incluye una característica específica.</summary>
      <param name="feature" vsli:raw="The package name of the feature to test. This name is not case-sensitive.">Nombre del paquete de la característica que se va a comprobar. Este nombre no distingue entre mayúsculas y minúsculas.</param>
      <param name="version" vsli:raw="The version number of the package name to test. If the version is not specified (null), supporting any version of the feature causes the method to return true.">Número de versión del nombre del paquete que se va a comprobar. Si no se especifica la versión (null), la compatibilidad con cualquier versión de la característica hará que el método devuelva True.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the feature is implemented in the specified version; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The following table describes the combinations that return &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Feature&lt;/term&gt;&lt;description&gt; Version&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 1.0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 2.0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Es <see langword="true" /> si la característica se implementa en la versión especificada; en caso contrario, es <see langword="false" />. En la tabla siguiente se describen las combinaciones que devuelven <see langword="true" />.  
  Característica 
  Versión 
  XML 
  1.0 
  XML 
  2.0</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlNode.GetEnumerator&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</summary>
      <returns vsli:raw="An enumerator for the collection.">Un enumerador de la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlNode.Clone&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.XmlNode.Clone" />.</summary>
      <returns vsli:raw="A copy of the node from which it is called.">Copia del nodo desde el que se llamó.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtiene o establece el valor del nodo.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATASection&lt;/term&gt;&lt;description&gt; The content of the CDATA Section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;. You can use the &lt;see cref=&quot;P:System.Xml.XmlElement.InnerText&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.XmlElement.InnerXml&quot; /&gt; properties to access the value of the element node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The entire content excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; The content of the declaration (that is, everything between &amp;lt;?xml and ?&amp;gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
  Tipo 
  Valor 
  Atributo 
  El valor del atributo.  
  CDATASection 
  Contenido de la sección CDATA.  
  Comentario 
  El contenido del comentario.  
  Documento 
 <see langword="null" />.  
  DocumentFragment 
 <see langword="null" />.  
  DocumentType 
 <see langword="null" />.  
  Elemento 
 <see langword="null" />. Puede usar las propiedades <see cref="P:System.Xml.XmlElement.InnerText" /> o <see cref="P:System.Xml.XmlElement.InnerXml" /> para obtener acceso al valor del nodo element.  
  Entity 
 <see langword="null" />.  
  EntityReference 
 <see langword="null" />.  
  Notation 
 <see langword="null" />.  
  ProcessingInstruction 
  Todo el contenido, salvo el destino.  
  Texto 
  El contenido del nodo de texto.  
  SignificantWhitespace 
  Caracteres de espacio en blanco. El espacio en blanco puede estar formado por uno o varios caracteres de espacio, retornos de carro, saltos de línea o tabulaciones.  
  Whitespace 
  Caracteres de espacio en blanco. El espacio en blanco puede estar formado por uno o varios caracteres de espacio, retornos de carro, saltos de línea o tabulaciones.  
  XmlDeclaration 
  El contenido de la declaración (es decir, todo lo &lt;que hay entre?&gt;XML y?).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting the value of a node that is read-only.">Establecer el valor de un nodo que es de sólo lectura.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the value of a node that is not supposed to have a value (for example, an Element node).">Establecer el valor de un nodo que no debe tener un valor, por ejemplo, un nodo Element.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the child nodes of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, when overridden in a derived class.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado, cuando se reemplaza en una clase derivada.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the current node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, when overridden in a derived class.">Guarda el nodo actual en el <see cref="T:System.Xml.XmlWriter" /> especificado, cuando se reemplaza en una clase derivada.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary vsli:raw="Specifies the type of node change.">Especifica el tipo de cambio de nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary vsli:raw="A node value is being changed.">Se está modificando un valor de nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary vsli:raw="A node is being inserted in the tree.">Se está insertando un nodo en el árbol.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary vsli:raw="A node is being removed from the tree.">Se está quitando un nodo del árbol.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserted&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserting&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoved&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoving&quot; /&gt; events.">Proporciona datos para los eventos <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> y <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNodeChangedEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNodeChangedEventArgs" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">El <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="oldParent" vsli:raw="The old parent &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">El <see cref="T:System.Xml.XmlNode" /> primario anterior del <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="newParent" vsli:raw="The new parent &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">El nuevo <see cref="T:System.Xml.XmlNode" /> primario del <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="oldValue" vsli:raw="The old value of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">El valor anterior del <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="newValue" vsli:raw="The new value of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">El nuevo valor del <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="action" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeChangedAction&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNodeChangedAction" />.</param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary vsli:raw="Gets a value indicating what type of node change event is occurring.">Obtiene un valor que indica qué tipo de evento de cambio de nodo se está produciendo.</summary>
      <returns vsli:raw="One of the enumeration values that describes the node change event. The &lt;see langword=&quot;Action&quot; /&gt; value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.">Uno de los valores de enumeración que describe el evento de cambio de nodo. El valor de <see langword="Action" /> no distingue el momento en que se produjo el evento (antes o después). Se pueden crear controladores de eventos independientes para controlar ambas instancias.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Xml.XmlNode.ParentNode&quot; /&gt; after the operation completes.">Obtiene el valor de la propiedad <see cref="P:System.Xml.XmlNode.ParentNode" /> tras finalizar la operación.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ParentNode&quot; /&gt; after the operation completes. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is being removed. For attribute nodes, this property returns the &lt;see cref=&quot;P:System.Xml.XmlAttribute.OwnerElement&quot; /&gt;.">Valor de <see langword="ParentNode" /> tras finalizar la operación. Esta propiedad devuelve <see langword="null" /> si se quita el nodo.  
   
 Para los nodos de atributo, esta propiedad devuelve <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the new value of the node.">Obtiene el nuevo valor del nodo.</summary>
      <returns vsli:raw="The new value of the node. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is neither an attribute nor a text node, or if the node is being removed.  &#xA;  &#xA; If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt; event, &lt;see langword=&quot;NewValue&quot; /&gt; returns the value of the node if the change is successful. If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt; event, &lt;see langword=&quot;NewValue&quot; /&gt; returns the current value of the node.">Nuevo valor del nodo. Esta propiedad devuelve <see langword="null" /> si el nodo no es ni un atributo ni un nodo de texto, o si se quita el nodo.  
Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see langword="NewValue" /> devuelve el valor del nodo si el cambio tiene éxito. Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see langword="NewValue" /> devuelve el valor actual del nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is being added, removed or changed.">Obtiene el <see cref="T:System.Xml.XmlNode" /> que se agrega, se quita o se cambia.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is being added, removed or changed; this property never returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="XmlNode" /> que se agrega, se quita o se cambia; esta propiedad nunca devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Xml.XmlNode.ParentNode&quot; /&gt; before the operation began.">Obtiene el valor de la propiedad <see cref="P:System.Xml.XmlNode.ParentNode" /> antes de que comience la operación.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ParentNode&quot; /&gt; before the operation began. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node did not have a parent. For attribute nodes, this property returns the &lt;see cref=&quot;P:System.Xml.XmlAttribute.OwnerElement&quot; /&gt;.">Valor de <see langword="ParentNode" /> antes de que comience la operación. Esta propiedad devuelve <see langword="null" /> si el nodo no tiene nodo primario.  
   
 Para los nodos de atributo, esta propiedad devuelve <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the original value of the node.">Obtiene el valor original del nodo.</summary>
      <returns vsli:raw="The original value of the node. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is neither an attribute nor a text node, or if the node is being inserted.  &#xA;  &#xA; If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt; event, &lt;see langword=&quot;OldValue&quot; /&gt; returns the current value of the node that will be replaced if the change is successful. If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt; event, &lt;see langword=&quot;OldValue&quot; /&gt; returns the value of node prior to the change.">Valor original del nodo. Esta propiedad devuelve <see langword="null" /> si el nodo no es ni un atributo ni un nodo de texto, o si se inserta el nodo.  
Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see langword="OldValue" /> devuelve el valor actual del nodo que se reemplazará si el cambio tiene éxito. Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see langword="OldValue" /> devuelve el valor del nodo previo al cambio.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary vsli:raw="Represents the method that handles &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserted&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserting&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoved&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoving&quot; /&gt; events.">Representa el método que controla los eventos <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> y <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeChangedEventArgs&quot; /&gt; containing the event data.">
        <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary vsli:raw="Represents an ordered collection of nodes.">Representa una colección ordenada de nodos.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see langword=&quot;XmlNodeList&quot; /&gt;.">Obtiene el número de nodos de <see langword="XmlNodeList" />.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see langword=&quot;XmlNodeList&quot; /&gt;.">Número de nodos de <see langword="XmlNodeList" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that iterates through the collection of nodes.">Obtiene un enumerador que recorre en iteración la colección de nodos.</summary>
      <returns vsli:raw="An enumerator used to iterate through the collection of nodes.">Enumerador utilizado para recorrer en iteración la colección de nodos.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary vsli:raw="Retrieves a node at the given index.">Recupera un nodo en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index into the list of nodes.">Índice de base cero en la lista de nodos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified index in the collection. If &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the number of nodes in the list, this returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> con el índice especificad en la colección. Si <paramref name="index" /> es mayor o igual que el número de nodos de la lista, esto devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary vsli:raw="Gets a node at the given index.">Obtiene un nodo en el índice especificado.</summary>
      <param name="i" vsli:raw="The zero-based index into the list of nodes.">Índice de base cero en la lista de nodos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified index in the collection. If index is greater than or equal to the number of nodes in the list, this returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> con el índice especificad en la colección. Si el índice es mayor o igual que el número de nodos de la lista, esto devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
      <summary vsli:raw="Disposes resources in the node list privately.">Desecha los recursos de la lista de nodos de forma privada.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; class.">Libera todos los recursos que utiliza la clase <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary vsli:raw="Describes the document order of a node compared to a second node.">Describe el orden del documento de un nodo en comparación con un segundo nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary vsli:raw="The current node of this navigator is after the current node of the supplied navigator.">El nodo actual de este explorador se sitúa detrás del nodo actual del explorador proporcionado.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary vsli:raw="The current node of this navigator is before the current node of the supplied navigator.">El nodo actual de este explorador se sitúa delante del nodo actual del explorador proporcionado.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary vsli:raw="The two navigators are positioned on the same node.">Los dos exploradores se sitúan en el mismo nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary vsli:raw="The node positions cannot be determined in document order, relative to each other. This could occur if the two nodes reside in different trees.">Las posiciones relativas de los nodos no se pueden determinar en el orden del documento. Esto puede producirse si los dos nodos residen en diferentes árboles.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary vsli:raw="Represents a reader that provides fast, non-cached forward only access to XML data in an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Representa un lector que proporciona acceso rápido, sin almacenamiento en caché y con desplazamiento sólo hacia delante, a los datos XML de un objeto <see cref="T:System.Xml.XmlNode" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlNodeReader&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Crea una instancia de la clase <see langword="XmlNodeReader" /> mediante el objeto <see cref="T:System.Xml.XmlNode" /> especificado.</summary>
      <param name="node" vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; you want to read.">
        <see langword="XmlNode" /> que se desea leer.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">Obtiene el número de atributos del nodo actual.</summary>
      <returns vsli:raw="The number of attributes on the current node. This number includes default attributes.">Número de atributos del nodo actual. Este número incluye los atributos predeterminados.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtiene el identificador URI base del nodo actual.</summary>
      <returns vsli:raw="The base URI of the current node.">Identificador URI base del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlNodeReader&quot; /&gt; implements the binary content read methods.">Obtiene un valor que indica si <see cref="T:System.Xml.XmlNodeReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlNodeReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlNodeReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlNodeReader&quot; /&gt; always returns &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />. <see langword="XmlNodeReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.ReadState&quot; /&gt; to &lt;see langword=&quot;Closed&quot; /&gt;.">Cambia la propiedad <see cref="P:System.Xml.XmlNodeReader.ReadState" /> a <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">Obtiene la profundidad del nodo actual en el documento XML.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">Profundidad del nodo actual en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">Obtiene un valor que indica si el lector está situado al final del flujo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">Obtiene el valor del atributo con el índice especificado.</summary>
      <param name="attributeIndex" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
      <returns vsli:raw="The value of the specified attribute.">Valor del atributo especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlNodeReader.AttributeCount&quot; /&gt;.">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">Obtiene el valor del atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether the current node has any attributes.">Obtiene un valor que indica si el nodo actual tiene algún atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nodo actual tiene atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlNodeReader.Value&quot; /&gt;.">Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlNodeReader.Value" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.">Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la definición de tipo de documento (DTD) o en el esquema.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">Es <see langword="true" /> si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es <see langword="false" /> si el valor de atributo se estableció explícitamente.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">Obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) and it ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si el nodo actual es un elemento (<see cref="P:System.Xml.XmlNodeReader.NodeType" /><see langword="XmlNodeType.Element" />es igual a) y termina con <c>/ &gt;</c>; de lo <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">Obtiene el nombre local del nodo actual.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns String.Empty.">Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c>&lt;BK: Book&gt;</c>.  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized.">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. Esta cadena no necesita subdividirse.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">Se desplaza hasta el atributo con el índice especificado.</summary>
      <param name="attributeIndex" vsli:raw="The index of the attribute.">Índice del atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">Se desplaza hasta el atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace URI.">Se desplaza hasta el atributo con el nombre local y el URI de espacio de nombres que se hayan especificado.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">Se desplaza hasta el elemento que contiene el nodo de atributo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">Se mueve al primer atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">Se mueve al siguiente atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">Obtiene el nombre completo del nodo actual.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c>&lt;BK: Book&gt;</c>.  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo: Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  Tipo de nodo 
  nombre 
 <see langword="Attribute" /> El nombre del atributo.  

 <see langword="DocumentType" /> Nombre del tipo de documento.  

 <see langword="Element" /> Nombre de la etiqueta.  

 <see langword="EntityReference" /> Nombre de la entidad a la que se hace referencia.  

 <see langword="ProcessingInstruction" /> Destino de la instrucción de procesamiento.  

 <see langword="XmlDeclaration" /> Cadena literal <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">Obtiene el URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">
        <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena en el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">Obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">Prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">Lee el siguiente nodo del flujo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">Analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of String.Empty.">
        <see langword="true" /> si hay nodos para devolver.  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">El método <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the BinHex decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados de BinHex.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">El método <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">Lee el elemento y descodifica el contenido de Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed content.">El elemento contiene contenido mixto.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the BinHex content.">Lee el elemento y descodifica el contenido de BinHex.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed content.">El elemento contiene contenido mixto.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">Obtiene el estado del lector.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or text node as a string.">Lee el contenido de un nodo de elemento o de texto como una cadena.</summary>
      <returns vsli:raw="The contents of the element or text-like node (This can include CDATA, Text nodes, and so on). This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.  &#xA;  &#xA; &lt;see langword=&quot;Note:&quot; /&gt; The text node can be either an element or an attribute text node.">Contenido del nodo de elemento o de texto (puede incluir nodos CDATA, Text, etc.). Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.  
 <see langword="Note:" /> El nodo de texto puede ser un nodo de texto de elemento o de atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">Resuelve la referencia a entidad de los nodos <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node.">El lector no se encuentra en un nodo <see langword="EntityReference" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node.">Obtiene la información de esquema que se ha asignado al nodo actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the schema information for the current node.">Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">Omite los nodos secundarios del nodo actual.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that contains the namespaces that are in scope.">Objeto <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que están dentro del ámbito.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">Objeto <see cref="T:System.String" /> que contiene el prefijo del espacio de nombres.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace name.">Objeto <see cref="T:System.String" /> que contiene el nombre del espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; object that identifies the namespace.">Objeto <see cref="T:System.String" /> que identifica el espacio de nombres.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the namespace prefix.">Objeto <see cref="T:System.String" /> que contiene el prefijo del espacio de nombres.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">Obtiene el valor de texto del nodo actual.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return String.Empty.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo: En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.  
  Tipo de nodo 
  Valor 
 <see langword="Attribute" /> El valor del atributo.  

 <see langword="CDATA" /> Contenido de la sección CDATA.  

 <see langword="Comment" /> El contenido del comentario.  

 <see langword="DocumentType" /> El subconjunto interno.  

 <see langword="ProcessingInstruction" /> El contenido completo, sin incluir el destino.  

 <see langword="SignificantWhitespace" /> Espacio en blanco entre marcas en un modelo de contenido mixto.  

 <see langword="Text" /> El contenido del nodo de texto.  

 <see langword="Whitespace" /> El espacio en blanco entre marcado.  

 <see langword="XmlDeclaration" /> El contenido de la declaración.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" /> actual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary vsli:raw="Specifies the type of node.">Especifica el tipo de nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary vsli:raw="An attribute (for example, &lt;c&gt;id='123'&lt;/c&gt; ).">Atributo (por ejemplo, <c>id='123'</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary vsli:raw="A CDATA section (for example, &lt;c&gt;&amp;lt;![CDATA[my escaped text]]&amp;gt;&lt;/c&gt; ).">Una sección CDATA (por ejemplo, <c>&lt;![CDATA[mi texto de escape]]&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary vsli:raw="A comment (for example, &lt;c&gt;&amp;lt;!-- my comment --&amp;gt;&lt;/c&gt; ).">Comentario (por ejemplo, <c>&lt;!-- mi comentario --&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary vsli:raw="A document object that, as the root of the document tree, provides access to the entire XML document.">Objeto de documento que, como raíz del árbol de documentos, proporciona acceso a todo el documento XML.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary vsli:raw="A document fragment.">Fragmento de documento.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary vsli:raw="The document type declaration, indicated by the following tag (for example, &lt;c&gt;&amp;lt;!DOCTYPE...&amp;gt;&lt;/c&gt; ).">Declaración de tipos de documento, indicada por la siguiente etiqueta (por ejemplo, <c>&lt;!DOCTYPE...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary vsli:raw="An element (for example, &lt;c&gt;&amp;lt;item&amp;gt;&lt;/c&gt; ).">Elemento (por ejemplo, <c>&lt;item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary vsli:raw="An end element tag (for example, &lt;c&gt;&amp;lt;/item&amp;gt;&lt;/c&gt; ).">Etiqueta de elemento final (por ejemplo, <c>&lt;/item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary vsli:raw="Returned when &lt;see langword=&quot;XmlReader&quot; /&gt; gets to the end of the entity replacement as a result of a call to &lt;see cref=&quot;M:System.Xml.XmlReader.ResolveEntity&quot; /&gt;.">Se devuelve cuando <see langword="XmlReader" /> alcanza el final del reemplazo de entidad como resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary vsli:raw="An entity declaration (for example, &lt;c&gt;&amp;lt;!ENTITY...&amp;gt;&lt;/c&gt; ).">Declaración de entidad (por ejemplo, <c>&lt;!ENTITY...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary vsli:raw="A reference to an entity (for example, &lt;c&gt;&amp;amp;num;&lt;/c&gt; ).">Referencia a una entidad (por ejemplo, <c>&amp;num;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary vsli:raw="This is returned by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; if a &lt;see langword=&quot;Read&quot; /&gt; method has not been called.">
        <see cref="T:System.Xml.XmlReader" /> devuelve este valor si no se ha llamado al método <see langword="Read" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary vsli:raw="A notation in the document type declaration (for example, &lt;c&gt;&amp;lt;!NOTATION...&amp;gt;&lt;/c&gt; ).">Notación en la declaración de tipos de documento (por ejemplo, <c>&lt;!NOTATION...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary vsli:raw="A processing instruction (for example, &lt;c&gt;&amp;lt;?pi test?&amp;gt;&lt;/c&gt; ).">Instrucción de procesamiento (por ejemplo, <c>&lt;?pi test?&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary vsli:raw="White space between markup in a mixed content model or white space within the &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; scope.">Espacio en blanco entre marcas en un modelo de contenido mixto o espacio en blanco dentro del ámbito de <c>xml:space="preserve"</c>.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary vsli:raw="&lt;para&gt;The text content of a node.&lt;/para&gt;&lt;para&gt;A &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt; node cannot have any child nodes. It can appear as the child node of the &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentFragment&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;, and &lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes.&lt;/para&gt;">Contenido de texto de un nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary vsli:raw="White space between markup.">Espacio en blanco entre marcas.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary vsli:raw="&lt;para&gt;The XML declaration (for example, &lt;c&gt;&amp;lt;?xml version='1.0'?&amp;gt;&lt;/c&gt; ).&lt;/para&gt;&lt;para&gt;The &lt;see cref=&quot;F:System.Xml.XmlNodeType.XmlDeclaration&quot; /&gt; node must be the first node in the document. It cannot have children. It is a child of the &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt; node. It can have attributes that provide version and encoding information.&lt;/para&gt;">Declaración XML (por ejemplo, <c>&lt;?xml version='1.0'?&gt;</c>).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary vsli:raw="Represents a notation declaration, such as &amp;lt;!NOTATION... &amp;gt;.">Representa una declaración de notaciones, como &lt;!NOTATION... &gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node. Notation nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; object throws an exception.">Crea un duplicado de este nodo. Los nodos Notation no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlNotation" />, se produce una excepción.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; copy of the node from which the method is called.">Copia <see cref="T:System.Xml.XmlNode" /> del nodo desde el que se llamó al método.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Notation nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; object throws an exception.">Los nodos Notation no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlNotation" />, se produce una excepción.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary vsli:raw="Gets the markup representing the children of this node.">Obtiene el marcado que representa los nodos secundarios de este nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, String.Empty is returned.">Para nodos <see langword="XmlNotation" />, se devuelve String.Empty.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">Se intentó establecer la propiedad.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Si el nodo es de solo lectura; en caso <see langword="false" />contrario,.  
Como los nodos <see langword="XmlNotation" /> son de sólo lectura, esta propiedad siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary vsli:raw="Gets the name of the current node without the namespace prefix.">Obtiene el nombre del nodo actual sin el prefijo de espacio de nombres.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, this property returns the name of the notation.">Para nodos <see langword="XmlNotation" />, esta propiedad devuelve el nombre de la notación.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary vsli:raw="Gets the name of the current node.">Obtiene el nombre del nodo actual.</summary>
      <returns vsli:raw="The name of the notation.">Nombre de la notación.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, the value is XmlNodeType.Notation.">Tipo de nodo. Para nodos <see langword="XmlNotation" />, el valor es XmlNodeType.Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary vsli:raw="Gets the markup representing this node and all its children.">Obtiene el marcado que representa este nodo y todos sus nodos secundarios.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, String.Empty is returned.">Para nodos <see langword="XmlNotation" />, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the notation declaration.">Obtiene el valor del identificador público de la declaración de notación.</summary>
      <returns vsli:raw="The public identifier on the notation. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificador público de la notación. Si no hay un identificador público, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the notation declaration.">Obtiene el valor del identificador de sistema de la declaración de notación.</summary>
      <returns vsli:raw="The system identifier on the notation. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificador del sistema de la notación. Si no hay un identificador del sistema, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. This method has no effect on &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes.">Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Este método no tiene ningún efecto en nodos <see langword="XmlNotation" />.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. This method has no effect on &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Este método no tiene ningún efecto en nodos <see langword="XmlNotation" />.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary vsli:raw="Specifies the method used to serialize the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; output.">Especifica el método utilizado para serializar la salida de <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary vsli:raw="Use the XSLT rules to choose between the &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Xml&quot; /&gt; and &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Html&quot; /&gt; output methods at runtime.">Las reglas de XSLT se usan para elegir entre los métodos de salida <see cref="F:System.Xml.XmlOutputMethod.Xml" /> y <see cref="F:System.Xml.XmlOutputMethod.Html" /> en tiempo de ejecución.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary vsli:raw="Serialize according to the HTML rules specified by XSLT.">Serialice según las reglas de HTML especificadas por XSLT.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary vsli:raw="Serialize text blocks only.">Sólo se serializan los bloques de texto.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary vsli:raw="Serialize according to the XML 1.0 rules.">Se serializa según las reglas de XML 1.0.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary vsli:raw="Provides all the context information required by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to parse an XML fragment.">Proporciona toda la información de contexto que necesita el objeto <see cref="T:System.Xml.XmlReader" /> para analizar un fragmento de XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, base URI, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, and document type values.">Inicializa una nueva instancia de la clase <see langword="XmlParserContext" /> con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, <see langword="xml:lang" />, <see langword="xml:space" /> y tipo de documento especificados.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es <see langword="null" />, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o <see langword="null" />.</param>
      <param name="docTypeName" vsli:raw="The name of the document type declaration.">Nombre de la declaración de tipos de documento.</param>
      <param name="pubId" vsli:raw="The public identifier.">Identificador público.</param>
      <param name="sysId" vsli:raw="The system identifier.">Identificador de sistema.</param>
      <param name="internalSubset" vsli:raw="The internal DTD subset. The DTD subset is used for entity resolution, not for document validation.">Subconjunto DTD interno. El subconjunto DTD se usa para la resolución de entidades, no para la validación de documentos.</param>
      <param name="baseURI" vsli:raw="The base URI for the XML fragment (the location from which the fragment was loaded).">Identificador URI base del fragmento de XML (la ubicación desde la que se cargó el fragmento).</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" />.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" /> no es el mismo <see langword="XmlNameTable" /> utilizado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, base URI, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, encoding, and document type values.">Inicializa una nueva instancia de la clase <see langword="XmlParserContext" /> con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, <see langword="xml:lang" />, <see langword="xml:space" />, codificación y tipo de documento especificados.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es <see langword="null" />, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o <see langword="null" />.</param>
      <param name="docTypeName" vsli:raw="The name of the document type declaration.">Nombre de la declaración de tipos de documento.</param>
      <param name="pubId" vsli:raw="The public identifier.">Identificador público.</param>
      <param name="sysId" vsli:raw="The system identifier.">Identificador de sistema.</param>
      <param name="internalSubset" vsli:raw="The internal DTD subset. The DTD is used for entity resolution, not for document validation.">Subconjunto DTD interno. DTD se usa para la resolución de entidades, no para la validación de documentos.</param>
      <param name="baseURI" vsli:raw="The base URI for the XML fragment (the location from which the fragment was loaded).">Identificador URI base del fragmento de XML (la ubicación desde la que se cargó el fragmento).</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" />.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</param>
      <param name="enc" vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding setting.">Objeto <see cref="T:System.Text.Encoding" /> que indica el valor de codificación.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" /> no es el mismo <see langword="XmlNameTable" /> utilizado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, &lt;see langword=&quot;xml:lang&quot; /&gt;, and &lt;see langword=&quot;xml:space&quot; /&gt; values.">Inicializa una nueva instancia de la clase <see langword="XmlParserContext" /> con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> y <see langword="xml:space" /> especificados.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es <see langword="null" />, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o <see langword="null" />.</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" />.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" /> no es el mismo <see langword="XmlNameTable" /> utilizado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, and encoding.">Inicializa una nueva instancia de la clase <see langword="XmlParserContext" /> con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> y <see langword="xml:space" /> especificados y codificación.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information on atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es <see langword="null" />, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o <see langword="null" />.</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" />.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</param>
      <param name="enc" vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding setting.">Objeto <see cref="T:System.Text.Encoding" /> que indica el valor de codificación.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" /> no es el mismo <see langword="XmlNameTable" /> utilizado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary vsli:raw="Gets or sets the base URI.">Obtiene o establece el identificador URI base.</summary>
      <returns vsli:raw="The base URI to use to resolve the DTD file.">Identificador URI base para resolver el archivo DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary vsli:raw="Gets or sets the name of the document type declaration.">Obtiene o establece el nombre de la declaración de tipos de documento.</summary>
      <returns vsli:raw="The name of the document type declaration.">Nombre de la declaración de tipos de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary vsli:raw="Gets or sets the encoding type.">Obtiene o establece el tipo de codificación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding type.">Objeto <see cref="T:System.Text.Encoding" /> que indica el tipo de codificación.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary vsli:raw="Gets or sets the internal DTD subset.">Obtiene o establece el subconjunto DTD interno.</summary>
      <returns vsli:raw="The internal DTD subset. For example, this property returns everything between the square brackets &lt;c&gt;&amp;lt;!DOCTYPE doc [...]&amp;gt;&lt;/c&gt;.">Subconjunto DTD interno. Por ejemplo, esta propiedad devuelve todo lo que hay entre corchetes <c>&lt;. Documento DOCTYPE [...] &gt;</c>.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">Obtiene o establece el <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">
        <see langword="XmlNamespaceManager" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used to atomize strings. For more information on atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Para obtener más información sobre cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">
        <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary vsli:raw="Gets or sets the public identifier.">Obtiene o establece el identificador público.</summary>
      <returns vsli:raw="The public identifier.">Identificador público.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary vsli:raw="Gets or sets the system identifier.">Obtiene o establece el identificador de sistema.</summary>
      <returns vsli:raw="The system identifier.">Identificador de sistema.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary vsli:raw="Gets or sets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtiene o establece el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope. If there is no &lt;see langword=&quot;xml:lang&quot; /&gt; in scope, &lt;see langword=&quot;String.Empty&quot; /&gt; is returned.">Ámbito de <see langword="xml:lang" /> actual. Si en el ámbito no hay ningún <see langword="xml:lang" />, se devuelve <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary vsli:raw="Gets or sets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtiene o establece el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary vsli:raw="Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document.">Representa una instrucción de procesamiento que XML define para conservar información específica del procesador en el texto del documento.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlProcessingInstruction&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlProcessingInstruction" />.</summary>
      <param name="target" vsli:raw="The target of the processing instruction; see the &lt;see cref=&quot;P:System.Xml.XmlProcessingInstruction.Target&quot; /&gt; property.">Destino de la instrucción de procesamiento; vea la propiedad <see cref="P:System.Xml.XmlProcessingInstruction.Target" />.</param>
      <param name="data" vsli:raw="The content of the instruction; see the &lt;see cref=&quot;P:System.Xml.XmlProcessingInstruction.Data&quot; /&gt; property.">Contenido de la instrucción; vea la propiedad <see cref="P:System.Xml.XmlProcessingInstruction.Data" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; to recursively clone the subtree under the specified node; &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt; to clone only the node itself.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns vsli:raw="The duplicate node.">Nodo duplicado.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the content of the processing instruction, excluding the target.">Obtiene o establece el contenido de la instrucción de procesamiento, excepto el destino.</summary>
      <returns vsli:raw="The content of the processing instruction, excluding the target.">Contenido de la instrucción de procesamiento, excepto el destino.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its children.">Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children.">Valores concatenados del nodo y de todos sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For processing instruction nodes, this property returns the target of the processing instruction.">Para los nodos de instrucción de procesamiento, esta propiedad devuelve el destino de la instrucción de procesamiento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For processing instruction nodes, this property returns the target of the processing instruction.">Para los nodos de instrucción de procesamiento, esta propiedad devuelve el destino de la instrucción de procesamiento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="For &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlProcessingInstruction&lt;/code&gt; nodes, this value is XmlNodeType.ProcessingInstruction.">Para los nodos <see langword="XmlProcessingInstruction" />, este valor es XmlNodeType.ProcessingInstruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary vsli:raw="Gets the target of the processing instruction.">Obtiene el destino de la instrucción de procesamiento.</summary>
      <returns vsli:raw="The target of the processing instruction.">Destino de la instrucción de procesamiento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtiene o establece el valor del nodo.</summary>
      <returns vsli:raw="The entire content of the processing instruction, excluding the target.">Todo el contenido de la instrucción de procesamiento, excepto el destino.</returns>
      <exception cref="T:System.ArgumentException">El nodo es de sólo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Xml.XmlWriter&quot;&gt;&lt;/xref&gt;. Because ProcessingInstruction nodes do not have children, this method has no effect.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Dado que los nodos ProcessingInstruction no tienen elementos secundarios, este método no tiene ningún efecto.</summary>
      <param name="w" vsli:raw="The &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlWriter&lt;/code&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Xml.XmlWriter&quot;&gt;&lt;/xref&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlWriter&lt;/code&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary vsli:raw="Represents an XML qualified name.">Representa un nombre XML completo.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class with the specified name.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The local name to use as the name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">Nombre local que se va a utilizar como nombre del objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class with the specified name and namespace.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" /> con el nombre y el espacio de nombres especificados.</summary>
      <param name="name" vsli:raw="The local name to use as the name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">Nombre local que se va a utilizar como nombre del objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <param name="ns" vsli:raw="The namespace for the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">Espacio de nombres para el objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary vsli:raw="Provides an empty &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Proporciona un <see cref="T:System.Xml.XmlQualifiedName" /> vacío.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Xml.XmlQualifiedName" /> especificado es igual al objeto <see cref="T:System.Xml.XmlQualifiedName" /> actual.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two are the same instance object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos son un objeto de la misma instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary vsli:raw="Returns the hash code for the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Devuelve el código hash del <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns vsli:raw="A hash code for this object.">Código hash de este objeto.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; is empty.">Obtiene un valor que indica si el elemento <see cref="T:System.Xml.XmlQualifiedName" /> está activo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name and namespace are empty strings; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nombre y el espacio de nombres corresponden a cadenas vacías; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary vsli:raw="Gets a string representation of the qualified name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Obtiene una representación de cadena del nombre completo de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns vsli:raw="A string representation of the qualified name or String.Empty if a name is not defined for the object.">Representación de cadena del nombre completo o de String.Empty si no hay un nombre que esté definido para el objeto.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary vsli:raw="Gets a string representation of the namespace of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Obtiene una representación de cadena del espacio de nombres de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns vsli:raw="A string representation of the namespace or String.Empty if a namespace is not defined for the object.">Representación de cadena del espacio de nombres o de String.Empty si no hay un espacio de nombres que esté definido para el objeto.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">Compara dos objetos <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects have the same name and namespace values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos objetos tienen los mismos valores de nombre y de espacio de nombres; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">Compara dos objetos <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name and namespace values for the two objects differ; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los valores de nombre y de espacio de nombres de los dos objetos se diferencian en algo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary vsli:raw="Returns the string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Devuelve el valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; in the format of &lt;see langword=&quot;namespace:localname&quot; /&gt;. If the object does not have a namespace defined, this method returns just the local name.">Valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" /> con el formato de <see langword="namespace:localname" />. Si el objeto no tiene un espacio de nombres definido, el método sólo devuelve el nombre local.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary vsli:raw="Returns the string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Devuelve el valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="name" vsli:raw="The name of the object.">El nombre del objeto.</param>
      <param name="ns" vsli:raw="The namespace of the object.">Espacio de nombres del objeto.</param>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; in the format of &lt;see langword=&quot;namespace:localname&quot; /&gt;. If the object does not have a namespace defined, this method returns just the local name.">Valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" /> con el formato de <see langword="namespace:localname" />. Si el objeto no tiene un espacio de nombres definido, el método sólo devuelve el nombre local.</returns>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary vsli:raw="Represents a reader that provides fast, noncached, forward-only access to XML data.">Representa un lector que proporciona acceso rápido a datos XML, sin almacenamiento en caché y con desplazamiento sólo hacia delante.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlReader&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="XmlReader" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of attributes on the current node.">Cuando se invalida en una clase derivada, obtiene el número de atributos en el nodo actual.</summary>
      <returns vsli:raw="The number of attributes on the current node.">Número de atributos del nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary vsli:raw="When overridden in a derived class, gets the base URI of the current node.">Cuando se invalida en una clase derivada, obtiene el identificador URI base del nodo actual.</summary>
      <returns vsli:raw="The base URI of the current node.">Identificador URI base del nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the binary content read methods.">Obtiene un valor que indica si <see cref="T:System.Xml.XmlReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method.">Obtiene un valor que indica si <see cref="T:System.Xml.XmlReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Xml.XmlReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary vsli:raw="When overridden in a derived class, changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to &lt;see cref=&quot;F:System.Xml.ReadState.Closed&quot; /&gt;.">Cuando se invalida en una clase derivada, cambia <see cref="P:System.Xml.XmlReader.ReadState" /> a <see cref="F:System.Xml.ReadState.Closed" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream with default settings.">Crea una nueva instancia <see cref="T:System.Xml.XmlReader" /> mediante el flujo especificado con la configuración predeterminada.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">Flujo que contiene los datos XML.  
<see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" /> no tiene permisos suficientes para obtener acceso a la ubicación de los datos XML.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance with the specified stream and settings.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el flujo y la configuración especificados.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">Flujo que contiene los datos XML.  
<see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream, base URI, and settings.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> usando el flujo, el URI base y la configuración especificados.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">Flujo que contiene los datos XML.  
<see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="baseUri" vsli:raw="The base URI for the entity or document being read. This value can be &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; Security Note The base URI is used to resolve the relative URI of the XML document. Do not use a base URI from an untrusted source.">URI base de la entidad o documento que se lee. Este valor puede ser <see langword="null" />.  
 Nota sobre seguridad El URI base se usa para resolver el URI relativo del documento XML. No use un URI base de un origen que no sea de confianza.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream, settings, and context information for parsing.">Crea una nueva instancia <see cref="T:System.Xml.XmlReader" /> con el flujo, la configuración y la información de contexto especificados para el análisis.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">Flujo que contiene los datos XML.  
<see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">Información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir la <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito del espacio de nombres, el ámbito actual de <c>xml:lang</c> y <c>xml:space</c>, el URI base y la definición de tipo de documento.  
Este valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante el lector de texto especificado.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.">Lector de texto desde el que se leen los datos XML. Un lector de texto devuelve un flujo de caracteres Unicode, por lo que el lector XML no usa la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader and settings.">Crea una nueva instancia <see cref="T:System.Xml.XmlReader" /> usando el lector de texto y la configuración especificados.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.">Lector de texto desde el que se leen los datos XML. Un lector de texto devuelve un flujo de caracteres Unicode, por lo que el lector XML no usa la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Configuración del nuevo <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader, settings, and base URI.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante el lector de texto, la configuración y el URI base especificados.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to decode the data stream.">Lector de texto desde el que se leen los datos XML. Un lector de texto devuelve un flujo de caracteres Unicode, por lo que el <see cref="T:System.Xml.XmlReader" /> no usa la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="baseUri" vsli:raw="The base URI for the entity or document being read. This value can be &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; Security Note The base URI is used to resolve the relative URI of the XML document. Do not use a base URI from an untrusted source.">URI base de la entidad o documento que se lee. Este valor puede ser <see langword="null" />.  
 Nota sobre seguridad El URI base se usa para resolver el URI relativo del documento XML. No use un URI base de un origen que no sea de confianza.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader, settings, and context information for parsing.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el lector de texto, la configuración y la información de contexto especificados para el análisis.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.">Lector de texto desde el que se leen los datos XML. Un lector de texto devuelve un flujo de caracteres Unicode, por lo que el lector XML no usa la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">Información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir la <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito del espacio de nombres, el ámbito actual de <c>xml:lang</c> y <c>xml:space</c>, el URI base y la definición de tipo de documento.  
Este valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.NameTable&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlParserContext.NameTable&quot; /&gt; properties both contain values. (Only one of these &lt;see langword=&quot;NameTable&quot; /&gt; properties can be set and used.)">Tanto la propiedad <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> como la propiedad <see cref="P:System.Xml.XmlParserContext.NameTable" /> contienen valores. (Solo se puede establecer y usar una de estas propiedades <see langword="NameTable" />).</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance with specified URI.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el URI especificado.</summary>
      <param name="inputUri" vsli:raw="The URI for the file that contains the XML data. The &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; class is used to convert the path to a canonical data representation.">URI del archivo que contiene los datos XML. La clase <see cref="T:System.Xml.XmlUrlResolver" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="inputUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" /> no tiene permisos suficientes para obtener acceso a la ubicación de los datos XML.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file identified by the URI does not exist.">No existe el archivo identificado por el URI.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.FormatException&quot; /&gt;, instead.">En .NET para aplicaciones de la Tienda Windows o la Biblioteca de clases portable, capture en su lugar la excepción de clase base, <see cref="T:System.FormatException" />.  


            

 El formato del URI no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified URI and settings.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> usando el URI y la configuración especificados.</summary>
      <param name="inputUri" vsli:raw="The URI for the file containing the XML data. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object on the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object is used to convert the path to a canonical data representation. If &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.XmlResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object is used.">URI del archivo que contiene los datos XML. El objeto <see cref="T:System.Xml.XmlResolver" /> del objeto <see cref="T:System.Xml.XmlReaderSettings" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> es <see langword="null" />, se utiliza un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" />.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="inputUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by the URI cannot be found.">No se encuentra el archivo especificado por el URI.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.FormatException&quot; /&gt;, instead.">En .NET para aplicaciones de la Tienda Windows o la Biblioteca de clases portable, capture en su lugar la excepción de clase base, <see cref="T:System.FormatException" />.  


            

 El formato del URI no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified URI, settings, and context information for parsing.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> usando el URI, la configuración y la información de contexto especificados.</summary>
      <param name="inputUri" vsli:raw="The URI for the file containing the XML data. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object on the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object is used to convert the path to a canonical data representation. If &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.XmlResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object is used.">URI del archivo que contiene los datos XML. El objeto <see cref="T:System.Xml.XmlResolver" /> del objeto <see cref="T:System.Xml.XmlReaderSettings" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> es <see langword="null" />, se utiliza un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" />.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">Información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir la <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito del espacio de nombres, el ámbito actual de <c>xml:lang</c> y <c>xml:space</c>, el URI base y la definición de tipo de documento.  
Este valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objeto usado para leer los datos XML del flujo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see langword=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <see langword="inputUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" /> no tiene permisos suficientes para obtener acceso a la ubicación de los datos XML.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.NameTable&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlParserContext.NameTable&quot; /&gt; properties both contain values. (Only one of these &lt;see langword=&quot;NameTable&quot; /&gt; properties can be set and used).">Tanto la propiedad <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> como la propiedad <see cref="P:System.Xml.XmlParserContext.NameTable" /> contienen valores. (Solo se puede establecer y usar una de estas propiedades <see langword="NameTable" />).</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by the URI cannot be found.">No se encuentra el archivo especificado por el URI.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.">El formato del URI no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified XML reader and settings.">Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el lector XML y la configuración especificados.</summary>
      <param name="reader" vsli:raw="The object that you want to use as the underlying XML reader.">Objeto que desea usar como lector XML subyacente.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.&#xA;&#xA; The conformance level of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object must either match the conformance level of the underlying reader, or it must be set to &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Auto&quot; /&gt;.">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />.  
El nivel de conformidad del objeto <see cref="T:System.Xml.XmlReaderSettings" /> debe coincidir con el del lector subyacente o establecerse en <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <returns vsli:raw="An object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Objeto que se encapsula alrededor del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;reader&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="reader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object specifies a conformance level that is not consistent with conformance level of the underlying reader.&#xA;&#xA; -or-&#xA;&#xA; The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an &lt;see cref=&quot;F:System.Xml.ReadState.Error&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.ReadState.Closed&quot; /&gt; state.">Si el objeto <see cref="T:System.Xml.XmlReaderSettings" /> especifica un nivel de conformidad que no es coherente con el nivel de conformidad del lector subyacente.  
O bien 
El objeto <see cref="T:System.Xml.XmlReader" /> subyacente se encuentra en un estado <see cref="F:System.Xml.ReadState.Error" /> o <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary vsli:raw="When overridden in a derived class, gets the depth of the current node in the XML document.">Cuando se invalida en una clase derivada, obtiene la profundidad del nodo actual en el documento XML.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">Profundidad del nodo actual en el documento XML.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class.">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Xml.XmlReader" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.">Cuando se invalida en una clase derivada, obtiene un valor que indica si el lector está situado al final de la secuencia.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified index.">Cuando se invalida en una clase derivada, obtiene el valor del atributo con el índice especificado.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
      <returns vsli:raw="The value of the specified attribute. This method does not move the reader.">Valor del atributo especificado. Este método no desplaza el lector.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is out of range. It must be non-negative and less than the size of the attribute collection.">
        <paramref name="i" /> está fuera del intervalo. Debe ser no negativo y menor que el tamaño de la colección de atributos.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor del atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found or the value is &lt;see langword=&quot;String.Empty&quot; /&gt;, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valor del atributo especificado. Si no se encuentra el atributo o el valor es <see langword="String.Empty" />, se devuelve <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor del atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found or the value is &lt;see langword=&quot;String.Empty&quot; /&gt;, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">Valor del atributo especificado. Si no se encuentra el atributo o el valor es <see langword="String.Empty" />, se devuelve <see langword="null" />. Este método no desplaza el lector.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary vsli:raw="Asynchronously gets the value of the current node.">Obtiene de forma asincrónica el valor del nodo actual.</summary>
      <returns vsli:raw="The value of the current node.">Valor del nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress&quot;.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether the current node has any attributes.">Obtiene un valor que indica si el nodo actual tiene algún atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nodo actual tiene atributos; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlReader.Value&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the node has a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, el nodo tiene un valor de <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la DTD o el esquema.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">Es <see langword="true" /> si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es <see langword="false" /> si el valor de atributo se estableció explícitamente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si el nodo actual es un elemento (<see cref="P:System.Xml.XmlReader.NodeType" /> es igual a <see langword="XmlNodeType.Element" />) que termina en <c>/ &gt;</c>; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary vsli:raw="Returns a value indicating whether the string argument is a valid XML name.">Devuelve un valor que indica si el argumento de cadena es un nombre XML válido.</summary>
      <param name="str" vsli:raw="The name to validate.">Nombre que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nombre es válido; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;str&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="str" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary vsli:raw="Returns a value indicating whether or not the string argument is a valid XML name token.">Devuelve un valor que indica si el argumento de cadena es un token de nombre XML válido.</summary>
      <param name="str" vsli:raw="The name token to validate.">Token de nombre que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is a valid name token; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si es un token de nombre válido; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;str&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="str" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag.">Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; finds a start tag or empty element tag; &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found.">Es <see langword="true" /> si <see cref="M:System.Xml.XmlReader.MoveToContent" /> encuentra una etiqueta de apertura o una etiqueta de elemento vacío; es <see langword="false" /> si se encuentra un tipo de nodo que no sea <see langword="XmlNodeType.Element" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">Se detecta XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element found matches the given argument.">Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío y si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento encontrado coincide con el argumento especificado.</summary>
      <param name="name" vsli:raw="The string matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the element found.">Cadena que se compara con la propiedad <see langword="Name" /> del elemento encontrado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting node is an element and the &lt;see langword=&quot;Name&quot; /&gt; property matches the specified string. &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found or if the element &lt;see langword=&quot;Name&quot; /&gt; property does not match the specified string.">
        <see langword="true" /> si el nodo resultante es un elemento y la propiedad <see langword="Name" /> coincide con la cadena especificada. <see langword="false" /> si se encuentra un tipo de nodo que no sea <see langword="XmlNodeType.Element" /> o si la propiedad <see langword="Name" /> del elemento no coincide con la cadena especificada.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">Se detecta XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found match the given strings.">Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío y si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado coinciden con las cadenas especificadas.</summary>
      <param name="localname" vsli:raw="The string to match against the &lt;see langword=&quot;LocalName&quot; /&gt; property of the element found.">Cadena con la que se compara la propiedad <see langword="LocalName" /> del elemento encontrado.</param>
      <param name="ns" vsli:raw="The string to match against the &lt;see langword=&quot;NamespaceURI&quot; /&gt; property of the element found.">Cadena con la que se compara la propiedad <see langword="NamespaceURI" /> del elemento encontrado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting node is an element. &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found or if the &lt;see langword=&quot;LocalName&quot; /&gt; and &lt;see langword=&quot;NamespaceURI&quot; /&gt; properties of the element do not match the specified strings.">
        <see langword="true" /> si el nodo resultante es un elemento. <see langword="false" /> si se encuentra un tipo de nodo que no sea <see langword="XmlNodeType.Element" /> o si las propiedades <see langword="LocalName" /> y <see langword="NamespaceURI" /> del elemento no coinciden con la cadena especificada.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">Se detecta XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified index.">Cuando se invalida en una clase derivada, obtiene el valor del atributo con el índice especificado.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Índice del atributo.</param>
      <returns vsli:raw="The value of the specified attribute.">Valor del atributo especificado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor del atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor del atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary vsli:raw="When overridden in a derived class, gets the local name of the current node.">Cuando se invalida en una clase derivada, obtiene el nombre local del nodo actual.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.&#xA;&#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns &lt;see langword=&quot;String.Empty&quot; /&gt;.">Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c>&lt;bk: book&gt;</c>.  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves a namespace prefix in the current element's scope.">Cuando se invalida en una clase derivada, resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string.">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified index.">Cuando se invalida en una clase derivada, se desplaza al atributo con el índice especificado.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Índice del atributo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The parameter has a negative value.">El parámetro tiene un valor negativo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">Cuando se invalida en una clase derivada, se desplaza al atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">El parámetro es una cadena vacía.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">Cuando se invalida en una clase derivada, se desplaza al atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">Ambos valores del parámetro son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary vsli:raw="Checks whether the current node is a content (non-white space text, &lt;see langword=&quot;CDATA&quot; /&gt;, &lt;see langword=&quot;Element&quot; /&gt;, &lt;see langword=&quot;EndElement&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt;) node. If the node is not a content node, the reader skips ahead to the next content node or end of file. It skips over nodes of the following type: &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;, &lt;see langword=&quot;DocumentType&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, &lt;see langword=&quot;Whitespace&quot; /&gt;, or &lt;see langword=&quot;SignificantWhitespace&quot; /&gt;.">Comprueba si el nodo actual es un nodo de contenido (texto sin espacios en blanco, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" /> o <see langword="EndEntity" />). Si el nodo no es un nodo de contenido, el lector salta hasta el siguiente nodo de contenido o el final del archivo. Omite los siguientes tipos de nodo: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" /> o <see langword="SignificantWhitespace" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the current node found by the method or &lt;see langword=&quot;XmlNodeType.None&quot; /&gt; if the reader has reached the end of the input stream.">El <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo actual encontrado por el método o <see langword="XmlNodeType.None" /> si el lector alcanzó el final del flujo de entrada.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML encountered in the input stream.">XML incorrecto que se encuentra en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary vsli:raw="Asynchronously checks whether the current node is a content node. If the node is not a content node, the reader skips ahead to the next content node or end of file.">De forma asincrónica comprueba si el nodo actual es un nodo de contenido. Si el nodo no es un nodo de contenido, el lector salta hasta el siguiente nodo de contenido o el final del archivo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the current node found by the method or &lt;see langword=&quot;XmlNodeType.None&quot; /&gt; if the reader has reached the end of the input stream.">El <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo actual encontrado por el método o <see langword="XmlNodeType.None" /> si el lector alcanzó el final del flujo de entrada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary vsli:raw="When overridden in a derived class, moves to the element that contains the current attribute node.">Cuando se invalida en una clase derivada, se desplaza al elemento que contiene el nodo de atributo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary vsli:raw="When overridden in a derived class, moves to the first attribute.">Cuando se invalida en una clase derivada, se desplaza hasta el primer atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary vsli:raw="When overridden in a derived class, moves to the next attribute.">Cuando se invalida en una clase derivada, se desplaza hasta el siguiente atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary vsli:raw="When overridden in a derived class, gets the qualified name of the current node.">Cuando se invalida en una clase derivada, obtiene el nombre completo del nodo actual.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.&#xA;&#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.&#xA;&#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c>&lt;bk: book&gt;</c>.  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo: Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  Tipo de nodo 
  nombre 
 <see langword="Attribute" /> El nombre del atributo.  

 <see langword="DocumentType" /> Nombre del tipo de documento.  

 <see langword="Element" /> Nombre de la etiqueta.  

 <see langword="EntityReference" /> Nombre de la entidad a la que se hace referencia.  

 <see langword="ProcessingInstruction" /> Destino de la instrucción de procesamiento.  

 <see langword="XmlDeclaration" /> Cadena literal <see langword="xml" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary vsli:raw="When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">Cuando se invalida en una clase derivada, obtiene el identificador URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Cuando se invalida en una clase derivada, obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> que está asociado a esta implementación.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">
        <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena en el nodo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the current node.">Cuando se invalida en una clase derivada, obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="One of the enumeration values that specify the type of the current node.">Uno de los valores de enumeración que especifica el tipo del nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary vsli:raw="When overridden in a derived class, gets the namespace prefix associated with the current node.">Cuando se invalida en una clase derivada, obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">Prefijo de espacio de nombres asociado al nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary vsli:raw="When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.">Cuando se reemplaza en una clase derivada, obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.</summary>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary vsli:raw="When overridden in a derived class, reads the next node from the stream.">Cuando se invalida en una clase derivada, lee el siguiente nodo del flujo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el siguiente nodo se ha leído correctamente; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">Se ha producido un error al analizar el fragmento de XML.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary vsli:raw="Asynchronously reads the next node from the stream.">De forma asincrónica lee el nodo siguiente del flujo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary vsli:raw="When overridden in a derived class, parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">Cuando se invalida en una clase derivada, analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.&#xA;&#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <see langword="true" /> si hay nodos para devolver.  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es <see langword="String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Reads the content as an object of the type specified.">Lee el contenido como objeto del tipo especificado.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">Tipo del valor que se va a devolver.  
 Nota Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipo. Por ejemplo, se puede utilizar al convertir un objeto <see cref="T:System.Xml.XmlQualifiedName" /> en <c>xs:string</c>.  
Este valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The content is not in the correct format for the target type.">El formato del contenido no es correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;returnType&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="returnType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not a supported node type. See the table below for details.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El nodo actual no es un tipo de nodo compatible. Vea la siguiente tabla para obtener información detallada.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">Lea <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Asynchronously reads the content as an object of the type specified.">Lee asincrónicamente el contenido como objeto del tipo especificado.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.">Tipo del valor que se va a devolver.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipo.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El método <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the content and returns the Base64 decoded binary bytes.">Lee asincrónicamente el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El método <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lee asincrónicamente el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see langword=&quot;Boolean&quot; /&gt;.">Lee el contenido de texto en la posición actual como valor <see langword="Boolean" />.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">El contenido del texto como objeto <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Lee el contenido de texto en la posición actual como un objeto <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">El contenido del texto como objeto <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; object.">Lee el contenido de texto en la posición actual como un objeto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; object.">El contenido del texto como objeto <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Lee el contenido de texto en la posición actual como un objeto <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="The text content at the current position as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">El contenido de texto en la posición actual como objeto <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary vsli:raw="Reads the text content at the current position as a double-precision floating-point number.">Lee el contenido de texto en la posición actual como número de punto flotante de precisión doble.</summary>
      <returns vsli:raw="The text content as a double-precision floating-point number.">El contenido de texto como número de punto flotante de precisión doble.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary vsli:raw="Reads the text content at the current position as a single-precision floating point number.">Lee el contenido de texto en la posición actual como número de punto flotante de precisión sencilla.</summary>
      <returns vsli:raw="The text content at the current position as a single-precision floating point number.">El contenido de texto en la posición actual como número de punto flotante de precisión sencilla.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary vsli:raw="Reads the text content at the current position as a 32-bit signed integer.">Lee el contenido de texto en la posición actual como un entero de 32 bits con signo.</summary>
      <returns vsli:raw="The text content as a 32-bit signed integer.">El contenido de texto como entero de 32 bits con signo.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary vsli:raw="Reads the text content at the current position as a 64-bit signed integer.">Lee el contenido de texto en la posición actual como un entero de 64 bits con signo.</summary>
      <returns vsli:raw="The text content as a 64-bit signed integer.">Contenido de texto como entero de 64 bits con signo.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary vsli:raw="Reads the text content at the current position as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Lee el contenido de texto en la posición actual como <see cref="T:System.Object" />.</summary>
      <returns vsli:raw="The text content as the most appropriate common language runtime (CLR) object.">El contenido de texto como el objeto de Common Language Runtime (CLR) más adecuado.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary vsli:raw="Asynchronously reads the text content at the current position as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Lee asincrónicamente el contenido de texto en la posición actual como un objeto <see cref="T:System.Object" />.</summary>
      <returns vsli:raw="The text content as the most appropriate common language runtime (CLR) object.">El contenido de texto como el objeto de Common Language Runtime (CLR) más adecuado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Lee el contenido de texto en la posición actual como un objeto <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">El contenido del texto como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary vsli:raw="Asynchronously reads the text content at the current position as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Lee asincrónicamente el contenido de texto en la posición actual como un objeto <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">El contenido del texto como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Reads the element content as the requested type.">Lee el contenido de los elementos como el tipo solicitado.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">Tipo del valor que se va a devolver.  
 Nota Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipo.</param>
      <returns vsli:raw="The element content converted to the requested typed object.">Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">Lea <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.">Comprueba que el nombre local especificado y el URI de espacio de nombres coinciden con los del elemento actual y, a continuación, lee el contenido de los elementos como el tipo solicitado.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">Tipo del valor que se va a devolver.  
 Nota Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipo.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element content converted to the requested typed object.">Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">Lea <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Asynchronously reads the element content as the requested type.">Lee asincrónicamente el contenido del elemento como el tipo solicitado.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.">Tipo del valor que se va a devolver.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipo.</param>
      <returns vsli:raw="The element content converted to the requested typed object.">Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;Base64&quot; /&gt; content.">Lee el elemento y descodifica el contenido de <see langword="Base64" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El nodo actual no es un nodo de elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the element and decodes the &lt;see langword=&quot;Base64&quot; /&gt; content.">Lee asincrónicamente el elemento y descodifica el contenido de <see langword="Base64" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">Lee el elemento y descodifica el contenido de <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El nodo actual no es un nodo de elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">Lee asincrónicamente el elemento y descodifica el contenido de <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Lee el elemento actual y devuelve el contenido como un objeto <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Contenido de elemento como objeto <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">El elemento actual contiene elementos secundarios.  
O bien 
El contenido de elemento no puede convertirse en un objeto <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Boolean" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Contenido de elemento como objeto <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Lee el elemento actual y devuelve el contenido como un objeto <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Contenido de elemento como objeto <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">El elemento actual contiene elementos secundarios.  
O bien 
El contenido de elemento no puede convertirse en un objeto <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">El contenido del elemento como objeto <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Lee el elemento actual y devuelve el contenido como un objeto <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Contenido de elemento como objeto <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">El elemento actual contiene elementos secundarios.  
O bien 
El contenido de elemento no puede convertirse en <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Contenido de elemento como objeto <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">El elemento actual contiene elementos secundarios.  
O bien 
El contenido de elemento no puede convertirse en <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary vsli:raw="Reads the current element and returns the contents as a double-precision floating-point number.">Lee el elemento actual y devuelve el contenido como número de punto flotante de precisión doble.</summary>
      <returns vsli:raw="The element content as a double-precision floating-point number.">El contenido del elemento como número de punto flotante de precisión doble.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a double-precision floating-point number.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en número de punto flotante de precisión doble.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.">Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como número de punto flotante de precisión doble.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element content as a double-precision floating-point number.">El contenido del elemento como número de punto flotante de precisión doble.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary vsli:raw="Reads the current element and returns the contents as single-precision floating-point number.">Lee el elemento actual y devuelve el contenido como número de punto flotante de precisión sencilla.</summary>
      <returns vsli:raw="The element content as a single-precision floating point number.">El contenido del elemento como número de punto flotante de precisión sencilla.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a single-precision floating-point number.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en número de punto flotante de precisión sencilla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.">Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como número de punto flotante de precisión sencilla.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element content as a single-precision floating point number.">El contenido del elemento como número de punto flotante de precisión sencilla.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a single-precision floating-point number.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en número de punto flotante de precisión sencilla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary vsli:raw="Reads the current element and returns the contents as a 32-bit signed integer.">Lee el elemento actual y devuelve el contenido como un entero de 32 bits con signo.</summary>
      <returns vsli:raw="The element content as a 32-bit signed integer.">El elemento contiene un entero de 32 bits con signo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 32-bit signed integer.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en un entero de 32 bits con signo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.">Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee el elemento actual y devuelve el contenido como entero de 32 bits con signo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element content as a 32-bit signed integer.">El elemento contiene un entero de 32 bits con signo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 32-bit signed integer.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en un entero de 32 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary vsli:raw="Reads the current element and returns the contents as a 64-bit signed integer.">Lee el elemento actual y devuelve el contenido como entero de 64 bits con signo.</summary>
      <returns vsli:raw="The element content as a 64-bit signed integer.">Contenido del elemento como entero de 64 bits con signo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 64-bit signed integer.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en un entero de 64 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.">Comprueba que el nombre local y el identificador URI del espacio de nombres especificados coinciden con los del elemento actual, luego lee el elemento actual y devuelve el contenido como entero de 64 bits con signo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element content as a 64-bit signed integer.">Contenido del elemento como entero de 64 bits con signo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 64-bit signed integer.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en un entero de 64 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary vsli:raw="Reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.Object" />.</summary>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing. La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado. Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Object" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing. La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado. Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">El elemento actual contiene elementos secundarios.  
 O bien  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary vsli:raw="Asynchronously reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Lee asincrónicamente el elemento actual y devuelve el contenido como objeto <see cref="T:System.Object" />.</summary>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing. La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado. Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Lee el elemento actual y devuelve el contenido como un objeto <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Contenido de elemento como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">El elemento actual contiene elementos secundarios.  
O bien 
El contenido de elemento no puede convertirse en un objeto <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.String" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Contenido de elemento como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">El elemento actual contiene elementos secundarios.  
O bien 
El contenido de elemento no puede convertirse en un objeto <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary vsli:raw="Asynchronously reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Lee asincrónicamente el elemento actual y devuelve el contenido como un objeto <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Contenido de elemento como objeto <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary vsli:raw="Reads a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">Lee un elemento de sólo texto. Sin embargo, se recomienda usar el método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> en su lugar, porque proporciona una manera más sencilla de controlar esta operación.</summary>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">Texto que contiene el elemento leído. Una cadena vacía si el elemento está vacío.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The next content node is not a start tag; or the element found does not contain a simple text value.">El siguiente nodo de contenido no es una etiqueta de apertura o el elemento encontrado no contiene un valor de texto simple.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary vsli:raw="Checks that the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element found matches the given string before reading a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">Comprueba si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento encontrado coincide con la cadena especificada antes de leer un elemento de sólo texto. Sin embargo, se recomienda usar el método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> en su lugar, porque proporciona una manera más sencilla de controlar esta operación.</summary>
      <param name="name" vsli:raw="The name to check.">Nombre que se va a comprobar.</param>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">Texto que contiene el elemento leído. Una cadena vacía si el elemento está vacío.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="If the next content node is not a start tag; if the element &lt;see langword=&quot;Name&quot; /&gt; does not match the given argument; or if the element found does not contain a simple text value.">Si el siguiente nodo de contenido no es una etiqueta de apertura; si el elemento <see langword="Name" /> no coincide con el argumento especificado o si el elemento encontrado no contiene un valor de texto simple.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary vsli:raw="Checks that the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found matches the given strings before reading a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">Comprueba si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado coinciden con las cadenas especificadas antes de leer un elemento de sólo texto. Sin embargo, se recomienda usar el método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> en su lugar, porque proporciona una manera más sencilla de controlar esta operación.</summary>
      <param name="localname" vsli:raw="The local name to check.">Nombre local que se va a comprobar.</param>
      <param name="ns" vsli:raw="The namespace URI to check.">Identificador URI de espacio de nombres que se va a comprobar.</param>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">Texto que contiene el elemento leído. Una cadena vacía si el elemento está vacío.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="If the next content node is not a start tag; if the element &lt;see langword=&quot;LocalName&quot; /&gt; or &lt;see langword=&quot;NamespaceURI&quot; /&gt; do not match the given arguments; or if the element found does not contain a simple text value.">Si el siguiente nodo de contenido no es una etiqueta de apertura; si el elemento <see langword="LocalName" /> o <see langword="NamespaceURI" /> no coincide con los argumentos especificados o si el elemento encontrado no contiene un valor de texto simple.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary vsli:raw="Checks that the current content node is an end tag and advances the reader to the next node.">Comprueba si el nodo de contenido actual es una etiqueta de cierre y desplaza el lector hasta el siguiente nodo.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current node is not an end tag or if incorrect XML is encountered in the input stream.">El nodo actual no es una etiqueta de cierre o si se encuentra XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary vsli:raw="When overridden in a derived class, reads all the content, including markup, as a string.">Cuando se invalida en una clase derivada, lee todo el contenido, incluido el marcado, como una cadena.</summary>
      <returns vsli:raw="All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.&#xA;&#xA; If the current node is neither an element nor attribute, an empty string is returned.">Todo el contenido XML, incluido el marcado, del nodo actual. Si el nodo actual no tiene nodos secundarios, se devuelve una cadena vacía.  
 Si el nodo actual no es un elemento ni un atributo, se devuelve una cadena vacía.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML was not well-formed, or an error occurred while parsing the XML.">El fragmento de XML no está bien formado o se ha producido un error al analizarlo.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary vsli:raw="Asynchronously reads all the content, including markup, as a string.">De forma asincrónica lee todo el contenido, incluido el marcado, como una cadena.</summary>
      <returns vsli:raw="All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.">Todo el contenido XML, incluido el marcado, del nodo actual. Si el nodo actual no tiene nodos secundarios, se devuelve una cadena vacía.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary vsli:raw="When overridden in a derived class, reads the content, including markup, representing this node and all its children.">Cuando se invalida en una clase derivada, lee el contenido, incluido el marcado, que representa este nodo y todos sus nodos secundarios.</summary>
      <returns vsli:raw="If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.">Si el lector está situado en un nodo de elemento o de atributo, este método devuelve todo el contenido XML, incluido el marcado, del nodo actual y de todos sus nodos secundarios; en caso contrario, devuelve una cadena vacía.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML was not well-formed, or an error occurred while parsing the XML.">El fragmento de XML no está bien formado o se ha producido un error al analizarlo.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary vsli:raw="Asynchronously reads the content, including markup, representing this node and all its children.">De forma asincrónica lee el contenido, incluido el marcado, que representa este nodo y todos sus elementos secundarios.</summary>
      <returns vsli:raw="If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.">Si el lector está situado en un nodo de elemento o de atributo, este método devuelve todo el contenido XML, incluido el marcado, del nodo actual y de todos sus nodos secundarios; en caso contrario, devuelve una cadena vacía.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary vsli:raw="Checks that the current node is an element and advances the reader to the next node.">Comprueba si el nodo actual es un elemento y desplaza el lector hasta el siguiente nodo.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.">Se detectó XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary vsli:raw="Checks that the current content node is an element with the given &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; and advances the reader to the next node.">Comprueba si el nodo de contenido actual es un elemento con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Nombre completo del elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; of the element does not match the given &lt;paramref name=&quot;name&quot; /&gt;.">Se detectó XML incorrecto en el flujo de entrada.  
O bien 
El objeto <see cref="P:System.Xml.XmlReader.Name" /> del elemento no coincide con el <paramref name="name" /> especificado.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary vsli:raw="Checks that the current content node is an element with the given &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; and advances the reader to the next node.">Comprueba si el nodo de contenido actual es un elemento con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="localname" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found do not match the given arguments.">Se detectó XML incorrecto en el flujo de entrada.  
O bien 
Las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado no coinciden con los argumentos especificados.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary vsli:raw="When overridden in a derived class, gets the state of the reader.">Cuando se invalida en una clase derivada, obtiene el estado del lector.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the state of the reader.">Uno de los valores de enumeración que especifica el estado del lector.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary vsli:raw="When overridden in a derived class, reads the contents of an element or text node as a string. However, we recommend that you use the &lt;see cref=&quot;Overload:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">Cuando se reemplaza en una clase derivada, lee el contenido de un nodo de elemento o de texto como una cadena. Sin embargo, se recomienda usar el método <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> en su lugar, porque proporciona una manera más sencilla de controlar esta operación.</summary>
      <returns vsli:raw="The contents of the element or an empty string.">El contenido del elemento o una cadena vacía.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">Se ha producido un error al analizar el fragmento de XML.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary vsli:raw="Returns a new &lt;see langword=&quot;XmlReader&quot; /&gt; instance that can be used to read the current node, and all its descendants.">Devuelve una nueva instancia de <see langword="XmlReader" /> que se puede utilizar para leer el nodo actual y todos sus descendientes.</summary>
      <returns vsli:raw="A new XML reader instance set to &lt;see cref=&quot;F:System.Xml.ReadState.Initial&quot; /&gt;. Calling the &lt;see cref=&quot;M:System.Xml.XmlReader.Read&quot; /&gt; method positions the new reader on the node that was current before the call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadSubtree&quot; /&gt; method.">Una nueva instancia del lector XML establecida en <see cref="F:System.Xml.ReadState.Initial" />. Al llamar al método <see cref="M:System.Xml.XmlReader.Read" />, se coloca el nuevo lector en el nodo que era el actual antes de la llamada al método <see cref="M:System.Xml.XmlReader.ReadSubtree" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The XML reader isn't positioned on an element when this method is called.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El lector XML no se colocó sobre un elemento al llamar a este método.
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the next descendant element with the specified qualified name.">Hace avanzar el objeto <see cref="T:System.Xml.XmlReader" /> hasta al siguiente elemento descendiente con el nombre completo especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the element you wish to move to.">Nombre completo del elemento al que se desea desplazar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching descendant element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching descendant element is not found, the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the element.&#xA;&#xA; If the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element when &lt;see cref=&quot;M:System.Xml.XmlReader.ReadToDescendant(System.String)&quot; /&gt; was called, this method returns &lt;see langword=&quot;false&quot; /&gt; and the position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not changed.">Es <see langword="true" /> si se encuentra un elemento descendiente; en caso contrario, es <see langword="false" />. Si no se encuentra ningún elemento secundario relacionado, el objeto <see cref="T:System.Xml.XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es <see langword="XmlNodeType.EndElement" />) del elemento.  
Si <see cref="T:System.Xml.XmlReader" /> no está en un elemento cuando se llama a <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />, este método devuelve <see langword="false" /> y la posición de <see cref="T:System.Xml.XmlReader" /> no cambia.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">El parámetro es una cadena vacía.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the next descendant element with the specified local name and namespace URI.">Hace avanzar el objeto <see cref="T:System.Xml.XmlReader" /> hasta el siguiente elemento descendiente que tenga el URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="localName" vsli:raw="The local name of the element you wish to move to.">Nombre local del elemento al que se desea desplazar.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element you wish to move to.">URI del espacio de nombres del elemento al que se desea desplazar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching descendant element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching descendant element is not found, the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the element.&#xA;&#xA; If the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element when &lt;see cref=&quot;M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)&quot; /&gt; was called, this method returns &lt;see langword=&quot;false&quot; /&gt; and the position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not changed.">Es <see langword="true" /> si se encuentra un elemento descendiente; en caso contrario, es <see langword="false" />. Si no se encuentra ningún elemento secundario relacionado, el objeto <see cref="T:System.Xml.XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es <see langword="XmlNodeType.EndElement" />) del elemento.  
Si <see cref="T:System.Xml.XmlReader" /> no está en un elemento cuando se llama a <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />, este método devuelve <see langword="false" /> y la posición de <see cref="T:System.Xml.XmlReader" /> no cambia.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">Ambos valores del parámetro son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary vsli:raw="Reads until an element with the specified qualified name is found.">Lee hasta que encuentra un elemento con el nombre completo especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Nombre completo del elemento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching element is found; otherwise &lt;see langword=&quot;false&quot; /&gt; and the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an end of file state.">Es <see langword="true" /> si se encuentra un elemento coincidente; de lo contrario, es <see langword="false" /> y el objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de final de archivo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">El parámetro es una cadena vacía.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary vsli:raw="Reads until an element with the specified local name and namespace URI is found.">Lee hasta que encuentra un elemento con el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching element is found; otherwise &lt;see langword=&quot;false&quot; /&gt; and the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an end of file state.">Es <see langword="true" /> si se encuentra un elemento coincidente; de lo contrario, es <see langword="false" /> y el objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de final de archivo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">Ambos valores del parámetro son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary vsli:raw="Advances the &lt;see langword=&quot;XmlReader&quot; /&gt; to the next sibling element with the specified qualified name.">Hace avanzar el objeto <see langword="XmlReader" /> hasta al siguiente elemento relacionado con el nombre completo especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the sibling element you wish to move to.">Nombre completo del elemento relacionado al que se desea desplazar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching sibling element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching sibling element is not found, the &lt;see langword=&quot;XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the parent element.">Es <see langword="true" /> si se encuentra un elemento relacionado; en caso contrario, es <see langword="false" />. Si no se encuentra ningún elemento relacionado, el objeto <see langword="XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es <see langword="XmlNodeType.EndElement" />) del elemento principal.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">El parámetro es una cadena vacía.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary vsli:raw="Advances the &lt;see langword=&quot;XmlReader&quot; /&gt; to the next sibling element with the specified local name and namespace URI.">Hace avanzar el objeto <see langword="XmlReader" /> al siguiente elemento del mismo nivel que tenga el URI del espacio de nombres y el nombre local especificados.</summary>
      <param name="localName" vsli:raw="The local name of the sibling element you wish to move to.">Nombre local del elemento relacionado al que se desea desplazar.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the sibling element you wish to move to.">URI del espacio de nombres del elemento relacionado al que se desea desplazar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching sibling element is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If a matching sibling element is not found, the &lt;see langword=&quot;XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the parent element.">Es <see langword="true" /> si se encuentra un elemento relacionado; en caso contrario, es <see langword="false" />. Si no se encuentra ningún elemento relacionado, el objeto <see langword="XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es <see langword="XmlNodeType.EndElement" />) del elemento principal.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">Ambos valores del parámetro son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads large streams of text embedded in an XML document.">Lee grandes secuencias de texto incrustadas en un documento XML.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset within the buffer where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; can start to copy the results.">Desplazamiento en el búfer en el que <see cref="T:System.Xml.XmlReader" /> puede empezar a copiar los resultados.</param>
      <param name="count" vsli:raw="The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.">Número máximo de caracteres que se van a copiar en el búfer. El número real de caracteres copiados se devuelve desde este método.</param>
      <returns vsli:raw="The number of characters read into the buffer. The value zero is returned when there is no more text content.">Número de caracteres leídos en el búfer. Si no hay más contenido de texto, se devuelve el valor cero.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node does not have a value (&lt;see cref=&quot;P:System.Xml.XmlReader.HasValue&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El nodo actual no tiene ningún valor (<see cref="P:System.Xml.XmlReader.HasValue" /> es <see langword="false" />).
O bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer, or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML data is not well-formed.">El formato de los datos XML no es correcto.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads large streams of text embedded in an XML document.">Lee asincrónicamente grandes secuencias de texto incrustadas en un documento XML.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset within the buffer where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; can start to copy the results.">Desplazamiento en el búfer en el que <see cref="T:System.Xml.XmlReader" /> puede empezar a copiar los resultados.</param>
      <param name="count" vsli:raw="The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.">Número máximo de caracteres que se van a copiar en el búfer. El número real de caracteres copiados se devuelve desde este método.</param>
      <returns vsli:raw="The number of characters read into the buffer. The value zero is returned when there is no more text content.">Número de caracteres leídos en el búfer. Si no hay más contenido de texto, se devuelve el valor cero.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary vsli:raw="When overridden in a derived class, resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">Cuando se invalida en una clase derivada, resuelve la referencia a entidad para los nodos <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node; this implementation of the reader cannot resolve entities (&lt;see cref=&quot;P:System.Xml.XmlReader.CanResolveEntity&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El lector no está situado en un nodo <see langword="EntityReference" />; esta implementación del lector no puede resolver entidades (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> devuelve <see langword="false" />).
O bien
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node as a result of schema validation.">Obtiene la información de esquema asignada al nodo actual como resultado de la validación del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the schema information for the current node. Schema information can be set on elements, attributes, or on text nodes with a non-null &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; (typed values).&#xA;&#xA; If the current node is not one of the above node types, or if the &lt;see langword=&quot;XmlReader&quot; /&gt; instance does not report schema information, this property returns &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; If this property is called from an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; or an &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; object, this property always returns &lt;see langword=&quot;null&quot; /&gt;. These &lt;see langword=&quot;XmlReader&quot; /&gt; implementations do not expose schema information through the &lt;see langword=&quot;SchemaInfo&quot; /&gt; property.">Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual. La información del esquema se puede establecer en elementos, atributos o nodos de texto con un <see cref="P:System.Xml.XmlReader.ValueType" /> no nulo (valores con tipo).  
Si el nodo actual no es ninguno de los tipos de nodo anteriores, o si la instancia de <see langword="XmlReader" /> no proporciona la información del esquema, esta propiedad devuelve <see langword="null" />.  
Si los objetos <see cref="T:System.Xml.XmlTextReader" /> y <see cref="T:System.Xml.XmlValidatingReader" /> llaman a esta propiedad, siempre devuelve <see langword="null" />. Estas implementaciones de <see langword="XmlReader" /> no exponen ninguna información de esquema a través de la propiedad <see langword="SchemaInfo" />.  
   
 Si tiene que obtener el conjunto de información de validación posterior de esquema (PSVI) para un elemento, sitúe el lector en la etiqueta de cierre del elemento, en lugar de en la etiqueta de apertura. El PSVI se obtiene mediante la propiedad <see langword="SchemaInfo" /> de un lector. El lector de validación que se crea mediante <see cref="Overload:System.Xml.XmlReader.Create" /> con la propiedad <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> establecida en <see cref="F:System.Xml.ValidationType.Schema" /> tiene el PSVI completo para un elemento solo cuando el lector se coloca en la etiqueta de cierre de un elemento.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object used to create this &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.">Obtiene el objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se usa para crear esta instancia de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object used to create this reader instance. If this reader was not created using the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> utilizado para crear esta instancia del lector. Si este lector no se creó utilizando el método <see cref="Overload:System.Xml.XmlReader.Create" />, esta propiedad devuelve <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">Omite los nodos secundarios del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary vsli:raw="Asynchronously skips the children of the current node.">Omite de forma asincrónica los elementos secundarios del valor del nodo actual.</summary>
      <returns vsli:raw="The current node.">Nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary vsli:raw="When overridden in a derived class, gets the text value of the current node.">Cuando se invalida en una clase derivada, obtiene el valor de texto del nodo actual.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return &lt;see langword=&quot;String.Empty&quot; /&gt;.&#xA;&#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo: En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven <see langword="String.Empty" />.  
  Tipo de nodo 
  Valor 
 <see langword="Attribute" /> El valor del atributo.  

 <see langword="CDATA" /> Contenido de la sección CDATA.  

 <see langword="Comment" /> El contenido del comentario.  

 <see langword="DocumentType" /> El subconjunto interno.  

 <see langword="ProcessingInstruction" /> El contenido completo, sin incluir el destino.  

 <see langword="SignificantWhitespace" /> Espacio en blanco entre marcas en un modelo de contenido mixto.  

 <see langword="Text" /> El contenido del nodo de texto.  

 <see langword="Whitespace" /> El espacio en blanco entre marcado.  

 <see langword="XmlDeclaration" /> El contenido de la declaración.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary vsli:raw="Gets The Common Language Runtime (CLR) type for the current node.">Obtiene el tipo de Common Language Runtime (CLR) del nodo actual.</summary>
      <returns vsli:raw="The CLR type that corresponds to the typed value of the node. The default is &lt;see langword=&quot;System.String&quot; /&gt;.">Tipo de CLR correspondiente al valor con tipo del nodo. De manera predeterminada, es <see langword="System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Cuando se invalida en una clase derivada, obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" /> actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Cuando se invalida en una clase derivada, obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary vsli:raw="Specifies a set of features to support on the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object created by the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method.">Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlReader" /> creado mediante el método <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary vsli:raw="Gets or sets whether asynchronous &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; methods can be used on a particular &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.">Obtiene o establece si los métodos asincrónicos de <see cref="T:System.Xml.XmlReader" /> se pueden usar en una instancia determinada de <see cref="T:System.Xml.XmlReader" /> .</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if asynchronous methods can be used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se pueden usar métodos asincrónicos; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary vsli:raw="Gets or sets a value indicating whether to do character checking.">Obtiene o establece un valor que indica si se va a realizar la comprobación de caracteres.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do character checking; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se va a realizar la comprobación de caracteres; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.  
   
 Si <see cref="T:System.Xml.XmlReader" /> procesa datos de texto, siempre comprueba que los nombres XML y el contenido de texto son válidos, independientemente de la configuración de la propiedad. Al establecer la propiedad <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> en <see langword="false" />, se desactiva la comprobación de caracteres en las referencias a entidades de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary vsli:raw="Creates a copy of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; instance.">Crea una copia de la instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns vsli:raw="The cloned &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlReaderSettings" /> clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value indicating whether the underlying stream or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; should be closed when the reader is closed.">Obtiene o establece un valor que indica si se debe cerrar la secuencia o el objeto <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the underlying stream or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; when the reader is closed; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para cerrar la secuencia o <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary vsli:raw="Gets or sets the level of conformance which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; will comply.">Obtiene o establece el nivel de conformidad que cumplirá <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the level of conformance that the XML reader will enforce. The default is &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Document&quot; /&gt;.">Uno de los valores de enumeración que especifica el nivel de conformidad que el lector XML aplicará. De manera predeterminada, es <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary vsli:raw="Gets or sets a value that determines the processing of DTDs.">Obtiene o establece un valor que determine el procesamiento de DTD.</summary>
      <returns vsli:raw="One of the enumeration values that determines the processing of DTDs. The default is &lt;see cref=&quot;F:System.Xml.DtdProcessing.Prohibit&quot; /&gt;.">Uno de los valores de enumeración que determina el procesamiento de DTD. De manera predeterminada, es <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore comments.">Obtiene o establece un valor que indica si se van a omitir los comentarios.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore comments; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para omitir los comentarios; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore processing instructions.">Obtiene o establece un valor que indica si se van a omitir las instrucciones de procesamiento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore processing instructions; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para omitir las instrucciones de procesamiento; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore insignificant white space.">Obtiene o establece un valor que indica si se va a omitir el espacio en blanco no significativo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore white space; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para omitir el espacio en blanco; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary vsli:raw="Gets or sets line number offset of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Obtiene o establece el desplazamiento del número de línea del objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The line number offset. The default is 0.">Desplazamiento del número de línea. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary vsli:raw="Gets or sets line position offset of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Obtiene o establece el desplazamiento de la posición de línea del objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The line position offset. The default is 0.">Desplazamiento de la posición de la línea. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary vsli:raw="Gets or sets a value indicating the maximum allowable number of characters in a document that result from expanding entities.">Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento que resulta de expandir las entidades.</summary>
      <returns vsli:raw="The maximum allowable number of characters from expanded entities. The default is 0.">El número máximo de caracteres permitido de las entidades expandidas. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary vsli:raw="Gets or sets a value indicating the maximum allowable number of characters in an XML document. A zero (0) value means no limits on the size of the XML document. A non-zero value specifies the maximum size, in characters.">Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento XML. Un valor cero (0) significa que no existe ningún límite en el tamaño del documento XML. Un valor distinto de cero especifica el tamaño máximo, en caracteres.</summary>
      <returns vsli:raw="The maximum allowable number of characters in an XML document. The default is 0.">El número máximo de caracteres permitido en un documento XML. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used for atomized string comparisons.">Obtiene o establece el objeto <see cref="T:System.Xml.XmlNameTable" /> utilizado para las comparaciones de cadenas subdivididas.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; that stores all the atomized strings used by all &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instances created using this &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object.  &#xA;  &#xA; The default is &lt;see langword=&quot;null&quot; /&gt;. The created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance will use a new empty &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; if this value is &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlNameTable" /> que almacena todas las cadenas subdivididas que utilizan todas las instancias del objeto <see cref="T:System.Xml.XmlReader" /> creadas mediante este objeto <see cref="T:System.Xml.XmlReaderSettings" />.  
De manera predeterminada, es <see langword="null" />. La instancia de <see cref="T:System.Xml.XmlReader" /> creada utilizará un nuevo objeto <see cref="T:System.Xml.NameTable" /> vacío si este valor es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary vsli:raw="Gets or sets a value indicating whether to prohibit document type definition (DTD) processing. This property is obsolete. Use &lt;see cref=&quot;P:System.Xml.XmlTextReader.DtdProcessing&quot; /&gt; instead.">Obtiene o establece un valor que indica si se va a prohibir el procesamiento de la definición de tipo de documento (DTD). Esta propiedad ha quedado obsoleta. Utilice <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> en su lugar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to prohibit DTD processing; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> para prohibir el procesamiento de DTD; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary vsli:raw="Resets the members of the settings class to their default values.">Restablece los miembros de la clase de configuración a sus valores predeterminados.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to use when performing schema validation.">Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se va a utilizar al realizar la validación del esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to use when performing schema validation. The default is an empty &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se usará al realizar la validación de esquemas. El valor predeterminado es un objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vacío</returns>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary vsli:raw="Occurs when the reader encounters validation errors.">Se produce cuando el lector encuentra errores de validación.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary vsli:raw="Gets or sets a value indicating the schema validation settings. This setting applies to &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; objects that validate schemas (&lt;see cref=&quot;P:System.Xml.XmlReaderSettings.ValidationType&quot; /&gt; property set to &lt;see langword=&quot;ValidationType.Schema&quot; /&gt;).">Obtiene o establece un valor que indica la configuración de validación de esquemas. Esta configuración se aplica a los objetos <see cref="T:System.Xml.XmlReader" /> que validan esquemas (con la propiedad <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> establecida en <see langword="ValidationType.Schema" />).</summary>
      <returns vsli:raw="A bitwise combination of enumeration values that specify validation options. &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&quot; /&gt; and &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes&quot; /&gt; are enabled by default. &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&quot; /&gt;, and &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings&quot; /&gt; are disabled by default.">Combinación bit a bit de valores de enumeración que especifican opciones de validación. Los campos <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> y <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> están deshabilitados de forma predeterminada. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> y <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> están deshabilitados de forma predeterminada.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; will perform validation or type assignment when reading.">Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlReader" /> realizará la validación o la asignación de tipos al leer.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ValidationType&quot; /&gt; values that indicates whether XmlReader will perform validation or type assignment when reading. The default is &lt;see langword=&quot;ValidationType.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.ValidationType" /> que indica si XmlReader realizará la validación o la asignación de tipos al leer. De manera predeterminada, es <see langword="ValidationType.None" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to access external documents.">Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para obtener acceso a documentos externos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to access external documents. If set to &lt;see langword=&quot;null&quot; /&gt;, an &lt;see cref=&quot;T:System.Xml.XmlException&quot; /&gt; is thrown when the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; tries to access an external resource. The default is a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; with no credentials.  Starting with the .NET Framework 4.5.2, this setting has a default value of &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para tener acceso a documentos externos. Si se establece en <see langword="null" />, se produce una excepción <see cref="T:System.Xml.XmlException" /> cuando el objeto <see cref="T:System.Xml.XmlReader" /> intenta obtener acceso a un recurso externo. El valor predeterminado es un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" /> sin credenciales.  A partir de la .NET Framework 4.5.2, este valor de configuración tiene un <see langword="null" />valor predeterminado de.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary vsli:raw="Resolves external XML resources named by a Uniform Resource Identifier (URI).">Resuelve los recursos XML externos designados por un identificador de recursos uniforme (URI).</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary vsli:raw="When overridden in a derived class, sets the credentials used to authenticate web requests.">Cuando se invalida en una clase derivada, establece las credenciales usadas para autenticar las solicitudes web.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see langword=&quot;XmlResolver&quot; /&gt; has no user credentials.">Credenciales que se usan para autenticar las solicitudes web. Si no se establece esta propiedad, el valor predeterminado es <see langword="null" />; es decir, el objeto <see langword="XmlResolver" /> no tiene credenciales de usuario.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, maps a URI to an object that contains the actual resource.">Cuando se invalida en una clase derivada, asigna un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">No se usa actualmente.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns System.IO.Stream objects.">Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos System.IO.Stream.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">Objeto de flujo o <see langword="null" /> si se especifica un tipo que no sea un flujo.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is not a &lt;see langword=&quot;Stream&quot; /&gt; type.">
        <paramref name="ofObjectToReturn" /> no es un tipo de <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">El identificador URI especificado no es un identificador URI absoluto.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a runtime error (for example, an interrupted server connection).">Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor).</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">No se usa actualmente.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">Objeto de flujo o <see langword="null" /> si se especifica un tipo que no sea un flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves the absolute URI from the base and relative URIs.">Cuando se invalida en una clase derivada, resuelve el identificador URI absoluto a partir de los identificadores URI base y relativo.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">Identificador URI base que se utiliza para resolver el identificador URI relativo</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un identificador URI absoluto.</param>
      <returns vsli:raw="The absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relativeUri" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary vsli:raw="Enables the resolver to return types other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Permite al objeto Resolver devolver otros tipos además de <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri" vsli:raw="The URI.">La dirección URI.</param>
      <param name="type" vsli:raw="The type to return.">Tipo que se devuelve.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se admite el elemento <paramref name="type" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary vsli:raw="Helps to secure another implementation of &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; by wrapping the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object and restricting the resources that the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; has access to.">Ayuda a proteger otra implementación de <see cref="T:System.Xml.XmlResolver" /> ajustando el objeto <see cref="T:System.Xml.XmlResolver" /> y restringiendo los recursos a los que tiene acceso el <see cref="T:System.Xml.XmlResolver" /> subyacente.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; class with the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; and URL provided.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" /> con el objeto <see cref="T:System.Xml.XmlResolver" /> y la dirección URL especificados.</summary>
      <param name="resolver" vsli:raw="The XML resolver that is wrapped by the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt;.">Solucionador de XML que ajusta la clase <see cref="T:System.Xml.XmlSecureResolver" />.</param>
      <param name="securityUrl" vsli:raw="The URL used to create the &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; that will be applied to the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; calls &lt;see cref=&quot;M:System.Security.PermissionSet.PermitOnly&quot; /&gt; on the created &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; before calling &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;.">Dirección URL utilizada para crear el objeto <see cref="T:System.Security.PermissionSet" /> que se aplicará al <see cref="T:System.Xml.XmlResolver" /> subyacente. El <see cref="T:System.Xml.XmlSecureResolver" /> llama a <see cref="M:System.Security.PermissionSet.PermitOnly" /> en el objeto <see cref="T:System.Security.PermissionSet" /> creado antes de llamar a <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente.</param>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary vsli:raw="Sets credentials used to authenticate web requests.">Establece las credenciales usadas para autenticar las solicitudes web.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. The &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; sets the given credentials on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; has no user credentials.">Credenciales que se usan para autenticar las solicitudes web. <see cref="T:System.Xml.XmlSecureResolver" /> establece las credenciales dadas en el <see cref="T:System.Xml.XmlResolver" /> subyacente. Si no se establece esta propiedad, el valor predeterminado es <see langword="null" />; es decir, el objeto <see cref="T:System.Xml.XmlSecureResolver" /> no tiene credenciales de usuario.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource. This method temporarily sets the &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; created in the constructor by calling &lt;see cref=&quot;M:System.Security.PermissionSet.PermitOnly&quot; /&gt; before calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to open the resource.">Asigna un identificador URI a un objeto que contiene el recurso real. Este método establece provisionalmente el objeto <see cref="T:System.Security.PermissionSet" /> creado en el constructor llamando a <see cref="M:System.Security.PermissionSet.PermitOnly" /> antes de llamar a <see langword="GetEntity" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente para abrir el recurso.</summary>
      <param name="absoluteUri" vsli:raw="The URI that is returned from &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI que se devuelve desde <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">No se usa actualmente.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The stream returned by calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If a type other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; is specified, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Flujo devuelto por una llamada a <see langword="GetEntity" /> en el elemento <see cref="T:System.Xml.XmlResolver" /> subyacente. Si se especifica un tipo que no sea <see cref="T:System.IO.Stream" />, el método devuelve <see langword="null" />.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is neither &lt;see langword=&quot;null&quot; /&gt; nor a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; type.&#xA;&#xA;-or-&#xA;&#xA;.NET 7 and later versions: In all cases.">
        <paramref name="ofObjectToReturn" /> no es un tipo <see langword="null" /> ni <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">El identificador URI especificado no es un identificador URI absoluto.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a run-time error (for example, an interrupted server connection).">Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor).</exception>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">Identificador URI devuelto desde <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">No se usa actualmente.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Tipo de objeto que se va a devolver. La versión actual sólo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The stream returned by calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If a type other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; is specified, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Flujo devuelto por una llamada a <see langword="GetEntity" /> en el elemento <see cref="T:System.Xml.XmlResolver" /> subyacente. Si se especifica un tipo que no sea <see cref="T:System.IO.Stream" />, el método devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs by calling &lt;see langword=&quot;ResolveUri&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;.">Resuelve el identificador URI absoluto a partir de los URI base y relativo llamando a <see langword="ResolveUri" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">Identificador URI base que se utiliza para resolver el identificador URI relativo</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un identificador URI absoluto.</param>
      <returns vsli:raw="The absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved (returned by calling &lt;see langword=&quot;ResolveUri&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;).">URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver (devuelto mediante una llamada a <see langword="ResolveUri" /> en el elemento <see cref="T:System.Xml.XmlResolver" /> subyacente).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relativeUri" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary vsli:raw="Represents white space between markup in a mixed content node or white space within an xml:space= 'preserve' scope. This is also referred to as significant white space.">Representa el espacio en blanco entre marcas en un nodo de contenido mixto o espacio en blanco dentro del ámbito xml:space= "preserve". También se hace referencia a esto como espacio en blanco significativo.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="strData" vsli:raw="The white space characters of the node.">Caracteres de espacio en blanco del nodo.</param>
      <param name="doc" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For significant white space nodes, the cloned node always includes the data value, regardless of the parameter setting.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Para los nodos de espacio en blanco significativo, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#significant-whitespace&quot; /&gt;.">Para nodos <see langword="XmlSignificantWhitespace" />, esta propiedad devuelve <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#significant-whitespace&quot; /&gt;.">Para nodos <see langword="XmlSignificantWhitespace" />, esta propiedad devuelve <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this value is XmlNodeType.SignificantWhitespace.">Para los nodos <see langword="XmlSignificantWhitespace" />, este valor es XmlNodeType.SignificantWhitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary vsli:raw="Gets the parent of the current node.">Obtiene el elemento primario del nodo actual.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; parent node of the current node.">Nodo <see cref="T:System.Xml.XmlNode" /> primario del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Devuelva <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtiene o establece el valor del nodo.</summary>
      <returns vsli:raw="The white space characters found in the node.">Caracteres de espacio en blanco encontrados en el nodo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting &lt;see langword=&quot;Value&quot; /&gt; to invalid white space characters.">Establecimiento de <see langword="Value" /> en caracteres de espacio en blanco no válidos.</exception>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary vsli:raw="Specifies the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Especifica el ámbito de <see langword="xml:space" /> actual.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; scope equals &lt;see langword=&quot;default&quot; /&gt;.">El ámbito de <see langword="xml:space" /> equivale a <see langword="default" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary vsli:raw="No &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Sin ámbito de <see langword="xml:space" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; scope equals &lt;see langword=&quot;preserve&quot; /&gt;.">El ámbito de <see langword="xml:space" /> equivale a <see langword="preserve" />.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary vsli:raw="Represents the text content of an element or attribute.">Representa el contenido de texto de un elemento o atributo.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlText" />.</summary>
      <param name="strData" vsli:raw="The content of the node; see the &lt;see cref=&quot;P:System.Xml.XmlText.Value&quot; /&gt; property.">El contenido del nodo: vea la propiedad <see cref="P:System.Xml.XmlText.Value" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For text nodes, this property returns &lt;see langword=&quot;#text&quot; /&gt;.">Para nodos de texto, esta propiedad devuelve <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For text nodes, this property returns &lt;see langword=&quot;#text&quot; /&gt;.">Para nodos de texto, esta propiedad devuelve <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="For text nodes, this value is XmlNodeType.Text.">Para nodos de texto, este valor es XmlNodeType.Text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">
        <see langword="XmlNode" /> que es el elemento principal del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado del árbol, el elemento principal es <see langword="null" />. Para todos los demás nodos, el valor devuelto depende de <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Devuelva <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary vsli:raw="Splits the node into two nodes at the specified offset, keeping both in the tree as siblings.">Divide el nodo en dos nodos en el desplazamiento especificado, manteniéndolos en el árbol como nodos relacionados.</summary>
      <param name="offset" vsli:raw="The offset at which to split the node.">Desplazamiento en el que se va a dividir el nodo.</param>
      <returns vsli:raw="The new node.">Nuevo nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtiene o establece el valor del nodo.</summary>
      <returns vsli:raw="The content of the text node.">El contenido del nodo de texto.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. &lt;see langword=&quot;XmlText&quot; /&gt; nodes do not have children, so this method has no effect.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Los nodos <see langword="XmlText" /> no tienen nodos secundarios, por lo que este método no tiene ningún efecto.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary vsli:raw="Represents a reader that provides fast, non-cached, forward-only access to XML data.  &#xA;  &#xA; Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class instead.">Representa un lector que proporciona acceso rápido a datos XML, sin almacenamiento en caché y con desplazamiento solo hacia delante.  
A partir de .NET Framework 2.0, se recomienda usar la clase <see cref="T:System.Xml.XmlReader" /> en su lugar.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlTextReader&quot; /&gt;.">Inicializa una nueva instancia de <see langword="XmlTextReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el flujo especificado.</summary>
      <param name="input" vsli:raw="The stream containing the XML data to read.">Flujo que contiene los datos XML que se van a leer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el flujo especificado y <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input" vsli:raw="The stream containing the XML data to read.">Flujo que contiene los datos XML que se van a leer.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="nt" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream, &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el flujo especificado, <see cref="T:System.Xml.XmlNodeType" /> y <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment" vsli:raw="The stream containing the XML fragment to parse.">Flujo que contiene el fragmento de XML que se va a analizar.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment can contain. (See table below.)">
        <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto también determina lo que puede contener el fragmento. Vea la tabla que figura a continuación.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the &lt;paramref name=&quot;xmlFragment&quot; /&gt; is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt;, and the &lt;c&gt;xml:space&lt;/c&gt; scope.">
        <see cref="T:System.Xml.XmlParserContext" /> donde se va a analizar <paramref name="xmlFragment" />. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el <c>xml:lang</c> actual y el ámbito de <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not an Element, Attribute, or Document &lt;see langword=&quot;XmlNodeType&quot; /&gt;.">
        <paramref name="fragType" /> no es Element, Attribute ni Document <see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlFragment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlFragment" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">
        <see langword="TextReader" /> que contiene los datos XML que se van a leer.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con los parámetros <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">
        <see langword="TextReader" /> que contiene los datos XML que se van a leer.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="nt" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified file.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el archivo especificado.</summary>
      <param name="url" vsli:raw="The URL for the file containing the XML data. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">URL del archivo que contiene los datos XML. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor.</param>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">No se puede encontrar el archivo especificado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="Part of the filename or directory cannot be found.">No se puede encontrar parte del nombre de archivo o del directorio.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is an empty string.">
        <paramref name="url" /> es una cadena vacía.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The remote filename cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">No se puede resolver el nombre de archivo remoto.  
 O bien  
 Error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is not a valid URI.">
        <paramref name="url" /> no es un URI válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL and stream.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL y el flujo especificados.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">Dirección URL que se va a usar para resolver los recursos externos. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor.</param>
      <param name="input" vsli:raw="The stream containing the XML data to read.">Flujo que contiene los datos XML que se van a leer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL, stream and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL, el flujo y la <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value. If &lt;paramref name=&quot;url&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;BaseURI&quot; /&gt; is set to &lt;see langword=&quot;String.Empty&quot; /&gt;.">Dirección URL que se va a usar para resolver los recursos externos. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. Si el valor de <paramref name="url" /> es <see langword="null" />, el valor de <see langword="BaseURI" /> se establece en <see langword="String.Empty" />.</param>
      <param name="input" vsli:raw="The stream containing the XML data to read.">Flujo que contiene los datos XML que se van a leer.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="nt" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL y el <see cref="T:System.IO.TextReader" /> especificados.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">Dirección URL que se va a usar para resolver los recursos externos. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor.</param>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">
        <see langword="TextReader" /> que contiene los datos XML que se van a leer.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL, &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL y los objetos <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value. If &lt;paramref name=&quot;url&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;BaseURI&quot; /&gt; is set to &lt;see langword=&quot;String.Empty&quot; /&gt;.">Dirección URL que se va a usar para resolver los recursos externos. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. Si el valor de <paramref name="url" /> es <see langword="null" />, el valor de <see langword="BaseURI" /> se establece en <see langword="String.Empty" />.</param>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">
        <see langword="TextReader" /> que contiene los datos XML que se van a leer.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="nt" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified file and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el archivo y el objeto <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="url" vsli:raw="The URL for the file containing the XML data to read.">Dirección URL del archivo que contiene los datos XML que se van a leer.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="nt" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">No se puede encontrar el archivo especificado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="Part of the filename or directory cannot be found.">No se puede encontrar parte del nombre de archivo o del directorio.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is an empty string.">
        <paramref name="url" /> es una cadena vacía.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The remote filename cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">No se puede resolver el nombre de archivo remoto.  
 o bien  
 Error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is not a valid URI.">
        <paramref name="url" /> no es un URI válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified string, &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la cadena y los objetos <see cref="T:System.Xml.XmlNodeType" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.</summary>
      <param name="xmlFragment" vsli:raw="The string containing the XML fragment to parse.">Cadena que contiene el fragmento de XML que se va a analizar.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment string can contain. (See table below.)">
        <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto también determina lo que puede contener la cadena del fragmento. Vea la tabla que figura a continuación.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the &lt;paramref name=&quot;xmlFragment&quot; /&gt; is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt;, and the &lt;c&gt;xml:space&lt;/c&gt; scope.">
        <see cref="T:System.Xml.XmlParserContext" /> donde se va a analizar <paramref name="xmlFragment" />. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el <c>xml:lang</c> actual y el ámbito de <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not an &lt;see langword=&quot;Element&quot; /&gt;, &lt;see langword=&quot;Attribute&quot; /&gt;, or &lt;see langword=&quot;Document&quot; /&gt;&lt;see langword=&quot;XmlNodeType&quot; /&gt;.">
        <paramref name="fragType" /> no es <see langword="Element" />, <see langword="Attribute" /> o <see langword="Document" /><see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlFragment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlFragment" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">Obtiene el número de atributos del nodo actual.</summary>
      <returns vsli:raw="The number of attributes on the current node.">Número de atributos del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtiene el identificador URI base del nodo actual.</summary>
      <returns vsli:raw="The base URI of the current node.">Identificador URI base del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the binary content read methods.">Obtiene un valor que indica si <see cref="T:System.Xml.XmlTextReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlTextReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method.">Obtiene un valor que indica si <see cref="T:System.Xml.XmlTextReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Xml.XmlTextReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlTextReader" /> siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The &lt;see langword=&quot;XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />. La clase <see langword="XmlTextReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to &lt;see langword=&quot;Closed&quot; /&gt;.">Cambia la propiedad <see cref="P:System.Xml.XmlReader.ReadState" /> a <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">Obtiene la profundidad del nodo actual en el documento XML.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">Profundidad del nodo actual en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration.">Obtiene o establece la enumeración <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration.">Enumeración <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary vsli:raw="Gets the encoding of the document.">Obtiene la codificación del documento.</summary>
      <returns vsli:raw="The encoding value. If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.">Valor de codificación. Si no existe ningún atributo de codificación y no hay ninguna marca de orden de bytes, se usa el valor predeterminado UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary vsli:raw="Gets or sets a value that specifies how the reader handles entities.">Obtiene o establece un valor que especifica cómo controla el lector las entidades.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.EntityHandling&quot; /&gt; values. If no &lt;see langword=&quot;EntityHandling&quot; /&gt; is specified, it defaults to &lt;see langword=&quot;EntityHandling.ExpandCharEntities&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.EntityHandling" />. Si no se especifica ningún valor para <see langword="EntityHandling" />, el valor predeterminado es <see langword="EntityHandling.ExpandCharEntities" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">Obtiene un valor que indica si el lector está situado al final del flujo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">Obtiene el valor del atributo con el índice especificado.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
      <returns vsli:raw="The value of the specified attribute.">Valor del atributo especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlTextReader.AttributeCount&quot; /&gt;.">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">Obtiene el valor del atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />. Este método no desplaza el lector.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection that contains all namespaces currently in-scope.">Obtiene una colección que contiene todos los espacios de nombres que hay actualmente en el ámbito.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that contains all the current in-scope namespaces. If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.">Objeto <see cref="T:System.Collections.IDictionary" /> que contiene todos los espacios de nombres que hay actualmente en el ámbito. Si el lector no se coloca en un elemento, se devuelve un diccionario vacío (sin ningún espacio de nombres).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary vsli:raw="Gets the remainder of the buffered XML.">Obtiene el resto de XML con búfer.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; containing the remainder of the buffered XML.">
        <see cref="T:System.IO.TextReader" /> que contiene el resto del código XML almacenado en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">Obtiene un valor que indica si la clase puede devolver información de línea.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class can return line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la clase puede devolver información de línea; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlTextReader.Value&quot; /&gt; other than &lt;see langword=&quot;String.Empty&quot; /&gt;.">Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlTextReader.Value" /> con un valor distinto de <see langword="String.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.">Obtiene un valor que indica si el nodo actual es un atributo que se ha generado a partir del valor predeterminado definido en la DTD o esquema.</summary>
      <returns vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. (&lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; does not expand default attributes.)">Esta propiedad devuelve siempre <see langword="false" />. (<see cref="T:System.Xml.XmlTextReader" /> no expande los atributos predeterminados).</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">Obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />es si el nodo actual es un elemento<see cref="P:System.Xml.XmlTextReader.NodeType" /> ( <see langword="XmlNodeType.Element" />es igual a) que <c>/ &gt;</c>termina en; <see langword="false" />en caso contrario, es.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary vsli:raw="Gets the current line number.">Obtiene el número de línea actual.</summary>
      <returns vsli:raw="The current line number.">Número de línea actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary vsli:raw="Gets the current line position.">Obtiene la posición de línea actual.</summary>
      <returns vsli:raw="The current line position.">Posición de línea actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">Obtiene el nombre local del nodo actual.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns &lt;see langword=&quot;String.Empty&quot; /&gt;.">Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c>&lt;BK: Book&gt;</c>.  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized.">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. Esta cadena no necesita subdividirse.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextReader.Namespaces&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt; and the &lt;paramref name=&quot;prefix&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La propiedad <see cref="P:System.Xml.XmlTextReader.Namespaces" /> se establece en <see langword="true" /> y el valor de <paramref name="prefix" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">Se desplaza hasta el atributo con el índice especificado.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Índice del atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">Se desplaza hasta el atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace URI.">Se desplaza hasta el atributo con el nombre local y el URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">Se desplaza hasta el elemento que contiene el nodo de atributo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">Se mueve al primer atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">Se mueve al siguiente atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">Obtiene el nombre completo del nodo actual.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c>&lt;BK: Book&gt;</c>.  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlTextReader.NodeType" /> del nodo: Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  Tipo de nodo 
  nombre 
 <see langword="Attribute" /> El nombre del atributo.  

 <see langword="DocumentType" /> Nombre del tipo de documento.  

 <see langword="Element" /> Nombre de la etiqueta.  

 <see langword="EntityReference" /> Nombre de la entidad a la que se hace referencia.  

 <see langword="ProcessingInstruction" /> Destino de la instrucción de procesamiento.  

 <see langword="XmlDeclaration" /> Cadena literal <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do namespace support; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se debe aplicar la compatibilidad de espacio de nombres; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property after a read operation has occurred (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is not &lt;see langword=&quot;ReadState.Initial&quot; /&gt;).">Se ha establecido esta propiedad después de producirse una operación de lectura (<see cref="P:System.Xml.XmlTextReader.ReadState" /> no es <see langword="ReadState.Initial" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">Obtiene el URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">
        <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena en el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary vsli:raw="Gets or sets a value indicating whether to normalize white space and attribute values.">Obtiene o establece un valor que indica si se deben normalizar los valores de atributo y de espacio en blanco.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to normalize; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se deben normalizar; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property when the reader is closed (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is &lt;see langword=&quot;ReadState.Closed&quot; /&gt;).">Esta propiedad se establece cuando el lector está cerrado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> es <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">Obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">Prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary vsli:raw="Gets or sets a value indicating whether to allow DTD processing. This property is obsolete. Use &lt;see cref=&quot;P:System.Xml.XmlTextReader.DtdProcessing&quot; /&gt; instead.">Obtiene o establece un valor que indica si se debe permitir el procesamiento de DTD. Esta propiedad ha quedado obsoleta. Utilice <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> en su lugar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to disallow DTD processing; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para no permitir el procesamiento de DTD; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary vsli:raw="Gets the quotation mark character used to enclose the value of an attribute node.">Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.</summary>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">Lee el siguiente nodo del flujo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">Se ha producido un error al analizar el fragmento de XML.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">Analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <see langword="true" /> si hay nodos para devolver.  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes Base64 and returns the decoded binary bytes.">Descodifica Base64 y devuelve los bytes binarios descodificados.</summary>
      <param name="array" vsli:raw="The array of characters that serves as the buffer to which the text contents are written.">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying where the method can begin to write to the buffer.">Índice de base cero de la matriz que especifica dónde el método puede comenzar a escribir en el búfer.</param>
      <param name="len" vsli:raw="The number of bytes to write into the buffer.">Número de bytes que se van a escribir en el búfer.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The Base64 sequence is not valid.">La secuencia Base64 no es válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length- &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> &lt; 0, o <paramref name="len" /> &lt; 0, o <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes &lt;see langword=&quot;BinHex&quot; /&gt; and returns the decoded binary bytes.">Descodifica <see langword="BinHex" /> y devuelve los bytes binarios descodificados.</summary>
      <param name="array" vsli:raw="The byte array that serves as the buffer to which the decoded binary bytes are written.">Matriz de bytes que sirve como búfer en el que se escriben los bytes binarios descodificados.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying where the method can begin to write to the buffer.">Índice de base cero de la matriz que especifica dónde el método puede comenzar a escribir en el búfer.</param>
      <param name="len" vsli:raw="The number of bytes to write into the buffer.">Número de bytes que se van a escribir en el búfer.</param>
      <returns vsli:raw="The number of bytes written to your buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The &lt;see langword=&quot;BinHex&quot; /&gt; sequence is not valid.">La secuencia <see langword="BinHex" /> no es válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length- &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> &lt; 0, o <paramref name="len" /> &lt; 0, o <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the text contents of an element into a character buffer. This method is designed to read large streams of embedded text by calling it successively.">Lee el contenido de texto de un elemento en un búfer de caracteres. Este método se ha diseñado para leer grandes flujos de texto incrustado llamando sucesivamente al método.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written.">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto.</param>
      <param name="index" vsli:raw="The position within &lt;paramref name=&quot;buffer&quot; /&gt; where the method can begin writing text contents.">Posición dentro de <paramref name="buffer" /> donde el método puede comenzar a escribir contenido de texto.</param>
      <param name="count" vsli:raw="The number of characters to write into &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de caracteres que se van a escribir en el <paramref name="buffer" />.</param>
      <returns vsli:raw="The number of characters read. This can be &lt;see langword=&quot;0&quot; /&gt; if the reader is not positioned on an element or if there is no more text content to return in the current context.">Número de caracteres que se han leído. Puede ser <see langword="0" /> si el lector no está situado en un elemento o si no hay más contenido de texto para devolver en el contexto actual.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the space specified in the &lt;paramref name=&quot;buffer&quot; /&gt; (buffer size - &lt;paramref name=&quot;index&quot; /&gt;).">
        <paramref name="count" /> es mayor que el espacio especificado en <paramref name="buffer" /> (tamaño de búfer - <paramref name="index" />).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt;&lt;see langword=&quot;&amp;lt; 0&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt;&lt;see langword=&quot;&amp;lt; 0&quot; /&gt;.">
        <paramref name="index" />
        <see langword="&lt; 0" /> o <paramref name="count" /><see langword="&lt; 0" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;Base64&quot; /&gt; decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados de <see langword="Base64" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported in the current node.">En el nodo actual, no se admite el método <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">El método <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlTextReader" /> no admite este método.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">Lee el elemento y descodifica el contenido de Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlTextReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">Lee el elemento y descodifica el contenido de <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">Obtiene el estado del lector.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or a text node as a string.">Lee el contenido de un nodo de texto o un elemento como cadena.</summary>
      <returns vsli:raw="The contents of the element or text node. This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.  &#xA;  &#xA; &lt;see langword=&quot;Note:&quot; /&gt; The text node can be either an element or an attribute text node.">Contenido del nodo de elemento o de texto. Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.  
 <see langword="Note:" /> El nodo de texto puede ser un nodo de texto de elemento o de atributo.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">Se ha producido un error al analizar el fragmento de XML.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An invalid operation was attempted.">Se ha intentado realizar una operación no válida.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary vsli:raw="Resets the state of the reader to ReadState.Initial.">Restablece el estado del lector en ReadState.Initial.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling &lt;see langword=&quot;ResetState&quot; /&gt; if the reader was constructed using an &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">Se llama a <see langword="ResetState" /> si el lector se construyó mediante <see cref="T:System.Xml.XmlParserContext" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Documents in a single stream do not share the same encoding.">Los documentos de una sola secuencia no comparten la misma codificación.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">Resuelve la referencia a entidad de los nodos <see langword="EntityReference" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">Omite los nodos secundarios del nodo actual.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the current in-scope namespaces.">
        <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que hay actualmente en el ámbito.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you wish to find.">Prefijo cuyo URI de espacio de nombres se desea buscar.</param>
      <returns vsli:raw="The namespace URI that is mapped to the prefix; &lt;see langword=&quot;null&quot; /&gt; if the prefix is not mapped to a namespace URI.">Identificador URI del espacio de nombres que está asignado al prefijo; es <see langword="null" /> si el prefijo no está asignado a ningún URI de espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName" vsli:raw="The namespace URI whose prefix you wish to find.">URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <returns vsli:raw="The prefix that is mapped to the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if the namespace URI is not mapped to a prefix.">Prefijo asignado al URI del espacio de nombres; es <see langword="null" /> si este URI no está asignado a ningún prefijo.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">Obtiene el valor de texto del nodo actual.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space within an &lt;see langword=&quot;xml:space&quot; /&gt;= 'preserve' scope.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlTextReader.NodeType" /> del nodo: En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven <see langword="String.Empty" />.  
  Tipo de nodo 
  Valor 
 <see langword="Attribute" /> El valor del atributo.  

 <see langword="CDATA" /> Contenido de la sección CDATA.  

 <see langword="Comment" /> El contenido del comentario.  

 <see langword="DocumentType" /> El subconjunto interno.  

 <see langword="ProcessingInstruction" /> El contenido completo, sin incluir el destino.  

 <see langword="SignificantWhitespace" /> El espacio en blanco que se encuentra en el ámbito de <see langword="xml:space" />= 'preserve'.  

 <see langword="Text" /> El contenido del nodo de texto.  

 <see langword="Whitespace" /> El espacio en blanco entre marcado.  

 <see langword="XmlDeclaration" /> El contenido de la declaración.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary vsli:raw="Gets or sets a value that specifies how white space is handled.">Obtiene o establece un valor que indica cómo se controla el espacio en blanco.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; values. The default is &lt;see langword=&quot;WhitespaceHandling.All&quot; /&gt; (returns &lt;see langword=&quot;Whitespace&quot; /&gt; and &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes).">Uno de los valores de <see cref="T:System.Xml.WhitespaceHandling" />. El valor predeterminado es <see langword="WhitespaceHandling.All" /> (devuelve los nodos <see langword="Whitespace" /> y <see langword="SignificantWhitespace" />).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Invalid value specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property when the reader is closed (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is &lt;see langword=&quot;ReadState.Closed&quot; /&gt;).">Esta propiedad se establece cuando el lector está cerrado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> es <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" /> actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used for resolving DTD references.">Establece el objeto <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las referencias a DTD.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use. If set to &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; In version 1.1 of the .NET Framework, the caller must be fully trusted in order to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">Objeto <see langword="XmlResolver" /> que se va a usar. Si se establece en <see langword="null" />, los recursos externos no se resuelven.  
En la versión 1.1 de .NET Framework, el llamador debe ser de plena confianza para poder especificar un objeto <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary vsli:raw="Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.  &#xA;  &#xA; Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class instead.">Representa un sistema de escritura que proporciona un medio rápido, sin almacenamiento en caché y con desplazamiento sólo hacia delante para generar secuencias o archivos con datos XML que satisface las recomendaciones relativas a espacios de nombres en XML y Extensible Markup Language (XML) 1.0 del Consorcio W3C.  
A partir de .NET Framework 2.0, se recomienda usar la clase <see cref="T:System.Xml.XmlWriter" /> en su lugar.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; class using the specified stream and encoding.">Crea una instancia de la clase <see langword="XmlTextWriter" /> mediante la secuencia y la codificación especificadas.</summary>
      <param name="w" vsli:raw="The stream to which you want to write.">Flujo en el que desea escribir.</param>
      <param name="encoding" vsli:raw="The encoding to generate. If encoding is &lt;see langword=&quot;null&quot; /&gt; it writes out the stream as UTF-8 and omits the encoding attribute from the &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;.">Codificación que se va a generar. Si la codificación es <see langword="null" />, escribe la secuencia como UTF-8 y omite el atributo de codificación de la instrucción <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The encoding is not supported or the stream cannot be written to.">No se admite la codificación o no se puede escribir en la secuencia.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;w&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="w" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Crea una instancia de la clase <see langword="XmlTextWriter" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;TextWriter&quot; /&gt; to write to. It is assumed that the &lt;see langword=&quot;TextWriter&quot; /&gt; is already set to the correct encoding.">
        <see langword="TextWriter" /> en el que se va a escribir. Se supone que <see langword="TextWriter" /> ya está establecido en la codificación correcta.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of the &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt; class using the specified file.">Crea una instancia de la clase <see cref="T:System.Xml.XmlTextWriter" /> mediante el archivo especificado.</summary>
      <param name="filename" vsli:raw="The filename to write to. If the file exists, it truncates it and overwrites it with the new content.">Nombre del archivo en el que se va a escribir. Si existe el archivo, lo truncará y lo sobrescribirá con el nuevo contenido.</param>
      <param name="encoding" vsli:raw="The encoding to generate. If encoding is &lt;see langword=&quot;null&quot; /&gt; it writes the file out as UTF-8, and omits the encoding attribute from the &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;.">Codificación que se va a generar. Si la codificación es <see langword="null" />, escribe el archivo como UTF-8 y omite el atributo de codificación de la instrucción <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.">No se admite la codificación; el nombre de archivo está vacío, sólo contiene espacios en blanco o contiene uno o más caracteres no válidos.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access is denied.">Se denegó el acceso.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The filename is &lt;see langword=&quot;null&quot; /&gt;.">El nombre de archivo es <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to write to is not found.">No se encuentra el directorio en el que hay que escribir.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.">El nombre de archivo incluye una sintaxis no correcta o no válida para el nombre de archivo, el nombre de directorio o la etiqueta de volumen.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary vsli:raw="Gets the underlying stream object.">Obtiene el objeto de flujo subyacente.</summary>
      <returns vsli:raw="The stream to which the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; is writing or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; was constructed using a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that does not inherit from the &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; class.">Secuencia en la que está escribiendo <see langword="XmlTextWriter" /> o <see langword="null" /> si se construyó <see langword="XmlTextWriter" /> mediante <see cref="T:System.IO.TextWriter" /> que no se hereda de la clase <see cref="T:System.IO.StreamWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary vsli:raw="Closes this stream and the underlying stream.">Cierra este flujo y el flujo subyacente.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary vsli:raw="Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">Vuelca el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary vsli:raw="Indicates how the output is formatted.">Indica cómo se da formato a la salida.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Formatting&quot; /&gt; values. The default is &lt;see langword=&quot;Formatting.None&quot; /&gt; (no special formatting).">Uno de los valores de <see cref="T:System.Xml.Formatting" />. El valor predeterminado es <see langword="Formatting.None" /> (sin formato especial).</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary vsli:raw="Gets or sets how many IndentChars to write for each level in the hierarchy when &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Formatting&quot; /&gt; is set to &lt;see langword=&quot;Formatting.Indented&quot; /&gt;.">Obtiene o establece el número de caracteres IndentChars que se escriben para cada nivel de la jerarquía cuando la propiedad <see cref="P:System.Xml.XmlTextWriter.Formatting" /> está establecida en <see langword="Formatting.Indented" />.</summary>
      <returns vsli:raw="Number of &lt;see langword=&quot;IndentChars&quot; /&gt; for each level. The default is 2.">Número de caracteres <see langword="IndentChars" /> de cada nivel. El valor predeterminado es 2.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting this property to a negative value.">Establecimiento de esta propiedad en un valor negativo.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary vsli:raw="Gets or sets which character to use for indenting when &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Formatting&quot; /&gt; is set to &lt;see langword=&quot;Formatting.Indented&quot; /&gt;.">Obtiene o establece el carácter que se va a utilizar para aplicar sangría cuando la propiedad <see cref="P:System.Xml.XmlTextWriter.Formatting" /> se establece en <see langword="Formatting.Indented" />.</summary>
      <returns vsli:raw="The character to use for indenting. The default is space.">Carácter que se va a usar para la sangría. El valor predeterminado es el carácter de espacio.  
   
 <see langword="XmlTextWriter" /> permite establecer esta propiedad en cualquier carácter. Para asegurar la validez de XML, es preciso especificar un carácter de espacio en blanco válido: 0x9, 0x10, 0x13 ó 0x20.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the closest prefix defined in the current namespace scope for the namespace URI.">Devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.</summary>
      <param name="ns" vsli:raw="Namespace URI whose prefix you want to find.">URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <returns vsli:raw="The matching prefix. Or &lt;see langword=&quot;null&quot; /&gt; if no matching namespace URI is found in the current scope.">Prefijo que coincide. O bien <see langword="null" /> si no se encuentra ningún URI de espacio de nombres coincidente en el ámbito actual.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ns&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="ns" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support namespaces; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para admitir los espacios de nombres; en caso contrario, <see langword="false" />.  
De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You can only change this property when in the &lt;see langword=&quot;WriteState.Start&quot; /&gt; state.">Esta propiedad sólo se puede cambiar en el estado <see langword="WriteState.Start" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary vsli:raw="Gets or sets which character to use to quote attribute values.">Obtiene o establece qué carácter se va a usar para delimitar los valores de atributo.</summary>
      <returns vsli:raw="The character to use to quote attribute values. This must be a single quote (&amp;amp;#39;) or a double quote (&amp;amp;#34;). The default is a double quote.">Carácter que se va a usar para delimitar los valores de atributo. Debe ser una comilla simple (&amp;#39;) o una comilla doble&amp;(#34;). Las comillas dobles son el valor predeterminado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting this property to something other than either a single or double quote.">Establecimiento de esta propiedad en un valor distinto de comillas dobles o simples.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Encodes the specified binary bytes as base64 and writes out the resulting text.">Codifica los bytes binarios especificados en base64 y escribe el texto resultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matriz de bytes que se va a codificar.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the bytes to write.">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Encodes the specified binary bytes as binhex and writes out the resulting text.">Codifica los bytes binarios especificados como binhex y escribe el texto resultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matriz de bytes que se va a codificar.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is Closed.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary vsli:raw="Writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">Escribe un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</summary>
      <param name="text" vsli:raw="Text to place inside the CDATA block.">Texto que se va a colocar en el bloque CDATA.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">El texto daría como resultado un documento XML con formato incorrecto.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary vsli:raw="Forces the generation of a character entity for the specified Unicode character value.">Impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</summary>
      <param name="ch" vsli:raw="Unicode character for which to generate a character entity.">Carácter Unicode para el cual se va a generar una entidad de caracteres.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The character is in the surrogate pair character range, &lt;see langword=&quot;0xd800&quot; /&gt; - &lt;see langword=&quot;0xdfff&quot; /&gt;; or the text would result in a non-well formed XML document.">El carácter está en el intervalo de caracteres de par suplente, <see langword="0xd800" /> - <see langword="0xdfff" />; o el texto daría como resultado un documento XML con formato incorrecto.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes text one buffer at a time.">Escribe texto en un búfer cada vez.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count" vsli:raw="The number of characters to write.">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;; the call results in surrogate pair characters being split or an invalid surrogate pair being written.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
o bien 
La longitud de búfer menos <paramref name="index" /> es menor que <paramref name="count" />; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is Closed.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary vsli:raw="Writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">Escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">Texto que se va a colocar en el comentario.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">El texto daría como resultado un documento XML de formato incorrecto</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes the DOCTYPE declaration with the specified name and optional attributes.">Escribe la declaración DOCTYPE con el nombre y los atributos opcionales especificados.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">Nombre de DOCTYPE. No puede estar vacío.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is null and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">Si el valor de <paramref name="pubid" /> es nulo y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called outside the prolog (after the root element).">Se llamó a este método fuera del prólogo (después del elemento raíz).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; the value for &lt;paramref name=&quot;name&quot; /&gt; would result in invalid XML.">
        <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.  
O bien 
El valor de <paramref name="name" /> daría como resultado un archivo XML no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary vsli:raw="Closes the previous &lt;see cref=&quot;M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)&quot; /&gt; call.">Cierra la anterior llamada al método <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary vsli:raw="Closes any open elements or attributes and puts the writer back in the Start state.">Cierra todos los elementos o atributos abiertos y coloca de nuevo el sistema de escritura en el estado de inicio.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The XML document is invalid.">El documento XML no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary vsli:raw="Closes one element and pops the corresponding namespace scope.">Cierra un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary vsli:raw="Writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">Escribe una referencia a entidad como <see langword="&amp;name;" />.</summary>
      <param name="name" vsli:raw="Name of the entity reference.">Nombre de la referencia a entidad.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">El texto generaría un documento XML de formato incorrecto o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary vsli:raw="Closes one element and pops the corresponding namespace scope.">Cierra un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary vsli:raw="Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation.">Escribe el nombre especificado y garantiza que se trata de un nombre válido de acuerdo con la recomendación relativa a XML 1.0 de W3C.</summary>
      <param name="name" vsli:raw="Name to write.">Nombre que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> no es un nombre XML válido, o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary vsli:raw="Writes out the specified name, ensuring it is a valid &lt;see langword=&quot;NmToken&quot; /&gt; according to the W3C XML 1.0 recommendation.">Escribe el nombre especificado y garantiza que se trata de un elemento <see langword="NmToken" /> válido de acuerdo con la recomendación relativa a XML 1.0 de W3C.</summary>
      <param name="name" vsli:raw="Name to write.">Nombre que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid &lt;see langword=&quot;NmToken&quot; /&gt;; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> no es un <see langword="NmToken" /> válido; o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="Writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">Escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</summary>
      <param name="name" vsli:raw="Name of the processing instruction.">Nombre de la instrucción de procesamiento.</param>
      <param name="text" vsli:raw="Text to include in the processing instruction.">Texto que se va a incluir en la instrucción de procesamiento.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; This method is being used to create an XML declaration after &lt;see cref=&quot;M:System.Xml.XmlTextWriter.WriteStartDocument&quot; /&gt; has already been called.">El texto daría como resultado un documento XML con formato incorrecto.  
 <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.  
Este método se utiliza para crear una declaración XML después de llamar al método <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Escribe el nombre completo del espacio de nombres. Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName" vsli:raw="The local name to write.">Nombre local que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the name.">URI de espacio de nombres que se va a asociar al nombre.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;localName&quot; /&gt; is not a valid name according to the W3C Namespaces spec.">
        <paramref name="localName" /> es <see langword="null" /> o <see langword="String.Empty" />.  
 <paramref name="localName" /> no es un nombre válido según la especificación relativa a espacios de nombres del Consorcio W3C.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes raw markup manually from a character buffer.">Escribe manualmente el marcado sin formato de un búfer de caracteres.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count" vsli:raw="The number of characters to write.">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
o bien 
La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary vsli:raw="Writes raw markup manually from a string.">Escribe manualmente el marcado sin formato de una cadena.</summary>
      <param name="data" vsli:raw="String containing the text to write.">Cadena que contiene el texto que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes the start of an attribute.">Escribe el inicio de un atributo.</summary>
      <param name="prefix" vsli:raw="&lt;see langword=&quot;Namespace&quot; /&gt; prefix of the attribute.">Prefijo <see langword="Namespace" /> del atributo.</param>
      <param name="localName" vsli:raw="&lt;see langword=&quot;LocalName&quot; /&gt; of the attribute.">
        <see langword="LocalName" /> del atributo.</param>
      <param name="ns" vsli:raw="&lt;see langword=&quot;NamespaceURI&quot; /&gt; of the attribute.">
        <see langword="NamespaceURI" /> del atributo</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="localName" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration with the version &quot;1.0&quot;.">Escribe la declaración XML con la versión "1.0".</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.">Este no es el primer método Write al que se llama después de llamar al constructor.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary vsli:raw="Writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">Escribe la declaración XML con la versión "1.0" así como el atributo independiente.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">Si es <see langword="true" />, escribirá "standalone=yes"; si es <see langword="false" />, escribirá "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.">Este no es el primer método Write al que se llama después de llamar al constructor.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">Escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">Prefijo de espacio de nombres del elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.">Identificador URI de espacio de nombres que se va a asociar al elemento. Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura también lo escribe automáticamente.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">El sistema de escritura está cerrado.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary vsli:raw="Gets the state of the writer.">Obtiene el estado del sistema de escritura.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WriteState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary vsli:raw="Writes the given text content.">Escribe el contenido de texto especificado.</summary>
      <param name="text" vsli:raw="Text to write.">Texto que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text string contains an invalid surrogate pair.">La cadena de texto contiene un par suplente no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary vsli:raw="Generates and writes the surrogate character entity for the surrogate character pair.">Genera y escribe la entidad de carácter suplente del par de caracteres suplentes.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between &lt;see langword=&quot;0xDC00&quot; /&gt; and &lt;see langword=&quot;0xDFFF&quot; /&gt;.">Suplente bajo. Debe ser un valor comprendido entre <see langword="0xDC00" /> y <see langword="0xDFFF" />.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between &lt;see langword=&quot;0xD800&quot; /&gt; and &lt;see langword=&quot;0xDBFF&quot; /&gt;.">Suplente alto. Debe ser un valor comprendido entre <see langword="0xD800" /> y <see langword="0xDBFF" />.</param>
      <exception cref="T:System.Exception" vsli:raw="An invalid surrogate character pair was passed.">Se ha pasado un par de caracteres suplentes no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary vsli:raw="Writes out the given white space.">Escribe el espacio en blanco especificado.</summary>
      <param name="ws" vsli:raw="The string of white space characters.">Cadena de caracteres de espacio en blanco.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The string contains non-white space characters.">La cadena no contiene caracteres de espacio en blanco.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;xml:lang&quot; /&gt; in the current scope.">El <see langword="xml:lang" /> actual o <see langword="null" /> si no hay <see langword="xml:lang" /> en el ámbito actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtiene <see cref="T:System.Xml.XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; None&lt;/term&gt;&lt;description&gt; This is the default if no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Default&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;default&quot;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Preserve&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;preserve&quot;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.  
  Valor 
  Significado 
  Ninguna 
  Este es el valor predeterminado si no existe ningún ámbito de <see langword="xml:space" />.  

  Default 
  El ámbito actual es <see langword="xml:space" />="default".  

  Preserve 
  El ámbito actual es <see langword="xml:space" />="preserve".</returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary vsli:raw="Represents the XML type for the string. This allows the string to be read as a particular XML type, for example a CDATA section type.">Representa el tipo XML de la cadena. Esto permite que la cadena se lea como un tipo XML concreto; por ejemplo, un tipo de sección CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary vsli:raw="CDATA type.">Tipo CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary vsli:raw="ENTITIES type.">Tipo ENTITIES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary vsli:raw="ENTITY type.">Tipo ENTITY.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary vsli:raw="ENUMERATION type.">Tipo ENUMERATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary vsli:raw="ID type.">Tipo ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary vsli:raw="IDREF type.">Tipo IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary vsli:raw="IDREFS type.">Tipo IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary vsli:raw="NCName type.">Tipo NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary vsli:raw="NMTOKEN type.">Tipo NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary vsli:raw="NMTOKENS type.">Tipo NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary vsli:raw="No type.">Sin tipo.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary vsli:raw="NOTATION type.">Tipo NOTATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary vsli:raw="QName type.">Tipo QName.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary vsli:raw="Resolves external XML resources named by a Uniform Resource Identifier (URI).">Resuelve los recursos XML externos designados por un identificador de recursos uniforme (URI).</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlUrlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary vsli:raw="Gets or sets the cache policy for the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; object.">Obtiene o establece la directiva de caché para el objeto <see cref="T:System.Net.WebRequest" /> subyacente.</summary>
      <returns vsli:raw="The cache policy for the underlying web request.">Directiva de caché para la solicitud web subyacente.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary vsli:raw="Sets credentials used to authenticate web requests.">Establece las credenciales usadas para autenticar las solicitudes web.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see langword=&quot;XmlUrlResolver&quot; /&gt; has no user credentials.">Credenciales que se usan para autenticar las solicitudes web. Si no se establece esta propiedad, el valor predeterminado es <see langword="null" />; es decir, el objeto <see langword="XmlUrlResolver" /> no tiene credenciales de usuario.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource.">Asigna un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">No se usa actualmente.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current implementation only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Tipo de objeto que se va a devolver. La implementación actual sólo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">Objeto de flujo o <see langword="null" /> si se especifica un tipo que no sea un flujo.</returns>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is neither &lt;see langword=&quot;null&quot; /&gt; nor a &lt;see langword=&quot;Stream&quot; /&gt; type.">
        <paramref name="ofObjectToReturn" /> no es un tipo <see langword="null" /> ni <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">El identificador URI especificado no es un identificador URI absoluto.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a runtime error (for example, an interrupted server connection).">Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor).</exception>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">Identificador URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">No se usa actualmente.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current implementation only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Tipo de objeto que se va a devolver. La implementación actual sólo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">Objeto de flujo o <see langword="null" /> si se especifica un tipo que no sea un flujo.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary vsli:raw="Gets or sets the network proxy for the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; object.">Obtiene o establece el proxy de red para el objeto <see cref="T:System.Net.WebRequest" /> subyacente.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; to use to access the Internet resource.">
        <see cref="T:System.Net.IWebProxy" /> que se va a utilizar para tener acceso al recurso de Internet.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs.">Resuelve el URI absoluto a partir de los URI base y relativo.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">Identificador URI base que se utiliza para resolver el identificador URI relativo</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un identificador URI absoluto.</param>
      <returns vsli:raw="The absolute URI, or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;baseUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="baseUri" /> es <see langword="null" /> o bien <paramref name="relativeUri" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary vsli:raw="Represents a reader that provides document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) validation.  &#xA;  &#xA; This class is obsolete. Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class and the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method to create a validating XML reader.">Representa un lector que proporciona validación de definiciones de tipos de documentos (DTD), de esquemas reducidos de datos XML (esquemas XDR) y del lenguaje de definición de esquemas XML (esquemas XSD).  
Esta clase está obsoleta. A partir de .NET Framework 2.0, se recomienda usar la clase <see cref="T:System.Xml.XmlReaderSettings" /> y el método <see cref="Overload:System.Xml.XmlReader.Create" /> para crear un lector XML de validación.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class with the specified values.">Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> con los valores especificados.</summary>
      <param name="xmlFragment" vsli:raw="The stream containing the XML fragment to parse.">Flujo que contiene el fragmento de XML que se va a analizar.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This determines what the fragment can contain (see table below).">
        <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto determina lo que puede contener el fragmento (vea la tabla que figura más abajo).</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the XML fragment is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, current &lt;see langword=&quot;xml:lang&quot; /&gt;, and &lt;see langword=&quot;xml:space&quot; /&gt; scope.">
        <see cref="T:System.Xml.XmlParserContext" /> en el que se analizará el fragmento de XML. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el <see langword="xml:lang" /> actual y el ámbito de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not one of the node types listed in the table below.">
        <paramref name="fragType" /> no es uno de los tipos de nodo que se enumeran en la tabla que figura más abajo.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class with the specified values.">Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> con los valores especificados.</summary>
      <param name="xmlFragment" vsli:raw="The string containing the XML fragment to parse.">Cadena que contiene el fragmento de XML que se va a analizar.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment string can contain (see table below).">
        <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto determina también lo que puede contener la cadena del fragmento (vea la tabla que figura más abajo).</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the XML fragment is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; to use, encoding, namespace scope, current xml:lang, and xml:space scope.">
        <see cref="T:System.Xml.XmlParserContext" /> en el que se analizará el fragmento de XML. Esto incluye el objeto <see cref="T:System.Xml.NameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el xml:lang actual y el ámbito de xml:space.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not one of the node types listed in the table below.">
        <paramref name="fragType" /> no es uno de los tipos de nodo que se enumeran en la tabla que figura más abajo.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class that validates the content returned from the given &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> que valida el contenido devuelto por el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; to read from while validating. The current implementation supports only &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">
        <see langword="XmlReader" /> en el que se va a leer durante la validación. La implementación actual solo admite <see cref="T:System.Xml.XmlTextReader" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The reader specified is not an &lt;see langword=&quot;XmlTextReader&quot; /&gt;.">El lector especificado no es <see langword="XmlTextReader" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">Obtiene el número de atributos del nodo actual.</summary>
      <returns vsli:raw="The number of attributes on the current node. This number includes default attributes.">Número de atributos del nodo actual. Este número incluye los atributos predeterminados.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtiene el identificador URI base del nodo actual.</summary>
      <returns vsli:raw="The base URI of the current node.">Identificador URI base del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implements the binary content read methods.">Obtiene un valor que indica si <see cref="T:System.Xml.XmlValidatingReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class returns &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlValidatingReader" /> devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; always returns &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />. <see langword="XmlValidatingReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to Closed.">Cambia la propiedad <see cref="P:System.Xml.XmlReader.ReadState" /> a Closed.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">Obtiene la profundidad del nodo actual en el documento XML.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">Profundidad del nodo actual en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary vsli:raw="Gets the encoding attribute for the document.">Obtiene el atributo de codificación del documento.</summary>
      <returns vsli:raw="The encoding value. If no encoding attribute exists, and there is not byte-order mark, this defaults to UTF-8.">Valor de codificación. Si no existe ningún atributo de codificación y no hay ninguna marca de orden de bytes, se usa el valor predeterminado UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary vsli:raw="Gets or sets a value that specifies how the reader handles entities.">Obtiene o establece un valor que especifica cómo controla el lector las entidades.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.EntityHandling&quot; /&gt; values. If no &lt;see langword=&quot;EntityHandling&quot; /&gt; is specified, it defaults to EntityHandling.ExpandEntities.">Uno de los valores de <see cref="T:System.Xml.EntityHandling" />. Si no se especifica ningún valor <see langword="EntityHandling" />, se usa el valor predeterminado EntityHandling.ExpandEntities.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Invalid value was specified.">Se ha especificado un valor no válido.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">Obtiene un valor que indica si el lector está situado al final del flujo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">Obtiene el valor del atributo con el índice especificado.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
      <returns vsli:raw="The value of the specified attribute.">Valor del atributo especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.AttributeCount&quot; /&gt;.">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">Obtiene el valor del atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">Obtiene el valor del atributo que tiene el nombre local y el identificador uniforme de recursos (URI) de espacio de nombres especificados.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />. Este método no desplaza el lector.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">Obtiene un valor que indica si la clase puede devolver información de línea.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class can return line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la clase puede devolver información de línea; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.Value&quot; /&gt; other than String.Empty.">Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlValidatingReader.Value" /> con un valor distinto de String.Empty.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.">Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la definición de tipo de documento (DTD) o en el esquema.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">Es <see langword="true" /> si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es <see langword="false" /> si el valor de atributo se estableció explícitamente.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">Obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />es si el nodo actual es un elemento<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> ( <see langword="XmlNodeType.Element" />es igual a) que <c>/ &gt;</c>termina en; <see langword="false" />en caso contrario, es.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary vsli:raw="Gets the current line number.">Obtiene el número de línea actual.</summary>
      <returns vsli:raw="The current line number. The starting value for this property is 1.">Número de línea actual. El valor inicial de esta propiedad es 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary vsli:raw="Gets the current line position.">Obtiene la posición de línea actual.</summary>
      <returns vsli:raw="The current line position. The starting value for this property is 1.">Posición de línea actual. El valor inicial de esta propiedad es 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">Obtiene el nombre local del nodo actual.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns String.Empty.">Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c>&lt;BK: Book&gt;</c>.  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace Uniform Resource Identifier (URI) you want to resolve. To match the default namespace, pass an empty string.">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">Se desplaza hasta el atributo con el índice especificado.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Índice del atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">Se desplaza hasta el atributo con el nombre especificado.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nombre completo del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the reader does not change.">Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">Se desplaza hasta el atributo que tiene el nombre local e identificador uniforme de recursos (URI) de espacio de nombres especificados.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the reader does not change.">Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">Se desplaza hasta el elemento que contiene el nodo de atributo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">Se mueve al primer atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">Se mueve al siguiente atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">Obtiene el nombre completo del nodo actual.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c>&lt;BK: Book&gt;</c>.  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo: Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  Tipo de nodo 
  nombre 
 <see langword="Attribute" /> El nombre del atributo.  

 <see langword="DocumentType" /> Nombre del tipo de documento.  

 <see langword="Element" /> Nombre de la etiqueta.  

 <see langword="EntityReference" /> Nombre de la entidad a la que se hace referencia.  

 <see langword="ProcessingInstruction" /> Destino de la instrucción de procesamiento.  

 <see langword="XmlDeclaration" /> Cadena literal <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do namespace support; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se debe aplicar la compatibilidad de espacio de nombres; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace Uniform Resource Identifier (URI) (as defined in the World Wide Web Consortium (W3C) Namespace specification) of the node on which the reader is positioned.">Obtiene el identificador uniforme de recursos (URI) del espacio de nombres (según se define en la especificación de espacio de nombres del Consorcio W3C) del nodo donde se coloca el lector.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
      <returns vsli:raw="&lt;see langword=&quot;XmlNameTable&quot; /&gt; that enables you to get the atomized version of a string within the node.">
        <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena del nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtiene el tipo del nodo actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">Obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">Prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary vsli:raw="Gets the quotation mark character used to enclose the value of an attribute node.">Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.</summary>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">Lee el siguiente nodo del flujo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">Analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of String.Empty.">
        <see langword="true" /> si hay nodos para devolver.  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">El método <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the BinHex decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados de BinHex.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">El método <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">Lee el elemento y descodifica el contenido de Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the BinHex content.">Lee el elemento y descodifica el contenido de BinHex.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <returns vsli:raw="The number of bytes written to the buffer.">Número de bytes escritos en el búfer.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">El contenido no puede convertirse en el tipo solicitado.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to construct this &lt;see langword=&quot;XmlValidatingReader&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Xml.XmlReader" /> que se usa para construir este objeto <see langword="XmlValidatingReader" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; specified in the constructor.">
        <see langword="XmlReader" /> que se especifica en el constructor.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">Obtiene el estado del lector.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or text node as a string.">Lee el contenido de un nodo de elemento o de texto como una cadena.</summary>
      <returns vsli:raw="The contents of the element or text node. This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.">Contenido del nodo de elemento o de texto. Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.  
   
 El nodo de texto puede ser un nodo de texto de elemento o de atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary vsli:raw="Gets the common language runtime type for the specified XML Schema definition language (XSD) type.">Obtiene el tipo de Common Language Runtime para el tipo de esquema XSD (esquema del lenguaje de definición de esquemas XML) especificado.</summary>
      <returns vsli:raw="The common language runtime type for the specified XML Schema type.">Tipo de Common Language Runtime para el tipo de esquema XML especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">Resuelve la referencia a entidad de los nodos <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node.">El lector no se encuentra en un nodo <see langword="EntityReference" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCollection&quot; /&gt; to use for validation.">Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> que se va a usar para validación.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; to use for validation.">
        <see langword="XmlSchemaCollection" /> que se va a usar para validación.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary vsli:raw="Gets a schema type object.">Obtiene un objeto de tipo de esquema.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; depending whether the node value is a built in XML Schema definition language (XSD) type or a user defined simpleType or complexType; &lt;see langword=&quot;null&quot; /&gt; if the current node has no schema type.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, dependiendo de que el valor del nodo sea un tipo de esquema XSD (lenguaje de definición de esquemas XML) integrado o un tipo simpleType o complexType definido por el usuario; es <see langword="null" /> si el nodo actual no tiene tipo de esquema.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; object that identifies the scope of the reader.">Objeto <see cref="T:System.Xml.XmlNamespaceScope" /> que identifica el ámbito del lector.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that identifies the namespaces in scope.">Objeto T:System.Collections.IDictionary que identifica los espacios de nombres del ámbito.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <returns vsli:raw="A string value that contains the namespace Uri that is associated with the prefix.">Valor de cadena que contiene el identificador URI del espacio de nombres asociado al prefijo.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName" vsli:raw="The namespace that is associated with the prefix.">Espacio de nombres asociado al prefijo.</param>
      <returns vsli:raw="A string value that contains the namespace prefix that is associated with the &lt;paramref name=&quot;namespaceName&quot; /&gt;.">Valor de cadena que contiene el prefijo del espacio de nombres asociado a <paramref name="namespaceName" />.</returns>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary vsli:raw="Sets an event handler for receiving information about document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) schema validation errors.">Establece un controlador de eventos para recibir información acerca de los errores de validación de definiciones de tipos de documentos (DTD), del esquema XDR (esquema reducido de datos XML) y del esquema XSD (esquema del lenguaje de definición de esquemas XML).</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary vsli:raw="Gets or sets a value indicating the type of validation to perform.">Obtiene o establece un valor que indica el tipo de validación que se realiza.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ValidationType&quot; /&gt; values. If this property is not set, it defaults to ValidationType.Auto.">Uno de los valores de <see cref="T:System.Xml.ValidationType" />. Si esta propiedad no está establecida, se usa el valor predeterminado ValidationType.Auto.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the property after a Read has been called.">Establecimiento de la propiedad después de haber llamado a Read.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">Obtiene el valor de texto del nodo actual.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return String.Empty.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo: En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.  
  Tipo de nodo 
  Valor 
 <see langword="Attribute" /> El valor del atributo.  

 <see langword="CDATA" /> Contenido de la sección CDATA.  

 <see langword="Comment" /> El contenido del comentario.  

 <see langword="DocumentType" /> El subconjunto interno.  

 <see langword="ProcessingInstruction" /> El contenido completo, sin incluir el destino.  

 <see langword="SignificantWhitespace" /> Espacio en blanco entre marcas en un modelo de contenido mixto.  

 <see langword="Text" /> El contenido del nodo de texto.  

 <see langword="Whitespace" /> El espacio en blanco entre marcado.  

 <see langword="XmlDeclaration" /> El contenido de la declaración.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" /> actual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used for resolving external document type definition (DTD) and schema location references. The &lt;see langword=&quot;XmlResolver&quot; /&gt; is also used to handle any import or include elements found in XML Schema definition language (XSD) schemas.">Establece el objeto <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las referencias a ubicación de esquemas y definiciones de tipos de documentos (DTD) externos. <see langword="XmlResolver" /> también se usa para controlar los elementos de inclusión o importación detectados en esquemas XSD (Lenguaje de definición de esquemas XML).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use. If set to &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; In version 1.1 of the .NET Framework, the caller must be fully trusted to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">Objeto <see langword="XmlResolver" /> que se va a usar. Si se establece en <see langword="null" />, los recursos externos no se resuelven.  
En la versión 1.1 de .NET Framework, el llamador debe ser de plena confianza para poder especificar un objeto <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary vsli:raw="Represents white space in element content.">Representa los espacios en blanco en el contenido del elemento.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="strData" vsli:raw="The white space characters of the node.">Caracteres de espacio en blanco del nodo.</param>
      <param name="doc" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crea un duplicado de este nodo.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For white space nodes, the cloned node always includes the data value, regardless of the parameter setting.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Para los nodos de espacio en blanco, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtiene el nombre local del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#whitespace&quot; /&gt;.">Para nodos <see langword="XmlWhitespace" />, esta propiedad devuelve <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtiene el nombre completo del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#whitespace&quot; /&gt;.">Para nodos <see langword="XmlWhitespace" />, esta propiedad devuelve <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary vsli:raw="Gets the type of the node.">Obtiene el tipo del nodo.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, the value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;.">En el caso de nodos <see langword="XmlWhitespace" />, el valor es <see cref="F:System.Xml.XmlNodeType.Whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary vsli:raw="Gets the parent of the current node.">Obtiene el elemento primario del nodo actual.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; parent node of the current node.">Nodo <see cref="T:System.Xml.XmlNode" /> primario del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Devuelva <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtiene o establece el valor del nodo.</summary>
      <returns vsli:raw="The white space characters found in the node.">Caracteres de espacio en blanco encontrados en el nodo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting &lt;see cref=&quot;P:System.Xml.XmlWhitespace.Value&quot; /&gt; to invalid white space characters.">Establecimiento de <see cref="P:System.Xml.XmlWhitespace.Value" /> en caracteres de espacio en blanco no válidos.</exception>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to save.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to save.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary vsli:raw="Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.">Representa un sistema de escritura que constituye una manera rápida, no almacenada en caché y de solo avance para generar flujos o archivos que contienen datos XML.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary vsli:raw="When overridden in a derived class, closes this stream and the underlying stream.">Cuando se invalida en una clase derivada, cierra este flujo y el flujo subyacente.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A call is made to write more output after &lt;see langword=&quot;Close&quot; /&gt; has been called or the result of this call is an invalid XML document.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Después de llamar a <see langword="Close" /> o si el resultado de dicha llamada no es un documento XML válido, se realiza una llamada para escribir más resultados.
o bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified stream.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante la secuencia especificada.</summary>
      <param name="output" vsli:raw="The stream to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified stream.">Flujo en el que desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the stream and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante la secuencia y el objeto <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output" vsli:raw="The stream to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified stream.">Flujo en el que desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">
        <see cref="T:System.IO.TextWriter" /> en el que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa al <see cref="T:System.IO.TextWriter" /> especificado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;text&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="text" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.IO.TextWriter" /> y <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">
        <see cref="T:System.IO.TextWriter" /> en el que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa al <see cref="T:System.IO.TextWriter" /> especificado.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;text&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="text" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified filename.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el nombre de archivo especificado.</summary>
      <param name="outputFileName" vsli:raw="The file to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; creates a file at the specified path and writes to it in XML 1.0 text syntax. The &lt;paramref name=&quot;outputFileName&quot; /&gt; must be a file system path.">Archivo en el que desea escribir. <see cref="T:System.Xml.XmlWriter" /> crea un archivo en la ruta de acceso especificada y lo escribe con la sintaxis de texto de XML 1.0. <paramref name="outputFileName" /> debe ser una ruta del sistema de archivos.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="url" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the filename and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el nombre de archivo y el objeto <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="outputFileName" vsli:raw="The file to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; creates a file at the specified path and writes to it in XML 1.0 text syntax. The &lt;paramref name=&quot;outputFileName&quot; /&gt; must be a file system path.">Archivo en el que desea escribir. <see cref="T:System.Xml.XmlWriter" /> crea un archivo en la ruta de acceso especificada y lo escribe con la sintaxis de texto de XML 1.0. <paramref name="outputFileName" /> debe ser una ruta del sistema de archivos.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="url" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el objeto <see cref="T:System.Text.StringBuilder" /> especificado.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to write to. Content written by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is appended to the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">
        <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir. El contenido que escribe <see cref="T:System.Xml.XmlWriter" /> se anexa a <see cref="T:System.Text.StringBuilder" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;builder&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="builder" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.Text.StringBuilder" /> y <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to write to. Content written by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is appended to the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">
        <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir. El contenido que escribe <see cref="T:System.Xml.XmlWriter" /> se anexa a <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;builder&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="builder" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that you want to use as the underlying writer.">Objeto <see cref="T:System.Xml.XmlWriter" /> que desea utilizar como sistema de escritura subyacente.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlWriter" /> que contiene el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="writer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.Xml.XmlWriter" /> y <see cref="T:System.Xml.XmlWriterSettings" /> especificados.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that you want to use as the underlying writer.">Objeto <see cref="T:System.Xml.XmlWriter" /> que desea utilizar como sistema de escritura subyacente.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlWriter" /> que contiene el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="writer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class.">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Xml.XmlWriter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary vsli:raw="When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">Cuando se invalida en una clase derivada, vuelca el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary vsli:raw="Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">Vuelca asincrónicamente el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;Flush&quot; /&gt; operation.">Tarea que representa la operación <see langword="Flush" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary vsli:raw="When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.">Cuando se invalida en una clase derivada, devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.</summary>
      <param name="ns" vsli:raw="The namespace URI whose prefix you want to find.">Identificador URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <returns vsli:raw="The matching prefix or &lt;see langword=&quot;null&quot; /&gt; if no matching namespace URI is found in the current scope.">Prefijo coincidente o <see langword="null" /> si no se encuentra ningún identificador URI de espacio de nombres coincidente en el ámbito actual.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ns&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="ns" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to create this &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance.">Obtiene el objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se usa para crear esta instancia de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to create this writer instance. If this writer was not created using the &lt;see cref=&quot;Overload:System.Xml.XmlWriter.Create&quot; /&gt; method, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> utilizado para crear esta instancia del sistema de escritura. Si este sistema de escritura no se creó utilizando el método <see cref="Overload:System.Xml.XmlWriter.Create" />, esta propiedad devuelve <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, writes out all the attributes found at the current position in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Cuando se invalida en una clase derivada, escribe todos los atributos que se encuentran en la posición actual en <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; from which to copy the attributes.">
        <see langword="XmlReader" /> del que se van a copiar los atributos.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;element&quot; /&gt;, &lt;see langword=&quot;attribute&quot; /&gt; or &lt;see langword=&quot;XmlDeclaration&quot; /&gt; node.">El lector no está en ningún nodo <see langword="element" />, <see langword="attribute" /> o <see langword="XmlDeclaration" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Asynchronously writes out all the attributes found at the current position in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">De forma asincrónica escribe todos los atributos encontrados en la posición actual en <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; from which to copy the attributes.">
        <see langword="XmlReader" /> del que se van a copiar los atributos.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteAttributes&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteAttributes" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the attribute with the specified local name and value.">Cuando se invalida en una clase derivada, escribe el atributo con el valor y nombre local especificados.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">El valor del atributo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El estado del método de escritura no es <see langword="WriteState.Element" /> o está cerrado.
O bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">El valor de atributo <see langword="xml:space" /> o <see langword="xml:lang" /> no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.">Cuando se invalida en una clase derivada, escribe un atributo con el valor, nombre local e identificador URI del espacio de nombres especificados.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the attribute.">Identificador URI de espacio de nombres que se va asociar al atributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">El valor del atributo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;        &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El estado del método de escritura no es <see langword="WriteState.Element" /> o está cerrado.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">El valor de atributo <see langword="xml:space" /> o <see langword="xml:lang" /> no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.">Cuando se invalida en una clase derivada, escribe el atributo con el prefijo, el nombre local, el identificador URI de espacio de nombres y el valor especificados.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">El valor del atributo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;        &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El estado del método de escritura no es <see langword="WriteState.Element" /> o está cerrado.
O bien 
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">El valor de atributo <see langword="xml:space" /> o <see langword="xml:lang" /> no es válido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; or &lt;paramref name=&quot;ns&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> o <paramref name="ns" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.">Escribe asincrónicamente un atributo con el prefijo, el nombre local, el URI del espacio de nombres y el valor especificados.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">El valor del atributo.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteAttributeString&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteAttributeString" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;    &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien 
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.">Cuando se invalida en una clase derivada, codifica los bytes binarios especificados en Base64 y escribe el texto resultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matriz de bytes que se va a codificar.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
O bien 
La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">Codifica asincrónicamente los bytes binarios especificados en Base64 y escribe el texto resultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matriz de bytes que se va a codificar.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Número de bytes que se van a escribir.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteBase64" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, encodes the specified binary bytes as &lt;see langword=&quot;BinHex&quot; /&gt; and writes out the resulting text.">Cuando se invalida en una clase derivada, codifica los bytes binarios especificados en <see langword="BinHex" /> y escribe el texto resultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matriz de bytes que se va a codificar.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed or in error state.&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El sistema de escritura está cerrado o en estado de error.
o bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
o bien 
La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as &lt;see langword=&quot;BinHex&quot; /&gt; and writes out the resulting text.">Codifica asincrónicamente los bytes binarios especificados como <see langword="BinHex" /> y escribe el texto resultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matriz de bytes que se va a codificar.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Número de bytes que se van a escribir.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBinHex&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteBinHex" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">Cuando se invalida en una clase derivada, escribe un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</summary>
      <param name="text" vsli:raw="The text to place inside the CDATA block.">Texto que se va a colocar en el bloque CDATA.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">El texto daría como resultado un documento XML con formato incorrecto.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">Escribe asincrónicamente un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</summary>
      <param name="text" vsli:raw="The text to place inside the CDATA block.">Texto que se va a colocar en el bloque CDATA.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteCData&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteCData" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary vsli:raw="When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.">Cuando se invalida en una clase derivada, impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</summary>
      <param name="ch" vsli:raw="The Unicode character for which to generate a character entity.">Carácter Unicode para el que se va a generar una entidad de caracteres.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The character is in the surrogate pair character range, &lt;see langword=&quot;0xd800&quot; /&gt; - &lt;see langword=&quot;0xdfff&quot; /&gt;.">El carácter está en el intervalo de caracteres de par suplente, <see langword="0xd800" /> - <see langword="0xdfff" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary vsli:raw="Asynchronously forces the generation of a character entity for the specified Unicode character value.">Impone asincrónicamente la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</summary>
      <param name="ch" vsli:raw="The Unicode character for which to generate a character entity.">Carácter Unicode para el que se va a generar una entidad de caracteres.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteCharEntity&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteCharEntity" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, writes text one buffer at a time.">Cuando se invalida en una clase derivada, escribe texto en un búfer cada vez.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count" vsli:raw="The number of characters to write.">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;; the call results in surrogate pair characters being split or an invalid surrogate pair being written.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
o bien 
La longitud de búfer menos <paramref name="index" /> es menor que <paramref name="count" />; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter value is not valid.">El valor del parámetro <paramref name="buffer" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously writes text one buffer at a time.">Escribe asincrónicamente texto en un búfer cada vez.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count" vsli:raw="The number of characters to write.">Número de caracteres que se van a escribir.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteChars&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteChars" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">Cuando se invalida en una clase derivada, escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">Texto que se va a colocar en el comentario.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well-formed XML document.">El texto daría como resultado un documento XML con formato incorrecto.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">De forma asincrónica escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">Texto que se va a colocar en el comentario.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteComment&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteComment" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.">Cuando se invalida en una clase derivada, escribe la declaración DOCTYPE con el nombre y atributos opcionales especificados.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">Nombre de DOCTYPE. No puede estar vacío.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">Si el valor de <paramref name="pubid" /> es <see langword="null" /> y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called outside the prolog (after the root element).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó a este método fuera del prólogo (después del elemento raíz).
o bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for &lt;paramref name=&quot;name&quot; /&gt; would result in invalid XML.">El valor de <paramref name="name" /> daría como resultado un archivo XML no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.">Escribe asincrónicamente la declaración DOCTYPE con el nombre y los atributos opcionales especificados.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">Nombre de DOCTYPE. No puede estar vacío.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">Si el valor de <paramref name="pubid" /> es <see langword="null" /> y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteDocType&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteDocType" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified local name and value.">Escribe un elemento con el nombre local y el valor especificados.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="value" vsli:raw="The value of the element.">Valor del elemento.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">El valor <paramref name="localName" /> es <see langword="null" /> o una cadena vacía.  
o bien 
Los valores de parámetro no son válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified local name, namespace URI, and value.">Escribe un elemento con el nombre local especificado, el URI de espacio de nombres y el valor.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">Identificador URI de espacio de nombres que se va a asociar al elemento.</param>
      <param name="value" vsli:raw="The value of the element.">Valor del elemento.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">El valor <paramref name="localName" /> es <see langword="null" /> o una cadena vacía.  
o bien 
Los valores de parámetro no son válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified prefix, local name, namespace URI, and value.">Escribe un elemento con el prefijo, nombre local, el URI de espacio de nombres y el valor especificados.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Prefijo del elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value" vsli:raw="The value of the element.">Valor del elemento.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">El valor <paramref name="localName" /> es <see langword="null" /> o una cadena vacía.  
O bien 
Los valores de parámetro no son válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.">Escribe asincrónicamente un elemento con el nombre local, el URI de espacio de nombres, el valor y el prefijo especificados.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Prefijo del elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value" vsli:raw="The value of the element.">Valor del elemento.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteElementString&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteElementString" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary vsli:raw="When overridden in a derived class, closes the previous &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)&quot; /&gt; call.">Cuando se invalida en una clase derivada, cierra la llamada a <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> anterior.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary vsli:raw="Asynchronously closes the previous &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)&quot; /&gt; call.">Cierra de forma asincrónica la llamada anterior al método <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> .</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndAttribute&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteEndAttribute" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary vsli:raw="When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.">Cuando se invalida en una clase derivada, cierra todos los elementos o atributos abiertos y vuelve a colocar el sistema de escritura en el estado de inicio.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The XML document is invalid.">El documento XML no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary vsli:raw="Asynchronously closes any open elements or attributes and puts the writer back in the Start state.">Cierra asincrónicamente todos los elementos o atributos abiertos y coloca de nuevo el sistema de escritura en el estado de inicio.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndDocument&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteEndDocument" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary vsli:raw="When overridden in a derived class, closes one element and pops the corresponding namespace scope.">Cuando se invalida en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This results in an invalid XML document.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Esto da como resultado un documento XML no válido.
O bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary vsli:raw="Asynchronously closes one element and pops the corresponding namespace scope.">Cierra asincrónicamente un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndElement&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteEndElement" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">Cuando se invalida en una clase derivada, escribe una referencia a entidad de la siguiente forma: <see langword="&amp;name;" />.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Nombre de la referencia a entidad.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">De forma asincrónica coloca una referencia de entidad en tipo como <see langword="&amp;name;" />.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Nombre de la referencia a entidad.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEntityRef&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteEntityRef" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary vsli:raw="When overridden in a derived class, closes one element and pops the corresponding namespace scope.">Cuando se invalida en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary vsli:raw="Asynchronously closes one element and pops the corresponding namespace scope.">Cierra asincrónicamente un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteFullEndElement&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteFullEndElement" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">Cuando se invalida en una clase derivada, escribe el nombre especificado, comprobando que sea un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name" vsli:raw="The name to write.">Nombre que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> no es un nombre XML válido, o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">Escribe asincrónicamente el nombre especificado, asegurando que se trata de un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name" vsli:raw="The name to write.">Nombre que se va a escribir.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteName&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteName" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">Cuando se invalida en una clase derivada, escribe el nombre especificado, comprobando que sea un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name" vsli:raw="The name to write.">Nombre que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid NmToken; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> no es un NmToken válido, o bien <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">Escribe asincrónicamente el nombre especificado, asegurando que se trata de un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name" vsli:raw="The name to write.">Nombre que se va a escribir.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNmToken&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteNmToken" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.">Cuando se invalida en una clase derivada, copia todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read from.">
        <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; contains invalid characters.">
        <paramref name="reader" /> contiene caracteres no válidos.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary vsli:raw="Copies everything from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object to the writer. The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; remains unchanged.">Copia todo el contenido del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> en el sistema de escritura. La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> permanece inalterada.</summary>
      <param name="navigator" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to copy from.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> del que se va a copiar.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para copiar los atributos predeterminados; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;navigator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="navigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.">Copia asincrónicamente todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read from.">
        <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNode&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteNode" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary vsli:raw="Asynchronously copies everything from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object to the writer. The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; remains unchanged.">De forma asincrónica copia todo el objeto de <see cref="T:System.Xml.XPath.XPathNavigator" /> al escritor. La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> permanece inalterada.</summary>
      <param name="navigator" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to copy from.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> del que se va a copiar.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para copiar los atributos predeterminados; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNode&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteNode" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">Cuando se invalida en una clase derivada, escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</summary>
      <param name="name" vsli:raw="The name of the processing instruction.">Nombre de la instrucción de procesamiento.</param>
      <param name="text" vsli:raw="The text to include in the processing instruction.">Texto que se va a incluir en la instrucción de procesamiento.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; This method is being used to create an XML declaration after &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartDocument&quot; /&gt; has already been called.">El texto daría como resultado un documento XML con formato incorrecto.  
 <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.  
Este método se utiliza para crear una declaración XML después de llamar al método <see cref="M:System.Xml.XmlWriter.WriteStartDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">Escribe de forma asincrónica una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</summary>
      <param name="name" vsli:raw="The name of the processing instruction.">Nombre de la instrucción de procesamiento.</param>
      <param name="text" vsli:raw="The text to include in the processing instruction.">Texto que se va a incluir en la instrucción de procesamiento.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteProcessingInstruction&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteProcessingInstruction" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Cuando se invalida en una clase derivada, escribe el nombre completo del espacio de nombres. Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName" vsli:raw="The local name to write.">Nombre local que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace URI for the name.">Identificador URI de espacio de nombres del nombre.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;localName&quot; /&gt; is not a valid name.">
        <paramref name="localName" /> es <see langword="null" /> o <see langword="String.Empty" />.  
 <paramref name="localName" /> no es un nombre válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Escribe asincrónicamente el nombre completo del espacio de nombres. Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName" vsli:raw="The local name to write.">Nombre local que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace URI for the name.">Identificador URI de espacio de nombres del nombre.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteQualifiedName&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteQualifiedName" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, writes raw markup manually from a character buffer.">Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente desde un búfer de caracteres.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count" vsli:raw="The number of characters to write.">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
o bien 
La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes raw markup manually from a string.">Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente desde una cadena.</summary>
      <param name="data" vsli:raw="String containing the text to write.">Cadena que contiene el texto que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="data" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously writes raw markup manually from a character buffer.">Escribe asincrónicamente el marcado sin formato de un búfer de caracteres.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count" vsli:raw="The number of characters to write.">Número de caracteres que se van a escribir.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteRaw&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteRaw" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary vsli:raw="Asynchronously writes raw markup manually from a string.">Escribe asincrónicamente el marcado sin formato de una cadena.</summary>
      <param name="data" vsli:raw="String containing the text to write.">Cadena que contiene el texto que se va a escribir.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteRaw&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteRaw" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name.">Escribe el inicio de un atributo con el nombre local especificado.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El sistema de escritura está cerrado.
o bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name and namespace URI.">Escribe el inicio de un atributo con el URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.">Cuando se invalida en una clase derivada, escribe el inicio de un atributo con el prefijo, el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="ns" vsli:raw="The namespace URI for the attribute.">Identificador URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.">Escribe asincrónicamente el inicio de un atributo con el prefijo, URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="ns" vsli:raw="The namespace URI for the attribute.">Identificador URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartAttribute&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteStartAttribute" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary vsli:raw="When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot;.">Cuando se invalida en una clase derivada, escribe la declaración XML con la versión "1.0".</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Este no es el primer método Write al que se llama después de llamar al constructor.
o bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">Cuando se invalida en una clase derivada, escribe la declaración XML con la versión "1.0" y el atributo independiente.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">Si es <see langword="true" />, escribirá "standalone=yes"; si es <see langword="false" />, escribirá "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Este no es el primer método Write al que se llama después de llamar al constructor.
O bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary vsli:raw="Asynchronously writes the XML declaration with the version &quot;1.0&quot;.">Escribe asincrónicamente la declaración XML con la versión "1.0".</summary>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartDocument&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteStartDocument" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary vsli:raw="Asynchronously writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">Escribe asincrónicamente la declaración XML con la versión "1.0" así como el atributo independiente.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">Si es <see langword="true" />, escribirá "standalone=yes"; si es <see langword="false" />, escribirá "standalone=no".</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartDocument&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteStartDocument" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a start tag with the specified local name.">Cuando se invalida en una clase derivada, escribe una etiqueta de apertura con el nombre local especificado.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El sistema de escritura está cerrado.
O bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the specified start tag and associates it with the given namespace.">Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres especificado.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.">Identificador URI de espacio de nombres que se va a asociar al elemento. Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura escribe automáticamente también dicho prefijo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El sistema de escritura está cerrado.
o bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.">Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y prefijo especificados.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">Prefijo de espacio de nombres del elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">Identificador URI de espacio de nombres que se va a asociar al elemento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El sistema de escritura está cerrado.
o bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the specified start tag and associates it with the given namespace and prefix.">Escribe asincrónicamente la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">Prefijo de espacio de nombres del elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">Identificador URI de espacio de nombres que se va a asociar al elemento.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartElement&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteStartElement" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary vsli:raw="When overridden in a derived class, gets the state of the writer.">Cuando se invalida en una clase derivada, obtiene el estado del sistema de escritura.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WriteState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Xml.WriteState" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the given text content.">Cuando se invalida en una clase derivada, escribe el contenido de texto especificado.</summary>
      <param name="text" vsli:raw="The text to write.">Texto que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text string contains an invalid surrogate pair.">La cadena de texto contiene un par suplente no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary vsli:raw="Asynchronously writes the given text content.">Escribe asincrónicamente el contenido de texto dado.</summary>
      <param name="text" vsli:raw="The text to write.">Texto que se va a escribir.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteString&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteString" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary vsli:raw="When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.">Cuando se invalida en una clase derivada, genera y escribe la entidad de carácter suplente para el par de caracteres suplentes.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between 0xDC00 and 0xDFFF.">Suplente bajo. Debe ser un valor comprendido entre 0xDC00 y 0xDFFF.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between 0xD800 and 0xDBFF.">Suplente alto. Debe ser un valor comprendido entre 0xD800 y 0xDBFF.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid surrogate character pair was passed.">Se ha pasado un par de caracteres suplentes no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary vsli:raw="Asynchronously generates and writes the surrogate character entity for the surrogate character pair.">Genera y escribe asincrónicamente la entidad de carácter suplente del par de caracteres suplentes.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between 0xDC00 and 0xDFFF.">Suplente bajo. Debe ser un valor comprendido entre 0xDC00 y 0xDFFF.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between 0xD800 and 0xDBFF.">Suplente alto. Debe ser un valor comprendido entre 0xD800 y 0xDBFF.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteSurrogateCharEntity&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteSurrogateCharEntity" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
O bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Escribe un valor <see cref="T:System.Boolean" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to write.">Valor <see cref="T:System.Boolean" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Escribe un valor <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to write.">Valor <see cref="T:System.DateTime" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">Escribe un valor <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value to write.">Valor <see cref="T:System.DateTimeOffset" /> que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Escribe un valor <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to write.">Valor <see cref="T:System.Decimal" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Escribe un valor <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to write.">Valor <see cref="T:System.Double" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Escribe un valor <see cref="T:System.Int32" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int32&quot; /&gt; value to write.">Valor <see cref="T:System.Int32" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Escribe un valor <see cref="T:System.Int64" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; value to write.">Valor <see cref="T:System.Int64" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes the object value.">Escribe el valor del objeto.</summary>
      <param name="value" vsli:raw="The object value to write.  &#xA;  &#xA; Note With the release of the .NET Framework 3.5, this method accepts &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a parameter.">Valor del objeto que se va a escribir.  
 Nota Con el lanzamiento de .NET Framework 3.5, este método acepta <see cref="T:System.DateTimeOffset" /> como parámetro.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed or in error state.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">El sistema de escritura está cerrado o en estado de error.
o bien
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary vsli:raw="Writes a single-precision floating-point number.">Escribe un número de punto flotante de precisión sencilla.</summary>
      <param name="value" vsli:raw="The single-precision floating-point number to write.">El número de punto flotante de precisión sencilla que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Escribe un valor <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; value to write.">Valor <see cref="T:System.String" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the given white space.">Cuando se invalida en una clase derivada, escribe el espacio en blanco especificado.</summary>
      <param name="ws" vsli:raw="The string of white space characters.">Cadena de caracteres de espacio en blanco.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The string contains non-white space characters.">La cadena no contiene caracteres de espacio en blanco.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the given white space.">Escribe asincrónicamente el espacio en blanco especificado.</summary>
      <param name="ws" vsli:raw="The string of white space characters.">Cadena de caracteres de espacio en blanco.</param>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteWhitespace&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteWhitespace" /> asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Cuando se invalida en una clase derivada, obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Ámbito de <see langword="xml:lang" /> actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary vsli:raw="When overridden in a derived class, gets an &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Cuando se invalida en una clase derivada, se obtiene un <see cref="T:System.Xml.XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;None&quot; /&gt;&lt;/term&gt;&lt;description&gt; This is the default if no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Default&quot; /&gt;&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;default&quot;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Preserve&quot; /&gt;&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;preserve&quot;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.  
  Valor 
  Significado 
 <see langword="None" /> Este es el valor predeterminado si no existe ningún ámbito de <see langword="xml:space" />.  

 <see langword="Default" /> El ámbito actual es <see langword="xml:space" />="default".  

 <see langword="Preserve" /> El ámbito actual es <see langword="xml:space" />="preserve".</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary vsli:raw="Specifies a set of features to support on the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object created by the &lt;see cref=&quot;Overload:System.Xml.XmlWriter.Create&quot; /&gt; method.">Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlWriter" /> creado mediante el método <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary vsli:raw="Gets or sets a value that indicates whether asynchronous &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; methods can be used on a particular &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance.">Obtiene o establece un valor que indica si los métodos asincrónicos <see cref="T:System.Xml.XmlWriter" /> se pueden utilizar en una instancia determinada de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if asynchronous methods can be used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se pueden usar métodos asincrónicos; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the &quot;2.2 Characters&quot; section of the W3C XML 1.0 Recommendation.">Obtiene o establece un valor que indica si el escritor XML debería comprobar y asegurarse de que todos los caracteres en el documento se ajustan a la sección "2.2 Characters" de la recomendación del Consorcio W3C XML 1.0.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do character checking; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si se va a realizar la comprobación de caracteres; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary vsli:raw="Creates a copy of the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; instance.">Crea una copia de la instancia de la clase <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns vsli:raw="The cloned &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> clonado.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; should also close the underlying stream or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; when the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method is called.">Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlWriter" /> también debe cerrar la secuencia subyacente o <see cref="T:System.IO.TextWriter" /> cuando se llama al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to also close the underlying stream or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para cerrar también la secuencia subyacente o <see cref="T:System.IO.TextWriter" />; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary vsli:raw="Gets or sets the level of conformance that the XML writer checks the XML output for.">Obtiene o establece el nivel de conformidad que el sistema de escritura XML comprueba para la salida XML.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection). The default is &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Document&quot; /&gt;.">Uno de los valores de enumeración que especifica el nivel de conformidad (documento, fragmento o detección automática). De manera predeterminada, es <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; does not escape URI attributes.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> no realiza escape de los atributos de URI.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; does not escape URI attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si no <see cref="T:System.Xml.XmlWriter" /> escapa a los atributos de URI; de <see langword="false" />lo contrario,. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary vsli:raw="Gets or sets the type of text encoding to use.">Obtiene o establece el tipo de codificación de texto que se va a usar.</summary>
      <returns vsli:raw="The text encoding to use. The default is &lt;see langword=&quot;Encoding.UTF8&quot; /&gt;.">Codificación de texto que se va a utilizar. De manera predeterminada, es <see langword="Encoding.UTF8" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary vsli:raw="Gets or sets a value indicating whether to indent elements.">Obtiene o establece un valor que indica si se va a aplicar sangría a los elementos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write individual elements on new lines and indent; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para escribir elementos individuales en líneas nuevas y aplicar sangría; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary vsli:raw="Gets or sets the character string to use when indenting. This setting is used when the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Indent&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Obtiene o establece la cadena de caracteres que se va a utilizar al aplicar sangría. Esta opción se utiliza cuando la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> se establece en <see langword="true" />.</summary>
      <returns vsli:raw="The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.">Cadena de caracteres que se va a utilizar al aplicar sangría. Se puede establecer en cualquier valor de cadena. Sin embargo, para garantizar la validez del contenido XML, debe especificar sólo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y saltos de línea. El valor predeterminado es dos espacios.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.IndentChars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor asignado a <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; should remove duplicate namespace declarations when writing XML content. The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> debe quitar declaraciones de espacio de nombres duplicadas al escribir contenido XML. El comportamiento predeterminado es que el sistema de escritura genere todas las declaraciones de espacio de nombres que se encuentran en la resolución de espacios de nombres del sistema de escritura.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.NamespaceHandling&quot; /&gt; enumeration used to specify whether to remove duplicate namespace declarations in the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enumeración <see cref="T:System.Xml.NamespaceHandling" /> utilizada para especificar si se van a quitar las declaraciones de espacio de nombres duplicadas en <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary vsli:raw="Gets or sets the character string to use for line breaks.">Obtiene o establece la cadena de caracteres que se va a utilizar para los saltos de línea.</summary>
      <returns vsli:raw="The character string to use for line breaks. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is &lt;c&gt;\r\n&lt;/c&gt; (carriage return, new line) for non-Unix platforms, and &lt;c&gt;\n&lt;/c&gt; (new line) for Unix platforms.">Cadena de caracteres que se va a utilizar para los saltos de línea. Se puede establecer en cualquier valor de cadena. Sin embargo, para garantizar la validez del contenido XML, debe especificar sólo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y saltos de línea. El valor predeterminado es <c>\r\n</c> (retorno de carro, nueva línea).</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.NewLineChars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor asignado a <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary vsli:raw="Gets or sets a value indicating whether to normalize line breaks in the output.">Obtiene o establece un valor que indica si se deben normalizar los saltos de línea en el resultado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.NewLineHandling&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.NewLineHandling.Replace&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.NewLineHandling" />. De manera predeterminada, es <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary vsli:raw="Gets or sets a value indicating whether to write attributes on a new line.">Obtiene o establece un valor que indica si los atributos se deben escribir en una nueva línea.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write attributes on individual lines; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para escribir los atributos en líneas individuales; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.  
   
 Esta configuración no se aplica cuando el valor de la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> es <see langword="false" />.  

  

 Cuando <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> se establece en <see langword="true" />, a cada atributo le precede una nueva línea y un nivel adicional de sangría.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary vsli:raw="Gets or sets a value indicating whether to omit an XML declaration.">Obtiene o establece un valor que indica si debe omitir una declaración XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the XML declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;, an XML declaration is written.">Es <see langword="true" /> para omitir la declaración XML; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />, se escribe una declaración XML.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary vsli:raw="Gets the method used to serialize the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; output.">Obtiene el método utilizado para serializar el resultado de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlOutputMethod&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Xml&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.XmlOutputMethod" />. De manera predeterminada, es <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary vsli:raw="Resets the members of the settings class to their default values.">Restablece los miembros de la clase de configuración a sus valores predeterminados.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; will add closing tags to all unclosed element tags when the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method is called.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> agregará etiquetas de cierre a todas las etiquetas de elementos sin cerrar cuando se llame al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all unclosed element tags will be closed out; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si se cerrarán todas las etiquetas de elementos sin cerrar; si no, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary vsli:raw="Provides an accessor to the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">Proporciona un descriptor de acceso a la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Devuelve un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary vsli:raw="Specifies the sort order for uppercase and lowercase letters.">Especifica el criterio de ordenación para las mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary vsli:raw="Lowercase letters are sorted before uppercase letters.">Las minúsculas se ordenan antes que las mayúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary vsli:raw="Ignore the case.">Pase por alto la distinción entre mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary vsli:raw="Uppercase letters are sorted before lowercase letters.">Las mayúsculas se ordenan antes que las minúsculas.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary vsli:raw="Specifies the data type used to determine sort order.">Especifica el tipo de datos que se utiliza para determinar el criterio de ordenación.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary vsli:raw="Values are sorted numerically.">Los valores se ordenan numéricamente.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary vsli:raw="Values are sorted alphabetically.">Los valores se ordenan alfabéticamente.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary vsli:raw="Specifies the sort order.">Especifica el criterio de ordenación.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary vsli:raw="Nodes are sorted in ascending order. For example, if the numbers 1,2,3, and 4 are sorted in ascending order, they appear as 1,2,3,4.">Los nodos se ordenan de manera ascendente. Por ejemplo, si se ordenan los números 1, 2, 3 y 4 de manera ascendente, aparecerán como 1, 2, 3, 4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary vsli:raw="Nodes are sorted in descending order. For example, if the numbers 1,2,3, and 4 are sorted in descending order, they appear as, 4,3,2,1.">Los nodos se ordenan de manera descendente. Por ejemplo, si se ordenan los números 1, 2, 3 y 4 de manera descendente, aparecerán como 4, 3, 2, 1.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary vsli:raw="Provides a typed class that represents a compiled XPath expression.">Proporciona una clase con tipo que representa una expresión XPath compilada.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary vsli:raw="When overridden in a derived class, sorts the nodes selected by the XPath expression according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; object.">Cuando se reemplaza en una clase derivada, ordena los nodos seleccionados por la expresión XPath según el objeto <see cref="T:System.Collections.IComparer" /> especificado.</summary>
      <param name="expr" vsli:raw="An object representing the sort key. This can be the &lt;see langword=&quot;string&quot; /&gt; value of the node or an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object with a compiled XPath expression.">Objeto que representa el criterio de ordenación. Este puede ser el valor <see langword="string" /> del nodo o un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> con una expresión XPath compilada.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; object that provides the specific data type comparisons for comparing two objects for equivalence.">Un objeto <see cref="T:System.Collections.IComparer" /> que proporciona las comparaciones de tipo de datos específicas para comprobar si dos objetos son equivalentes.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; or sort key includes a prefix and either an &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; is not provided, or the prefix cannot be found in the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> o el criterio de ordenación incluye un prefijo y no se ha proporcionado un <see cref="T:System.Xml.XmlNamespaceManager" />, o bien no se detecta el prefijo en el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary vsli:raw="When overridden in a derived class, sorts the nodes selected by the XPath expression according to the supplied parameters.">Cuando se reemplaza en una clase derivada, ordena los nodos seleccionados por la expresión XPath según los parámetros proporcionados.</summary>
      <param name="expr" vsli:raw="An object representing the sort key. This can be the &lt;see langword=&quot;string&quot; /&gt; value of the node or an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object with a compiled XPath expression.">Objeto que representa el criterio de ordenación. Este puede ser el valor <see langword="string" /> del nodo o un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> con una expresión XPath compilada.</param>
      <param name="order" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlSortOrder&quot; /&gt; value indicating the sort order.">Un valor <see cref="T:System.Xml.XPath.XmlSortOrder" /> que indica el criterio de ordenación.</param>
      <param name="caseOrder" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlCaseOrder&quot; /&gt; value indicating how to sort uppercase and lowercase letters.">Un valor <see cref="T:System.Xml.XPath.XmlCaseOrder" /> que indica cómo se ordenan las mayúsculas y minúsculas.</param>
      <param name="lang" vsli:raw="The language to use for comparison. Uses the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; class that can be passed to the &lt;see cref=&quot;Overload:System.String.Compare&quot; /&gt; method for the language types, for example, &quot;us-en&quot; for U.S. English. If an empty string is specified, the system environment is used to determine the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Idioma que se va a utilizar para la comparación. Utiliza la clase <see cref="T:System.Globalization.CultureInfo" /> que se puede pasar al método <see cref="Overload:System.String.Compare" /> para los tipos de idiomas; por ejemplo, "us-en" para inglés de los EE. UU. Si se especifica una cadena vacía, se usa el entorno del sistema para determinar la clase <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="dataType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlDataType&quot; /&gt; value indicating the sort order for the data type.">Un valor <see cref="T:System.Xml.XPath.XmlDataType" /> que indica el criterio de ordenación para el tipo de datos.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; or sort key includes a prefix and either an &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; is not provided, or the prefix cannot be found in the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> o el criterio de ordenación incluye un prefijo y no se ha proporcionado un <see cref="T:System.Xml.XmlNamespaceManager" />, o bien no se detecta el prefijo en el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary vsli:raw="When overridden in a derived class, returns a clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">Cuando se reemplaza en una clase derivada, devuelve un clon de este objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Un nuevo objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary vsli:raw="Compiles the XPath expression specified and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object representing the XPath expression.">Compila la expresión XPath especificada y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.</summary>
      <param name="xpath" vsli:raw="An XPath expression.">Una expresión XPath.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression parameter is not a valid XPath expression.">El parámetro de la expresión XPath no es una expresión XPath válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Compiles the specified XPath expression, with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified for namespace resolution, and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object that represents the XPath expression.">Compila la expresión XPath especificada, con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para la resolución de espacio de nombres y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.</summary>
      <param name="xpath" vsli:raw="An XPath expression.">Una expresión XPath.</param>
      <param name="nsResolver" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; interface for namespace resolution.">Un objeto que implementa la interfaz <see cref="T:System.Xml.IXmlNamespaceResolver" /> para la resolución de espacio de nombres.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression parameter is not a valid XPath expression.">El parámetro de la expresión XPath no es una expresión XPath válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary vsli:raw="When overridden in a derived class, gets a &lt;see langword=&quot;string&quot; /&gt; representation of the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">Cuando se reemplaza en una clase derivada, se obtiene una representación <see langword="string" /> de <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; representation of the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">Representación <see langword="string" /> del objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary vsli:raw="When overridden in a derived class, gets the result type of the XPath expression.">Cuando se reemplaza en una clase derivada, obtiene el tipo de resultado de la expresión XPath.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; value representing the result type of the XPath expression.">Valor de <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de resultado de la expresión XPath.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, specifies the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object to use for namespace resolution.">Cuando se invalida en una clase derivada, especifica el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se va a utilizar para la resolución de espacios de nombres.</summary>
      <param name="nsResolver" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; interface to use for namespace resolution.">Un objeto que implementa la interfaz <see cref="T:System.Xml.IXmlNamespaceResolver" /> a utilizar para la resolución de espacio de nombres.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object parameter is not derived from &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> no se deriva de <see cref="T:System.Xml.IXmlNamespaceResolver" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="When overridden in a derived class, specifies the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object to use for namespace resolution.">Cuando se invalida en una clase derivada, especifica el objeto <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para la resolución de espacios de nombres.</summary>
      <param name="nsManager" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object to use for namespace resolution.">Objeto <see cref="T:System.Xml.XmlNamespaceManager" /> que se utiliza para la resolución del espacio de nombres.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object parameter is not derived from the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; class.">El parámetro de objeto <see cref="T:System.Xml.XmlNamespaceManager" /> no se deriva de la clase <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary vsli:raw="Represents an item in the XQuery 1.0 and XPath 2.0 Data Model.">Representa un elemento en el Modelo de datos de XQuery 1.0 y XPath 2.0.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathItem&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathItem" />.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the item represents an XPath node or an atomic value.">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el elemento representa un nodo XPath o un valor atómico.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item represents an XPath node; &lt;see langword=&quot;false&quot; /&gt; if the item represents an atomic value.">
        <see langword="true" /> si el elemento representa un nodo XPath; <see langword="false" /> si el elemento representa un valor atómico.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary vsli:raw="When overridden in a derived class, gets the current item as a boxed object of the most appropriate .NET Framework 2.0 type according to its schema type.">Cuando se reemplaza en una clase derivada, obtiene el elemento actual como un objeto sometido a conversión boxing del tipo más apropiado de .NET Framework 2.0 según su tipo de esquema.</summary>
      <returns vsli:raw="The current item as a boxed object of the most appropriate .NET Framework type.">Elemento actual como objeto sometido a conversión boxing del tipo más apropiado de .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see langword=&quot;string&quot; /&gt; value of the item.">Cuando se reemplaza en una clase derivada, obtiene el valor <see langword="string" /> del elemento.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the item.">Valor <see langword="string" /> del elemento.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary vsli:raw="Returns the item's value as the specified type.">Devuelve el valor del elemento como el tipo especificado.</summary>
      <param name="returnType" vsli:raw="The type to return the item value as.">Tipo como el que se tiene que devolver el valor del elemento.</param>
      <returns vsli:raw="The value of the item as the type requested.">Valor del elemento como tipo solicitado.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the target type.">El valor del elemento no está en el formato correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, returns the item's value as the type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Cuando se reemplaza en una clase derivada, devuelve el valor del elemento como el tipo especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de los espacios de nombres.</summary>
      <param name="returnType" vsli:raw="The type to return the item's value as.">Tipo como el que se tiene que devolver el valor del elemento.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de los espacios de nombres.</param>
      <returns vsli:raw="The value of the item as the type requested.">Valor del elemento como tipo solicitado.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the target type.">El valor del elemento no está en el formato correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Valor del elemento como un valor de tipo <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; type.">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Boolean" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Valor del elemento como un valor de tipo <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; type.">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">La conversión a <see cref="T:System.DateTime" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Valor del elemento como un valor de tipo <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Double&quot; /&gt; type.">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Double" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.Int32" />.</summary>
      <returns vsli:raw="The item's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Valor del elemento como un valor de tipo <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Int32" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.Int64" />.</summary>
      <returns vsli:raw="The item's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Valor del elemento como un valor de tipo <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; type.">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Int64" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">La conversión intentada ha producido un desbordamiento.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary vsli:raw="When overridden in a derived class, gets the .NET Framework 2.0 type of the item.">Cuando se reemplaza en una clase derivada, obtiene el tipo de .NET Framework 2.0 del elemento.</summary>
      <returns vsli:raw="The .NET Framework type of the item. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">Tipo de .NET Framework del elemento. El valor predeterminado es <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the item.">Cuando se reemplaza en una clase derivada, obtiene <see cref="T:System.Xml.Schema.XmlSchemaType" /> del elemento.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the item.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> del elemento.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary vsli:raw="Defines the namespace scope.">Define el ámbito del espacio de nombres.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary vsli:raw="Returns all namespaces defined in the scope of the current node. This includes the &lt;c&gt;xmlns:xml&lt;/c&gt; namespace which is always declared implicitly. The order of the namespaces returned is not defined.">Devuelve todos los espacios de nombres definidos en el ámbito del nodo actual. Esto incluye el espacio de nombres <c>xmlns:xml</c> que siempre se declara de manera implícita. No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary vsli:raw="Returns all namespaces defined in the scope of the current node, excluding the &lt;c&gt;xmlns:xml&lt;/c&gt; namespace. The &lt;c&gt;xmlns:xml&lt;/c&gt; namespace is always declared implicitly. The order of the namespaces returned is not defined.">Devuelve todos los espacios de nombres definidos en el ámbito del nodo actual, excluyendo el espacio de nombres <c>xmlns:xml</c>. Siempre se declara implícitamente el espacio de nombres <c>xmlns:xml</c>. No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary vsli:raw="Returns all namespaces that are defined locally at the current node.">Devuelve todos los espacios de nombres definidos localmente en el nodo actual.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary vsli:raw="Provides a cursor model for navigating and editing XML data.">Proporciona un modelo de cursor para navegar y editar datos XML.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create one or more new child nodes at the end of the list of child nodes of the current node.">Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear uno más nuevos nodos secundarios al final de la lista de nodos secundarios del nodo actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new child nodes at the end of the list of child nodes of the current node.">Un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the XML data string specified.">Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual utilizando la cadena de datos XML especificada.</summary>
      <param name="newChild" vsli:raw="The XML data string for the new child node.">La cadena de datos XML del nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML data string parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro de cadena de datos XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML data string parameter is not well-formed.">El parámetro de cadena de datos XML no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual mediante el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new child node.">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual mediante los nodos del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new child node.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo para agregarlo como nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new child element node at the end of the list of child nodes of the current node using the namespace prefix, local name and namespace URI specified with the value specified.">Crea un nuevo nodo de elemento secundario al final de la lista de nodos secundarios del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificados con el valor seleccionado.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element node (if any).">Prefijo del espacio de nombres del nuevo nodo de elemento secundario (si lo hay).</param>
      <param name="localName" vsli:raw="The local name of the new child element node (if any).">Nombre local del nuevo nodo de elemento secundario (si lo hay).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element node (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Identificador URI de espacio de nombres del nuevo nodo de elemento secundario (si lo hay). <see cref="F:System.String.Empty" /> y <see langword="null" /> son equivalentes.</param>
      <param name="value" vsli:raw="The value of the new child element node. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">Valor del nuevo nodo de elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un elemento vacío.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">El nodo actual donde se encuentra <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz ni un nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary vsli:raw="When overridden in a derived class, gets the base URI for the current node.">Cuando se reemplaza en una clase derivada, obtiene el URI base del nodo actual.</summary>
      <returns vsli:raw="The location from which the node was loaded, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if there is no value.">La ubicación desde la que se cargó el nodo o <see cref="F:System.String.Empty" /> si no hay ningún valor.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; can edit the underlying XML data.">Obtiene un valor que indica si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> puede editar los datos XML subyacentes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; can edit the underlying XML data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si puede editar los datos XML subyacentes; de lo <see langword="false" />contrario,. <see cref="T:System.Xml.XPath.XPathNavigator" /></returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Verifies that the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; conforms to the XML Schema definition language (XSD) schema provided.">Comprueba que los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> se ajustan al esquema del lenguaje de definición de esquemas XML (XSD) proporcionado.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; containing the schemas used to validate the XML data contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas utilizados para validar los datos XML contenidos en <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that receives information about schema validation warnings and errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación del esquema.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if no schema validation errors occurred; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si no se produce ningún error de validación de esquema; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation error occurred, and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; was specified to handle validation errors.">Se ha producido un error de validación de esquema y no se ha especificado ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para controlar los errores de validación.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on a node that is not an element, attribute, or the root node or there is not type information to perform validation.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en un nodo que no es un elemento, ni un atributo ni el nodo raíz, o bien no hay información de tipo para realizar la validación.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)&quot; /&gt; method was called with an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; parameter when the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; was not positioned on the root node of the XML data.">Se llamó al método <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> con un parámetro <see cref="T:System.Xml.Schema.XmlSchemaSet" /> cuando <see cref="T:System.Xml.XPath.XPathNavigator" /> no estaba colocado en el nodo raíz de los datos XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary vsli:raw="When overridden in a derived class, creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned at the same node as this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Cuando se reemplaza en una clase derivada, se crea un nuevo <see cref="T:System.Xml.XPath.XPathNavigator" /> que se coloca en el mismo nodo que este <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned at the same node as this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que se sitúa en el mismo nodo que <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Compares the position of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; with the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">Compara la posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> actual con la del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="nav" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare against.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> con el que se va a comparar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeOrder&quot; /&gt; value representing the comparative position of the two &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">Valor de <see cref="T:System.Xml.XmlNodeOrder" /> que representa la posición comparativa de los dos objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary vsli:raw="Compiles a string representing an XPath expression and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Compila una cadena que representa una expresión XPath y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression.">Cadena que representa a una expresión XPath.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object representing the XPath expression.">Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;xpath&quot; /&gt; parameter contains an XPath expression that is not valid.">El parámetro <paramref name="xpath" /> contiene una expresión XPath que no es válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an attribute node on the current element node using the namespace prefix, local name and namespace URI specified with the value specified.">Crea un nodo de atributo en el nodo del elemento actual utilizando el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor especificado.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new attribute node (if any).">Prefijo del espacio de nombres del nuevo nodo de atributo (si lo hay).</param>
      <param name="localName" vsli:raw="The local name of the new attribute node which cannot &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Nombre local del nuevo nodo de atributo que no puede ser <see cref="F:System.String.Empty" /> ni <see langword="null" />.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI for the new attribute node (if any).">URI de espacio de nombres del nuevo nodo de atributo (si lo hay).</param>
      <param name="value" vsli:raw="The value of the new attribute node. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty attribute node is created.">Valor del nuevo nodo de atributo. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un nodo de atributo vacío.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en ningún nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new attributes on the current element.">Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear nuevos atributos en el elemento actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new attributes on the current element.">Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear nuevos atributos en el elemento actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en ningún nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary vsli:raw="Returns a copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Devuelve una copia de <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; copy of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Una copia <see cref="T:System.Xml.XPath.XPathNavigator" /> de este <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Deletes a range of sibling nodes from the current node to the node specified.">Elimina un intervalo de nodos relacionados desde el nodo actual hasta al nodo especificado.</summary>
      <param name="lastSiblingToDelete" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the last sibling node in the range to delete.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el último nodo relacionado del intervalo que se va a eliminar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The last node to delete specified is not a valid sibling node of the current node.">El último nodo especificado que se va a eliminar no es un nodo relacionado válido del nodo actual.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary vsli:raw="Deletes the current node and its child nodes.">Elimina el nodo actual y sus nodos secundarios.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on a node that cannot be deleted such as the root node or a namespace node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> está colocado en un nodo que no se puede eliminar, como el nodo raíz o un nodo de espacio de nombres.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary vsli:raw="Evaluates the specified XPath expression and returns the typed result.">Evalúa la expresión XPath especificada y devuelve el resultado de tipo.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression that can be evaluated.">Cadena que representa a una expresión XPath que se puede evaluar.</param>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Evaluates the specified XPath expression and returns the typed result, using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes in the XPath expression.">Evalúa la expresión XPath especificada y devuelve el resultado de tipo mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver prefijos de espacio de nombres en la expresión XPath.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression that can be evaluated.">Cadena que representa a una expresión XPath que se puede evaluar.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes in the XPath expression.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de espacio de nombres en la expresión XPath.</param>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Evaluates the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; and returns the typed result.">Evalúa la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> y devuelve el resultado de tipo.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; that can be evaluated.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> que se puede evaluar.</param>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary vsli:raw="Uses the supplied context to evaluate the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;, and returns the typed result.">Utiliza el contexto proporcionado para evaluar la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> y devuelve el resultado con tipo.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; that can be evaluated.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> que se puede evaluar.</param>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set that the evaluation is to be performed on.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala al conjunto de nodos seleccionado en el que se va a llevar a cabo la evaluación.</param>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName" vsli:raw="The local name of the attribute. &lt;paramref name=&quot;localName&quot; /&gt; is case-sensitive.">Nombre local del atributo. <paramref name="localName" /> distingue entre mayúsculas y minúsculas.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the specified attribute; &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if a matching attribute is not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">
        <see cref="T:System.String" /> que contiene el valor del atributo especificado; <see cref="F:System.String.Empty" /> si no se encuentra ningún atributo coincidente o si <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary vsli:raw="Returns the value of the namespace node corresponding to the specified local name.">Devuelve el valor del nodo Namespace correspondiente al nombre local especificado.</summary>
      <param name="name" vsli:raw="The local name of the namespace node.">Nombre local del nodo Namespace.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the namespace node; &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if a matching namespace node is not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">
        <see cref="T:System.String" /> que contiene el valor del nodo de espacio de nombres; <see cref="F:System.String.Empty" /> si no se encuentra ningún nodo de espacio de nombres y si <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en un nodo de elemento.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Returns the in-scope namespaces of the current node.">Devuelve los espacios de nombres en el ámbito del nodo actual.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value specifying the namespaces to return.">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica los espacios de nombres que se van a devolver.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; collection of namespace names keyed by prefix.">Colección <see cref="T:System.Collections.Generic.IDictionary`2" /> de nombres de espacio de nombres con clave de prefijo.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary vsli:raw="Gets a value that indicates whether the current node has any attributes.">Obtiene un valor que indica si el nodo actual tiene algún atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; returns &lt;see langword=&quot;false&quot; /&gt; if the current node has no attributes, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">
        <see langword="true" />Si el nodo actual tiene atributos; Devuelve <see langword="false" /> si el nodo actual no tiene atributos o <see cref="T:System.Xml.XPath.XPathNavigator" /> si no está situado en un nodo de elemento.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary vsli:raw="Gets a value that indicates whether the current node has any child nodes.">Obtiene un valor que indica si el nodo actual tiene algún nodo secundario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has any child nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nodo actual tiene nodos secundarios; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the child nodes of the current node.">Obtiene o establece el marcado que representa los nodos secundarios del nodo actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the markup of the child nodes of the current node.">
        <see cref="T:System.String" /> que contiene el marcado de los nodos secundarios del nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.InnerXml&quot; /&gt; property cannot be set.">No se puede establecer la propiedad <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node after the currently selected node.">Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo relacionado detrás el nodo seleccionado actualmente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node after the currently selected node.">Objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo relacionado detrás el nodo seleccionado actualmente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the XML string specified.">Crea un nuevo nodo relacionado detrás del nodo seleccionado actualmente utilizando la cadena XML especificada.</summary>
      <param name="newSibling" vsli:raw="The XML data string for the new sibling node.">La cadena de datos XML del nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro de cadena XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">El parámetro de cadena XML no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Crea un nuevo nodo relacionado detrás del nodo actualmente seleccionado utilizando el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new sibling node.">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">Crea un nuevo nodo relacionado detrás del nodo actualmente seleccionado mediante los nodos del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new sibling node.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo que se va a agregar como nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node before the currently selected node.">Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo relacionado delante el nodo seleccionado actualmente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node before the currently selected node.">Objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo relacionado delante del nodo seleccionado actualmente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the XML string specified.">Crea un nuevo nodo relacionado delante del nodo seleccionado actualmente utilizando la cadena XML especificada.</summary>
      <param name="newSibling" vsli:raw="The XML data string for the new sibling node.">La cadena de datos XML del nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro de cadena XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">El parámetro de cadena XML no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Crea un nuevo nodo relacionado delante del nodo actualmente seleccionado utilizando el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new sibling node.">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">Crea un nuevo nodo relacionado delante del nodo actualmente seleccionado mediante los nodos del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new sibling node.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo que se va a agregar como nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new sibling element after the current node using the namespace prefix, local name and namespace URI specified, with the value specified.">Crea un nuevo elemento relacionado detrás del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor seleccionado.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">Nombre local del nuevo elemento secundario (si lo hay).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Identificador URI de espacio de nombres del nuevo elemento secundario (si lo hay). <see cref="F:System.String.Empty" /> y <see langword="null" /> son equivalentes.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un elemento vacío.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado detrás del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new sibling element before the current node using the namespace prefix, local name, and namespace URI specified, with the value specified.">Crea un nuevo elemento relacionado delante del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor seleccionado.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">Nombre local del nuevo elemento secundario (si lo hay).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Identificador URI de espacio de nombres del nuevo elemento secundario (si lo hay). <see cref="F:System.String.Empty" /> y <see langword="null" /> son equivalentes.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un elemento vacío.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite introducir un nuevo nodo relacionado delante del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is a descendant of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Determina si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es un descendiente del objeto actual <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="nav" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare to this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que se compara con este <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is a descendant of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es descendiente del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the current node is an empty element without an end element tag.">Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual es un elemento vacío sin etiqueta de cierre de elemento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an empty element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nodo actual es un elemento vacío; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary vsli:raw="Gets a value that indicates if the current node represents an XPath node.">Obtiene un valor que indica si el nodo actual representa un nodo XPath.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, determines whether the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is at the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Cuando se reemplaza en una clase derivada, determina si el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual está en la misma posición que el <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare to this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que se compara con este <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects have the same position; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los dos objetos <see cref="T:System.Xml.XPath.XPathNavigator" /> tienen la misma posición; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.Name&quot; /&gt; of the current node without any namespace prefix.">Cuando se reemplaza en una clase derivada, obtiene la propiedad <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> del nodo actual sin prefijo de espacio de nombres.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node does not have a name (for example, text or comment nodes).">
        <see cref="T:System.String" /> que contiene el nombre local del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene nombre (por ejemplo, texto o nodos de comentario).</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI for the specified prefix.">Obtiene el identificador URI de espacio de nombres del prefijo especificado.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase <see cref="F:System.String.Empty" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI assigned to the namespace prefix specified; &lt;see langword=&quot;null&quot; /&gt; if no namespace URI is assigned to the prefix specified. The &lt;see cref=&quot;T:System.String&quot; /&gt; returned is atomized.">
        <see cref="T:System.String" /> que contiene el URI de espacio de nombres asignado al prefijo de espacio de nombres especificado; es <see langword="null" /> si no se asigna ningún URI de espacio de nombres al prefijo especificado. La cadena <see cref="T:System.String" /> devuelta está subdividida.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary vsli:raw="Gets the prefix declared for the specified namespace URI.">Obtiene el prefijo declarado del URI de espacio de nombres especificado.</summary>
      <param name="namespaceURI" vsli:raw="The namespace URI to resolve for the prefix.">URI de espacio de nombres que se va a resolver para el prefijo.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix assigned to the namespace URI specified; otherwise, &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if no prefix is assigned to the namespace URI specified. The &lt;see cref=&quot;T:System.String&quot; /&gt; returned is atomized.">
        <see cref="T:System.String" /> que contiene el prefijo de espacio de nombres asignado al URI de espacio de nombres especificado; en caso contrario, es <see cref="F:System.String.Empty" /> si no se asigna ningún prefijo al URI de espacio de nombres especificado. La cadena <see cref="T:System.String" /> devuelta está subdividida.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary vsli:raw="Determines whether the current node matches the specified XPath expression.">Determina si el nodo actual coincide con la expresión XPath especificada.</summary>
      <param name="xpath" vsli:raw="The XPath expression.">Expresión XPath.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node matches the specified XPath expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nodo actual coincide con la expresión XPath especificada; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression cannot be evaluated.">No se puede evaluar la expresión XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Determines whether the current node matches the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">Determina si el nodo actual coincide con la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> especificada.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath expression.">Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la expresión XPath compilada.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nodo actual coincide con <see cref="T:System.Xml.XPath.XPathExpression" />; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression cannot be evaluated.">No se puede evaluar la expresión XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> a la misma posición que el <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the node that you want to move to.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que se sitúa en el nodo al que se desea desplazarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente a la misma posición que el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the attribute with the matching local name and namespace URI.">Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el atributo cuyo nombre local y URI de espacio de nombres coincidan.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute; &lt;see langword=&quot;null&quot; /&gt; for an empty namespace.">El URI de espacio de nombres del atributo; es <see langword="null" /> si el espacio de nombres está vacío.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al atributo; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the child node with the local name and namespace URI specified.">Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo secundario con el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="localName" vsli:raw="The local name of the child node to move to.">El nombre local del nodo secundario al que se va a desplazar.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the child node to move to.">El URI de espacio de nombres del nodo secundario al que se va a desplazar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the child node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo secundario; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the child node of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified.">Mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al nodo secundario del objeto <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the child node to move to.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo secundario al que se va a desplazar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the child node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo secundario; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first sibling node of the current node.">Mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al primer nodo relacionado del nodo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first sibling node of the current node; &lt;see langword=&quot;false&quot; /&gt; if there is no first sibling, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is already positioned on the first sibling, &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will return &lt;see langword=&quot;true&quot; /&gt; and will not move its position.  &#xA;  &#xA; If &lt;see cref=&quot;M:System.Xml.XPath.XPathNavigator.MoveToFirst&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; because there is no first sibling, or if &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo relacionado del actual; <see langword="false" />, si no hay ningún primer nodo relacionado o si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se encuentra posicionado en un nodo de un atributo. Si <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en el primer <see cref="T:System.Xml.XPath.XPathNavigator" /> relacionado, devolverá <see langword="true" /> y no moverá su posición.  
Si <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> devuelve <see langword="false" /> porque no es el primer nodo relacionado o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está ubicado en un atributo, la posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no se modifica.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first attribute of the current node.">Cuando se reemplaza en una clase derivada, el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el primer atributo del nodo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first attribute of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer atributo del nodo actual; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first child node of the current node.">Cuando se reemplaza en una clase derivada, el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el primer nodo secundario del nodo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first child node of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo secundario del nodo actual; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to first namespace node of the current node.">Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el primer nodo de espacio de nombres del nodo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo del espacio de nombres; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first namespace node that matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; specified.">Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al primer nodo de espacio de nombres que coincida con el <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.</summary>
      <param name="namespaceScope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; value describing the namespace scope.">Valor de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que describe el ámbito de espacio de nombres.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo del espacio de nombres; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the element with the local name and namespace URI specified in document order.">Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento con el nombre local y el URI de espacio de nombres especificados en el orden del documento.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the element with the local name and namespace URI specified, to the boundary specified, in document order.">Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento con el nombre local y el URI de espacio de nombres especificados, al límite especificado, en el orden del documento.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="end" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the element boundary which the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will not move past while searching for the following element.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el límite del elemento que el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual no sobrepasa durante la búsqueda del elemento siguiente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the following element of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified in document order.">Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento siguiente del <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado en el orden del documento.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the element. The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; cannot be &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Namespace&quot; /&gt;.">Propiedad <see cref="T:System.Xml.XPath.XPathNodeType" /> del elemento. El <see cref="T:System.Xml.XPath.XPathNodeType" /> no puede ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ni <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the following element of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified, to the boundary specified, in document order.">Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente elemento del <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado, al límite especificado, en el orden del documento.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the element. The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; cannot be &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Namespace&quot; /&gt;.">Propiedad <see cref="T:System.Xml.XPath.XPathNodeType" /> del elemento. El <see cref="T:System.Xml.XPath.XPathNodeType" /> no puede ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ni <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <param name="end" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the element boundary which the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will not move past while searching for the following element.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el límite del elemento que el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual no sobrepasa durante la búsqueda del elemento siguiente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the node that has an attribute of type &lt;c&gt;ID&lt;/c&gt; whose value matches the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Cuando se invalida en una clase derivada, se desplaza al nodo con un atributo de tipo <c>ID</c> cuyo valor coincide con el <see cref="T:System.String" /> especificado.</summary>
      <param name="id" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;c&gt;ID&lt;/c&gt; value of the node to which you want to move.">
        <see cref="T:System.String" /> que representa el valor de <c>ID</c> del nodo al que quiera desplazarse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the navigator is unchanged.">Es <see langword="true" /> si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> se realiza correctamente; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del explorador.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the namespace node with the specified namespace prefix.">Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo de espacio de nombres con el prefijo correspondiente especificado.</summary>
      <param name="name" vsli:raw="The namespace prefix of the namespace node.">Prefijo de espacio de nombres del nodo de espacio de nombres.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the specified namespace; &lt;see langword=&quot;false&quot; /&gt; if a matching namespace node was not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">Es <see langword="true" /> si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al espacio de nombres especificado se realiza correctamente; es <see langword="false" /> si no se encuentra ningún nodo de espacio de nombres o si <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún nodo de elemento. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node of the current node.">Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el primer nodo relacionado del nodo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">Es <see langword="true" /> si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado se realiza correctamente; en caso contrario, es <see langword="false" /> si no hay más elementos relacionados o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node with the local name and namespace URI specified.">Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el siguiente nodo relacionado con el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="localName" vsli:raw="The local name of the next sibling node to move to.">El nombre local del siguiente nodo relacionado al que se va a desplazar.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the next sibling node to move to.">El URI de espacio de nombres del siguiente nodo relacionado al que se va a desplazar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente nodo relacionado; <see langword="false" />, si no hay ningún elemento relacionado más, o bien si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se encuentra posicionado en un nodo de un atributo. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node of the current node that matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified.">Mueve el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado del nodo actual que coincida con el <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the sibling node to move to.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo relacionado al que se va a desplazar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">Es <see langword="true" /> si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado se realiza correctamente; en caso contrario, es <see langword="false" /> si no hay más elementos relacionados o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next attribute.">Cuando se reemplaza en una clase derivada, <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el siguiente atributo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente atributo; <see langword="false" />, si no hay ningún atributo más. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next namespace node.">Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el siguiente nodo Namespace.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente nodo del espacio de nombres; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next namespace node matching the &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; specified.">Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo de espacio de nombres que coincida con el <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.</summary>
      <param name="namespaceScope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; value describing the namespace scope.">Valor de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que describe el ámbito de espacio de nombres.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente nodo del espacio de nombres; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the parent node of the current node.">Cuando se reemplaza en una clase derivada, el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el nodo primario del nodo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the parent node of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo primario del actual; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the previous sibling node of the current node.">Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo relacionado anterior del nodo actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the previous sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there is no previous sibling node or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo relacionado anterior; de lo contrario, <see langword="false" />, si no hay ningún nodo relacionado anterior, o bien si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se encuentra posicionado en un nodo de un atributo. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the root node that the current node belongs to.">Desplaza <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo raíz al que pertenece el nodo actual.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary vsli:raw="When overridden in a derived class, gets the qualified name of the current node.">Cuando se invalida en una clase derivada, obtiene el nombre completo del nodo actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.Name&quot; /&gt; of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node does not have a name (for example, text or comment nodes).">
        <see cref="T:System.String" /> que contiene el <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> calificado del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene nombre (por ejemplo, texto o nodos de comentario).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary vsli:raw="When overridden in a derived class, gets the namespace URI of the current node.">Cuando se reemplaza en una clase derivada, obtiene el URI de espacio de nombres del nodo actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node has no namespace URI.">
        <see cref="T:System.String" /> que contiene el URI de espacio de nombres del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene ningún URI de espacio de nombres.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Cuando se reemplaza en una clase derivada, obtiene el <see cref="T:System.Xml.XmlNameTable" /> de <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object enabling you to get the atomized version of a &lt;see cref=&quot;T:System.String&quot; /&gt; within the XML document.">Objeto <see cref="T:System.Xml.XmlNameTable" /> que permite obtener la versión subdividida de una cadena <see cref="T:System.String" /> en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; used for equality comparison of &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">Obtiene un <see cref="T:System.Collections.IEqualityComparer" /> que se utiliza para la comparación de igualdad de objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; used for equality comparison of &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEqualityComparer" /> que se utiliza para la comparación de igualdad de objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the current node.">Cuando se reemplaza en una clase derivada, obtiene el <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; values representing the current node.">Uno de los valores de <see cref="T:System.Xml.XPath.XPathNodeType" /> que representan el nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary vsli:raw="Gets or sets the markup representing the opening and closing tags of the current node and its child nodes.">Obtiene o establece el marcado que representa las etiquetas de apertura y cierre del nodo actual y sus nodos secundarios.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the markup representing the opening and closing tags of the current node and its child nodes.">
        <see cref="T:System.String" /> que contiene el marcado que representa las etiquetas de apertura y cierre del nodo actual y de sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary vsli:raw="When overridden in a derived class, gets the namespace prefix associated with the current node.">Cuando se invalida en una clase derivada, obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix associated with the current node.">
        <see cref="T:System.String" /> que contiene el prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new child node at the beginning of the list of child nodes of the current node.">Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new child node at the beginning of the list of child nodes of the current node.">Objeto <see cref="T:System.Xml.XmlWriter" /> utilizado para crear un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the XML string specified.">Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual utilizando la cadena XML especificada.</summary>
      <param name="newChild" vsli:raw="The XML data string for the new child node.">La cadena de datos XML del nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro de cadena XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">El parámetro de cadena XML no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual mediante el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new child node.">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual mediante los nodos del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new child node.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo para agregarlo como nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new child element at the beginning of the list of child nodes of the current node using the namespace prefix, local name, and namespace URI specified with the value specified.">Crea un nuevo nodo de elemento secundario al principio de la lista de nodos secundarios del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificados con el valor seleccionado.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">Nombre local del nuevo elemento secundario (si lo hay).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Identificador URI de espacio de nombres del nuevo elemento secundario (si lo hay). <see cref="F:System.String.Empty" /> y <see langword="null" /> son equivalentes.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un elemento vacío.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">El nodo actual en el que se coloca el <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the current node and its child nodes.">Devuelve un objeto <see cref="T:System.Xml.XmlReader" /> que contiene el nodo actual y sus nodos secundarios.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the current node and its child nodes.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el nodo actual y sus nodos secundarios.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node or the root node.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún nodo de elemento ni en el nodo raíz.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Replaces a range of sibling nodes from the current node to the node specified.">Reemplaza un intervalo de nodos relacionados desde el nodo actual hasta al nodo especificado.</summary>
      <param name="lastSiblingToReplace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the last sibling node in the range to replace.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el último nodo relacionado del intervalo que se va a reemplazar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to specify the replacement range.">Objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para especificar el intervalo de reemplazo.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified is &lt;see langword=&quot;null&quot; /&gt;.">El objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The last node to replace specified is not a valid sibling node of the current node.">El último nodo especificado que se va a reemplazar no es un nodo relacionado válido del nodo actual.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary vsli:raw="Replaces the current node with the content of the string specified.">Reemplaza el nodo actual por el contenido de la cadena especificada.</summary>
      <param name="newNode" vsli:raw="The XML data string for the new node.">La cadena de datos XML del nuevo nodo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro de cadena XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún elemento, ni en el texto, ni en una instrucción de procesamiento ni en un nodo de comentario.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">El parámetro de cadena XML no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary vsli:raw="Replaces the current node with the contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Reemplaza el nodo actual por el contenido del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newNode" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new node.">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">El objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de error o cerrado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún elemento, ni en el texto, ni en una instrucción de procesamiento ni en un nodo de comentario.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no tiene un formato correcto.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Replaces the current node with the contents of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">Reemplaza el nodo actual por el contenido del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newNode" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the new node.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el nuevo nodo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún elemento, ni en el texto, ni en una instrucción de procesamiento ni en un nodo de comentario.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is not well-formed.">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> no tiene un formato correcto.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node as a result of schema validation.">Obtiene la información de esquema asignada al nodo actual como resultado de la validación del esquema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object that contains the schema information for the current node.">Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary vsli:raw="Selects a node set, using the specified XPath expression.">Selecciona un conjunto de nodos utilizando la expresión XPath especificada.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">
        <see cref="T:System.String" /> que representa una expresión XPath.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; pointing to the selected node set.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">La expresión XPath contiene un error o el tipo de valor devuelto no es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Selects a node set using the specified XPath expression with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Selecciona un conjunto de nodos mediante la expresión XPath especificada con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">
        <see cref="T:System.String" /> que representa una expresión XPath.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de los espacios de nombres.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">La expresión XPath contiene un error o el tipo de valor devuelto no es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Selects a node set using the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">Selecciona un conjunto de nodos utilizando la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> especificada.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath query.">Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la consulta XPath compilada.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">La expresión XPath contiene un error o el tipo de valor devuelto no es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">La expresión XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Selects all the ancestor nodes of the current node that have the specified local name and namespace URI.">Selecciona todos los nodos antecesores del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="name" vsli:raw="The local name of the ancestor nodes.">Nombre local de los nodos antecesores.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the ancestor nodes.">Identificador URI de espacio de nombres de los nodos antecesores.</param>
      <param name="matchSelf" vsli:raw="To include the context node in the selection, &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para incluir el nodo de contexto en la selección; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes. The returned nodes are in reverse document order.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados. Los nodos que se devuelven están en orden de documento inverso.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" /> no se puede pasar como parámetro.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary vsli:raw="Selects all the ancestor nodes of the current node that have a matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">Selecciona todos los nodos antecesores del nodo actual que tengan un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the ancestor nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos antecesores.</param>
      <param name="matchSelf" vsli:raw="To include the context node in the selection, &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para incluir el nodo de contexto en la selección; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes. The returned nodes are in reverse document order.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados. Los nodos que se devuelven están en orden de documento inverso.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary vsli:raw="Selects all the child nodes of the current node that have the local name and namespace URI specified.">Selecciona todos los nodos secundarios del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="name" vsli:raw="The local name of the child nodes.">Nombre local de los nodos secundarios.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the child nodes.">Identificador URI de espacio de nombres de los nodos secundarios.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" /> no se puede pasar como parámetro.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Selects all the child nodes of the current node that have the matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">Selecciona todos los nodos secundarios del nodo actual que tengan el <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the child nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos secundarios.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Selects all the descendant nodes of the current node with the local name and namespace URI specified.">Selecciona todos los nodos descendientes del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="name" vsli:raw="The local name of the descendant nodes.">Nombre local de los nodos descendientes.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the descendant nodes.">Identificador URI de espacio de nombres de los nodos descendientes.</param>
      <param name="matchSelf" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the context node in the selection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para incluir el nodo de contexto en la selección; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" /> no se puede pasar como parámetro.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary vsli:raw="Selects all the descendant nodes of the current node that have a matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">Selecciona todos los nodos descendientes del nodo actual que tengan un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the descendant nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos descendientes.</param>
      <param name="matchSelf" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the context node in the selection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para incluir el nodo de contexto en la selección; en caso contrario, es <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified XPath query.">Selecciona un solo nodo en el <see cref="T:System.Xml.XPath.XPathNavigator" /> mediante la consulta XPath especificada.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">
        <see cref="T:System.String" /> que representa una expresión XPath.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es <see langword="null" /> si la consulta no genera resultados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">Se ha detectado un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">La consulta XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object using the specified XPath query with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Selecciona un solo nodo del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando la consulta XPath especificada con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">
        <see cref="T:System.String" /> que representa una expresión XPath.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes in the XPath query.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de espacio de nombres en la consulta XPath.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es <see langword="null" /> si la consulta no genera resultados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">Se ha detectado un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">La consulta XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Selecciona un solo nodo en el <see cref="T:System.Xml.XPath.XPathNavigator" /> mediante el objeto <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
      <param name="expression" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath query.">Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la consulta XPath compilada.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es <see langword="null" /> si la consulta no genera resultados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">Se ha detectado un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">La consulta XPath no es válida.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary vsli:raw="Sets the typed value of the current node.">Establece el valor con tipo del nodo actual.</summary>
      <param name="typedValue" vsli:raw="The new typed value of the node.">Nuevo valor con tipo del nodo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support the type of the object specified.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite el tipo del objeto especificado.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified cannot be &lt;see langword=&quot;null&quot; /&gt;.">El valor especificado no puede ser <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element or attribute node.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en ningún nodo de elemento o atributo.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary vsli:raw="Sets the value of the current node.">Establece el valor del nodo actual.</summary>
      <param name="value" vsli:raw="The new value of the node.">Nuevo valor del nodo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro de valor es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on the root node, a namespace node, or the specified value is invalid.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> se sitúa en el nodo raíz, un nodo de espacio de nombres, o el valor especificado no es válido.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">El <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Crea una nueva copia del objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="A new copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Nueva copia del objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary vsli:raw="Gets the text value of the current node.">Obtiene el valor de texto del nodo actual.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that contains the text value of the current node.">
        <see langword="string" /> que contiene el valor de texto del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary vsli:raw="Gets the current node as a boxed object of the most appropriate .NET type.">Obtiene el nodo actual en forma de objeto del tipo de .NET Framework más adecuado al que se ha aplicado la compresión boxing.</summary>
      <returns vsli:raw="The current node as a boxed object of the most appropriate .NET type.">El nodo actual en forma de objeto del tipo de .NET Framework más adecuado al que se ha aplicado la compresión boxing.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary vsli:raw="Used by &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; implementations which provide a &quot;virtualized&quot; XML view over a store, to provide access to underlying objects.">Lo utilizan las implementaciones de <see cref="T:System.Xml.XPath.XPathNavigator" /> que proporcionan una vista XML "virtual" sobre un almacén para proporcionar acceso a los objetos subyacentes.</summary>
      <returns vsli:raw="The default is &lt;see langword=&quot;null&quot; /&gt;.">De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Gets the current node's value as the &lt;see cref=&quot;T:System.Type&quot; /&gt; specified, using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Obtiene el valor del nodo actual como el <see cref="T:System.Type" /> especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.</summary>
      <param name="returnType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to return the current node's value as.">
        <see cref="T:System.Type" /> como el que se devuelve el valor del nodo actual.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de los espacios de nombres.</param>
      <returns vsli:raw="The value of the current node as the &lt;see cref=&quot;T:System.Type&quot; /&gt; requested.">Valor del nodo actual como el <see cref="T:System.Type" /> solicitado.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's value is not in the correct format for the target type.">El valor del nodo actual no tiene el formato correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La conversión intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Valor del nodo actual como un valor de tipo <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Boolean" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Valor del nodo actual como un valor de tipo <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">La conversión a <see cref="T:System.DateTime" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Valor del nodo actual como un valor de tipo <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Double" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary vsli:raw="Gets the current node's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.Int32" />.</summary>
      <returns vsli:raw="The current node's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Valor del nodo actual como un valor de tipo <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Int32" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary vsli:raw="Gets the current node's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.Int64" />.</summary>
      <returns vsli:raw="The current node's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Valor del nodo actual como un valor de tipo <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">La conversión a <see cref="T:System.Int64" /> intentada no es válida.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary vsli:raw="Gets the .NET &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current node.">Obtiene el <see cref="T:System.Type" /> de .NET Framework del nodo actual.</summary>
      <returns vsli:raw="The .NET &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current node. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">Obtiene el <see cref="T:System.Type" /> de .NET Framework del nodo actual. El valor predeterminado es <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary vsli:raw="Streams the current node and its child nodes to the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object specified.">Envía la secuencia del nodo actual y sus nodos secundarios al objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to stream to.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se envía la secuencia.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary vsli:raw="Gets the &lt;c&gt;xml:lang&lt;/c&gt; scope for the current node.">Obtiene el ámbito <c>xml:lang</c> del nodo actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;c&gt;xml:lang&lt;/c&gt; scope, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node has no &lt;c&gt;xml:lang&lt;/c&gt; scope value to return.">Que contiene el valor del ámbito <c>xml: lang</c> o <see cref="F:System.String.Empty" /> si el nodo actual no tiene ningún valor de ámbito <c>xml: lang</c> para devolver. <see cref="T:System.String" /></returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; information for the current node.">Obtiene la información de <see cref="T:System.Xml.Schema.XmlSchemaType" /> del nodo actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object; default is &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />; el valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary vsli:raw="Provides an iterator over a selected set of nodes.">Proporciona un iterador para un conjunto seleccionado de nodos.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary vsli:raw="When overridden in a derived class, returns a clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object.">Cuando se reemplaza en una clase derivada, devuelve un clon de este objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object.">Un nuevo clon de objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" /> de este objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary vsli:raw="Gets the index of the last node in the selected set of nodes.">Obtiene el índice del último nodo del conjunto de nodos seleccionado.</summary>
      <returns vsli:raw="The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.">El índice del último nodo del conjunto seleccionado de nodos o 0 si no hay ningún nodo seleccionado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt;, positioned on the current context node.">Cuando se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> correspondiente a este objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />, que se sitúa en el nodo de contexto actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the context node from which the node set was selected. The &lt;see cref=&quot;M:System.Xml.XPath.XPathNodeIterator.MoveNext&quot; /&gt; method must be called to move the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; to the first node in the selected set.">Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo de contexto del que se seleccionó el conjunto de nodos. Se debe llamar al método <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> para mover <see cref="T:System.Xml.XPath.XPathNodeIterator" /> al primer nodo del conjunto seleccionado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary vsli:raw="When overridden in a derived class, gets the index of the current position in the selected set of nodes.">Cuando se reemplaza en una clase derivada, se obtiene el índice de la posición actual en el conjunto de nodos seleccionado.</summary>
      <returns vsli:raw="The index of the current position.">Índice de la posición actual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object to iterate through the selected node set.">Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> para recorrer en iteración el conjunto de nodos seleccionado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object to iterate through the selected node set.">Un objeto <see cref="T:System.Collections.IEnumerator" /> para recorrer en iteración el conjunto de nodos seleccionado.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object returned by the &lt;see cref=&quot;P:System.Xml.XPath.XPathNodeIterator.Current&quot; /&gt; property to the next node in the selected node set.">Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> devuelto por la propiedad <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> hasta el siguiente nodo del conjunto seleccionado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object moved to the next node; &lt;see langword=&quot;false&quot; /&gt; if there are no more selected nodes.">Es <see langword="true" /> si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el siguiente nodo; <see langword="false" /> si no hay más nodos seleccionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Crea un nuevo objeto copiado de la instancia actual.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">Nuevo objeto que es copia de esta instancia.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary vsli:raw="Defines the XPath node types that can be returned from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">Define los tipos de nodo XPath que se pueden devolver desde la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary vsli:raw="Any of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; node types.">Cualquiera de los tipos de nodo <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary vsli:raw="An attribute, such as &lt;c&gt;id='123'&lt;/c&gt;.">Un atributo, como <c>id='123'</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary vsli:raw="A comment, such as &lt;c&gt;&amp;lt;!-- my comment --&amp;gt;&lt;/c&gt;.">Un comentario, como <c>&lt;!-- my comment --&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary vsli:raw="An element, such as &lt;c&gt;&amp;lt;element&amp;gt;&lt;/c&gt;.">Un elemento, como <c>&lt;element&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary vsli:raw="A namespace, such as &lt;c&gt;xmlns=&quot;namespace&quot;&lt;/c&gt;.">Un espacio de nombres, como <c>xmlns="namespace"</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary vsli:raw="A processing instruction, such as &lt;c&gt;&amp;lt;?pi test?&amp;gt;&lt;/c&gt;. This does not include XML declarations, which are not visible to the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">Una instrucción de procesamiento, como <c>&lt;?pi test?&gt;</c>. Esto no incluye las declaraciones XML, que no se encuentran visibles para la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary vsli:raw="The root node of the XML document or node tree.">Nodo raíz del documento XML o árbol de nodos.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary vsli:raw="A node with white space characters and &lt;c&gt;xml:space&lt;/c&gt; set to &lt;c&gt;preserve&lt;/c&gt;.">Un nodo con caracteres de espacio en blanco y <c>xml:space</c> establecido en <c>preserve</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary vsli:raw="The text content of a node. Equivalent to the Document Object Model (DOM) Text and CDATA node types. Contains at least one character.">Contenido de texto de un nodo. Equivalente al texto del Modelo de objetos de documento (DOM) y tipos de nodo de CDATA. Contiene por lo menos un carácter.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary vsli:raw="A node with only white space characters and no significant white space. White space characters are &lt;c&gt;#x20&lt;/c&gt;, &lt;c&gt;#x9&lt;/c&gt;, &lt;c&gt;#xD&lt;/c&gt;, or &lt;c&gt;#xA&lt;/c&gt;.">Nodo sólo con caracteres de espacio en blanco y sin espacio en blanco significativo. Los caracteres de espacio en blanco son <c>#x20</c>, <c>#x9</c>, <c>#xD</c> o <c>#xA</c>.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary vsli:raw="Specifies the return type of the XPath expression.">Especifica el tipo de valor devuelto de la expresión XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary vsli:raw="Any of the XPath node types.">Cualquiera de los tipos de nodo XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; value.">Un valor <see cref="T:System.Boolean" /><see langword="true" /> o <see langword="false" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary vsli:raw="The expression does not evaluate to the correct XPath type.">La expresión no evalúa el tipo XPath correcto.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary vsli:raw="A tree fragment.">Fragmento de árbol.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary vsli:raw="A node collection.">Colección de nodos.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary vsli:raw="A numeric value.">Valor numérico.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Valor <see cref="T:System.String" />.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary vsli:raw="Provides an interface to a given function defined in the Extensible Stylesheet Language for Transformations (XSLT) style sheet during runtime execution.">Proporciona una interfaz para una determinada función definida en la hoja de estilos de transformaciones XSL (Extensible Stylesheet Language for Transformations) durante la ejecución en tiempo de ejecución.</summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary vsli:raw="Gets the supplied XML Path Language (XPath) types for the function's argument list. This information can be used to discover the signature of the function which allows you to differentiate between overloaded functions.">Obtiene los tipos de XPath suministrados para la lista de argumentos de la función. Esta información se puede utilizar para descubrir la firma de la función que permite diferenciar las distintas funciones sobrecargadas.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the types for the function's argument list.">Matriz de <see cref="T:System.Xml.XPath.XPathResultType" /> que representa los tipos de la lista de argumentos de la función.</returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Provides the method to invoke the function with the given arguments in the given context.">Proporciona el método de invocación de la función con los argumentos especificados en el contexto indicado.</summary>
      <param name="xsltContext" vsli:raw="The XSLT context for the function call.">Contexto XSLT de la llamada de función.</param>
      <param name="args" vsli:raw="The arguments of the function call. Each argument is an element in the array.">Argumentos de la llamada de función. Cada argumento es un elemento de la matriz.</param>
      <param name="docContext" vsli:raw="The context node for the function call.">Nodo de contexto de la llamada de función.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the return value of the function.">
        <see cref="T:System.Object" /> que representa el valor devuelto de la función.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary vsli:raw="Gets the maximum number of arguments for the function. This enables the user to differentiate between overloaded functions.">Obtiene el número máximo de argumentos de la función. Esto permite al usuario diferenciar las distintas funciones sobrecargadas.</summary>
      <returns vsli:raw="The maximum number of arguments for the function.">Número máximo de argumentos de la función.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary vsli:raw="Gets the minimum number of arguments for the function. This enables the user to differentiate between overloaded functions.">Obtiene el número mínimo de argumentos de la función. Esto permite al usuario diferenciar las distintas funciones sobrecargadas.</summary>
      <returns vsli:raw="The minimum number of arguments for the function.">Número mínimo de argumentos de la función.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type returned by the function.">Obtiene el <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath devuelto por la función.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type returned by the function.">
        <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath devuelto por la función.</returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary vsli:raw="Provides an interface to a given variable that is defined in the style sheet during runtime execution.">Proporciona una interfaz a una variable determinada definida en la hoja de estilos durante la ejecución en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary vsli:raw="Evaluates the variable at runtime and returns an object that represents the value of the variable.">Evalúa la variable en tiempo de ejecución y devuelve un objeto que representa el valor de la variable.</summary>
      <param name="xsltContext" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; representing the execution context of the variable.">
        <see cref="T:System.Xml.Xsl.XsltContext" /> que representa el contexto de ejecución de la variable.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the value of the variable. Possible return types include number, string, Boolean, document fragment, or node set.">
        <see cref="T:System.Object" /> que representa el valor de la variable. Entre los tipos que pueden devolverse se incluyen: número, cadena, valor booleano, fragmento de documento o conjunto de nodos.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary vsli:raw="Gets a value indicating whether the variable is local.">Obtiene un valor que indica si la variable es local.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the variable is a local variable in the current context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la variable es una variable local del contexto actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary vsli:raw="Gets a value indicating whether the variable is an Extensible Stylesheet Language Transformations (XSLT) parameter. This can be a parameter to a style sheet or a template.">Obtiene un valor que indica si la variable es un parámetro XSLT (Extensible Stylesheet Language Transformation). Puede tratarse de un parámetro para una hoja de estilos o para una plantilla.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the variable is an XSLT parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la variable es un parámetro XSLT; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XML Path Language (XPath) type of the variable.">Obtiene el <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath de la variable.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type of the variable.">
        <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath de la variable.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary vsli:raw="Transforms XML data using an XSLT style sheet.">Transforma datos XML utilizando una hoja de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslCompiledTransform&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslCompiledTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslCompiledTransform&quot; /&gt; class with the specified debug setting.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> con la configuración de depuración especificada.</summary>
      <param name="enableDebug" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to generate debug information; otherwise &lt;see langword=&quot;false&quot; /&gt;. Setting this to &lt;see langword=&quot;true&quot; /&gt; enables you to debug the style sheet with the Microsoft Visual Studio Debugger.">Es <see langword="true" /> para generar información de depuración; de lo contrario, es <see langword="false" />. Si se establece en <see langword="true" />, la hoja de estilos se puede depurar con el depurador de Microsoft Visual Studio.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary vsli:raw="Loads a method from a style sheet compiled using the &lt;see langword=&quot;XSLTC.exe&quot; /&gt; utility.">Carga un método de una hoja de estilos compilada con la utilidad <see langword="XSLTC.exe" />.</summary>
      <param name="executeMethod" vsli:raw="A &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object representing the compiler-generated &lt;c&gt;execute&lt;/c&gt; method of the compiled style sheet.">Objeto <see cref="T:System.Reflection.MethodInfo" /> que representa el método <c>execute</c> generado por compilador de la hoja de estilos compilada.</param>
      <param name="queryData" vsli:raw="A byte array of serialized data structures in the &lt;c&gt;staticData&lt;/c&gt; field of the compiled style sheet as generated by the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)&quot; /&gt; method.">Matriz de tipo byte de estructuras de datos serializados en el campo <c>staticData</c> de la hoja de estilos compilada como se ha generado con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.</param>
      <param name="earlyBoundTypes" vsli:raw="An array of types stored in the compiler-generated &lt;c&gt;ebTypes&lt;/c&gt; field of the compiled style sheet.">Matriz de tipos almacenada en el campo <c>ebTypes</c> generado por compilador de la hoja de estilos compilada.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary vsli:raw="Loads and compiles the style sheet located at the specified URI.">Carga y compila la hoja de estilos situada en el URI especificado.</summary>
      <param name="stylesheetUri" vsli:raw="The URI of the style sheet.">URI de la hoja de estilos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="stylesheetUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La hoja de estilos contiene un error.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The style sheet cannot be found.">No se puede encontrar la hoja de estilos.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value includes a filename or directory that cannot be found.">El valor <paramref name="stylesheetUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">El valor <paramref name="stylesheetUri" /> no se puede resolver.  
o bien 
Error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;stylesheetUri&quot; /&gt; is not a valid URI.">
        <paramref name="stylesheetUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the style sheet.">Hubo un error de análisis al cargar la hoja de estilos.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads and compiles the XSLT style sheet specified by the URI. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">Carga y compila la hoja de estilos XSLT que especifica el URI. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos <c>import</c> e <c>include</c> XSLT y la configuración XSLT determina los permisos de la hoja de estilos.</summary>
      <param name="stylesheetUri" vsli:raw="The URI of the style sheet.">URI de la hoja de estilos.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es <see langword="null" />, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the style sheet URI and any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements.">Clase <see cref="T:System.Xml.XmlResolver" /> usada para resolver el URI de la hoja de estilos y cualquier hoja de estilos a la que se haga referencia en los elementos <c>import</c> e <c>include</c> XSLT.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; or &lt;paramref name=&quot;stylesheetResolver&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="stylesheetUri" /> o <paramref name="stylesheetResolver" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La hoja de estilos contiene un error.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The style sheet cannot be found.">No se puede encontrar la hoja de estilos.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value includes a filename or directory that cannot be found.">El valor <paramref name="stylesheetUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">El valor <paramref name="stylesheetUri" /> no se puede resolver.  
O bien 
Error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;stylesheetUri&quot; /&gt; is not a valid URI.">
        <paramref name="stylesheetUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the style sheet.">Hubo un error de análisis al cargar la hoja de estilos.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary vsli:raw="Loads the compiled style sheet that was created using the XSLT Compiler (xsltc.exe).">Carga la hoja de estilos compilada que se creó usando el compilador XSLT (xsltc.exe).</summary>
      <param name="compiledStylesheet" vsli:raw="The name of the class that contains the compiled style sheet.  &#xA;  &#xA; This is usually the name of the style sheet. Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.">Nombre de la clase que contiene la hoja de estilos compilada.  
 Normalmente se trata del nombre de la hoja de estilos. A menos que se especifique lo contrario, la herramienta xsltc.exe utiliza el nombre de la hoja de estilos para los nombres de ensamblado y clase.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Compiles the style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Compila la hoja de estilos incluida en <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the style sheet.">
        <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="stylesheet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La hoja de estilos contiene un error.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">Compila la hoja de estilos XSLT incluida en <see cref="T:System.Xml.XmlReader" />. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos <c>import</c> e <c>include</c> XSLT y la configuración XSLT determina los permisos de la hoja de estilos.</summary>
      <param name="stylesheet" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the style sheet.">
        <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es <see langword="null" />, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.">Clase <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las hojas de estilos a las que se hace referencia en los elementos <c>import</c> e <c>include</c> XSLT. Si es <see langword="null" />, los recursos externos no se resuelven.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="stylesheet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La hoja de estilos contiene un error.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary vsli:raw="Compiles the style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object.">Compila la hoja de estilos incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the style sheet.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente una clase <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="stylesheet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La hoja de estilos contiene un error.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">Compila la hoja de estilos XSLT incluida en <see cref="T:System.Xml.XPath.IXPathNavigable" />. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos <c>import</c> e <c>include</c> XSLT y la configuración XSLT determina los permisos de la hoja de estilos.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the style sheet.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente una clase <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es <see langword="null" />, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.">Clase <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las hojas de estilos a las que se hace referencia en los elementos <c>import</c> e <c>include</c> XSLT. Si es <see langword="null" />, los recursos externos no se resuelven.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor <paramref name="stylesheet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La hoja de estilos contiene un error.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that contains the output information derived from the &lt;c&gt;xsl:output&lt;/c&gt; element of the style sheet.">Obtiene un objeto <see cref="T:System.Xml.XmlWriterSettings" /> que contiene la información de salida derivada del elemento <c>xsl:output</c> de la hoja de estilos.</summary>
      <returns vsli:raw="A read-only &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that contains the output information derived from the &lt;c&gt;xsl:output&lt;/c&gt; element of the style sheet. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto de solo <see cref="T:System.Xml.XmlWriterSettings" /> lectura que contiene la información de salida derivada del elemento <c>xsl: Output</c> de la hoja de estilos. Este valor puede ser <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to a file.">Ejecuta la transformación utilizando el documento de entrada especificado por el URI y envía el resultado a un archivo.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI del documento de entrada.</param>
      <param name="resultsFile" vsli:raw="The URI of the output file.">URI del archivo de salida.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="inputUri" /> o <paramref name="resultsFile" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The input document cannot be found.">No se puede encontrar el documento de entrada.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value includes a filename or directory cannot be found.">El valor <paramref name="inputUri" /> o <paramref name="resultsFile" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">El valor <paramref name="inputUri" /> o <paramref name="resultsFile" /> no se puede resolver.  
O bien 
Se ha producido un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> o <paramref name="resultsFile" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI del documento de entrada.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="inputUri" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">El valor <paramref name="inputUri" /> no se puede resolver.  
O bien 
Error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Ejecuta la transformación utilizando el documento de entrada que especifica el URI y guarda el resultado en una secuencia. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI del documento de entrada.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">Secuencia a la que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="inputUri" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">El valor <paramref name="inputUri" /> no se puede resolver.  
O bien 
Se ha producido un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI del documento de entrada.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="inputUri" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">El valor <paramref name="inputUri" /> no se puede resolver.  
o bien 
Se ha producido un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI del documento de entrada.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="inputUri" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputtUri&quot; /&gt; value includes a filename or directory cannot be found.">El valor <paramref name="inputtUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">El valor <paramref name="inputUri" /> no se puede resolver.  
o bien 
Error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to a stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en una secuencia. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">Secuencia a la que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en <see cref="T:System.IO.TextWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments and the XmlResolver resolves the XSLT &lt;c&gt;document()&lt;/c&gt; function.">Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución y XmlResolver resuelve la función <c>document()</c> XSLT.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <param name="documentResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to a stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional runtime arguments.">Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en una secuencia. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">Secuencia a la que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.IO.TextWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Executes the transform by using the input document that is specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments and the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves the XSLT &lt;see langword=&quot;document()&quot; /&gt; function.">Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en <see cref="T:System.Xml.XmlWriter" />. El <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución y <see cref="T:System.Xml.XmlResolver" /> resuelve la función <see langword="document()" /> XSLT.</summary>
      <param name="input" vsli:raw="The document to transform that is specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object.">El documento que se va a transformar lo especifica el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</param>
      <param name="arguments" vsli:raw="Argument list as &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Lista de argumentos como <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;see langword=&quot;xsl:output&quot; /&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; by using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that is returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
Si la hoja de estilos contiene un elemento <see langword="xsl:output" />, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> que devuelve la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <param name="documentResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;see langword=&quot;document()&quot; /&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see langword=&quot;document()&quot; /&gt; function is not resolved.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <see langword="document()" /> de XSLT. Si es <see langword="null" />, la función <see langword="document()" /> no se resuelve.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary vsli:raw="Contains a variable number of arguments which are either XSLT parameters or extension objects.">Contiene un número variable de argumentos, los cuales son parámetros XSLT o bien objetos de extensión.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary vsli:raw="Implements a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Implementa una nueva instancia de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary vsli:raw="Adds a new object to the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; and associates it with the namespace URI.">Agrega un nuevo objeto a la lista <see cref="T:System.Xml.Xsl.XsltArgumentList" /> y lo asocia al URI del espacio de nombres.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI to associate with the object. To use the default namespace, specify an empty string.">URI de espacio de nombres que se va a asociar al objeto. Para utilizar el espacio de nombres predeterminado, hay que especificar una cadena vacía.</param>
      <param name="extension" vsli:raw="The object to add to the list.">Objeto que se va a agregar a la lista.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;namespaceUri&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or http://www.w3.org/1999/XSL/Transform  &#xA;  &#xA; The &lt;paramref name=&quot;namespaceUri&quot; /&gt; already has an extension object associated with it.">
        <paramref name="namespaceUri" /> es <see langword="null" /> o http://www.w3.org/1999/XSL/Transform 
El <paramref name="namespaceUri" /> ya tiene un objeto de extensión asociado.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have sufficient permissions to call this method.">El llamador no dispone de permisos suficientes como para llamar a este método.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary vsli:raw="Adds a parameter to the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; and associates it with the namespace qualified name.">Agrega un parámetro a <see cref="T:System.Xml.Xsl.XsltArgumentList" /> y lo asocia al nombre completo del espacio de nombres.</summary>
      <param name="name" vsli:raw="The name to associate with the parameter.">Nombre que se va a asociar al parámetro.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI to associate with the parameter. To use the default namespace, specify an empty string.">URI de espacio de nombres que se va a asociar al parámetro. Para utilizar el espacio de nombres predeterminado, hay que especificar una cadena vacía.</param>
      <param name="parameter" vsli:raw="The parameter value or object to add to the list.">Valor del parámetro u objeto que se va a agregar a la lista.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;namespaceUri&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or http://www.w3.org/1999/XSL/Transform.  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; is not a valid name according to the W3C XML specification.  &#xA;  &#xA; The &lt;paramref name=&quot;namespaceUri&quot; /&gt; already has a parameter associated with it.">
        <paramref name="namespaceUri" /> es <see langword="null" /> o http://www.w3.org/1999/XSL/Transform.  
El <paramref name="name" /> no es un nombre válido según la especificación W3C XML.  
El <paramref name="namespaceUri" /> tiene ya un parámetro asociado.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary vsli:raw="Removes all parameters and extension objects from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Quita todos los parámetros y objetos de extensión de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary vsli:raw="Gets the object associated with the given namespace.">Obtiene el objeto asociado al espacio de nombres dado.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI of the object.">URI del espacio de nombres del objeto.</param>
      <returns vsli:raw="The namespace URI object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">Objeto URI del espacio de nombres o <see langword="null" /> si no se encontró ninguno.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary vsli:raw="Gets the parameter associated with the namespace qualified name.">Obtiene el parámetro asociado al nombre completo del espacio de nombres.</summary>
      <param name="name" vsli:raw="The name of the parameter. &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; does not check to ensure the name passed is a valid local name; however, the name cannot be &lt;see langword=&quot;null&quot; /&gt;.">Nombre del parámetro. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> no comprueba si el nombre que se ha pasado es un nombre local válido; sin embargo, el nombre no puede ser <see langword="null" />.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI associated with the parameter.">URI de espacio de nombres asociado al parámetro.</param>
      <returns vsli:raw="The parameter object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">Objeto del parámetro o <see langword="null" /> si no se encontró ninguno.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary vsli:raw="Removes the object with the namespace URI from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Quita el objeto con el URI del espacio de nombres de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI associated with the object to remove.">URI del espacio de nombres asociado al objeto que se va a eliminar.</param>
      <returns vsli:raw="The object with the namespace URI or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">Objeto con el URI del espacio de nombres o <see langword="null" /> si no se encontró ninguno.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary vsli:raw="Removes the parameter from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Quita el parámetro de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="name" vsli:raw="The name of the parameter to remove. &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; does not check to ensure the name passed is a valid local name; however, the name cannot be &lt;see langword=&quot;null&quot; /&gt;.">Nombre del parámetro que se va a quitar. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> no comprueba si el nombre que se ha pasado es un nombre local válido; sin embargo, el nombre no puede ser <see langword="null" />.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the parameter to remove.">URI del espacio de nombres del parámetro que se va a quitar.</param>
      <returns vsli:raw="The parameter object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">Objeto del parámetro o <see langword="null" /> si no se encontró ninguno.</returns>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary vsli:raw="Occurs when a message is specified in the style sheet by the &lt;c&gt;xsl:message&lt;/c&gt; element.">Aparece cuando hay un mensaje especificado por el elemento <c>xsl:message</c> en la hoja de estilos.</summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary vsli:raw="The exception that is thrown by the Load method when an error is found in the XSLT style sheet.">Excepción producida por el método Load cuando se encuentra un error en la hoja de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltCompileException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="XsltCompileException" />.</summary>
      <param name="inner" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that threw the &lt;see langword=&quot;XsltCompileException&quot; /&gt;.">Objeto <see cref="T:System.Exception" /> que produjo la excepción <see langword="XsltCompileException" />.</param>
      <param name="sourceUri" vsli:raw="The location path of the style sheet.">Ruta de acceso de la hoja de estilos.</param>
      <param name="lineNumber" vsli:raw="The line number indicating where the error occurred in the style sheet.">Número de línea que indica dónde se produjo el error en la hoja de estilos.</param>
      <param name="linePosition" vsli:raw="The line position indicating where the error occurred in the style sheet.">Posición de línea que indica dónde se produjo el error en la hoja de estilos.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltCompileException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see langword="XsltCompileException" /> utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XsltCompileException&quot; /&gt;.">Objeto <see langword="SerializationInfo" /> que contiene todas las propiedades de una <see langword="XsltCompileException" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object containing the context information.">Objeto <see langword="StreamingContext" /> que contiene la información de contexto.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class with a specified error message.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Mensaje que describe el error.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" /> con un mensaje de error especificado y una referencia a la excepción interna que provoca esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Mensaje que describe el error.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or &lt;see langword=&quot;null&quot; /&gt; if no inner exception is specified.">La excepción que es la causa de la excepción actual o <see langword="null" /> si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XsltCompileException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Transmite todas las propiedades <see langword="XsltCompileException" /> a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">Objeto <see langword="SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">Objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary vsli:raw="Encapsulates the current execution context of the Extensible Stylesheet Language for Transformations (XSLT) processor allowing XML Path Language (XPath) to resolve functions, parameters, and namespaces within XPath expressions.">Encapsula el contexto de ejecución actual del procesador XSLT permitiendo que XPath pueda resolver funciones, parámetros y espacios de nombres en expresiones XPath.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltContext" /> con el objeto <see cref="T:System.Xml.NameTable" /> especificado.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.NameTable" /> que se va a usar.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, compares the base Uniform Resource Identifiers (URIs) of two documents based upon the order the documents were loaded by the XSLT processor (that is, the &lt;see cref=&quot;T:System.Xml.Xsl.XslTransform&quot; /&gt; class).">Cuando se reemplaza en una clase derivada, compara las direcciones URI base de dos documentos en función del orden en que el procesador XSLT cargó los documentos (es decir, la clase <see cref="T:System.Xml.Xsl.XslTransform" />).</summary>
      <param name="baseUri" vsli:raw="The base URI of the first document to compare.">Dirección URI base del primer documento que se va a comparar.</param>
      <param name="nextbaseUri" vsli:raw="The base URI of the second document to compare.">Dirección URI base del segundo documento que se va a comparar.</param>
      <returns vsli:raw="An integer value describing the relative order of the two base URIs: -1 if &lt;paramref name=&quot;baseUri&quot; /&gt; occurs before &lt;paramref name=&quot;nextbaseUri&quot; /&gt;; 0 if the two base URIs are identical; and 1 if &lt;paramref name=&quot;baseUri&quot; /&gt; occurs after &lt;paramref name=&quot;nextbaseUri&quot; /&gt;.">Valor entero que describe el orden relativo de dos identificadores URI base: es -1 si <paramref name="baseUri" /> aparece antes que <paramref name="nextbaseUri" />; es 0 si los dos identificadores URl base son idénticos, y es 1 si <paramref name="baseUri" /> aparece después de <paramref name="nextbaseUri" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, evaluates whether to preserve white space nodes or strip them for the given context.">Cuando se reemplaza en una clase derivada, evalúa si se van a conservar los nodos de espacio en blanco o si se van a quitar en el contexto especificado.</summary>
      <param name="node" vsli:raw="The white space node that is to be preserved or stripped in the current context.">Nodo de espacio en blanco que se va a conservar o quitar en el contexto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the white space is to be preserved; &lt;see langword=&quot;false&quot; /&gt; if the white space is to be stripped.">
        <see langword="true" /> si el espacio en blanco se va a conservar o <see langword="false" /> si el espacio en blanco se va a quitar.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary vsli:raw="When overridden in a derived class, resolves a function reference and returns an &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; representing the function. The &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; is used at execution time to get the return value of the function.">Cuando se reemplaza en una clase derivada, resuelve una referencia de función y devuelve interfaz <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa la función. <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> se utiliza en tiempo de ejecución para obtener el valor devuelto de la función.</summary>
      <param name="prefix" vsli:raw="The prefix of the function as it appears in the XPath expression.">Prefijo de la función tal y como aparece en la expresión XPath.</param>
      <param name="name" vsli:raw="The name of the function.">Nombre de la función.</param>
      <param name="ArgTypes" vsli:raw="An array of argument types for the function being resolved. This allows you to select between methods with the same name (for example, overloaded methods).">Matriz de tipos de argumento de la función que se va a resolver. Este método permite seleccionar varios métodos con el mismo nombre, por ejemplo, métodos sobrecargados.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; representing the function.">
        <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa la función.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves a variable reference and returns an &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextVariable&quot; /&gt; representing the variable.">Cuando se reemplaza en una clase derivada, resuelve una referencia de variable y devuelve una interfaz <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa la variable.</summary>
      <param name="prefix" vsli:raw="The prefix of the variable as it appears in the XPath expression.">Prefijo de la variable tal y como aparece en la expresión XPath.</param>
      <param name="name" vsli:raw="The name of the variable.">Nombre de la variable.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextVariable&quot; /&gt; representing the variable at runtime.">
        <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa la variable en tiempo de ejecución.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether to include white space nodes in the output.">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si se van a incluir los nodos de espacio en blanco en los resultados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check white space nodes in the source document for inclusion in the output; &lt;see langword=&quot;false&quot; /&gt; to not evaluate white space nodes. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> para comprobar si se van a incluir en los resultados los nodos de espacio en blanco de la documentación de origen; es <see langword="false" /> para no evaluar los nodos de espacio en blanco. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary vsli:raw="The exception that is thrown when an error occurs while processing an XSLT transformation.">Excepción que se produce cuando se produce un error al procesar una transformación XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see langword="XsltException" /> utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XsltException&quot; /&gt;.">Objeto <see langword="SerializationInfo" /> que contiene todas las propiedades de una <see langword="XsltException" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">Objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; class with a specified error message.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Mensaje que describe el error.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="XsltException" />.</summary>
      <param name="message" vsli:raw="The description of the error condition.">Descripción de la condición de error.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; which threw the &lt;see langword=&quot;XsltException&quot; /&gt;, if any. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Exception" /> que ha producido la excepción <see langword="XsltException" />, si la hay. Este valor puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XsltException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Transmite todas las propiedades <see langword="XsltException" /> a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">Objeto <see langword="SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">Objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred in the style sheet.">Obtiene el número de línea que indica dónde se produjo el error en la hoja de estilos.</summary>
      <returns vsli:raw="The line number indicating where the error occurred in the style sheet.">Número de línea que indica dónde se produjo el error en la hoja de estilos.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred in the style sheet.">Obtiene la posición de línea que indica dónde se produjo el error en la hoja de estilos.</summary>
      <returns vsli:raw="The line position indicating where the error occurred in the style sheet.">Posición de línea que indica dónde se produjo el error en la hoja de estilos.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary vsli:raw="Gets the formatted error message describing the current exception.">Obtiene el mensaje de error con formato que describe la excepción actual.</summary>
      <returns vsli:raw="The formatted error message describing the current exception.">Mensaje de error con formato que describe la excepción actual.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary vsli:raw="Gets the location path of the style sheet.">Obtiene la ruta de acceso de la hoja de estilos.</summary>
      <returns vsli:raw="The location path of the style sheet.">Ruta de acceso de la hoja de estilos.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltMessageEncounteredEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary vsli:raw="Gets the contents of the &lt;c&gt;xsl:message&lt;/c&gt; element.">Obtiene el contenido del elemento <c>xsl:message</c>.</summary>
      <returns vsli:raw="The contents of the &lt;c&gt;xsl:message&lt;/c&gt; element.">Contenido del elemento <c>xsl: Message</c> .</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered&quot; /&gt; event.">Representa el método que controlará el evento <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltMessageEncounteredEventArgs&quot; /&gt; containing the event data.">
        <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary vsli:raw="Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.">Transforma datos XML utilizando una hoja de estilo XLST (Extensible Stylesheet Language for Transformations, Lenguaje de hoja de estilos extensible para transformaciones).</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslTransform&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary vsli:raw="Loads the XSLT style sheet specified by a URL.">Carga la hoja de estilos XSLT especificada por una dirección URL.</summary>
      <param name="url" vsli:raw="The URL that specifies the XSLT style sheet to load.">La dirección URL que especifica la hoja de estilos XSLT a cargar.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">El recurso cargado no es una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded script, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La hoja de estilos contiene un script incrustado y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet specified by a URL.">Carga la hoja de estilos XSLT especificada por una dirección URL.</summary>
      <param name="url" vsli:raw="The URL that specifies the XSLT style sheet to load.">La dirección URL que especifica la hoja de estilos XSLT a cargar.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use to load the style sheet and any style sheet(s) referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements.  &#xA;  &#xA; If this is &lt;see langword=&quot;null&quot; /&gt;, a default &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; with no user credentials is used to open the style sheet. The default &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; is not used to resolve any external resources in the style sheet, so &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para cargar la hoja de estilos y cualquier hoja u hojas de estilos a las que se haga referencia en los elementos <c>xsl:import</c> y <c>xsl:include</c>.  
Si es <see langword="null" />, se utiliza un <see cref="T:System.Xml.XmlUrlResolver" /> predeterminado sin credenciales del usuario para abrir la hoja de estilos. El objeto <see cref="T:System.Xml.XmlUrlResolver" /> predeterminado no se usa para resolver los recursos externos de la hoja de estilos, por lo que los elementos <c>xsl:import</c> y <c>xsl:include</c> quedan sin resolver.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">El recurso cargado no es una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded script, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La hoja de estilos contiene un script incrustado y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the XSLT style sheet.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">El nodo actual no cumple los requisitos de una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the XSLT style sheet.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos XSLT.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> se usa para cargar la hoja de estilos y cualquier hoja u hojas de estilos a las que se haga referencia en los elementos <c>xsl:import</c> y <c>xsl:include</c>. Si es <see langword="null" />, los recursos externos no se resuelven.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">El nodo actual no cumple los requisitos de una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;.">Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the XSLT style sheet.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, un objeto <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">El recurso cargado no es una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;.">Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the XSLT style sheet.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, un objeto <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos XSLT.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Load&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> se usa para cargar la hoja de estilos y cualquier hoja u hojas de estilos a las que se haga referencia en los elementos <c>xsl:import</c> y <c>xsl:include</c>. Si es <see langword="null" />, los recursos externos no se resuelven.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">El recurso cargado no es una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the XSLT style sheet.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene la hoja de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">El nodo actual no cumple los requisitos de una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the XSLT style sheet.">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene la hoja de estilos XSLT.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Load&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> se usa para cargar la hoja de estilos y cualquier hoja u hojas de estilos a las que se haga referencia en los elementos <c>xsl:import</c> y <c>xsl:include</c>. Si es <see langword="null" />, los recursos externos no se resuelven.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">El nodo actual no cumple los requisitos de una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary vsli:raw="Transforms the XML data in the input file and outputs the result to an output file.">Transforma los datos XML del archivo de entrada y envía el resultado a un archivo de salida.</summary>
      <param name="inputfile" vsli:raw="The URL of the source document to be transformed.">Dirección URL del documento origen que se va a transformar.</param>
      <param name="outputfile" vsli:raw="The URL of the output file.">Dirección URL del archivo de salida.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the input file and outputs the result to an output file.">Transforma los datos XML del archivo de entrada y envía el resultado a un archivo de salida.</summary>
      <param name="inputfile" vsli:raw="The URL of the source document to be transformed.">Dirección URL del documento origen que se va a transformar.</param>
      <param name="outputfile" vsli:raw="The URL of the output file.">Dirección URL del archivo de salida.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">Secuencia a la que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">Secuencia a la que se desea enviar el resultado.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">Secuencia a la que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">Secuencia a la que se desea enviar el resultado.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified args and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando los argumentos especificados y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified args and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando los argumentos especificados y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Se produjo un error al procesar la transformación XSLT.  
Nota: Este es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve external resources when the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method is called.">Establece <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver recursos externos cuando se llama al método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use during transformation. If set to &lt;see langword=&quot;null&quot; /&gt;, the XSLT &lt;c&gt;document()&lt;/c&gt; function is not resolved.">Objeto <see cref="T:System.Xml.XmlResolver" /> que se va a utilizar durante la transformación. Si se establece <see langword="null" />en, la función <c>Document ()</c> de XSLT no se resuelve.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary vsli:raw="Specifies the XSLT features to support during execution of the XSLT style sheet.">Especifica las características XSLT que se admitirán durante la ejecución de la hoja de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; class with default settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltSettings" /> con los valores predeterminados.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; class with the specified settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltSettings" /> con la configuración especificada.</summary>
      <param name="enableDocumentFunction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable support for the XSLT &lt;c&gt;document()&lt;/c&gt; function; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para habilitar la compatibilidad con la función <c>document()</c> XSLT; en caso contrario, <see langword="false" />.</param>
      <param name="enableScript" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable support for embedded scripts blocks; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para habilitar la compatibilidad con los bloques de script incrustado; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with default settings. Support for the XSLT &lt;c&gt;document()&lt;/c&gt; function and embedded script blocks is disabled.">Obtiene un objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con la configuración predeterminada. La compatibilidad con la función <c>document()</c> XSLT y los bloques de script incrustado está deshabilitada.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableScript&quot; /&gt; properties set to &lt;see langword=&quot;false&quot; /&gt;.">Objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con las propiedades <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> y <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> establecidas en <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary vsli:raw="Gets or sets a value indicating whether to enable support for the XSLT &lt;c&gt;document()&lt;/c&gt; function.">Obtiene o establece un valor que indica si se va a habilitar la compatibilidad con la función <c>document()</c> XSLT.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support the XSLT &lt;c&gt;document()&lt;/c&gt; function; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />para admitir la función <c>Document ()</c> de XSLT; en caso <see langword="false" />contrario,. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary vsli:raw="Gets or sets a value indicating whether to enable support for embedded script blocks.">Obtiene o establece un valor que indica si se va a habilitar la compatibilidad con los bloques de script incrustado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support script blocks in XSLT style sheets; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para admitir los bloques de script en las hojas de estilos XSLT; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object that enables support for the XSLT &lt;c&gt;document()&lt;/c&gt; function and embedded script blocks.">Obtiene un objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> que habilita la compatibilidad con la función <c>document()</c> XSLT y los bloques de script incrustado.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableScript&quot; /&gt; properties set to &lt;see langword=&quot;true&quot; /&gt;.">Objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con las propiedades <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> y <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> establecidas en <see langword="true" />.</returns>
    </member>
  </members>
</doc>