<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>Stellt Eigenschaften, Methoden und Ereignisse bereit, die sich auf die aktuelle Anwendung beziehen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>Ändert die Kultur, die vom aktuellen Thread für die Bearbeitung und Formatierung von Zeichenfolgen verwendet wird.</summary>
      <param name="cultureName">
        <see langword="String" />. Der Name der Kultur als Zeichenfolge. Eine Liste der möglichen Namen finden Sie unter <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> ist kein gültiger Kulturname.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>Ändert die Kultur, die der aktuelle Thread zum Abrufen von kulturspezifischen Ressourcen verwendet.</summary>
      <param name="cultureName">
        <see langword="String" />. Der Name der Kultur als Zeichenfolge. Eine Liste der möglichen Namen finden Sie unter <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> ist kein gültiger Kulturname.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>Ruft die Kultur ab, die der aktuelle Thread für die Bearbeitung und Formatierung von Zeichenfolgen verwendet.</summary>
      <returns>Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die Kultur darstellt, die der aktuelle Thread für die Bearbeitung und Formatierung von Zeichenfolgen verwendet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>Gibt den Wert der angegebenen Umgebungsvariablen zurück.</summary>
      <param name="name">Ein <see langword="String" />, der den Namen der Umgebungsvariablen enthält.</param>
      <returns>Ein <see langword="String" />, der den Wert der Umgebungsvariablen mit dem Namen <paramref name="name" /> enthält.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Die von <paramref name="name" /> angegebene Umgebungsvariable ist nicht vorhanden.</exception>
      <exception cref="T:System.Security.SecurityException">Der aufrufende Code verfügt über keine <see cref="T:System.Security.Permissions.EnvironmentPermission" /> mit <see langword="Read" />-Zugriff.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>Ruft ein Objekt ab, das Eigenschaften zum Abrufen von Informationen über die Assembly der Anwendung bereitstellt, z. B. die Versionsnummer, Beschreibung usw.</summary>
      <returns>Das <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />-Objekt der aktuellen Anwendung.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>Ruft die Kultur ab, die der aktuelle Thread zum Abrufen von kulturspezifischen Ressourcen verwendet.</summary>
      <returns>Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die Kultur darstellt, die der aktuelle Thread zum Abrufen von kulturspezifischen Ressourcen verwendet.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>Stellt Eigenschaften zum Abrufen von Informationen über die Anwendung bereit, z. B. die Versionsnummer, Beschreibung, geladene Assemblys usw.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />-Klasse mit den angegebenen Assemblyinformationen.</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. Die Assembly, für die Informationen abgerufen werden sollen.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>Ruft den Namen der Assemblydatei für die Anwendung ohne Erweiterung ab.</summary>
      <returns>Ein <see langword="String" />, der den Dateinamen enthält.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>Ruft den der Anwendung zugeordneten Firmennamen ab.</summary>
      <returns>Ein <see langword="String" />, der den der Anwendung zugeordneten Firmennamen enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyCompanyAttribute" />-Attribut auf.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>Ruft den der Anwendung zugeordneten Copyrightvermerk ab.</summary>
      <returns>Ein <see langword="String" />, der den der Anwendung zugeordneten Copyrightvermerk enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />-Attribut auf.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>Ruft die der Anwendung zugeordnete Beschreibung ab.</summary>
      <returns>Ein <see langword="String" />, der die der Anwendung zugeordnete Beschreibung enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />-Attribut auf.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>Ruft das Verzeichnis ab, in dem die Anwendung gespeichert ist.</summary>
      <returns>Ein <see langword="String" />, der das Verzeichnis enthält, in dem die Anwendung gespeichert ist.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>Ruft eine Auflistung aller von der Anwendung geladenen Assemblys ab.</summary>
      <returns>Eine <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vom Typ <see cref="T:System.Reflection.Assembly" />, die alle von der Anwendung geladenen Assemblys enthält.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Die Anwendungsdomäne ist nicht geladen.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>Ruft den der Anwendung zugeordneten Produktnamen ab.</summary>
      <returns>Ein <see langword="String" />, der den der Anwendung zugeordneten Produktnamen enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyProductAttribute" />-Attribut auf.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>Ruft die aktuellen Stapelüberwachungsinformationen ab.</summary>
      <returns>Ein <see langword="String" />, der die aktuellen Stapelüberwachungsinformationen enthält. Der Rückgabewert kann <see cref="F:System.String.Empty" /> sein.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die angeforderten Stapelüberwachungsinformationen liegen außerhalb des zulässigen Bereichs.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>Ruft den der Anwendung zugeordneten Titel ab.</summary>
      <returns>Ein <see langword="String" />, der das der Anwendung zugeordnete <see cref="T:System.Reflection.AssemblyTitleAttribute" /> enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyTitleAttribute" />-Attribut auf.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>Ruft den der Anwendung zugeordneten Markenvermerk ab.</summary>
      <returns>Ein <see langword="String" />, der den der Anwendung zugeordneten Markenvermerk enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die Assembly weist kein <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />-Attribut auf.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>Ruft die Versionsnummer der Anwendung ab.</summary>
      <returns>Ein <see cref="T:System.Version" />-Objekt, das die Versionsnummer der Anwendung enthält.</returns>
      <exception cref="T:System.Security.SecurityException">Die Anwendung verfügt nicht über ausreichende Berechtigungen für den Zugriff auf die Assemblyversion.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>Ruft die Größe des physischen Speichers ab, der dem Prozesskontext zugeordnet ist.</summary>
      <returns>Ein <see langword="Long" />, der die Anzahl von Bytes im physikalischen Speicher enthält, der dem Prozesskontext zugeordnet ist.</returns>
      <exception cref="T:System.Security.SecurityException">Ein teilweise vertrauenswürdiger Kontext, in dem der Benutzer nicht über erforderliche Berechtigungen verfügt.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>Stellt Eigenschaften, Methoden und Ereignisse bereit, die sich auf die aktuelle Anwendung beziehen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>Ruft eine Auflistung ab, die die Befehlszeilenargumente für die aktuelle Anwendung als Zeichenfolgen enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vom Typ <see langword="String" />, die die Befehlszeilenargumente der aktuellen Anwendung als Zeichenfolgen enthält.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>Legt die Werte fest, die als Befehlszeilenargumente der aktuellen Anwendung verwendet werden sollen.</summary>
      <returns>Eine <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vom Typ <see langword="String" /> mit den Zeichenfolgen, die als Befehlszeilenargumente für die aktuelle Anwendung verwendet werden sollen.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>Stellt Daten für das <see langword="My.Application.Startup" />-Ereignis bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />-Klasse.</summary>
      <param name="args">Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt, das die Befehlszeilenargumente der Anwendung enthält.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>Ruft die Befehlszeilenargumente der Anwendung ab.</summary>
      <returns>Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt, das die Befehlszeilenargumente der Anwendung enthält.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>Stellt Daten für das <see langword="My.Application.StartupNextInstance" />-Ereignis bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />-Klasse.</summary>
      <param name="args">Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt, das die Befehlszeilenargumente der nachfolgenden Anwendungsinstanz enthält.</param>
      <param name="bringToForegroundFlag">Ein <see cref="T:System.Boolean" />, der angibt, ob die erste Anwendungsinstanz nach Beendigung des Ausnahmehandlers in den Vordergrund gesetzt werden soll.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>Gibt an, ob die erste Anwendungsinstanz nach Beendigung des Ausnahmehandlers in den Vordergrund gesetzt werden soll.</summary>
      <returns>Ein <see cref="T:System.Boolean" />, der angibt, ob die erste Anwendungsinstanz nach Beendigung des Ausnahmehandlers in den Vordergrund gesetzt werden soll.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>Ruft die Befehlszeilenargumente der nachfolgenden Anwendungsinstanz ab.</summary>
      <returns>Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt, das die Befehlszeilenargumente der nachfolgenden Anwendungsinstanz enthält.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>Stellt Daten für das <see langword="My.Application.UnhandledException" />-Ereignis bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />-Klasse.</summary>
      <param name="exitApplication">Ein <see cref="T:System.Boolean" />, der angibt, ob die Anwendung nach Beendigung des Ausnahmehandlers beendet werden soll.</param>
      <param name="exception">Die <see cref="T:System.Exception" />, die aufgetreten ist.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>Gibt an, ob die Anwendung nach Beendigung des Ausnahmehandlers beendet werden soll.</summary>
      <returns>Ein <see cref="T:System.Boolean" />, der angibt, ob die Anwendung nach Beendigung des Ausnahmehandlers beendet werden soll.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>Stellt den Zugriff auf die Informationen über den aktuellen Benutzer bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>Ruft den aktuellen Prinzipal (für rollenbasierte Sicherheit) ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Security.Principal.IPrincipal" />-Wert, der den Sicherheitskontext darstellt.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung zum Festlegen des Prinzipals.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>Ruft das Prinzipalobjekt ab, das den aktuellen Benutzer darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Security.Principal.IPrincipal" />-Objekt, das den aktuellen Benutzer darstellt.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>Ruft einen Wert ab, der angibt, ob der Benutzer authentifiziert wurde.</summary>
      <returns>
        <see langword="True" />, wenn der Benutzer authentifiziert wurde, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>Bestimmt, ob der aktuelle Benutzer zur angegebenen Rolle gehört.</summary>
      <param name="role">Der Name der Rolle, für die die Mitgliedschaft überprüft werden soll.</param>
      <returns>
        <see langword="True" />, wenn der aktuelle Benutzer ein Mitglied der angegebenen Rolle ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>Ruft den Namen des aktuellen Benutzers ab.</summary>
      <returns>
        <see langword="String" />. Der Name des aktuellen Benutzers.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary vsli:raw="Indicates the window style to use for the invoked program when calling the &lt;see langword=&quot;Shell&quot; /&gt; function.">Gibt in Aufrufen der <see langword="Shell" />-Funktion den Fensterstil an, der für das aufgerufene Programm verwendet werden soll.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary vsli:raw="Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHide&quot; /&gt;.">Das Fenster wird ausgeblendet, und das ausgeblendete Fenster erhält den Fokus. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbHide" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary vsli:raw="Window is maximized with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMaximizedFocus&quot; /&gt;.">Das Fenster wird maximiert und besitzt den Fokus. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbMaximizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary vsli:raw="Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedFocus&quot; /&gt;.">Das Fenster wird als Symbol angezeigt, das den Fokus besitzt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbMinimizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary vsli:raw="Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedNoFocus&quot; /&gt;.">Das Fenster wird als Symbol angezeigt. Das derzeit aktive Fenster bleibt aktiv. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbMinimizedNoFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary vsli:raw="Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalFocus&quot; /&gt;.">Das Fenster besitzt den Fokus und wird in der ursprünglichen Größe und an der ursprünglichen Position wiederhergestellt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbNormalFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary vsli:raw="Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalNoFocus&quot; /&gt;.">Das Fenster wird in der letzten Größe und an der letzten Position wiederhergestellt. Das derzeit aktive Fenster bleibt aktiv. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbNormalNoFocus" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary vsli:raw="Indicates the type of procedure being invoked when calling the &lt;see langword=&quot;CallByName&quot; /&gt; function.">Gibt den Typ der Prozedur an, die beim Aufrufen der <see langword="CallByName" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary vsli:raw="A property value is being retrieved.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGet&quot; /&gt;.">Ein Eigenschaftswert wird abgerufen.  Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbGet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary vsli:raw="An Object property value is being determined. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLet&quot; /&gt;.">Ein Objekteigenschaftswert wird festgelegt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbLet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary vsli:raw="A method is being invoked.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMethod&quot; /&gt;.">Eine Methode wird aufgerufen.  Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbMethod" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary vsli:raw="A property value is being determined.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSet&quot; /&gt;.">Ein Eigenschaftswert wird festgelegt.  Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbSet" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary vsli:raw="A Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; is an ordered set of items that can be referred to as a unit.">Eine Visual Basic-<see langword="Collection" /> ist eine geordnete Menge von Elementen, auf die als Einheit verwiesen werden kann.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary vsli:raw="Creates and returns a new Visual Basic &lt;see cref=&quot;T:Microsoft.VisualBasic.Collection&quot; /&gt; object.">Erstellt ein neues <see cref="T:Microsoft.VisualBasic.Collection" />-Objekt von Visual Basic und gibt dieses zurück</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary vsli:raw="Adds an element to a &lt;see langword=&quot;Collection&quot; /&gt; object.">Fügt einem <see langword="Collection" />-Objekt ein Element hinzu.</summary>
      <param name="Item" vsli:raw="Required. An object of any type that specifies the element to add to the collection.">Erforderlich. Ein Objekt eines beliebigen Typs, das das Element angibt, das der Auflistung hinzugefügt werden soll.</param>
      <param name="Key" vsli:raw="Optional. A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.">Dies ist optional. Ein eindeutiger <see langword="String" />-Ausdruck, der eine Schlüsselzeichenfolge angibt, die anstelle eines Positionsindex verwendet werden kann, um auf dieses neue Element in der Auflistung zuzugreifen.</param>
      <param name="Before" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the &lt;paramref name=&quot;Before&quot; /&gt; argument. If &lt;paramref name=&quot;Before&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. If &lt;paramref name=&quot;Before&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">Dies ist optional. Ein Ausdruck, der eine relative Position in der Auflistung angibt. Das hinzuzufügende Element wird in der Auflistung vor dem Element platziert, das vom <paramref name="Before" />-Argument angegeben wird. Wenn <paramref name="Before" /> ein numerischer Ausdruck ist, muss es sich dabei um eine Zahl zwischen 1 und dem Wert der <see cref="P:Microsoft.VisualBasic.Collection.Count" />-Eigenschaft der Auflistung handeln. Ist <paramref name="Before" /> ein <see langword="String" />-Ausdruck, muss dieser der Schlüsselzeichenfolge entsprechen, die angegeben wurde, als das Element, auf das verwiesen wird, zur Auflistung hinzugefügt wurde. Sie können nicht gleichzeitig <paramref name="Before" /> und <paramref name="After" /> festlegen.</param>
      <param name="After" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the &lt;paramref name=&quot;After&quot; /&gt; argument. If &lt;paramref name=&quot;After&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see langword=&quot;Count&quot; /&gt; property. If &lt;paramref name=&quot;After&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">Optional. Ein Ausdruck, der eine relative Position in der Auflistung angibt. Das hinzuzufügende Element wird in der Auflistung nach dem Element platziert, das vom <paramref name="After" />-Argument angegeben wird. Wenn <paramref name="After" /> ein numerischer Ausdruck ist, muss es sich dabei um eine Zahl zwischen 1 und dem Wert der <see langword="Count" />-Eigenschaft der Auflistung handeln. Ist <paramref name="After" /> ein <see langword="String" />-Ausdruck, muss dieser der Schlüsselzeichenfolge entsprechen, die angegeben wurde, als das Element, auf das verwiesen wird, zur Auflistung hinzugefügt wurde. Sie können nicht gleichzeitig <paramref name="Before" /> und <paramref name="After" /> festlegen.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary vsli:raw="Deletes all elements of a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object.">Löscht alle Elemente eines <see langword="Collection" />-Objekts in Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key.">Gibt einen Wert zurück, der angibt, ob ein <see langword="Collection" />-Objekt in Visual Basic ein Element mit einem bestimmten Schlüssel enthält.</summary>
      <param name="Key" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; expression that specifies the key for which to search the elements of the collection.">Erforderlich. Ein <see langword="String" />-Ausdruck, der den Schlüssel angibt, nach dem die Elemente der Auflistung durchsucht werden sollen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Visual Basic <see langword="Collection" />-Objekt ein Element mit einem bestimmten Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary vsli:raw="Gets the number of elements in a collection.">Ruft die Anzahl der Elemente in einer Auflistung ab.</summary>
      <returns vsli:raw="The number of elements in a collection.">Die Anzahl der Elemente in einer Auflistung.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Ruft ein bestimmtes Element eines <see langword="Collection" />-Objekts entweder nach Position oder nach Schlüssel ab.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">Ein numerischer Ausdruck, der die Position eines Elements der Auflistung angibt. <paramref name="Index" /> muss eine Zahl zwischen 1 und dem Wert der <see cref="P:Microsoft.VisualBasic.Collection.Count" />-Eigenschaft der Auflistung sein. Oder (B) Ein <see langword="Object" />-Ausdruck, der die Position oder Schlüsselzeichenfolge eines Elements der Auflistung angibt.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Ein bestimmtes Element eines <see langword="Collection" /> -Objekts entweder anhand der Position oder anhand des Schlüssels.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Ruft ein bestimmtes Element eines <see langword="Collection" />-Objekts entweder nach Position oder nach Schlüssel ab.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">Ein numerischer Ausdruck, der die Position eines Elements der Auflistung angibt. <paramref name="Index" /> muss eine Zahl zwischen 1 und dem Wert der <see cref="P:Microsoft.VisualBasic.Collection.Count" />-Eigenschaft der Auflistung sein. Oder (B) Ein <see langword="Object" />-Ausdruck, der die Position oder Schlüsselzeichenfolge eines Elements der Auflistung angibt.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Ein bestimmtes Element eines <see langword="Collection" /> -Objekts entweder anhand der Position oder anhand des Schlüssels.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Ruft ein bestimmtes Element eines <see langword="Collection" />-Objekts entweder nach Position oder nach Schlüssel ab.</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">Ein eindeutiger <see langword="String" />-Ausdruck, der eine Schlüsselzeichenfolge angibt, die anstelle eines Positionsindex verwendet werden kann, um auf ein Element der Auflistung zuzugreifen. <paramref name="Key" /> muss dem <paramref name="Key" />-Argument entsprechen, das beim Hinzufügen des Elements zur Auflistung angegeben wurde.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Ein bestimmtes Element eines <see langword="Collection" /> -Objekts entweder anhand der Position oder anhand des Schlüssels.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">Entfernt ein Element aus einem <see langword="Collection" />-Objekt.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property.">Ein numerischer Ausdruck, der die Position eines Elements der Auflistung angibt. <paramref name="Index" /> muss eine Zahl zwischen 1 und dem Wert der <see cref="P:Microsoft.VisualBasic.Collection.Count" />-Eigenschaft der Auflistung sein.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">Entfernt ein Element aus einem <see langword="Collection" />-Objekt.</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">Ein eindeutiger <see langword="String" />-Ausdruck, der eine Schlüsselzeichenfolge angibt, die anstelle eines Positionsindex verwendet werden kann, um auf ein Element der Auflistung zuzugreifen. <paramref name="Key" /> muss dem <paramref name="Key" />-Argument entsprechen, das beim Hinzufügen des Elements zur Auflistung angegeben wurde.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;ComClassAttribute&quot; /&gt; attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.">Das <see langword="ComClassAttribute" />-Attribut weist den Compiler an, Metadaten hinzuzufügen, die es ermöglichen, dass eine Klasse als COM-Objekt verfügbar gemacht wird.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Initialisiert den Wert der <see langword="ClassID" />-Eigenschaft, mit der eine Klasse eindeutig identifiziert wird.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Initialisiert den Wert der <see langword="ClassID" />-Eigenschaft, mit der eine Klasse eindeutig identifiziert wird.</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">Initialisiert den Wert der <see langword="InterfaceID" />-Eigenschaft, mit der eine Schnittstelle eindeutig identifiziert wird.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Initialisiert den Wert der <see langword="ClassID" />-Eigenschaft, mit der eine Klasse eindeutig identifiziert wird.</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">Initialisiert den Wert der <see langword="InterfaceID" />-Eigenschaft, mit der eine Schnittstelle eindeutig identifiziert wird.</param>
      <param name="_EventId" vsli:raw="Initializes the value of the &lt;see langword=&quot;EventID&quot; /&gt; property that is used to uniquely identify an event.">Initialisiert den Wert der <see langword="EventID" />-Eigenschaft, mit der ein Ereignis eindeutig identifiziert wird.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary vsli:raw="Gets a class ID used to uniquely identify a class.">Ruft eine Klassen-ID ab, mit der eine Klasse eindeutig identifiziert wird.</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.">Schreibgeschützt. Eine Zeichenfolge, mit der der Compiler beim Erstellen eines COM-Objekts eindeutig die Klasse identifizieren kann.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary vsli:raw="Gets an event ID used to uniquely identify an event.">Ruft eine Ereignis-ID ab, mit der ein Ereignis eindeutig identifiziert wird.</summary>
      <returns vsli:raw="Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.">Schreibgeschützt. Eine Zeichenfolge, mit der der Compiler beim Erstellen eines COM-Objekts eindeutig ein Ereignis für die Klasse identifizieren kann.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary vsli:raw="Gets an interface ID used to uniquely identify an interface.">Ruft eine Schnittstellen-ID ab, mit der eine Schnittstelle eindeutig identifiziert wird.</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.">Schreibgeschützt. Eine Zeichenfolge, mit der der Compiler beim Erstellen eines COM-Objekts eindeutig eine Schnittstelle für die Klasse identifizieren kann.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary vsli:raw="Indicates that the COM interface name shadows another member of the class or base class.">Gibt an, dass der COM-Schnittstellenname ein Shadowing für einen anderen Member der Klasse oder der Basisklasse ausführt.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates that the COM interface name shadows another member of the class or base class.">Ein <see langword="Boolean" />-Wert, der angibt, dass der COM-Schnittstellenname ein Shadowing für einen anderen Member der Klasse oder der Basisklasse ausführt.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary vsli:raw="Indicates how to compare strings when calling comparison functions.">Gibt in Aufrufen von Vergleichsfunktionen an, wie Zeichenfolgen miteinander verglichen werden sollen.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary vsli:raw="Performs a binary comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBinaryCompare&quot; /&gt;.">Führt einen binären Vergleich durch. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbBinaryCompare" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary vsli:raw="Performs a textual comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTextCompare&quot; /&gt;.">Führt einen Textvergleich durch. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbTextCompare" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Boolean" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Boolean" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Boolean" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Boolean" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Boolean" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Boolean" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Byte" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Byte" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Byte" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Byte" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Byte" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Byte" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="CharArray" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="CharArray" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="CharArray" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="CharArray" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="CharArray" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="CharArray" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Char" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Char" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Char" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Char" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Char" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Char" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary vsli:raw="Provides methods that perform various type conversions.">Enthält Methoden, die verschiedene Typkonvertierungen ausführen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Konvertiert ein Objekt in den angegebenen Typ.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns vsli:raw="An object of the specified target type.">Ein Objekt vom angegebenen Zieltyp.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Konvertiert ein Objekt in den angegebenen Typ.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns vsli:raw="An object of the specified target type.">Ein Objekt vom angegebenen Zieltyp.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a string, given a byte count.">Konvertiert einen <see cref="T:System.Char" />-Wert in eine Zeichenfolge, wobei eine Byteanzahl angegeben wird.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Char" />-Wert.</param>
      <param name="Count" vsli:raw="The byte count of the &lt;see langword=&quot;Char&quot; /&gt; value.">Die Byteanzahl des <see langword="Char" />-Werts.</param>
      <returns vsli:raw="The string representation of the specified value.">Die Zeichenfolgenentsprechung des angegebenen Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">Konvertiert ein <see cref="T:System.Char" />-Array in eine Zeichenfolge.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">Das zu konvertierende <see langword="Char" />-Array.</param>
      <returns vsli:raw="The string representation of the specified array.">Die Zeichenfolgenentsprechung des angegebenen Arrays.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Converts a subset of a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">Konvertiert eine Teilmenge eines <see cref="T:System.Char" />-Arrays in eine Zeichenfolge.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">Das zu konvertierende <see langword="Char" />-Array.</param>
      <param name="StartIndex" vsli:raw="Zero-based index of the start position.">Nullbasierter Index der Anfangsposition.</param>
      <param name="Length" vsli:raw="Length of the subset in bytes.">Länge der Teilmenge in Bytes.</param>
      <returns vsli:raw="The string representation of the specified array from the start position to the specified length.">Die Zeichenfolgenentsprechung des angegebenen Arrays von der Anfangsposition bis zur angegebenen Länge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.Boolean" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the object is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">Ein <see langword="Boolean" />-Wert. Gibt <see langword="False" /> zurück, wenn das Objekt NULL ist, andernfalls <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see cref="T:System.Boolean" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the string is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">Ein <see langword="Boolean" />-Wert. Gibt <see langword="False" /> zurück, wenn die Zeichenfolge NULL ist, andernfalls <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.Byte" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the object.">Der <see langword="Byte" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see cref="T:System.Byte" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the string.">Der <see langword="Byte" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.Char" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the object.">Der <see langword="Char" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see cref="T:System.Char" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the string.">Der <see langword="Char" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary vsli:raw="Converts an object to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Konvertiert ein Objekt in ein eindimensionales <see cref="T:System.Char" />-Array.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">Ein eindimensionales <see langword="Char" />-Array.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary vsli:raw="Converts a string to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Konvertiert eine Zeichenfolge in ein eindimensionales <see cref="T:System.Char" />-Array.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">Ein eindimensionales <see langword="Char" />-Array.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.DateTime" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the object.">Der <see langword="DateTime" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see cref="T:System.DateTime" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the string.">Der <see langword="DateTime" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Konvertiert einen <see cref="T:System.Boolean" />-Wert in einen <see cref="T:System.Decimal" />-Wert.</summary>
      <param name="Value" vsli:raw="A Boolean value to convert.">Ein zu konvertierender boolescher Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the Boolean value.">Der <see langword="Decimal" />-Wert des booleschen Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.Decimal" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the object.">Der <see langword="Decimal" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see cref="T:System.Decimal" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the string.">Der <see langword="Decimal" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.Double" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the object.">Der <see langword="Double" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see cref="T:System.Double" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the string.">Der <see langword="Double" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary vsli:raw="Converts an object to a generic type &lt;paramref name=&quot;T&quot; /&gt;.">Konvertiert ein Objekt in einen generischen Typ <paramref name="T" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <typeparam name="T" vsli:raw="The type to convert &lt;paramref name=&quot;Value&quot; /&gt; to.">Der Typ, in den <paramref name="Value" /> konvertiert werden soll.</typeparam>
      <returns vsli:raw="A structure or object of generic type &lt;paramref name=&quot;T&quot; /&gt;.">Eine Struktur oder ein Objekt des generischen Typs <paramref name="T" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary vsli:raw="Converts an object to an integer value.">Konvertiert ein Objekt in einen ganzzahligen Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the object.">Der <see langword="int" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary vsli:raw="Converts a string to an integer value.">Konvertiert eine Zeichenfolge in einen ganzzahligen Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the string.">Der <see langword="int" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Long&quot; /&gt; value.">Konvertiert ein Objekt in einen <see langword="Long" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the object.">Der <see langword="Long" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Long&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see langword="Long" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the string.">Der <see langword="Long" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary vsli:raw="Converts an object to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.SByte" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the object.">Der <see langword="SByte" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see cref="T:System.SByte" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the string.">Der <see langword="SByte" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Short&quot; /&gt; value.">Konvertiert ein Objekt in einen <see langword="Short" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the object.">Der <see langword="Short" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Short&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see langword="Short" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the string.">Der <see langword="Short" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.Single" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the object.">Der <see langword="Single" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Konvertiert einen <see cref="T:System.String" /> in einen <see cref="T:System.Single" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the string.">Der <see langword="Single" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert einen <see cref="T:System.Boolean" />-Wert in einen <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Boolean" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Boolean&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Boolean" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert einen <see cref="T:System.Byte" />-Wert in einen <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Byte" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Byte&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Byte" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Konvertiert einen <see cref="T:System.Char" />-Wert in einen <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Char" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Char&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Char" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen <see cref="T:System.DateTime" />-Wert in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value to convert.">Der zu konvertierende <see langword="DateTime" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;DateTime&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="DateTime" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen <see cref="T:System.Decimal" />-Wert in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Decimal" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Decimal" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Konvertiert einen <see cref="T:System.Decimal" />-Wert in einen <see cref="T:System.String" />-Wert und verwendet das angegebene Zahlenformat.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; value to convert.">Der zu konvertierende <see langword="decimal" />-Wert.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Das nach <see cref="T:System.Globalization.NumberFormatInfo" /> zu verwendende Zahlenformat.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Decimal" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen <see cref="T:System.Double" />-Wert in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Double" />-Wert.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Double" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Konvertiert einen <see cref="T:System.Double" />-Wert in einen <see cref="T:System.String" />-Wert und verwendet das angegebene Zahlenformat.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Double" />-Wert.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Das nach <see cref="T:System.Globalization.NumberFormatInfo" /> zu verwendende Zahlenformat.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Double" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Short&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen <see langword="Short" />-Wert in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Short" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Short&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Short" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary vsli:raw="Converts an integer value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen ganzzahligen Wert in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value to convert.">Der zu konvertierende <see langword="int" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;int&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="int" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Long&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen <see langword="Long" />-Wert in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Long" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Long&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Long" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert ein Objekt in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the object.">Die <see langword="String" />-Entsprechung des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value (a single-precision floating point number) to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen <see cref="T:System.Single" />-Wert (Gleitkommazahl mit einfacher Genauigkeit) in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Single" />-Wert.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Single" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Konvertiert einen <see cref="T:System.Single" />-Wert in einen <see cref="T:System.String" />-Wert und verwendet das angegebene Zahlenformat.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Single" />-Wert.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Das nach <see cref="T:System.Globalization.NumberFormatInfo" /> zu verwendende Zahlenformat.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Single" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;uint&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen <see langword="uint" />-Wert in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Uint" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Uint&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Uint" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Ulong&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Konvertiert einen <see langword="Ulong" />-Wert in einen <see cref="T:System.String" />-Wert.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value to convert.">Der zu konvertierende <see langword="Ulong" />-Wert.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Ulong&quot; /&gt; value.">Die <see langword="String" />-Entsprechung des <see langword="Ulong" />-Werts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Uint&quot; /&gt; value.">Konvertiert ein Objekt in einen <see langword="Uint" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the object.">Der <see langword="Uint" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Uint&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see langword="Uint" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the string.">Der <see langword="Uint" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">Konvertiert ein Objekt in einen <see langword="Ulong" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the object.">Der <see langword="Ulong" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see langword="Ulong" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the string.">Der <see langword="Ulong" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">Konvertiert ein Objekt in einen <see langword="Ushort" />-Wert.</summary>
      <param name="Value" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the object.">Der <see langword="Ushort" />-Wert des Objekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">Konvertiert eine Zeichenfolge in einen <see langword="Ushort" />-Wert.</summary>
      <param name="Value" vsli:raw="The string to convert.">Die zu konvertierende Zeichenfolge.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the string.">Der <see langword="Ushort" />-Wert der Zeichenfolge.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Date" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Date" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Date" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Date" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Date" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Date" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string and culture information.">Gibt einen <see langword="Date" />-Wert zurück, der der angegebenen Zeichenfolge entspricht, sowie Informationen zur Kultur.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Date" />-Wert konvertiert werden soll.</param>
      <param name="culture" vsli:raw="Required. A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object that defines how date values are formatted and displayed, depending on the culture.">Erforderlich. Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das definiert, wie Datumswerte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Date" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt; value.">Gibt einen <see langword="Decimal" />-Wert zurück, der dem angegebenen <see langword="Boolean" />-Wert entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; value to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Erforderlich. <see langword="Boolean" />, der in einen <see langword="Decimal" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Decimal" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Decimal" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Decimal" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Decimal" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object and number format information.">Gibt einen <see langword="Decimal" />-Wert zurück, der dem angegebenen Objekt entspricht, sowie Informationen zum Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Decimal" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Decimal" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Decimal" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Decimal" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Decimal" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">Gibt einen <see langword="Decimal" />-Wert zurück, der der angegebenen Zeichenfolge entspricht, sowie Informationen zum Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Decimal" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Decimal" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">Gibt einen <see langword="Decimal" />-Wert zurück, der der angegebenen Zeichenfolge entspricht, sowie Informationen zum Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Decimal" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Decimal" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary vsli:raw="When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.">Beim Anwenden auf eine Klasse ruft der Compiler implizit eine Methode zum Initialisieren der Komponente aus dem standardmäßigen synthetischen Standardkonstruktor auf.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute&quot; /&gt; attribute.">Initialisiert eine neue Instanz des <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />-Attributs.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Double" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Double" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Double" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Double" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Double" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Double" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Double" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Double" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Double" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">Gibt einen <see langword="Double" />-Wert zurück, der der angegebenen Zeichenfolge entspricht, sowie Informationen zum Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Double" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Double" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Double" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Double" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Double" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">Gibt einen <see langword="Double" />-Wert zurück, der der angegebenen Zeichenfolge entspricht, sowie Informationen zum Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Double" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Double" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary vsli:raw="The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.">Der Visual Basic-Compiler verwendet diese Klasse während der statischen lokalen Initialisierung. Sie ist nicht für den direkten Aufruf aus Code vorgesehen. Eine Ausnahme dieses Typs wird ausgelöst, wenn eine statische lokale Variable nicht initialisiert werden kann.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />-Klasse.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Integer" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Integer" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Integer" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Integer" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Integer" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Integer" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary vsli:raw="This class has been deprecated since Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Performs a late-bound call to an object method.">Führt einen Aufruf einer Objektmethode mit später Bindung aus.</summary>
      <param name="o" vsli:raw="The object to call a method on.">Das Objekt, für das eine Methode aufgerufen werden soll.</param>
      <param name="objType" vsli:raw="The type of the object.">Der Typ des Objekts.</param>
      <param name="name" vsli:raw="The method name of &lt;paramref name=&quot;o&quot; /&gt; to call.">Der Methodenname des aufzurufenden <paramref name="o" />.</param>
      <param name="args" vsli:raw="An array of parameter values to pass to the method.">Ein Array von Parameterwerten, die an die Methode übergeben werden sollen.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Ein Array mit den Namen der Parameter, an die die Werte im <paramref name="args" />-Array übergeben werden.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">Ein Array von <see langword="Boolean" />-Werten, wobei <see langword="True" /> angibt, dass der zugeordnete Parameter als <see langword="ByRef" /> übergeben wird.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Returns a late-bound value from an object.">Gibt einen Wert mit später Bindung aus einem Objekt zurück.</summary>
      <param name="o" vsli:raw="The object to return the value from.">Das Objekt, aus dem der Wert zurückgegeben werden soll.</param>
      <param name="objType" vsli:raw="The type of the object.">Der Typ des Objekts.</param>
      <param name="name" vsli:raw="The member name of &lt;paramref name=&quot;o&quot; /&gt; to retrieve a value from.">Der Membername von <paramref name="o" />, aus dem ein Wert abgerufen werden soll.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Ein Array von einem oder mehreren Indexwerten, die die Position in <paramref name="o" /> angeben, wenn <paramref name="o" /> ein eindimensionales oder mehrdimensionales Array ist, oder Argumentwerte, die an das Objekt <paramref name="o" /> übergeben werden sollen.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Ein Array mit den Namen der Parameter, an die die Werte im <paramref name="args" />-Array übergeben werden.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">Ein Array von <see langword="Boolean" />-Werten, wobei <see langword="True" /> angibt, dass der zugeordnete Parameter als <see langword="ByRef" /> übergeben wird.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">Wenn <paramref name="o" /> ein Array ist, der Wert aus <paramref name="o" /> an der von <paramref name="args" /> angegebenen Position. Wenn <paramref name="o" /> ein Objekt ist, der Rückgabewert von <paramref name="o" />, dessen Aufruf mit den benannten Parametern in <paramref name="paramnames" /> und ihren zugeordneten Werten in <paramref name="args" /> erfolgt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Returns a late-bound value from an object, using the specified index or parameters.">Gibt einen Wert mit später Bindung aus einem Objekt zurück, wobei der angegebene Index bzw. die angegebenen Parameter verwendet werden.</summary>
      <param name="o" vsli:raw="The object to return the value from.">Das Objekt, aus dem der Wert zurückgegeben werden soll.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Ein Array von einem oder mehreren Indexwerten, die die Position in <paramref name="o" /> angeben, wenn <paramref name="o" /> ein eindimensionales oder mehrdimensionales Array ist, oder Argumentwerte, die an das Objekt <paramref name="o" /> übergeben werden sollen.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Ein Array mit den Namen der Parameter, an die die Werte im <paramref name="args" />-Array übergeben werden.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">Wenn <paramref name="o" /> ein Array ist, der Wert aus <paramref name="o" /> an der von <paramref name="args" /> angegebenen Position. Wenn <paramref name="o" /> ein Objekt ist, der Rückgabewert von <paramref name="o" />, dessen Aufruf mit den benannten Parametern in <paramref name="paramnames" /> und ihren zugeordneten Werten in <paramref name="args" /> erfolgt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">Legt einen Wert mit später Bindung für ein Objekt fest, wobei die angegebenen Parameter verwendet werden.</summary>
      <param name="o" vsli:raw="The object to set the value for.">Das Objekt, für das der Wert festgelegt werden soll.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Ein Array von einem oder mehreren Indexwerten, die die Position in <paramref name="o" /> angeben, wenn <paramref name="o" /> ein eindimensionales oder mehrdimensionales Array ist, oder Argumentwerte, die an das Objekt <paramref name="o" /> übergeben werden sollen.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Ein Array mit den Namen der Parameter, an die die Werte im <paramref name="args" />-Array übergeben werden.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">Legt einen Wert mit später Bindung für ein Objekt fest, wobei die angegebenen Parameter verwendet werden.</summary>
      <param name="o" vsli:raw="The object to set the value for.">Das Objekt, für das der Wert festgelegt werden soll.</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Ein Array von einem oder mehreren Parameterwerten, die an das Objekt <paramref name="o" /> übergeben werden sollen.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Ein Array mit den Namen der Parameter, an die die Werte im <paramref name="args" />-Array übergeben werden.</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">
        <see langword="True" />, um die Ausnahme zu unterdrücken, die ausgelöst wird, wenn der festgelegte Member nicht gefunden wird.</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <see langword="True" />, um <paramref name="o" /> als Ergebnis eines Ausdrucks mit später Bindung anzugeben.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">Legt einen Wert mit später Bindung für einen Member eines Objekts fest, wobei die angegebenen Parameter verwendet werden.</summary>
      <param name="o" vsli:raw="The object to set the member value for.">Das Objekt, für das der Memberwert festgelegt werden soll.</param>
      <param name="objType" vsli:raw="The type of the object.">Der Typ des Objekts.</param>
      <param name="name" vsli:raw="The member name to set.">Der festzulegende Membername.</param>
      <param name="args" vsli:raw="An array of one or parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">Ein Array von einem oder mehreren Parameterwerten, die an den Member von <paramref name="o" /> übergeben werden sollen.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Ein Array mit den Namen der Parameter, an die die Werte im <paramref name="args" />-Array übergeben werden.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">Legt einen Wert mit später Bindung für einen Member eines Objekts fest, wobei die angegebenen Parameter verwendet werden.</summary>
      <param name="o" vsli:raw="The object to set the member value for.">Das Objekt, für das der Memberwert festgelegt werden soll.</param>
      <param name="objType" vsli:raw="The type of the object.">Der Typ des Objekts.</param>
      <param name="name" vsli:raw="The member name to set.">Der festzulegende Membername.</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">Ein Array von einem oder mehreren Parameterwerten, die an den Member von <paramref name="o" /> übergeben werden sollen.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Ein Array mit den Namen der Parameter, an die die Werte im <paramref name="args" />-Array übergeben werden.</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">
        <see langword="True" />, um die Ausnahme zu unterdrücken, die ausgelöst wird, wenn der festgelegte Member nicht gefunden wird.</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <see langword="True" />, um <paramref name="o" /> als Ergebnis eines Ausdrucks mit später Bindung anzugeben.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator. It is not meant to be called directly from your code.">Diese Klasse stellt Hilfsmethoden bereit, die der Visual Basic-Compiler verwendet, um die Arbeit für den Like-Operator auszuführen. Sie ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Objekte aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Source" vsli:raw="The string to compare.">Die zu vergleichende Zeichenfolge.</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">Der Zeichenfolge, mit der <paramref name="Source" /> verglichen wird.</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">Eine <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Enumeration, die angibt, ob ein Textvergleich durchgeführt werden soll. Wenn <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" /> festgelegt ist, verwendet diese Methode den Textvergleich; wenn <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" /> festgelegt ist, verwendet die Methode den binären Vergleich.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn die Zeichenfolgen übereinstimmen; andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Zeichenfolgen aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Source" vsli:raw="The string to compare.">Die zu vergleichende Zeichenfolge.</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">Der Zeichenfolge, mit der <paramref name="Source" /> verglichen wird.</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">Eine <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Enumeration, die angibt, ob ein Textvergleich durchgeführt werden soll. Wenn <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" /> festgelegt ist, verwendet diese Methode den Textvergleich; wenn <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" /> festgelegt ist, verwendet die Methode den binären Vergleich.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn die Zeichenfolgen übereinstimmen; andernfalls <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Long" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Long" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Long" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Long" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Long" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Long" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.">Diese Klasse stellt Hilfsmethoden bereit, die der Visual Basic-Compiler für Aufrufe mit später Bindung verwendet. Sie ist nicht für den direkten Aufruf aus Code vorgesehen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">Führt eine spät gebundene Methode oder einen Funktionsaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">Ein <see langword="Boolean" />-Wert, der angibt, ob der Rückgabewert ignoriert werden kann.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Führt einen Get-Vorgang einer spät gebundenen Eigenschaft oder einen Feldzugriffsaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, mit dem ermittelt wird, ob der Set-Vorgang funktioniert. Legen Sie <see langword="True" /> fest, wenn Sie glauben, dass in der Eigenschaft oder im Feld ein Zwischenwert festgelegt wurde, andernfalls <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, der angibt, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Legen Sie <see langword="True" /> fest, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Dadurch können Sie eine Laufzeitausnahme für späte Zuweisungen zu Feldern der Werttypen von <see langword="RValues" /> generieren. Andernfalls legen Sie <see langword="False" /> fest.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">Führt einen spät gebundenen Abruf der Standardeigenschaft oder des Felds oder einen Aufruf der Standardmethode oder Funktion aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method. If &lt;paramref name=&quot;Instance&quot; /&gt; is of type &lt;see cref=&quot;T:System.Dynamic.IDynamicMetaObjectProvider&quot; /&gt;, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht. Wenn <paramref name="Instance" /> den Typ <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" /> aufweist, binden Sie mit der Dynamic Language Runtime. Führen Sie andernfalls die standardmäßige späte Bindung aus.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Ein <see langword="Boolean" />-Wert, der angibt, ob beim Auftreten eines Fehlers Ausnahmen ausgelöst werden sollen. Auf <see langword="True" /> festlegen, wenn Ausnahmen ausgelöst werden sollen. Auf <see langword="False" /> festlegen, wenn bei Auftreten eines Fehlers <see langword="Nothing" /> zurückgegeben werden soll.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">Führt einen spät gebundenen Abruf der Standardeigenschaft oder des Felds oder einen Aufruf der Standardmethode oder Funktion aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Ein <see langword="Boolean" />-Wert, der angibt, ob beim Auftreten eines Fehlers Ausnahmen ausgelöst werden sollen. Auf <see langword="True" /> festlegen, wenn Ausnahmen ausgelöst werden sollen. Auf <see langword="False" /> festlegen, wenn bei Auftreten eines Fehlers <see langword="Nothing" /> zurückgegeben werden soll.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, mit dem ermittelt wird, ob der Set-Vorgang funktioniert. Legen Sie <see langword="True" /> fest, wenn Sie glauben, dass in der Eigenschaft oder im Feld ein Zwischenwert festgelegt wurde, andernfalls <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, der angibt, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Legen Sie <see langword="True" /> fest, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Dadurch können Sie eine Laufzeitausnahme für späte Zuweisungen zu Feldern der Werttypen von <see langword="RValues" /> generieren. Andernfalls legen Sie <see langword="False" /> fest.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">Führt eine spät gebundene Methode oder einen Funktionsaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Type" vsli:raw="The type of the call object.">Der Typ des Aufrufobjekts.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Ein Array von Argumenttypen. Es wird nur für generische Aufrufe zum Übergeben von Argumenttypen verwendet.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">Ein Array von <see langword="Boolean" />-Werten, die bei der späten Bindung verwendet werden, um die Aufrufsite darüber zu informieren, welche Argumente mit <see langword="ByRef" />-Parametern übereinstimmen. Jeder <see langword="True" />-Wert gibt an, dass die Argumente übereingestimmt haben und herauskopiert werden sollen, nachdem der Aufruf von <see langword="LateCall" /> abgeschlossen ist.</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">Ein <see langword="Boolean" />-Wert, der angibt, ob der Rückgabewert ignoriert werden kann.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.">Führt einen spät gebundenen Aufruf der Standardmethode oder Funktion aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Ein <see langword="Boolean" />-Wert, der angibt, ob beim Auftreten eines Fehlers Ausnahmen ausgelöst werden sollen. Auf <see langword="True" /> festlegen, wenn Ausnahmen ausgelöst werden sollen. Auf <see langword="False" /> festlegen, wenn bei Auftreten eines Fehlers <see langword="Nothing" /> zurückgegeben werden soll.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Führt einen Get-Vorgang einer spät gebundenen Eigenschaft oder einen Feldzugriffsaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Type" vsli:raw="The type of the call object.">Der Typ des Aufrufobjekts.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Ein Array von Argumenttypen. Es wird nur für generische Aufrufe zum Übergeben von Argumenttypen verwendet.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">Ein Array von <see langword="Boolean" />-Werten, die bei der späten Bindung verwendet werden, um die Aufrufsite darüber zu informieren, welche Argumente mit <see langword="ByRef" />-Parametern übereinstimmen. Jeder <see langword="True" />-Wert gibt an, dass die Argumente übereingestimmt haben und herauskopiert werden sollen, nachdem der Aufruf von <see langword="LateCall" /> abgeschlossen ist.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.">Führt einen spät gebundenen Abruf der Standardeigenschaft oder des Felds aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Ein <see langword="Boolean" />-Wert, der angibt, ob beim Auftreten eines Fehlers Ausnahmen ausgelöst werden sollen. Auf <see langword="True" /> festlegen, wenn Ausnahmen ausgelöst werden sollen. Auf <see langword="False" /> festlegen, wenn bei Auftreten eines Fehlers <see langword="Nothing" /> zurückgegeben werden soll.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Führt einen Get-Vorgang einer spät gebundenen Eigenschaft oder einen Feldzugriffsaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <returns vsli:raw="An instance of the call object.">Eine Instanz des Aufrufobjekts.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, mit dem ermittelt wird, ob der Set-Vorgang funktioniert. Legen Sie <see langword="True" /> fest, wenn Sie glauben, dass in der Eigenschaft oder im Feld ein Zwischenwert festgelegt wurde, andernfalls <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, der angibt, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Legen Sie <see langword="True" /> fest, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Dadurch können Sie eine Laufzeitausnahme für späte Zuweisungen zu Feldern der Werttypen von <see langword="RValues" /> generieren. Andernfalls legen Sie <see langword="False" /> fest.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Type" vsli:raw="The type of the call object.">Der Typ des Aufrufobjekts.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Ein Array von Argumenttypen. Es wird nur für generische Aufrufe zum Übergeben von Argumenttypen verwendet.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Type" vsli:raw="The type of the call object.">Der Typ des Aufrufobjekts.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Ein Array von Argumenttypen. Es wird nur für generische Aufrufe zum Übergeben von Argumenttypen verwendet.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, mit dem ermittelt wird, ob der Set-Vorgang funktioniert. Legen Sie <see langword="True" /> fest, wenn Sie glauben, dass in der Eigenschaft oder im Feld ein Zwischenwert festgelegt wurde, andernfalls <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, der angibt, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Legen Sie <see langword="True" /> fest, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Dadurch können Sie eine Laufzeitausnahme für späte Zuweisungen zu Feldern der Werttypen von <see langword="RValues" /> generieren. Andernfalls legen Sie <see langword="False" /> fest.</param>
      <param name="CallType" vsli:raw="An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of CallType can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;. Only &lt;see langword=&quot;Set&quot; /&gt; is used.">Ein Enumerationsmember vom Typ <see cref="T:Microsoft.VisualBasic.CallType" />, der den Typ der aufgerufenen Prozedur darstellt. Der Wert von CallType kann <see langword="Method" />, <see langword="Get" /> oder <see langword="Set" /> sein. Es wird nur <see langword="Set" /> verwendet.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Führt einen Set-Vorgang einer spät gebundenen Eigenschaft oder einen Feldschreibaufruf aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Eine Instanz des Aufrufobjekts, die die Eigenschaft oder die Methode verfügbar macht.</param>
      <param name="Type" vsli:raw="The type of the call object.">Der Typ des Aufrufobjekts.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Der Name der Eigenschaft oder der Methode für das Aufrufobjekt.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Ein Array mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Ein Array von Argumentnamen.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Ein Array von Argumenttypen. Es wird nur für generische Aufrufe zum Übergeben von Argumenttypen verwendet.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, mit dem ermittelt wird, ob der Set-Vorgang funktioniert. Legen Sie <see langword="True" /> fest, wenn Sie glauben, dass in der Eigenschaft oder im Feld ein Zwischenwert festgelegt wurde, andernfalls <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, der angibt, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Legen Sie <see langword="True" /> fest, wenn der Basisverweis des späten Verweises ein <see langword="RValue" /> ist. Dadurch können Sie eine Laufzeitausnahme für späte Zuweisungen zu Feldern der Werttypen von <see langword="RValues" /> generieren. Andernfalls legen Sie <see langword="False" /> fest.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary vsli:raw="The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.">Der Visual Basic-Compiler verwendet diese Klasse für die Objektablaufsteuerung. Sie ist nicht für den direkten Aufruf aus Code vorgesehen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary vsli:raw="Checks for a synchronization lock on the specified type.">Prüft auf eine Synchronisierungssperre für den angegebenen Typ.</summary>
      <param name="Expression" vsli:raw="The data type for which to check for synchronization lock.">Der Datentyp, der auf eine Synchronisierungssperre geprüft wird.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary vsli:raw="Provides services to the Visual Basic compiler for compiling &lt;see langword=&quot;For...Next&quot; /&gt; loops.">Stellt für den Visual Basic-Compiler Dienste zum Kompilieren von <see langword="For...Next" />-Schleifen bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary vsli:raw="Initializes a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">Initialisiert eine <see langword="For...Next" />-Schleife.</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">Die Zählervariable für die Schleife.</param>
      <param name="Start" vsli:raw="The initial value of the loop counter.">Der Anfangswert des Schleifenzählers.</param>
      <param name="Limit" vsli:raw="The value of the &lt;see langword=&quot;To&quot; /&gt; option.">Der Wert der <see langword="To" />-Option.</param>
      <param name="StepValue" vsli:raw="The value of the &lt;see langword=&quot;Step&quot; /&gt; option.">Der Wert der <see langword="Step" />-Option.</param>
      <param name="LoopForResult" vsli:raw="An object that contains verified values for loop values.">Ein Objekt, das überprüfte Werte für Schleifenwerte enthält.</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">Der Zählerwert für die nächste Schleifeniteration.</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="False" />, wenn der Schleifendurchlauf beendet wurde, andernfalls <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Führt eine Überprüfung auf gültige Werte für den Schleifenzähler sowie den <see langword="Step" />-Wert und den <see langword="To" />-Wert aus.</summary>
      <param name="count" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Erforderlich. Ein <see langword="Decimal" />-Wert, der den Anfangswert darstellt, der für die Zählervariable der Schleife übergeben wird.</param>
      <param name="limit" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Erforderlich. Ein <see langword="Decimal" />-Wert, der den Wert darstellt, der mit dem <see langword="To" />-Schlüsselwort übergeben wird.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Erforderlich. Ein <see langword="Decimal" />-Wert, der den Wert darstellt, der mit dem <see langword="Step" />-Schlüsselwort übergeben wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt; or &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="StepValue" /> größer als 0 (null) und <paramref name="count" /> kleiner als oder gleich <paramref name="limit" /> ist oder wenn <paramref name="StepValue" /> kleiner als oder gleich 0 (null) und <paramref name="count" /> größer als oder gleich <paramref name="limit" /> ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary vsli:raw="Increments a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">Inkrementiert eine <see langword="For...Next" />-Schleife.</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">Die Zählervariable für die Schleife.</param>
      <param name="LoopObj" vsli:raw="An object that contains verified values for loop values.">Ein Objekt, das überprüfte Werte für Schleifenwerte enthält.</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">Der Zählerwert für die nächste Schleifeniteration.</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="False" />, wenn der Schleifendurchlauf beendet wurde, andernfalls <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Führt eine Überprüfung auf gültige Werte für den Schleifenzähler sowie den <see langword="Step" />-Wert und den <see langword="To" />-Wert aus.</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Erforderlich. Ein <see langword="Single" />-Wert, der den Anfangswert darstellt, der für die Zählervariable der Schleife übergeben wird.</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Erforderlich. Ein <see langword="Single" />-Wert, der den Wert darstellt, der mit dem <see langword="To" />-Schlüsselwort übergeben wird.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Erforderlich. Ein <see langword="Single" />-Wert, der den Wert darstellt, der mit dem <see langword="Step" />-Schlüsselwort übergeben wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="StepValue" /> größer als 0 (null) und <paramref name="count" /> kleiner als oder gleich <paramref name="limit" /> ist oder wenn <paramref name="StepValue" /> kleiner als oder gleich 0 (null) und <paramref name="count" /> größer als oder gleich <paramref name="limit" /> ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Führt eine Überprüfung auf gültige Werte für den Schleifenzähler sowie den <see langword="Step" />-Wert und den <see langword="To" />-Wert aus.</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Erforderlich. Ein <see langword="Double" />-Wert, der den Anfangswert darstellt, der für die Zählervariable der Schleife übergeben wird.</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Erforderlich. Ein <see langword="Double" />-Wert, der den Wert darstellt, der mit dem <see langword="To" />-Schlüsselwort übergeben wird.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Erforderlich. Ein <see langword="Double" />-Wert, der den Wert darstellt, der mit dem <see langword="Step" />-Schlüsselwort übergeben wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="StepValue" /> größer als 0 (null) und <paramref name="count" /> kleiner als oder gleich <paramref name="limit" /> ist oder wenn <paramref name="StepValue" /> kleiner als oder gleich 0 (null) und <paramref name="count" /> größer als oder gleich <paramref name="limit" /> ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.ObjectType&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an addition (+) operation.">Führt einen Additionsvorgang (+) aus.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">Die Summe von <paramref name="o1" /> und <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">Führt eine bitweise <see langword="And" />-Operation aus.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="1 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 1; otherwise, 0.">1, wenn sowohl <paramref name="obj1" /> als auch <paramref name="obj2" /> 1 ergeben, andernfalls 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">Führt eine bitweise <see langword="Or" />-Operation aus.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="0 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 0; otherwise, 1.">0, wenn sowohl <paramref name="obj1" /> als auch <paramref name="obj2" /> 0 ergeben, andernfalls 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; operation.">Führt eine <see langword="Xor" />-Operation aus.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">Ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt. Weitere Informationen finden Sie unter Xor Operator.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a division (/) operation.">Führt einen Divisionsvorgang (/) aus.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, including any remainder.">Der volle Quotient, der sich aus der Division von <paramref name="o1" /> durch <paramref name="o2" /> ergibt, einschließlich des Rests.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary vsli:raw="Returns a boxed primitive value. This method is used to prevent copying structures multiple times.">Gibt einen geschachtelten primitiven Wert zurück. Mithilfe dieser Methode wird verhindert, dass Strukturen mehrmals kopiert werden.</summary>
      <param name="o" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <returns vsli:raw="The primitive value of &lt;paramref name=&quot;o&quot; /&gt; typed as object.">Der primitive Wert des als Objekt festgelegten <paramref name="o" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an integer division (\) operation.">Führt einen Divisionsvorgang (\) mit ganzen Zahlen aus.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, which discards any remainder and retains only the integer portion.">Der ganzzahlige Quotient, der sich aus der Division von <paramref name="o1" /> durch <paramref name="o2" /> ergibt. Es wird nur der ganzzahlige Teil beibehalten, und ein eventueller Rest wird verworfen.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Like&quot; /&gt; comparison.">Führt einen <see langword="Like" />-Vergleich aus.</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="vRight" vsli:raw="Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.">Erforderlich. Ein beliebiger Zeichenfolgenausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</param>
      <param name="CompareOption" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; value that specifies that the operation use either text or binary comparison.">Erforderlich. Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the string representation of the value in &lt;paramref name=&quot;vLeft&quot; /&gt; satisfies the pattern that is contained in &lt;paramref name=&quot;vRight&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt; are &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <see langword="True" />, wenn die Zeichenfolgendarstellung des Werts in <paramref name="vLeft" /> dem in <paramref name="vRight" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />. <see langword="True" />, wenn sowohl <paramref name="vLeft" /> als auch <paramref name="vRight" /> gleich <see langword="Nothing" /> sind.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a modulus (&lt;see langword=&quot;Mod&quot; /&gt;) operation.">Führt einen Modulo-Vorgang (<see langword="Mod" />) aus.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;o1&quot; /&gt; is divided by &lt;paramref name=&quot;o2&quot; /&gt;.">Der Rest aus der Division von <paramref name="o1" /> durch <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a multiplication (*) operation.">Führt einen Multiplikationsvorgang (*) aus.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">Das Produkt von <paramref name="o1" /> und <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary vsli:raw="Performs a unary minus (-) operation.">Führt den Vorgang „unäres Minus“ (–) aus.</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;obj&quot; /&gt;.">Der negative Wert von <paramref name="obj" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Not&quot; /&gt; operation.">Führt eine <see langword="Not" />-Operation aus.</summary>
      <param name="obj" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;obj&quot; /&gt; is 0; otherwise, 0.">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn <paramref name="obj" /> gleich <see langword="True" /> ist, andernfalls <see langword="True" />. Für bitweise Operationen: 1, wenn <paramref name="obj" /> gleich 0 ist, andernfalls 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two objects.">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Objekte aus.</summary>
      <param name="o1" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="o2" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is less than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is equal to &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is greater than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Wert 
  Bedingung 
  -1 
 
                <paramref name="o1" /> ist kleiner als <paramref name="o2" />.  

  0 
 
                <paramref name="o1" /> ist gleich <paramref name="o2" />.  

  1 
 
                <paramref name="o1" /> ist größer als <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary vsli:raw="Performs a unary plus (+) operation.">Führt einen unären Additionsvorgang (+) aus.</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;obj&quot; /&gt;. (The sign of the &lt;paramref name=&quot;obj&quot; /&gt; is unchanged.)">Der Wert von <paramref name="obj" />. (Das Vorzeichen von <paramref name="obj" /> wird nicht geändert.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an exponent (^) operation.">Führt einen Exponentialvorgang (^) aus.</summary>
      <param name="obj1" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="obj2" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;obj1&quot; /&gt; raised to the power of &lt;paramref name=&quot;obj2&quot; /&gt;.">Das Ergebnis der Potenzierung von <paramref name="obj1" /> mit <paramref name="obj2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic left shift (&amp;lt;&amp;lt;) operation.">Führt eine arithmetische Verschiebung nach links (&lt;&lt;) aus.</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Erforderlich. Ein ganzzahliger numerischer Ausdruck. Das zu verschiebende Bitmuster. Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Erforderlich. Ein numerischer Ausdruck. Die Anzahl der Bits, um die das Bitmuster verschoben werden soll. Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">Ein ganzzahliger numerischer Wert. Das Ergebnis der Verschiebung des Bitmusters. Der Datentyp entspricht dem von <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic right shift (&amp;gt;&amp;gt;) operation.">Führt eine arithmetische Verschiebung nach rechts (&gt;&gt;) aus.</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Erforderlich. Ein ganzzahliger numerischer Ausdruck. Das zu verschiebende Bitmuster. Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Erforderlich. Ein numerischer Ausdruck. Die Anzahl der Bits, um die das Bitmuster verschoben werden soll. Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">Ein ganzzahliger numerischer Wert. Das Ergebnis der Verschiebung des Bitmusters. Der Datentyp entspricht dem von <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a string concatenation (&amp;amp;) operation.">Führt eine Zeichenfolgenverkettung (&amp;) aus.</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="vRight" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt;.">Eine Zeichenfolge, die die Verkettung von <paramref name="vLeft" /> und <paramref name="vRight" /> darstellt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a subtraction (-) operation.">Führt einen Subtraktionsvorgang (–) aus.</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">Die Differenz zwischen <paramref name="o1" /> und <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; comparison.">Führt einen <see langword="Xor" />-Vergleich aus.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">Ein <see langword="Boolean" />-Wert oder ein numerischer Wert. Bei einem <see langword="Boolean" />-Vergleich ist der Rückgabewert der logische Ausschluss (exklusive logische Disjunktion) aus zwei <see langword="Boolean" />-Werten. Bei bitweisen (numerischen) Vorgängen ist der Rückgabewert ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt. Weitere Informationen finden Sie unter Xor Operator.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary vsli:raw="Provides late-bound math operators, such as &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)&quot; /&gt;, which the Visual Basic compiler uses internally.">Stellt mathematische Operatoren mit später Bindung bereit, z. B. <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> und <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, die vom Visual Basic-Compiler intern verwendet werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic addition (+) operator.">Stellt den Visual Basic-Additionsoperator (+) dar.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Die Summe von <paramref name="Left" /> und <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;And&quot; /&gt; operator.">Stellt den <see langword="And" />-Operator in Visual Basic dar.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. For bitwise operations, 1 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 1; otherwise, 0.">Für <see langword="Boolean" />-Operationen: <see langword="True" />, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /><see langword="True" /> ergeben, andernfalls <see langword="False" />. Für bitweise Operationen: 1, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /> 1 ergeben, andernfalls 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic equal (=) operator.">Stellt den Visual Basic-Gleichheitsoperator (=) dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="Left" /> und <paramref name="Right" /> gleich sind, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than (&amp;gt;) operator.">Stellt den Visual Basic-größer-als (&gt;)-Operator dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="Left" /> größer als <paramref name="Right" /> ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Stellt den Visual Basic-größer-als-oder-gleich (&gt;=)-Operator dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="Left" /> größer oder gleich <paramref name="Right" /> ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than (&amp;lt;) operator.">Stellt den Visual Basic-kleiner-als (&lt;)-Operator dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="Left" /> kleiner als <paramref name="Right" /> ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than or equal-to (&amp;lt;=) operator.">Stellt den Visual Basic-kleiner-als-oder-gleich (&lt;=)-Operator dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="Left" /> kleiner oder gleich <paramref name="Right" /> ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Stellt den Visual Basic-Ungleichheitsoperator (&lt;&gt;) dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is not equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn <paramref name="Left" /> und <paramref name="Right" /> ungleich sind, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two strings.">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Zeichenfolgen aus.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Beliebiger <see langword="String" /> -Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Beliebiger <see langword="String" /> -Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is equal to &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Wert 
  Bedingung 
  -1 
 
                <paramref name="Left" /> ist kleiner als <paramref name="Right" />.  

  0 
 
                <paramref name="Left" /> ist gleich <paramref name="Right" />.  

  1 
 
                <paramref name="Left" /> ist größer als <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic concatenation (&amp;amp;) operator.">Stellt den Visual Basic-Verkettungsoperator (&amp;) dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Eine Zeichenfolge, die die Verkettung von <paramref name="Left" /> und <paramref name="Right" /> darstellt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic equals (=) operator.">Stellt den überladenen Visual Basic-Gleichheitsoperator (=) dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded equals operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Das Ergebnis des überladenen Gleichheitsoperators. <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than (&amp;gt;) operator.">Stellt den überladenen Visual Basic-größer-als (&gt;)-Operator dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded greater-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Das Ergebnis des überladenen Größer-als-Operators. <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Stellt den überladenen Visual Basic-größer-als-oder-gleich (&gt;=)-Operator dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded greater-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Das Ergebnis des überladenen Größer-als-Operators oder des überladenen Gleichheitsoperators. <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than (&amp;lt;) operator.">Stellt den überladenen Visual Basic-kleiner-als (&lt;)-Operator dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded less-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Das Ergebnis des überladenen Kleiner-als-Operators. <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than or equal-to (&amp;lt;=) operator.">Stellt den überladenen Visual Basic-kleiner-als-oder-gleich (&lt;=)-Operator dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded less-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Das Ergebnis des überladenen Kleiner-als-Operators oder des überladenen Gleichheitsoperators. <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Stellt den überladenen Visual Basic-Ungleichheitsoperator (&lt;&gt;) dar.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Erforderlich. Beliebiger Ausdruck.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded not-equal operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Das Ergebnis des überladenen Ungleichheitsoperators. <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic division (/) operator.">Stellt den Visual Basic-Divisionsoperator (/) dar.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, including any remainder.">Der volle Quotient, der sich aus der Division von <paramref name="Left" /> durch <paramref name="Right" /> ergibt, einschließlich des Rests.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic exponent (^) operator.">Stellt den Visual Basic-Exponentialoperator (^) dar.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;Left&quot; /&gt; raised to the power of &lt;paramref name=&quot;Right&quot; /&gt;.">Das Ergebnis der Potenzierung von <paramref name="Left" /> mit <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary vsli:raw="Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.">Führt eine spät gebundene Auswertung für einen benutzerdefinierten Operator aus. Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</summary>
      <param name="vbOp" vsli:raw="The user-defined operator.">Der benutzerdefinierte Operator.</param>
      <param name="Arguments">Die Argumentwerte, die an den benutzerdefinierten Operator übergeben werden sollen.</param>
      <returns vsli:raw="The result returned from the user-defined operator.">Das vom benutzerdefinierten Operator zurückgegebene Ergebnis.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic integer division (\) operator.">Stellt den Ganzzahl-Divisionsoperator (\) in Visual Basic dar.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, which discards any remainder and retains only the integer portion.">Der ganzzahlige Quotient, der sich aus der Division von <paramref name="Left" /> durch <paramref name="Right" /> ergibt. Es wird nur der ganzzahlige Teil beibehalten, und ein eventueller Rest wird verworfen.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic left shift (&amp;lt;&amp;lt;) operator.">Stellt den Operator für die Stellenverschiebung nach links (&lt;&lt;) in Visual Basic dar.</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Erforderlich. Ein ganzzahliger numerischer Ausdruck. Das zu verschiebende Bitmuster. Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Erforderlich. Ein numerischer Ausdruck. Die Anzahl der Bits, um die das Bitmuster verschoben werden soll. Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">Ein ganzzahliger numerischer Wert. Das Ergebnis der Verschiebung des Bitmusters. Der Datentyp entspricht dem von <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Mod&quot; /&gt; operator.">Stellt den <see langword="Mod" />-Operator in Visual Basic dar.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;Left&quot; /&gt; is divided by &lt;paramref name=&quot;Right&quot; /&gt;.">Der Rest aus der Division von <paramref name="Left" /> durch <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic multiply (*) operator.">Stellt den Visual Basic-Multiplikationsoperator (*) dar.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Das Produkt von <paramref name="Left" /> und <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary minus (-) operator.">Stellt den unären Subtraktionsoperator (–) in Visual Basic dar.</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;Operand&quot; /&gt;.">Der negative Wert von <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Not&quot; /&gt; operator.">Stellt den <see langword="Not" />-Operator in Visual Basic dar.</summary>
      <param name="Operand" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;Operand&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;Operand&quot; /&gt; is 0; otherwise, 0.">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn <paramref name="Operand" /> gleich <see langword="True" /> ist, andernfalls <see langword="True" />. Für bitweise Operationen: 1, wenn <paramref name="Operand" /> gleich 0 ist, andernfalls 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Or&quot; /&gt; operator.">Stellt den <see langword="Or" />-Operator in Visual Basic dar.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 0 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 0; otherwise, 1.">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /><see langword="False" /> ergeben, andernfalls <see langword="True" />. Für bitweise Operationen: 0, wenn sowohl <paramref name="Left" />, als auch <paramref name="Right" /> 0 ergeben, andernfalls 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary plus (+) operator.">Stellt den unären Additionsoperator (+) in Visual Basic dar.</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;Operand&quot; /&gt;. (The sign of the &lt;paramref name=&quot;Operand&quot; /&gt; is unchanged.)">Der Wert von <paramref name="Operand" />. (Das Vorzeichen von <paramref name="Operand" /> wird nicht geändert.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic right shift (&amp;gt;&amp;gt;) operator.">Stellt den Operator für die Stellenverschiebung nach rechts (&gt;&gt;) in Visual Basic dar.</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Erforderlich. Ein ganzzahliger numerischer Ausdruck. Das zu verschiebende Bitmuster. Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Erforderlich. Ein numerischer Ausdruck. Die Anzahl der Bits, um die das Bitmuster verschoben werden soll. Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">Ein ganzzahliger numerischer Wert. Das Ergebnis der Verschiebung des Bitmusters. Der Datentyp entspricht dem von <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic subtraction (-) operator.">Stellt den Visual Basic-Subtraktionsoperator (–) dar.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Erforderlich. Ein beliebiger numerischer Ausdruck.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Die Differenz zwischen <paramref name="Left" /> und <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Xor&quot; /&gt; operator.">Stellt den <see langword="Xor" />-Operator in Visual Basic dar.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Erforderlich. Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">Ein <see langword="Boolean" />-Wert oder ein numerischer Wert. Bei einem <see langword="Boolean" />-Vergleich ist der Rückgabewert der logische Ausschluss (exklusive logische Disjunktion) aus zwei <see langword="Boolean" />-Werten. Bei bitweisen (numerischen) Vorgängen ist der Rückgabewert ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt. Weitere Informationen finden Sie unter Xor Operator.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary vsli:raw="Specifies that the current &lt;see langword=&quot;Option Compare&quot; /&gt; setting should be passed as the default value for an argument.">Gibt an, dass die aktuelle <see langword="Option Compare" />-Einstellung als Standardwert für ein Argument übergeben werden soll.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" />-Klasse.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary vsli:raw="The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used.">Der Visual Basic-Compiler gibt diese Hilfsklasse aus, um (für das Visual Basic-Debuggen) anzugeben, welche Vergleichsoption (Binär oder Text) verwendet werden soll.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute&quot; /&gt; class. This is a helper method.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />-Klasse. Dies ist eine Hilfsmethode.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary vsli:raw="Provides helpers for the Visual Basic &lt;see langword=&quot;Err&quot; /&gt; object.">Stellt Hilfsmethoden für das <see langword="Err" />-Objekt in Visual Basic bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Clear&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">Führt die Vorgänge für die <see langword="Clear" />-Methode des <see langword="Err" />-Objekts aus. Dies ist eine Hilfsmethode.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Raise&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">Führt die Vorgänge für die <see langword="Raise" />-Methode des <see langword="Err" />-Objekts aus. Dies ist eine Hilfsmethode.</summary>
      <param name="hr" vsli:raw="An integer value that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.">Ein ganzzahliger Wert, der die Art des Fehlers identifiziert. Visual Basic-Fehler liegen im Bereich 0–65535. Der Bereich 0–512 ist für Systemfehler reserviert. Der Bereich 513–65535 steht für benutzerdefinierte Fehler zur Verfügung.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">Ein <see cref="T:System.Exception" />-Objekt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary vsli:raw="Closes all files for the calling assembly and stops the process.">Schließt alle Dateien für die aufrufende Assembly und beendet den Prozess.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Der Visual Basic-Compiler verwendet diese Hilfsmethode, um Ausnahmen im <see langword="Err" />-Objekt aufzuzeichnen.</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">Das abzufangende <see cref="T:System.Exception" />-Objekt.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Der Visual Basic-Compiler verwendet diese Hilfsmethode, um Ausnahmen im <see langword="Err" />-Objekt aufzuzeichnen.</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">Das abzufangende <see cref="T:System.Exception" />-Objekt.</param>
      <param name="lErl" vsli:raw="The line number of the exception.">Die Zeilennummer der Ausnahme.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Short" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Short" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Short" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Short" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Short" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Short" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Single" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Single" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Single" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="Single" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="Single" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Single" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string.">Gibt einen <see langword="Single" />-Wert zurück, der der angegebenen Zeichenfolge entspricht.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Single" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Single" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string and number format information.">Gibt einen <see langword="Single" />-Wert zurück, der der angegebenen Zeichenfolge entspricht, sowie Informationen zum Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Erforderlich. Die Zeichenfolge, die in einen <see langword="Single" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="Single" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary vsli:raw="This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.">Diese Klasse stellt Attribute bereit, die auf das Standardmodulkonstrukt angewendet werden, wenn es in die Intermediate Language (IL) ausgegeben wird. Sie ist nicht für den direkten Aufruf aus Code vorgesehen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />-Klasse.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary vsli:raw="The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.">Der Visual Basic-Compiler verwendet diese Klasse intern zum Initialisieren statischer lokaler Member. Sie ist nicht für den direkten Aufruf aus Code vorgesehen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />-Klasse.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary vsli:raw="Returns the state of the static local member's initialization flag (initialized or not).">Gibt den Zustand des Initialisierungsflags (initialisiert oder nicht) des statischen lokalen Members zurück.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Diese Klasse ist seit Visual Basic 2005 veraltet.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt;.">Gibt einen <see langword="String" />-Wert zurück, der dem angegebenen <see langword="Boolean" /> entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Boolean" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Byte&quot; /&gt;.">Gibt einen <see langword="String" />-Wert zurück, der dem angegebenen <see langword="Byte" /> entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Byte&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Byte" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Char&quot; /&gt;.">Gibt einen <see langword="String" />-Wert zurück, der dem angegebenen <see langword="Char" /> entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Char&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Char" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified date.">Gibt einen <see langword="String" />-Wert zurück, der dem angegebenen Datum entspricht.</summary>
      <param name="Value" vsli:raw="Required. Date to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. Das in einen <see langword="String" />-Wert zu konvertierende Datum.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Decimal&quot; /&gt;.">Gibt einen <see langword="String" />-Wert zurück, der dem angegebenen <see langword="Decimal" /> entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Decimal" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Decimal&quot; /&gt; and number format information.">Gibt einen <see langword="String" />-Wert zurück, der einem angegebenen <see langword="Decimal" /> entspricht, sowie Informationen für das Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Decimal" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Gibt einen <see langword="String" />-Wert zurück, der einem angegebenen <see langword="Double" /> entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Erforderlich. <see langword="Double" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt; and number format information.">Gibt einen <see langword="String" />-Wert zurück, der einem angegebenen <see langword="Double" /> entspricht, sowie Informationen für das Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Erforderlich. <see langword="Double" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The string representation of &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Integer&quot; /&gt;.">Gibt einen <see langword="String" />-Wert zurück, der einem angegebenen <see langword="Integer" /> entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Integer" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int64&quot; /&gt; (64-bit integer).">Gibt einen <see langword="String" />-Wert zurück, der einem angegebenen <see langword="Int64" /> (64-Bit-Ganzzahl) entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Int64&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Int64" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified object.">Gibt einen <see langword="String" />-Wert zurück, der dem angegebenen Objekt entspricht.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. Objekt, das in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int16&quot; /&gt; (16-bit integer).">Gibt einen <see langword="String" />-Wert zurück, der einem angegebenen <see langword="Int16" /> (16-Bit-Ganzzahl) entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Int616&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Int616" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Gibt einen <see langword="String" />-Wert zurück, der einem angegebenen <see langword="Single" /> entspricht.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Single" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt; and number format information.">Gibt einen <see langword="String" />-Wert zurück, der einem angegebenen <see langword="Single" /> entspricht, sowie Informationen für das Zahlenformat.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. <see langword="Single" />, der in einen <see langword="String" />-Wert konvertiert werden soll.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Ein <see cref="T:System.Globalization.NumberFormatInfo" />-Objekt, das definiert, wie numerische Werte in Abhängigkeit von der jeweiligen Kultur formatiert und angezeigt werden.</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Der <see langword="String" />-Wert, der <paramref name="Value" /> entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Overwrites the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with the contents of the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter.">Überschreibt den <paramref name="sDest" />-Parameter mit dem Inhalt des <paramref name="sInsert" />-Parameters.</summary>
      <param name="sDest" vsli:raw="Required. String variable to modify.">Erforderlich. Die zu ändernde Zeichenfolgenvariable.</param>
      <param name="StartPosition" vsli:raw="Required. Location in the &lt;paramref name=&quot;sDest&quot; /&gt; parameter to begin overwriting from. The index is 1-based.">Erforderlich. Die Position im <paramref name="sDest" />-Parameter, ab der mit dem Überschreibevorgang begonnen werden soll. Der Index ist 1-basiert.</param>
      <param name="MaxInsertLength" vsli:raw="Required. Maximum number of characters from the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter to use, starting from the first character.">Erforderlich. Die maximale Anzahl der zu verwendenden Zeichen aus dem <paramref name="sInsert" />-Parameter, beginnend mit dem ersten Zeichen.</param>
      <param name="sInsert" vsli:raw="Required. String value to overwrite the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with.">Erforderlich. Der Zeichenfolgenwert, mit dem der <paramref name="sDest" />-Parameter überschrieben werden soll.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Compares two strings.">Vergleicht zwei Zeichenfolgen.</summary>
      <param name="sLeft" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sRight&quot; /&gt;.">Erforderlich. Die Zeichenfolge, die mit <paramref name="sRight" /> verglichen werden soll.</param>
      <param name="sRight" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sLeft&quot; /&gt;.">Erforderlich. Die Zeichenfolge, die mit <paramref name="sLeft" /> verglichen werden soll.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive comparison; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="True" />, um einen Vergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; zero&lt;/term&gt;&lt;description&gt; The two strings are equal.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is less than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is greater than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Wert 
  Bedingung 
  Null 
  Die beiden Zeichenfolgen sind gleich.  

  kleiner als 0 (Null) 
 
                <paramref name="sLeft" /> ist kleiner als <paramref name="sRight" />.  

  größer als 0 (Null) 
 
                <paramref name="sLeft" /> ist größer als <paramref name="sRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator.">Vergleicht die Parameter <paramref name="Source" /> und <paramref name="Pattern" /> und gibt die gleichen Ergebnisse wie der Operator <see langword="Like" /> zurück.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Beliebiger <see langword="String" /> -Ausdruck.</param>
      <param name="Pattern" vsli:raw="Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Ein beliebiger <see langword="String" />-Ausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</param>
      <param name="CompareOption" vsli:raw="Specifies how to compare strings to patterns, according to the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt;. Can be &lt;see langword=&quot;vbBinaryCompare&quot; /&gt; for binary comparison or &lt;see langword=&quot;vbTextCompare&quot; /&gt; for comparison based on a case-insensitive text sort order determined by your system's &lt;see langword=&quot;LocaleID&quot; /&gt; value.">Gibt an, wie Zeichenfolgen gemäß <see cref="T:Microsoft.VisualBasic.CompareMethod" /> mit Mustern verglichen werden. Mögliche Werte sind <see langword="vbBinaryCompare" /> für binäre Vergleiche oder <see langword="vbTextCompare" /> für einen Vergleich auf der Grundlage einer Textsortierfolge ohne Berücksichtigung von Groß- und Kleinschreibung, die vom <see langword="LocaleID" />-Wert des Systems definiert wird.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, der angibt, ob die Zeichenfolge dem Muster entspricht. Wenn der Wert der Zeichenfolge das Muster erfüllt, ist das Ergebnis <see langword="True" />. Wenn die Zeichenfolge das Muster nicht erfüllt, ist das Ergebnis <see langword="False" />. Wenn sowohl Zeichenfolge als auch Muster leere Zeichenfolgen sind, ist das Ergebnis <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using binary comparison.">Vergleicht die Parameter <paramref name="Source" /> und <paramref name="Pattern" /> und gibt unter Verwendung eines binären Vergleichs die gleichen Ergebnisse wie der Operator <see langword="Like" /> zurück.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Beliebiger <see langword="String" /> -Ausdruck.</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Erforderlich. Ein beliebiger <see langword="String" />-Ausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, der angibt, ob die Zeichenfolge dem Muster entspricht. Wenn der Wert der Zeichenfolge das Muster erfüllt, ist das Ergebnis <see langword="True" />. Wenn die Zeichenfolge das Muster nicht erfüllt, ist das Ergebnis <see langword="False" />. Wenn sowohl Zeichenfolge als auch Muster leere Zeichenfolgen sind, ist das Ergebnis <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using text comparison.">Vergleicht die Parameter <paramref name="Source" /> und <paramref name="Pattern" /> und gibt unter Verwendung eines Textvergleichs die gleichen Ergebnisse wie der Operator <see langword="Like" /> zurück.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Beliebiger <see langword="String" /> -Ausdruck.</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Erforderlich. Ein beliebiger <see langword="String" />-Ausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Ein <see langword="Boolean" />-Wert, der angibt, ob die Zeichenfolge dem Muster entspricht. Wenn der Wert der Zeichenfolge das Muster erfüllt, ist das Ergebnis <see langword="True" />. Wenn die Zeichenfolge das Muster nicht erfüllt, ist das Ergebnis <see langword="False" />. Wenn sowohl Zeichenfolge als auch Muster leere Zeichenfolgen sind, ist das Ergebnis <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary vsli:raw="Contains utilities that the Visual Basic compiler uses.">Enthält Dienstprogramme, die vom Visual Basic-Compiler verwendet werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary vsli:raw="Used by the Visual Basic compiler as a helper for &lt;see langword=&quot;Redim&quot; /&gt;.">Wird vom Visual Basic-Compiler als Hilfsmethode für <see langword="Redim" /> verwendet.</summary>
      <param name="arySrc" vsli:raw="The array to be copied.">Das zu kopierende Array.</param>
      <param name="aryDest" vsli:raw="The destination array.">Das Zielarray.</param>
      <returns vsli:raw="The copied array.">Das kopierte Array.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary vsli:raw="The &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.Versioned&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">Das <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" />-Modul enthält Prozeduren für die Interaktion mit Objekten, Anwendungen und Systemen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Führt eine Methode für ein Objekt aus oder legt eine Eigenschaft für ein Objekt fest oder gibt diese zurück.</summary>
      <param name="Instance" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">Erforderlich. <see langword="Object" />. Ein Zeiger auf das Objekt, das die Eigenschaft oder Methode verfügbar macht.</param>
      <param name="MethodName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">Erforderlich. <see langword="String" />. Ein Zeichenfolgenausdruck, der den Namen der Eigenschaft oder der Methode für das Objekt enthält.</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Erforderlich. Ein Enumerationsmember vom Typ <see cref="T:Microsoft.VisualBasic.CallType" />, der den Typ der aufgerufenen Prozedur darstellt. Der Wert von <see langword="CallType" /> kann <see langword="Method" />, <see langword="Get" /> oder <see langword="Set" /> sein.</param>
      <param name="Arguments" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">Optional. <see langword="ParamArray" />. Ein Parameterarray mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Führt eine Methode für ein Objekt aus oder legt eine Eigenschaft für ein Objekt fest oder gibt diese zurück.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">Gibt einen booleschen Wert zurück, der angibt, ob ein Ausdruck als Zahl ausgewertet werden kann.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Erforderlich. <see langword="Object" />-Ausdruck.</param>
      <returns vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">Gibt einen booleschen Wert zurück, der angibt, ob ein Ausdruck als Zahl ausgewertet werden kann.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the system data type name of a variable.">Gibt einen Zeichenfolgenwert mit dem Systemnamen des Datentyps einer Variablen zurück.</summary>
      <param name="VbName" vsli:raw="Required. A string variable containing a Visual Basic type name.">Erforderlich. Eine Zeichenfolgenvariable, die einen Visual Basic-Typnamen enthält.</param>
      <returns vsli:raw="Returns a string value containing the system data type name of a variable.">Gibt einen Zeichenfolgenwert mit dem Systemnamen des Datentyps einer Variablen zurück.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary vsli:raw="Returns a string value containing data type information about a variable.">Gibt einen Zeichenfolgenwert zurück, der Datentypinformationen über eine Variable enthält.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Erforderlich. <see langword="Object" />-Variable. Wenn für <see langword="Option Strict" /> der Wert <see langword="Off" /> festgelegt ist, können Sie, mit Ausnahme von Strukturen, Variablen eines beliebigen Datentyps übergeben.</param>
      <returns vsli:raw="Returns a string value containing data type information about a variable.">Gibt einen Zeichenfolgenwert zurück, der Datentypinformationen über eine Variable enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">Gibt einen Zeichenfolgenwert mit dem Visual Basic-Namen des Datentyps einer Variablen zurück.</summary>
      <param name="SystemName" vsli:raw="Required. String variable containing a type name used by the common language runtime.">Erforderlich. Zeichenfolgenvariable mit dem Typnamen, der von der Common Language Runtime verwendet wird.</param>
      <returns vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">Gibt einen Zeichenfolgenwert mit dem Visual Basic-Namen des Datentyps einer Variablen zurück.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary vsli:raw="The &lt;see langword=&quot;Constants&quot; /&gt; module contains miscellaneous constants. These constants can be used anywhere in your code.">Das <see langword="Constants" />-Modul enthält verschiedene Konstanten. Diese Konstanten können an einer beliebigen Stelle im Code verwendet werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Abort" /> geklickt wurde. Von der <see langword="MsgBox" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt;, &lt;see langword=&quot;Retry&quot; /&gt;, and &lt;see langword=&quot;Ignore&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass die Schaltflächen <see langword="Abort" />, <see langword="Retry" /> und <see langword="Ignore" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass das Meldungsfeld als modales Dialogfeld angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary vsli:raw="Indicates that the file has changed since the last backup operation for file-access functions.">Gibt an, dass die Datei seit dem letzten Sicherungsvorgang für Dateizugriffsfunktionen geändert wurde.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary vsli:raw="Indicates that the type of a variant object is an array. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts ein Array ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary vsli:raw="Represents a backspace character for print and display functions.">Stellt ein Rücktastenzeichen für Druck- und Anzeigefunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary vsli:raw="Specifies that a binary comparison should be performed when comparison functions are called.">Gibt an, dass ein binärer Vergleich ausgeführt werden soll, wenn Vergleichsfunktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Boolean&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Boolean" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Byte&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Byte" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Cancel&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Cancel" /> geklickt wurde. Von der <see langword="MsgBox" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary vsli:raw="Represents a carriage-return character for print and display functions.">Stellt ein Wagenrücklaufzeichen für Druck- und Anzeigefunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary vsli:raw="Indicates that the critical message icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass das Symbol für wichtige Meldungen angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary vsli:raw="Represents a carriage-return character combined with a linefeed character for print and display functions.">Stellt ein Wagenrücklaufzeichen mit einem Zeilenvorschubzeichen für Druck- und Anzeigefunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Currency&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Currency" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Date&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Date" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Decimal&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Decimal" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary vsli:raw="Indicates that the leftmost button is selected as the default button when the message box appears.">Gibt an, dass die ganz links angezeigte Schaltfläche als Standardschaltfläche ausgewählt wird, wenn das Meldungsfeld angezeigt wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary vsli:raw="Indicates that the second button from the left is selected as the default button when the message box appears.">Gibt an, dass die zweite Schaltfläche von links als Standardschaltfläche ausgewählt wird, wenn das Meldungsfeld angezeigt wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary vsli:raw="Indicates that the third button from the left is selected as the default button when the message box appears.">Gibt an, dass die dritte Schaltfläche von links als Standardschaltfläche ausgewählt wird, wenn das Meldungsfeld angezeigt wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary vsli:raw="Indicates that the file is a directory or folder for file-access functions.">Gibt an, dass die Datei ein Verzeichnis oder Ordner für Dateizugriffsfunktionen ist.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Double&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Double" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Empty&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Empty" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary vsli:raw="Indicates that the exclamation icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass das Ausrufezeichensymbol angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;False&quot; /&gt; should be used when number-formatting functions are called.">Gibt an, dass ein <see langword="Boolean" /> Wert von <see langword="False" /> verwendet werden soll, wenn Zahlenformatierungsfunktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary vsli:raw="Indicates that the first week of the year that has at least four days should be used when date-related functions are called.">Gibt an, dass die erste Woche des Jahres mit mindestens vier Tagen verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary vsli:raw="Indicates that the first full week of the year should be used when date-related functions are called.">Gibt an, dass die erste vollständige Woche des Jahres verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary vsli:raw="Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.">Gibt an, dass die Woche des Jahres mit 1. Januar verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary vsli:raw="Represents a form-feed character for print functions.">Stellt ein Seitenvorschubzeichen für Druckfunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary vsli:raw="Specifies that Friday should be used as the first day of the week when date-related functions are called.">Gibt an, dass Freitag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary vsli:raw="Indicates that the general date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Gibt an, dass das allgemeine Datumsformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary vsli:raw="Specifies that a property value should be retrieved when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Gibt an, dass ein Eigenschaftswert abgerufen werden soll, wenn die <see langword="CallByName" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary vsli:raw="Indicates that the file is a hidden file for file-access functions.">Gibt an, dass die Datei eine versteckte Datei für Dateizugriffsfunktionen ist.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary vsli:raw="Indicates that the window style is hidden for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Gibt an, dass der Fensterstil für das aufgerufene Programm ausgeblendet ist, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary vsli:raw="Indicates Hiragana characters should be converted to Katakana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass Hiragana-Zeichen in Katakana-Zeichen konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Ignore&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Ignore" /> geklickt wurde. Von der <see langword="MsgBox" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary vsli:raw="Indicates that the information icon will display when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass das Informationssymbol angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Integer&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Integer" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary vsli:raw="Indicates that Katakana characters should be converted to Hiragana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass Katakana-Zeichen in Hiragana-Zeichen konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary vsli:raw="Indicates that a property value should be set to an object instance when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Gibt an, dass ein Eigenschaftswert auf eine Objektinstanz festgelegt werden soll, wenn die <see langword="CallByName" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary vsli:raw="Represents a linefeed character for print and display functions.">Stellt ein Zeilenvorschubzeichen für Druck- und Anzeigefunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary vsli:raw="Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass Zeichen konvertiert werden sollen, um sprachliche Regeln für die Groß-/Kleinschreibung anstelle der Dateisystemregeln für die Groß-/Kleinschreibung zu verwenden, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary vsli:raw="Indicates the type of a variant object is &lt;see langword=&quot;Long&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Long" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary vsli:raw="Indicates that the long date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Gibt an, dass das lange Datumsformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary vsli:raw="Indicates that the long time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Gibt an, dass das lange Zeitformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary vsli:raw="Indicates that characters should be converted to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass Zeichen in Kleinbuchstaben konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary vsli:raw="Indicates that the window style is maximized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Gibt an, dass der Fensterstil maximiert wird und den Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary vsli:raw="Specifies that a method should be called when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Gibt an, dass eine Methode aufgerufen werden soll, wenn die <see langword="CallByName" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary vsli:raw="Indicates that the window style is minimized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Gibt an, dass der Fensterstil minimiert wird und den Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary vsli:raw="Indicates that the window style is minimized without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Gibt an, dass der Fensterstil minimiert wird und keinen Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary vsli:raw="Specifies that Monday should be used as the first day of the week when date-related functions are called.">Gibt an, dass Montag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Help&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass die Schaltfläche <see langword="Help" /> angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary vsli:raw="Indicates that text will be right-aligned when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass der Text rechts ausgerichtet wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary vsli:raw="Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass Text mit Leserichtung von rechts nach links (hebräische und arabische Systeme) angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary vsli:raw="Indicates that the message box will display in the foreground when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass das Meldungsfeld im Vordergrund angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary vsli:raw="Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass breite Zeichen (zwei Bytes) in schmale Zeichen (ein Byte) konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary vsli:raw="Represents a newline character for print and display functions.">Stellt ein Zeilenumbruchzeichen für Druck- und Anzeigefunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;No&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="No" /> geklickt wurde. Von der <see langword="MsgBox" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary vsli:raw="Indicates that the file is a normal file for file-access functions.">Gibt an, dass die Datei eine normale Datei für Dateizugriffsfunktionen ist.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary vsli:raw="Indicates that the window style is normal with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Gibt an, dass der Fensterstil normal ist und den Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary vsli:raw="Indicates that the window style is normal without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Gibt an, dass der Fensterstil normal ist und keinen Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Nothing&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Nothing" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary vsli:raw="Represents a null character for print and display functions.">Stellt ein NULL-Zeichen für Druck- und Anzeigefunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary vsli:raw="Represents a zero-length string for print and display functions, and for calling external procedures.">Stellt eine Zeichenfolge der Länge 0 (null) für Druck- und Anzeigefunktionen sowie zum Aufrufen externer Prozeduren dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Object&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Object" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary vsli:raw="Represents the object error number. User-defined error numbers should be greater than this value.">Stellt die Fehlernummer für das Objekt dar. Benutzerdefinierte Fehlernummern sollten größer als dieser Wert sein.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="OK" /> geklickt wurde. Von der <see langword="MsgBox" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass die Schaltflächen <see langword="OK" /> und <see langword="Cancel" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary vsli:raw="Indicates that only the &lt;see langword=&quot;OK&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass nur die Schaltfläche <see langword="OK" /> angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary vsli:raw="Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass der erste Buchstabe jedes Worts in einer Zeichenfolge in Großbuchstaben und die übrigen Zeichen in Kleinbuchstaben konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary vsli:raw="Indicates that the question icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass das Fragezeichensymbol angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary vsli:raw="Indicates that the file is a read-only file for file-access functions.">Gibt an, dass die Datei eine schreibgeschützte Datei für Dateizugriffsfunktionen ist.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Retry" /> geklickt wurde. Von der <see langword="MsgBox" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass die Schaltflächen <see langword="Retry" /> und <see langword="Cancel" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary vsli:raw="Specifies that Saturday should be used as the first day of the week when date-related functions are called.">Gibt an, dass Samstag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary vsli:raw="Indicates that a property value should be set when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Gibt an, dass ein Eigenschaftswert festgelegt werden soll, wenn die <see langword="CallByName" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary vsli:raw="Indicates that the short-date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Gibt an, dass das kurze Datumsformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary vsli:raw="Indicates that the short-time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Gibt an, dass das kurze Zeitformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary vsli:raw="Indicates that characters should be converted to Simplified Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass Zeichen in vereinfachte chinesische Zeichen konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see cref=&quot;T:System.Single&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Single" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;String&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="String" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary vsli:raw="Specifies that Sunday should be used as the first day of the week when date-related functions are called.">Gibt an, dass Sonntag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary vsli:raw="Indicates that the file is a system file for file-access functions.">Gibt an, dass die Datei eine Systemdatei für Dateizugriffsfunktionen ist.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass das Meldungsfeld als modales Dialogfeld angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary vsli:raw="Represents a tab character for print and display functions.">Stellt ein Tabulatorzeichen für Druck- und Anzeigefunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary vsli:raw="Indicates that a text comparison should be performed when comparison functions are called.">Gibt an, dass ein Textvergleich ausgeführt werden soll, wenn Vergleichsfunktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary vsli:raw="Specifies that Thursday should be used as the first day of the week when date-related functions are called.">Gibt an, dass Donnerstag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary vsli:raw="Indicates that characters should be converted to Traditional Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass Zeichen in traditionelle chinesische Zeichen konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;True&quot; /&gt; should be used when number-formatting functions are called.">Gibt an, dass ein <see langword="Boolean" /> Wert von <see langword="True" /> verwendet werden soll, wenn Zahlenformatierungsfunktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary vsli:raw="Specifies that Tuesday should be used as the first day of the week when date-related functions are called.">Gibt an, dass Dienstag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary vsli:raw="Indicates that characters should be converted to uppercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass Zeichen in Großbuchstaben konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary vsli:raw="Indicates that the default &lt;see langword=&quot;Boolean&quot; /&gt; value should be used when number-formatting functions are called.">Gibt an, dass der <see langword="Boolean" /> Standardwert verwendet werden soll, wenn Zahlenformatierungsfunktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary vsli:raw="Indicates that the type of a variant object is a user-defined type. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts ein benutzerdefinierter Typ ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary vsli:raw="Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.">Gibt an, dass die vom System als erste Woche des Jahres angegebene Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary vsli:raw="Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.">Gibt an, dass der vom System als erster Tag der Woche angegebene Tag verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Variant&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt an, dass der Typ eines Variant-Objekts <see langword="Variant" /> ist. Von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary vsli:raw="Represents a carriage-return character for print functions.">Stellt ein Wagenrücklaufzeichen für Druckfunktionen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary vsli:raw="Indicates the volume label file attribute for file-access functions.">Gibt das Volumebezeichnungsdateiattribut für Dateizugriffsfunktionen an.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary vsli:raw="Specifies that Wednesday should be used as the first day of the week when date-related functions are called.">Gibt an, dass Mittwoch als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary vsli:raw="Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Gibt an, dass schmale Zeichen (ein Byte) in breite Zeichen (zwei Bytes) konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Yes" /> geklickt wurde. Von der <see langword="MsgBox" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; and &lt;see langword=&quot;No&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass die Schaltflächen <see langword="Yes" /> und <see langword="No" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt;, &lt;see langword=&quot;No&quot; /&gt;, and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Gibt an, dass die Schaltflächen <see langword="Yes" />, <see langword="No" /> und <see langword="Cancel" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary vsli:raw="The &lt;see langword=&quot;ControlChars&quot; /&gt; module contains constants used as control characters. These constants can be used anywhere in your code.">Das <see langword="ControlChars" />-Modul enthält Konstanten, die als Steuerzeichen verwendet werden. Diese Konstanten können an einer beliebigen Stelle im Code verwendet werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.ControlChars&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ControlChars" />-Klasse.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary vsli:raw="Represents a backspace character (&lt;see langword=&quot;vbBack&quot; /&gt;).">Stellt ein Rücktastenzeichen dar (<see langword="vbBack" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary vsli:raw="Represents a carriage return character (&lt;see langword=&quot;vbCr&quot; /&gt;).">Stellt ein Wagenrücklaufzeichen dar (<see langword="vbCr" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary vsli:raw="Represents a carriage return/linefeed character combination (&lt;see langword=&quot;vbCrLf&quot; /&gt;).">Stellt eine Kombination aus Wagenrücklauf- und Zeilenvorschubzeichen dar (<see langword="vbCrLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary vsli:raw="Represents a form feed character for print functions (&lt;see langword=&quot;vbFormFeed&quot; /&gt;).">Stellt ein Seitenvorschubzeichen für Druckfunktionen dar (<see langword="vbFormFeed" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary vsli:raw="Represents a line feed character (&lt;see langword=&quot;vbLf&quot; /&gt;).">Stellt ein Zeilenvorschubzeichen dar (<see langword="vbLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary vsli:raw="Represents a new line character (&lt;see langword=&quot;vbNewLine&quot; /&gt;).">Stellt ein Neue-Zeile-Zeichen dar (<see langword="vbNewLine" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary vsli:raw="Represents a null character (&lt;see langword=&quot;vbNullChar&quot; /&gt;).">Stellt ein NULL-Zeichen dar (<see langword="vbNullChar" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary vsli:raw="Represents a double-quote character.">Stellt ein doppeltes Anführungszeichen dar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary vsli:raw="Represents a tab character (&lt;see langword=&quot;vbTab&quot; /&gt;).">Stellt ein Tabstoppzeichen dar (<see langword="vbTab" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary vsli:raw="Represents a vertical tab character (&lt;see langword=&quot;vbVerticalTab&quot; /&gt;).">Stellt ein vertikales Tabstoppzeichen dar (<see langword="vbVerticalTab" />).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary vsli:raw="The &lt;see langword=&quot;Conversion&quot; /&gt; module contains the procedures used to perform various conversion operations.">Das <see langword="Conversion" />-Modul enthält Prozeduren, mit denen verschiedene Konvertierungsoperationen ausgeführt werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Konvertiert ein Objekt in den angegebenen Typ.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns vsli:raw="An object whose type at run time is the requested target type.">Ein Objekt, dessen Typ zur Laufzeit der angeforderte Zieltyp ist.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary vsli:raw="Converts an object to the specified generic type.">Konvertiert ein Objekt in den angegebenen generischen Typ.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Das zu konvertierende Objekt.</param>
      <typeparam name="TargetType" vsli:raw="The type to which to convert the object.">Der Typ, in den das Objekt konvertiert werden soll.</typeparam>
      <returns vsli:raw="An object statically typed as the requested generic type.">Ein Objekt, das statisch als der angeforderte generische Typ typisiert ist.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">Gibt die Fehlermeldung zurück, die der jeweiligen Fehlernummer entspricht.</summary>
      <returns vsli:raw="The error message that corresponds to the most recent run-time error.">Die Fehlermeldung, die dem letzten Laufzeitfehler entspricht.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> liegt außerhalb des Bereichs.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">Gibt die Fehlermeldung zurück, die der jeweiligen Fehlernummer entspricht.</summary>
      <param name="ErrorNumber" vsli:raw="Optional. Any valid error number.">Dies ist optional. Eine beliebige gültige Fehlernummer.</param>
      <returns vsli:raw="The error message that corresponds to a given error number.">Die Fehlermeldung, die einer bestimmten Fehlernummer entspricht.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> liegt außerhalb des Bereichs.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Decimal" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Double" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Short" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Integer" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Long" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">Erforderlich. Eine Zahl vom Typ <see langword="Object" /> oder ein beliebiger gültiger numerischer Ausdruck. Wenn <paramref name="Number" /><see langword="Nothing" /> enthält, wird <see langword="Nothing" /> zurückgegeben.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Single" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Gibt eine Zeichenfolge zurück, die den Hexadezimalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Eine Zeichenfolge, die den Hexadezimalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Decimal" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Double" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Short" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Integer" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Long" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">Erforderlich. Eine Zahl vom Typ <see langword="Object" /> oder ein beliebiger gültiger numerischer Ausdruck. Wenn <paramref name="Number" /><see langword="Nothing" /> enthält, wird <see langword="Nothing" /> zurückgegeben.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">Gibt den Integeranteil einer Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">Erforderlich. Eine Zahl vom Typ <see langword="Single" /> oder ein beliebiger gültiger numerischer Ausdruck.</param>
      <returns vsli:raw="The integer portion of a number.">Der Integeranteil einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">Number ist nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Gibt eine Zeichenfolge zurück, die den Oktalwert einer Zahl darstellt.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige numerische Ausdruck oder <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Eine Zeichenfolge, die den Oktalwert einer Zahl darstellt.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; representation of a number.">Gibt eine <see langword="String" />-Darstellung dieser Zahl zurück.</summary>
      <param name="Number" vsli:raw="Required. An &lt;see langword=&quot;Object&quot; /&gt; containing any valid numeric expression.">Erforderlich. Ein <see langword="Object" />, das einen beliebigen gültigen numerischen Ausdruck enthält.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representation of a number.">Eine <see langword="String" />-Darstellung einer Zahl.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> wurde nicht angegeben.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> ist kein numerischer Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Gibt die in einer Zeichenfolge enthaltenen Zahlen als numerischen Wert eines geeigneten Typs zurück.</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck, jede gültige <see langword="Object" />-Variable, jeder gültige <see langword="Char" />-Wert. Wenn <paramref name="Expression" /> den Typ <see langword="Object" /> aufweist, muss der Wert in <see langword="String" /> konvertierbar sein, sonst tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Die in einer Zeichenfolge enthaltenen Zahlen als numerischer Wert eines geeigneten Typs.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> ist zu groß.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> ist ein Ausdruck vom Typ <see langword="Object" />, der nicht in <see langword="String" /> konvertierbar ist.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Gibt die in einer Zeichenfolge enthaltenen Zahlen als numerischen Wert eines geeigneten Typs zurück.</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck, jede gültige <see langword="Object" />-Variable, jeder gültige <see langword="Char" />-Wert. Wenn <paramref name="Expression" /> den Typ <see langword="Object" /> aufweist, muss der Wert in <see langword="String" /> konvertierbar sein, sonst tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Die in einer Zeichenfolge enthaltenen Zahlen als numerischer Wert eines geeigneten Typs.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> ist zu groß.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> ist ein Ausdruck vom Typ <see langword="Object" />, der nicht in <see langword="String" /> konvertierbar ist.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Gibt die in einer Zeichenfolge enthaltenen Zahlen als numerischen Wert eines geeigneten Typs zurück.</summary>
      <param name="InputStr" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck, jede gültige <see langword="Object" />-Variable, jeder gültige <see langword="Char" />-Wert. Wenn <paramref name="Expression" /> den Typ <see langword="Object" /> aufweist, muss der Wert in <see langword="String" /> konvertierbar sein, sonst tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Die in einer Zeichenfolge enthaltenen Zahlen als numerischer Wert eines geeigneten Typs.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> ist zu groß.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> ist ein Ausdruck vom Typ <see langword="Object" />, der nicht in <see langword="String" /> konvertierbar ist.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary vsli:raw="The &lt;see langword=&quot;DateAndTime&quot; /&gt; module contains the procedures and properties used in date and time operations.">Das <see langword="DateAndTime" />-Modul enthält Prozeduren und Eigenschaften, die in Datum- und Uhrzeitoperationen verwendet werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">Die Funktion gibt einen Wert zurück, der einen Datumswert und einen Zeitwert enthält, zu dem ein festgelegtes Zeitintervall addiert wird.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">Erforderlich. Ein <see cref="T:Microsoft.VisualBasic.DateInterval" />-Enumerationswert oder ein Zeichenfolgenausdruck, der das zu addierende Zeitintervall darstellt.</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. It can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">Erforderlich. Gleitkommaausdruck, der die Zahl der hinzuzufügenden Intervalle darstellt. Er kann entweder positiv (zum Abrufen von Datums-/Zeitwerten in der Zukunft) oder negativ (zum Abrufen von Datums-/Zeitwerten in der Vergangenheit) sein. Er kann Nachkommastellen enthalten, wenn <paramref name="Interval" /> Stunden, Minuten oder Sekunden angibt. Bei anderen Werten von <paramref name="Interval" /> werden alle Dezimalstellen von <paramref name="Number" /> ignoriert.</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">Erforderlich. Ein Ausdruck, der Datum und Uhrzeit angibt, zu denen das Intervall hinzuaddiert werden muss. <paramref name="DateValue" /> selbst wird im aufrufenden Programm nicht geändert.</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">Ein Wert, der einen Datumswert und einen Zeitwert enthält, zu dem ein festgelegtes Zeitintervall addiert wird.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> kann nicht in <see langword="Date" /> umgewandelt werden.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> ist nicht gültig.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">Das berechnete Datum liegt vor 00:00:00 Uhr am 1. Januar des Jahres 1 oder nach 23:59:59 Uhr am 31. Dezember 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">Die Funktion gibt einen Wert zurück, der einen Datumswert und einen Zeitwert enthält, zu dem ein festgelegtes Zeitintervall addiert wird.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">Erforderlich. Ein <see cref="T:Microsoft.VisualBasic.DateInterval" />-Enumerationswert oder ein Zeichenfolgenausdruck, der das zu addierende Zeitintervall darstellt.</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. &lt;paramref name=&quot;Number&quot; /&gt; can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">Erforderlich. Gleitkommaausdruck, der die Zahl der hinzuzufügenden Intervalle darstellt. <paramref name="Number" /> kann entweder positiv (zum Abrufen von Datums-/Zeitwerten in der Zukunft) oder negativ (zum Abrufen von Datums-/Zeitwerten in der Vergangenheit) sein. Er kann Nachkommastellen enthalten, wenn <paramref name="Interval" /> Stunden, Minuten oder Sekunden angibt. Bei anderen Werten von <paramref name="Interval" /> werden alle Dezimalstellen von <paramref name="Number" /> ignoriert.</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">Erforderlich. Ein Ausdruck, der Datum und Uhrzeit angibt, zu denen das Intervall hinzuaddiert werden muss. <paramref name="DateValue" /> selbst wird im aufrufenden Programm nicht geändert.</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">Ein Wert, der einen Datumswert und einen Zeitwert enthält, zu dem ein festgelegtes Zeitintervall addiert wird.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> kann nicht in <see langword="Date" /> umgewandelt werden.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> ist nicht gültig.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">Das berechnete Datum liegt vor 00:00:00 Uhr am 1. Januar des Jahres 1 oder nach 23:59:59 Uhr am 31. Dezember 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">Gibt einen Long-Wert zurück, der die Anzahl der Zeitintervalle zwischen zwei <see langword="Date" />-Werten angibt.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">Erforderlich. Ein <see cref="T:Microsoft.VisualBasic.DateInterval" />-Enumerationswert oder ein Zeichenfolgenausdruck, der das Zeitintervall angibt, das Sie als Einheit für die Differenz zwischen <paramref name="Date1" /> und <paramref name="Date2" /> verwenden möchten.</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">Erforderlich. Der erste Datums-/Zeitwert, den Sie bei der Berechnung verwenden möchten.</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">Erforderlich. Der zweite Datums-/Zeitwert, den Sie bei der Berechnung verwenden möchten.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />-Enumeration, der den ersten Tag der Woche angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> verwendet.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />-Enumeration, der die erste Woche des Jahres angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> verwendet.</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">Ein Long-Wert, der die Anzahl der Zeitintervalle zwischen zwei <see langword="Date" />-Werten angibt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />, <paramref name="Date2" /> oder <paramref name="DayofWeek" /> liegt außerhalb des Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> oder <paramref name="Date2" /> hat einen ungültigen Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">Gibt einen Long-Wert zurück, der die Anzahl der Zeitintervalle zwischen zwei <see langword="Date" />-Werten angibt.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">Erforderlich. Ein <see cref="T:Microsoft.VisualBasic.DateInterval" />-Enumerationswert oder ein Zeichenfolgenausdruck, der das Zeitintervall angibt, das Sie als Einheit für die Differenz zwischen <paramref name="Date1" /> und <paramref name="Date2" /> verwenden möchten.</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">Erforderlich. Der erste Datums-/Zeitwert, den Sie bei der Berechnung verwenden möchten.</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">Erforderlich. Der zweite Datums-/Zeitwert, den Sie bei der Berechnung verwenden möchten.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />-Enumeration, der den ersten Tag der Woche angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> verwendet.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />-Enumeration, der die erste Woche des Jahres angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> verwendet.</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">Ein Long-Wert, der die Anzahl der Zeitintervalle zwischen zwei <see langword="Date" />-Werten angibt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />, <paramref name="Date2" /> oder <paramref name="DayofWeek" /> liegt außerhalb des Bereichs.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> oder <paramref name="Date2" /> hat einen ungültigen Typ.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Gibt einen ganzzahligen Wert zurück, der die angegebene Komponente eines bestimmten <see langword="Date" />-Werts enthält.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">Erforderlich. Ein <see cref="T:Microsoft.VisualBasic.DateInterval" />-Enumerationswert oder ein Zeichenfolgenausdruck, der den Teil des Datums-/Zeitwerts darstellt, der zurückgegeben werden soll.</param>
      <param name="DateValue" vsli:raw="Required. The &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">Erforderlich. Der auszuwertende <see langword="Date" />-Wert.</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />-Enumeration, der den ersten Tag der Woche angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> verwendet.</param>
      <param name="FirstWeekOfYearValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />-Enumeration, der die erste Woche des Jahres angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> verwendet.</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Ein ganzzahliger Wert, der eine angegebene Komponente eines bestimmten <see langword="Date" />-Werts enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> ist nicht gültig.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> kann nicht in <see langword="Date" /> umgewandelt werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Gibt einen Wert zurück, der eine angegebene Komponente eines bestimmten <see langword="Date" />-Werts enthält.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">Erforderlich. Ein <see cref="T:Microsoft.VisualBasic.DateInterval" />-Enumerationswert oder ein Zeichenfolgenausdruck, der den Teil des Datums-/Zeitwerts darstellt, der zurückgegeben werden soll.</param>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">Erforderlich. Ein auszuwertender <see langword="Date" />-Wert.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />-Enumeration, der den ersten Tag der Woche angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> verwendet.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />-Enumeration, der die erste Woche des Jahres angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> verwendet.</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Ein ganzzahliger Wert, der eine angegebene Komponente eines bestimmten <see langword="Date" />-Werts enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is invalid.">
        <paramref name="Interval" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> kann nicht in <see langword="Date" /> umgewandelt werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing the specified year, month, and day, with the time information set to midnight (00:00:00).">Gibt einen <see langword="Date" />-Wert zurück, der ein angegebenes Jahr, einen angegebenen Monat und einen angegebenen Tag darstellt und dessen Zeitangabe Mitternacht (00:00:00) lautet.</summary>
      <param name="Year" vsli:raw="Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If &lt;paramref name=&quot;Year&quot; /&gt; is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the &quot;Remarks&quot; section. If &lt;paramref name=&quot;Year&quot; /&gt; is less than 1, it is subtracted from the current year.">Erforderlich. Ganzzahliger Ausdruck zwischen 1 und 9999. Werte unterhalb dieses Bereichs werden jedoch ebenfalls akzeptiert. Wenn <paramref name="Year" /> im Bereich von 0 bis 99 liegt, wird das Argument als Wert zwischen 1930 und 2029 interpretiert, wie unten im Abschnitt Hinweise erläutert. Ist <paramref name="Year" /> kleiner als 1, wird es vom aktuellen Jahr subtrahiert.</param>
      <param name="Month" vsli:raw="Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Month&quot; /&gt; is offset by 1 and applied to January of the calculated year. In other words, (&lt;paramref name=&quot;Month&quot; /&gt; - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 1, the result is January of the calculated year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 0, the result is December of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is -1, the result is November of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 13, the result is January of the following year.">Erforderlich. Ganzzahliger Ausdruck zwischen 1 und 12. Werte außerhalb dieses Bereichs werden jedoch ebenfalls akzeptiert. Der Wert von <paramref name="Month" /> wird um 1 verringert und auf den Januar des berechneten Jahres angewendet. Anders ausgedrückt: (<paramref name="Month" /> – 1) wird zu Januar addiert. Falls erforderlich, wird das Jahr neu berechnet. In den folgenden Ergebnissen wird dieser Effekt veranschaulicht: 
Wenn <paramref name="Month" /> 1 ist, ist das Ergebnis der Januar des berechneten Jahres.  
Wenn <paramref name="Month" /> 0 ist, ist das Ergebnis der Dezember des vorherigen Jahres.  
Wenn <paramref name="Month" /> -1 ist, ist das Ergebnis der November des vorherigen Jahres.  
Wenn <paramref name="Month" /> 13 ist, ist das Ergebnis der Januar des nächsten Jahres.</param>
      <param name="Day" vsli:raw="Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Day&quot; /&gt; is offset by 1 and applied to the first day of the calculated month. In other words, (&lt;paramref name=&quot;Day&quot; /&gt; - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 1, the result is the first day of the calculated month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 0, the result is the last day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is -1, the result is the penultimate day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is past the end of the current month, the result is the appropriate day of the following month. For example, if &lt;paramref name=&quot;Month&quot; /&gt; is 4 and &lt;paramref name=&quot;Day&quot; /&gt; is 31, the result is May 1.">Erforderlich. Ganzzahliger Ausdruck zwischen 1 und 31. Werte außerhalb dieses Bereichs werden jedoch ebenfalls akzeptiert. Der Wert von <paramref name="Day" /> wird um 1 verringert und auf den ersten Tag des berechneten Monats angewendet. Anders ausgedrückt: (<paramref name="Day" /> - 1) wird zum Monatsersten addiert. Falls erforderlich, werden der Monat und das Jahr neu berechnet. In den folgenden Ergebnissen wird dieser Effekt veranschaulicht: 
Wenn <paramref name="Day" /> 1 ist, ist das Ergebnis der erste Tag des berechneten Monats.  
Wenn <paramref name="Day" /> 0 ist, ist das Ergebnis der letzte Tag des vorherigen Monats.  
Wenn <paramref name="Day" /> -1 ist, ist das Ergebnis der vorletzte Tag des vorherigen Monats.  
Wenn <paramref name="Day" /> das Ende des aktuellen Monats überschreitet, ist das Ergebnis der entsprechende Tag des nächsten Monats. Wenn z. B. <paramref name="Month" /> 4 ist und <paramref name="Day" /> 31, dann lautet das Ergebnis 1. Mai.</param>
      <returns vsli:raw="A value that represents the specified year, month, and day, with the time information set to midnight (00:00:00).">Ein <see langword="Date" />-Wert, der ein angegebenes Jahr, einen angegebenen Monat und einen angegebenen Tag darstellt und dessen Zeitangabe Mitternacht (00:00:00) lautet.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary vsli:raw="Returns or sets a string value representing the current date according to your system.">Gibt einen Zeichenfolgenwert zurück, der das aktuelle Datum gemäß Ihrem System darstellt, oder legt ihn fest.</summary>
      <returns vsli:raw="Returns or sets a string value representing the current date according to your system.">Gibt einen Zeichenfolgenwert zurück, der das aktuelle Datum gemäß Ihrem System darstellt, oder legt ihn fest.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see cref=&quot;P:Microsoft.VisualBasic.DateAndTime.DateString&quot; /&gt;.">Ungültiges Format, mit dem der Wert von <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" /> festgelegt wurde.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">Gibt einen <see langword="Date" />-Wert zurück, der die Datumsangabe als Zeichenfolge enthält und dessen Zeitangabe Mitternacht (00:00:00) lautet.</summary>
      <param name="StringDate" vsli:raw="Required. string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">Erforderlich. Zeichenfolgenausdruck, der ein Datum und eine Uhrzeit zwischen 00:00:00 Uhr am 1. Januar des Jahres 1 und 23:59:59 Uhr am 31. Dezember 9999 darstellt.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">Ein <see langword="Date" />-Wert, der die Datumsangabe als Zeichenfolge enthält und dessen Zeitangabe Mitternacht (00:00:00) lautet.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringDate&quot; /&gt; includes invalid time information.">
        <paramref name="StringDate" /> enthält eine ungültige Zeitangabe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 31 representing the day of the month.">Gibt einen ganzzahligen Wert von 1 bis 31 zurück, der den Tag des Monats darstellt.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the day.">Erforderlich. Ein <see langword="Date" />-Wert, aus dem der Tag extrahiert werden soll.</param>
      <returns vsli:raw="An integer value from 1 through 31 representing the day of the month.">Ein ganzzahliger Wert von 1 bis 31, der den Tag des Monats darstellt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 23 representing the hour of the day.">Gibt einen ganzzahligen Wert von 0 bis 23 zurück, der eine Stunde des Tags darstellt.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the hour.">Erforderlich. Ein <see langword="Date" />-Wert, aus dem die Stunde extrahiert werden soll.</param>
      <returns vsli:raw="An integer value from 0 through 23 representing the hour of the day.">Ein ganzzahliger Wert von 0 bis 23, der eine Stunde des Tags darstellt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the minute of the hour.">Gibt einen ganzzahligen Wert von 0 bis 59 zurück, der die Minute einer Stunde darstellt.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the minute.">Erforderlich. Ein <see langword="Date" />-Wert, aus dem die Minute extrahiert werden soll.</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the minute of the hour.">Ein ganzzahliger Wert von 0 bis 59, der die Minute einer Stunde darstellt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 12 representing the month of the year.">Gibt einen ganzzahligen Wert von 1 bis 12 zurück, der den Monat eines Jahres darstellt.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the month.">Erforderlich. Ein <see langword="Date" />-Wert, aus dem der Monat extrahiert werden soll.</param>
      <returns vsli:raw="An integer value from 1 through 12 representing the month of the year.">Ein ganzzahliger Wert von 1 bis 12, der den Monat eines Jahres darstellt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary vsli:raw="Returns a string value containing the name of the specified month.">Gibt einen Zeichenfolgenwert mit dem Namen des angegebenen Monats zurück.</summary>
      <param name="Month" vsli:raw="Required. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and &lt;paramref name=&quot;Month&quot; /&gt; is 13, &lt;c&gt;MonthName&lt;/c&gt; returns an empty string.">Erforderlich. Die numerische Bezeichnung des Monats von 1 bis 13, wobei 1 für Januar und 12 für Dezember steht. Den Wert 13 können Sie für einen 13-Monats-Kalender verwenden. Wenn im System ein 12-Monats-Kalender verwendet wird und <paramref name="Month" /> 13 ist, gibt <c>MonthName</c> eine leere Zeichenfolge zurück.</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;True&quot; /&gt; to abbreviate the month name; otherwise, &lt;see langword=&quot;False&quot; /&gt;. The default is &lt;see langword=&quot;False&quot; /&gt;.">Dies ist optional. <see langword="True" /> zum Abkürzen des Monatsnamens; andernfalls <see langword="False" />. Die Standardeinstellung ist <see langword="False" />.</param>
      <returns vsli:raw="A string value containing the name of the specified month.">Ein Zeichenfolgenwert mit dem Namen des angegebenen Monats.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Month&quot; /&gt; is less than 1 or greater than 13.">
        <paramref name="Month" /> ist größer als 1 oder größer als 13.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary vsli:raw="Returns a value containing the current date and time according to your system.">Gibt einen Wert zurück, der das aktuelle Datum und die aktuelle Uhrzeit gemäß der Systemeinstellung enthält.</summary>
      <returns vsli:raw="The current date and time according to your system.">Das aktuelle Datum und die Uhrzeit gemäß Ihrem System.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the second of the minute.">Gibt einen ganzzahligen Wert von 0 bis 59 zurück, der die Sekunde einer Minute darstellt.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the second.">Erforderlich. Ein <see langword="Date" />-Wert, aus dem die Sekunde extrahiert werden soll.</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the second of the minute.">Ein ganzzahliger Wert von 0 bis 59, der die Sekunde einer Minute darstellt.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">Gibt einen <see langword="Date" />-Wert zurück bzw. legt einen Date-Wert fest, der die aktuelle Uhrzeit gemäß der Systemeinstellung enthält.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">Gibt einen <see langword="Date" />-Wert zurück bzw. legt einen Date-Wert fest, der die aktuelle Uhrzeit gemäß der Systemeinstellung enthält.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value representing the number of seconds elapsed since midnight.">Gibt einen Wert vom Typ <see cref="T:System.Double" /> zurück, der die Anzahl der seit Mitternacht vergangenen Sekunden angibt.</summary>
      <returns vsli:raw="A value representing the number of seconds elapsed since midnight.">Ein-Wert, der die Anzahl der seit Mitternacht verstrichenen Sekunden darstellt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">Gibt einen <see langword="Date" />-Wert zurück, der eine bestimmte Stunde, Minute und Sekunde angibt und dessen Datum der 1. Januar des Jahres 1 ist.</summary>
      <param name="Hour" vsli:raw="Required. Integer expression from 0 through 23. However, values outside this range are also accepted.">Erforderlich. Ganzzahliger Ausdruck zwischen 0 und 23. Werte außerhalb dieses Bereichs werden jedoch ebenfalls akzeptiert.</param>
      <param name="Minute" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Minute&quot; /&gt; is added to the calculated hour, so a negative value specifies minutes before that hour.">Erforderlich. Ganzzahliger Ausdruck zwischen 0 und 59. Werte außerhalb dieses Bereichs werden jedoch ebenfalls akzeptiert. Der Wert von <paramref name="Minute" /> wird zu der berechneten Stunde addiert, sodass ein negativer Wert Minuten vor dieser Stunde angibt.</param>
      <param name="Second" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Second&quot; /&gt; is added to the calculated minute, so a negative value specifies seconds before that minute.">Erforderlich. Ganzzahliger Ausdruck zwischen 0 und 59. Werte außerhalb dieses Bereichs werden jedoch ebenfalls akzeptiert. Der Wert von <paramref name="Second" /> wird zu der berechneten Minute addiert, sodass ein negativer Wert Sekunden vor dieser Minute angibt.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">Ein <see langword="Date" />-Wert, der eine bestimmte Stunde, Minute und Sekunde angibt und dessen Datum der 1. Januar des Jahres 1 ist.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is outside the range -2,147,483,648 through 2,147,483,647">Ein Argument liegt nicht im Bereich zwischen –2.147.483.648 und 2.147.483.647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated time is less than negative 24 hours.">Errechnete Zeit ist kleiner als der Wert für –24 Stunden</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary vsli:raw="Returns or sets a string value representing the current time of day according to your system.">Gibt einen Zeichenfolgenwert zurück, der die aktuelle Tageszeit gemäß Ihrem System darstellt, oder legt ihn fest.</summary>
      <returns vsli:raw="Returns or sets a string value representing the current time of day according to your system.">Gibt einen Zeichenfolgenwert zurück, der die aktuelle Tageszeit gemäß Ihrem System darstellt, oder legt ihn fest.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see langword=&quot;TimeString&quot; /&gt;.">Ungültiges Format, mit dem der Wert von <see langword="TimeString" /> festgelegt wurde.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">Gibt einen <see langword="Date" />-Wert zurück, der die Zeitangabe als Zeichenfolge enthält und dessen Datum der 1. Januar des Jahres 1 ist.</summary>
      <param name="StringTime" vsli:raw="Required. A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">Erforderlich. Ein Zeichenfolgenausdruck, der ein Datum und eine Uhrzeit zwischen 00:00:00 Uhr am 1. Januar des Jahres 1 und 23:59:59 Uhr am 31. Dezember 9999 darstellt.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">Ein <see langword="Date" />-Wert, der die Zeitangabe als Zeichenfolge enthält und dessen Datum der 1. Januar des Jahres 1 ist.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringTime&quot; /&gt; includes invalid date information.">
        <paramref name="StringTime" /> enthält ungültige Datumsinformationen.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">Gibt einen <see langword="Date" />-Wert zurück bzw. legt einen Date-Wert fest, der das aktuelle Datum gemäß den Systemeinstellungen angibt.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">Gibt einen <see langword="Date" />-Wert zurück bzw. legt einen Date-Wert fest, der das aktuelle Datum gemäß den Systemeinstellungen angibt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns an integer value containing a number representing the day of the week.">Gibt einen ganzzahligen Wert mit einer Zahl zurück, die den Tag der Woche darstellt.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value for which you want to determine the day of the week.">Erforderlich. Ein <see langword="Date" />-Wert, für den der Wochentag ermittelt werden soll.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />-Enumeration, der den ersten Tag der Woche angibt. Wenn dieser nicht angegeben wurde, wird <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> verwendet.</param>
      <returns vsli:raw="An integer value containing a number representing the day of the week.">Ein ganzzahliger Wert mit einer Zahl, die den Tag der Woche darstellt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;DayOfWeek&quot; /&gt; is less than 0 or more than 7.">
        <paramref name="DayOfWeek" /> ist kleiner als 0 oder größer als 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns a string value containing the name of the specified weekday.">Gibt einen Zeichenfolgenwert mit dem Namen des angegebenen Wochentags zurück.</summary>
      <param name="Weekday" vsli:raw="Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt;.">Erforderlich. Integer. Die numerische Bezeichnung des Wochentags von 1 bis 7, wobei 1 für den ersten und 7 für den letzten Tag der Woche steht. Welcher jeweils der erste und letzte Tag der Woche ist, hängt von der Einstellung für <paramref name="FirstDayOfWeekValue" /> ab.</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates if the weekday name is to be abbreviated. If omitted, the default is &lt;see langword=&quot;False&quot; /&gt;, which means the weekday name is not abbreviated.">Optional. Ein <see langword="Boolean" />-Wert, der angibt, ob der Name des Wochentags abgekürzt werden soll. Wenn dieser Wert nicht angegeben wird, lautet der Standardwert <see langword="False" />, d. h., der Name des Wochentags wird nicht abgekürzt.</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see langword=&quot;FirstDayOfWeek.System&quot; /&gt; is used.">Dies ist optional. Ein Wert aus der <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />-Enumeration, der den ersten Tag der Woche angibt. Wenn dieser nicht angegeben wurde, wird <see langword="FirstDayOfWeek.System" /> verwendet.</param>
      <returns vsli:raw="A string value containing the name of the specified weekday.">Ein Zeichenfolgenwert mit dem Namen des angegebenen Wochentags.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Weekday&quot; /&gt; is less than 1 or greater than 7, or &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt; is less than 0 or greater than 7.">
        <paramref name="Weekday" /> ist kleiner als 1 oder größer als 7, oder <paramref name="FirstDayOfWeekValue" /> ist kleiner als 0 oder größer als 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 9999 representing the year.">Gibt einen ganzzahligen Wert von 1 bis 9.999 zurück, der das Jahr darstellt.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the year.">Erforderlich. Ein <see langword="Date" />-Wert, aus dem das Jahr extrahiert werden soll.</param>
      <returns vsli:raw="An integer value from 1 through 9999 representing the year.">Ein ganzzahliger Wert von 1 bis 9999, der das Jahr darstellt.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary vsli:raw="Indicates how to display dates when calling the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function.">Gibt in Aufrufen der <see langword="FormatDateTime" />-Funktion an, wie Datumsangaben angezeigt werden sollen.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary vsli:raw="For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGeneralDate&quot; /&gt;.">Bei reellen Zahlen werden Datum und Uhrzeit angezeigt. Wenn die Zahl keine Dezimalstellen enthält, wird nur ein Datum angezeigt. Wenn die Zahl keinen ganzzahligen Teil enthält, wird nur die Uhrzeit angezeigt. Die Anzeige von Datum und Uhrzeit wird von den regionalen Einstellungen des Computers bestimmt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbGeneralDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary vsli:raw="Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongDate&quot; /&gt;.">Zeigt ein Datum in dem langen Datumsformat an, das in den regionalen Einstellungen des Computers angegeben wurde. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbLongDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary vsli:raw="Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongTime&quot; /&gt;.">Zeigt eine Uhrzeit in dem langen Zeitformat an, das in den regionalen Einstellungen des Computers angegeben wurde. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbLongTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary vsli:raw="Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortDate&quot; /&gt;.">Zeigt ein Datum in dem kurzen Datumsformat an, das in den regionalen Einstellungen des Computers angegeben wurde. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbShortDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary vsli:raw="Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortTime&quot; /&gt;.">Zeigt eine Uhrzeit in dem kurzen Zeitformat an, das in den regionalen Einstellungen des Computers angegeben wurde. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbShortTime" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary vsli:raw="Indicates how to determine and format date intervals when calling date-related functions.">Gibt an, wie Datumsintervalle beim Aufrufen von Datumsfunktionen festgelegt und formatiert werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary vsli:raw="Day of month (1 through 31)">Tag des Monats (1 bis 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary vsli:raw="Day of year (1 through 366)">Tag des Jahres (1 bis 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary vsli:raw="Hour (0 through 23)">Stunde (0 bis 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary vsli:raw="Minute (0 through 59)">Minute (0 bis 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary vsli:raw="Month (1 through 12)">Monat (1 bis 12).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary vsli:raw="Quarter of year (1 through 4)">Quartal des Jahres (1 bis 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary vsli:raw="Second (0 through 59)">Sekunde (0 bis 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary vsli:raw="Day of week (1 through 7)">Tag der Woche (1 bis 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary vsli:raw="Week of year (1 through 53)">Woche des Jahres (1 bis 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary vsli:raw="Year.">Jahr</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>Stellt Methoden zur Soundwiedergabe bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Audio" />-Klasse.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>Stellt Eigenschaften für den Zugriff auf die aktuelle lokale Zeit und die koordinierte Weltzeit (entspricht UTC, Greenwich Mean Time) von der Systemuhr bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Clock" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>Ruft ein <see langword="Date" />-Objekt ab, das das aktuelle lokale Datum und die aktuelle lokale Uhrzeit (in UTC (GMT)-Zeit angegeben) auf dem Computer enthält.</summary>
      <returns>Ein <see langword="Date" />-Objekt, das das aktuelle Datum und aktuelle Uhrzeit (in UTC (GMT)-Zeit angegeben) enthält.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>Ruft ein <see langword="Date" />-Objekt ab, das das aktuelle lokale Datum und die aktuelle lokale Uhrzeit auf diesem Computer enthält.</summary>
      <returns>Ein <see langword="Date" />-Objekt, das das aktuelle lokale Datum und die aktuelle lokale Uhrzeit enthält.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>Ruft die Anzahl der Millisekunden vom Systemzeitgeber des Computers ab.</summary>
      <returns>Ein <see langword="Integer" />, der die Anzahl der Millisekunden vom Systemzeitgeber des Computers enthält.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>Stellt Eigenschaften für die Bearbeitung von Computerkomponenten bereit, z.B. Audio, die Uhr, die Tastatur, das Dateisystem und so weiter.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Computer" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>Ruft ein Objekt ab, das Eigenschaften für Methoden bereitstellt, die Sounds wiedergeben.</summary>
      <returns>Das <see langword="My.Computer.Audio" />-Objekt für den Computer.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>Ruft ein Objekt ab, das Methoden zum Bearbeiten der Zwischenablage bereitstellt.</summary>
      <returns>Das <see langword="My.Computer.Clipboard" />-Objekt für den Computer.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>Ruft ein Objekt ab, das Eigenschaften für den Zugriff auf den aktuellen Tastaturzustand (z. B. Informationen über die derzeit gedrückten Tasten) und eine Methode zum Senden von Tastaturanschlägen an das aktive Fenster bereitstellt.</summary>
      <returns>Das <see langword="My.Computer.Keyboard" />-Objekt für den Computer.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>Ruft ein Objekt ab, das Eigenschaften zum Abrufen von Informationen über das Format und die Konfiguration der auf dem lokalen Computer installierten Maus bereitstellt.</summary>
      <returns>Das <see langword="My.Computer.Mouse" />-Objekt für den Computer.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>Ruft ein Objekt ab, das eine Eigenschaft und eine Methode zum Zugreifen auf die seriellen Anschlüsse des Computers bereitstellt.</summary>
      <returns>Das <see langword="My.Computer.Ports" />-Objekt.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>Stellt Eigenschaften zum Abrufen von Informationen über den Arbeitsspeicher des Computer, geladene Assemblys, Name und Betriebssystem bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>Ruft den gesamten freien physikalischen Speicher für den Computer ab.</summary>
      <returns>Ein <see langword="ULong" />, das die Anzahl von Bytes des freien physikalischen Speichers für den Computer enthält.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Die Anwendung kann den Status des Arbeitsspeichers nicht abrufen.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>Ruft den gesamten freien virtuellen Adressraum des Computers ab.</summary>
      <returns>Ein <see langword="ULong" /> mit der Anzahl von Bytes des freien virtuellen Adressraums des Computers.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Die Anwendung kann den Status des Arbeitsspeichers nicht abrufen.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>Ruft die aktuelle Benutzeroberflächenkultur ab, die mit dem Betriebssystem installiert ist.</summary>
      <returns>Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt stellt die auf dem Computer installierte Benutzeroberflächenkultur dar.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>Ruft den Plattformbezeichner für das Betriebssystem des Computers ab.</summary>
      <returns>Ein <see langword="String" /> mit dem Plattformbezeichner für das Betriebssystem des Computers, der aus den Membernamen der <see cref="T:System.PlatformID" />-Enumeration ausgewählt wird.</returns>
      <exception cref="T:System.ExecutionEngineException">Die Anwendung kann die Informationen über die Betriebssystemplattform nicht abrufen.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>Ruft die Version des Betriebssystems des Computers ab.</summary>
      <returns>Ein <see langword="String" />, der die aktuelle Versionsnummer des Betriebssystems enthält.</returns>
      <exception cref="T:System.ExecutionEngineException">Die Anwendung kann die Informationen über die Betriebssystemversion nicht abrufen.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>Ruft den gesamten physikalischen Speicher für den Computer ab.</summary>
      <returns>Ein <see langword="ULong" />, das die Anzahl von Bytes des physikalischen Speichers für den Computer enthält.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Die Anwendung kann den Status des Arbeitsspeichers nicht abrufen.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>Ruft den gesamten virtuellen Adressraum ab, der für den Computer verfügbar ist.</summary>
      <returns>Ein <see langword="ULong" />, das die Anzahl von Bytes des verfügbaren virtuellen Adressraums für den Computer enthält.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Die Anwendung kann den Status des Arbeitsspeichers nicht abrufen.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>Stellt Eigenschaften für den Zugriff auf den aktuellen Zustand der Tastatur bereit, z.B. welche Tasten werden gerade gedrückt? Außerdem bietet es eine Methode, mit der Sie Tastatureingaben an ein aktives Fenster schicken können.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" />-Klasse.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>Stellt Eigenschaften zum Abrufen von Informationen über das Format und die Konfiguration der auf dem lokalen Computer installierten Maus bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Mouse" />-Klasse.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>Stellt eine Eigenschaft, ein Ereignis und Methoden für die Interaktion mit dem Netzwerk bereit, an das der Computer angeschlossen ist.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Network" />-Klasse.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>Stellt Daten für das <see langword="My.Application.NetworkAvailabilityChanged" />-Ereignis und das <see langword="My.Computer.Network.NetworkAvailabilityChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />-Klasse.</summary>
      <param name="networkAvailable">Ein <see cref="T:System.Boolean" />, der angibt, ob ein Netzwerk für die Anwendung verfügbar ist.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>Ruft einen Wert ab, der angibt, ob ein Netzwerk für die Anwendung verfügbar ist.</summary>
      <returns>Ein <see cref="T:System.Boolean" />, der angibt, ob ein Netzwerk für die Anwendung verfügbar ist.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>Stellt eine Eigenschaft und eine Methode bereit, mit deren Hilfe Sie auf die seriellen Anschlüsse eines Computer zugreifen können.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Ports" />-Klasse.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>Stellt Eigenschaften für die Bearbeitung von Computerkomponenten bereit, z.B. Audio, die Uhr, die Tastatur, das Dateisystem und so weiter.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />-Klasse.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>Ruft ein Objekt ab, das Eigenschaften für den Zugriff auf die aktuelle lokale Zeit und die aktuelle koordinierte Weltzeit (Universal Coordinated Time, UTC – entspricht Greenwich Mean Time) der Systemuhr bereitstellt.</summary>
      <returns>Das <see langword="My.Computer.Clock" />-Objekt für den Computer.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>Ruft ein Objekt ab, das Eigenschaften und Methoden zum Arbeiten mit Laufwerken, Dateien und Verzeichnissen bereitstellt.</summary>
      <returns>Das <see langword="My.Computer.FileSystem" />-Objekt für den Computer.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>Ruft ein Objekt ab, das Eigenschaften zum Abrufen von Informationen über den Arbeitsspeicher, geladene Assemblys, den Namen und das Betriebssystem des Computers bereitstellt.</summary>
      <returns>Das <see langword="My.Computer.Info" />-Objekt für den Computer.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>Ruft den Computernamen ab.</summary>
      <returns>Ein <see langword="String" />, der den Computernamen enthält.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>Ruft ein Objekt ab, das eine Eigenschaft und Methoden für die Interaktion mit dem Netzwerk bereitstellt, an das der Computer angeschlossen ist.</summary>
      <returns>Das <see langword="My.Computer.Network" />-Objekt für den Computer.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>Ruft ein Objekt ab, das Eigenschaften und Methoden zum Bearbeiten der Registrierung bereitstellt.</summary>
      <returns>Das <see langword="My.Computer.Registry" />-Objekt für den Computer.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary vsli:raw="Indicates when payments are due when calling financial methods.">Gibt beim Aufruf von Finanzmethoden an, wann Zahlungen fällig sind.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary vsli:raw="Falls at the beginning of the date interval.">Tritt am Anfang des Datumsintervalls ein.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary vsli:raw="Falls at the end of the date interval.">Tritt am Ende des Datumsintervalls ein.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary vsli:raw="The &lt;see langword=&quot;ErrObject&quot; /&gt; module contains properties and procedures used to identify and handle run-time errors using the &lt;see langword=&quot;Err&quot; /&gt; object.">Das <see langword="ErrObject" />-Modul enthält Eigenschaften und Prozeduren, mit denen Laufzeitfehler unter Verwendung des <see langword="Err" />-Objekts identifiziert und behandelt werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary vsli:raw="Clears all property settings of the &lt;see langword=&quot;Err&quot; /&gt; object.">Löscht alle Eigenschafteneinstellungen des <see langword="Err" />-Objekt.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">Gibt einen <see langword="String" />-Ausdruck zurück, der eine einem Fehler zugeordnete beschreibende Zeichenfolge enthält, oder legt diesen fest. Lese-/Schreibzugriff.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">Gibt einen <see langword="String" />-Ausdruck zurück, der eine einem Fehler zugeordnete beschreibende Zeichenfolge enthält, oder legt diesen fest. Lese-/Schreibzugriff.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary vsli:raw="Gets an integer indicating the line number of the last executed statement.">Ruft eine ganze Zahl ab, die die Zeilennummer der letzten ausgeführten Anweisung angibt.</summary>
      <returns vsli:raw="The line number of the last executed statement.">Die Zeilennummer der letzten ausgeführten Anweisung.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary vsli:raw="Returns the exception representing the error that occurred.">Gibt die Ausnahme zurück, die den aufgetretenen Fehler darstellt.</summary>
      <returns vsli:raw="The exception representing the error that occurred.">Die Ausnahme, die den aufgetretenen Fehler darstellt.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary vsli:raw="Gets a system error code produced by a call to a dynamic-link library (DLL).">Ruft einen von einem Aufruf einer Dynamic Link Library (DLL) erzeugten Systemfehlercode ab.</summary>
      <returns vsli:raw="A system error code produced by a call to a dynamic-link library (DLL).">Ein Systemfehler Code, der durch einen aufzurufenden Befehl einer Dynamic Link Library (dll) erzeugt wird.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">Gibt einen numerischen Wert zurück, der einen Fehler angibt, oder legt diesen fest. Lese-/Schreibzugriff.</summary>
      <returns vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">Gibt einen numerischen Wert zurück, der einen Fehler angibt, oder legt diesen fest. Lese-/Schreibzugriff.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is greater than 65535.">
        <paramref name="Number" /> ist größer als 65535.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary vsli:raw="Generates a run-time error; can be used instead of the &lt;see langword=&quot;Error&quot; /&gt; statement.">Generiert einen Laufzeitfehler und kann statt der <see langword="Error" />-Anweisung verwendet werden.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt; integer that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors. When setting the &lt;see langword=&quot;Number&quot; /&gt; property to your own error code in a class module, you add your error code number to the &lt;see langword=&quot;vbObjectError&quot; /&gt; constant. For example, to generate the error number 513, assign &lt;c&gt;vbObjectError + 513&lt;/c&gt; to the &lt;see langword=&quot;Number&quot; /&gt; property.">Erforderlich. <see langword="Long" />-Integer, der die Art des Fehlers identifiziert. Visual Basic-Fehler liegen im Bereich 0–65535. Der Bereich 0–512 ist für Systemfehler reserviert. Der Bereich 513–65535 steht für benutzerdefinierte Fehler zur Verfügung. Beim Festlegen der <see langword="Number" />-Eigenschaft auf den eigenen Code in einem Klassenmodul fügen Sie der <see langword="vbObjectError" />-Konstante Ihre Fehlercodenummer hinzu. Um z.B. die Fehlernummer 513 zu generieren, weisen Sie <c>vbObjectError + 513</c> der <see langword="Number" />-Eigenschaft zu.</param>
      <param name="Source" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression naming the object or application that generated the error. When setting this property for an object, use the form &lt;c&gt;project&lt;/c&gt;.&lt;c&gt;class&lt;/c&gt;. If &lt;paramref name=&quot;Source&quot; /&gt; is not specified, the process ID of the current Visual Basic project is used.">Optional. <see langword="String" />-Ausdruck, der das Objekt oder die Anwendung nennt, das bzw. die den Fehler generiert hat. Wenn Sie diese Eigenschaft für ein Objekt festlegen, verwenden Sie das Format <c>Projekt</c>.<c>Klasse</c>. Wird <paramref name="Source" /> nicht angegeben, wird die Prozess-ID des aktuellen Visual Basic-Projekts verwendet.</param>
      <param name="Description" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression describing the error. If unspecified, the value in the &lt;see langword=&quot;Number&quot; /&gt; property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the &lt;see langword=&quot;Error&quot; /&gt; function is used as the &lt;see langword=&quot;Description&quot; /&gt; property. If there is no Visual Basic error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property, the &quot;Application-defined or object-defined error&quot; message is used.">Optional. <see langword="String" />-Ausdruck, der den Fehler beschreibt. Ohne Angabe wird der Wert in der <see langword="Number" />-Eigenschaft überprüft. Wenn eine Zuordnung zu dem Code eines Visual Basic-Laufzeitfehlers möglich ist, wird die Zeichenfolge, die von der <see langword="Error" />-Funktion zurückgegeben wird, als <see langword="Description" />-Eigenschaft verwendet. Entspricht der <see langword="Number" />-Eigenschaft kein Visual Basic-Fehler, wird die Meldung "Anwendungs- oder objektdefinierter Fehler" verwendet.</param>
      <param name="HelpFile" vsli:raw="Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.">Dies ist optional. Der vollqualifizierte Pfad zu der Hilfedatei, in der Hilfe zu diesem Fehler zur Verfügung steht. Ohne Angabe verwendet Visual Basic den vollqualifizierten Laufwerks-, Pfad- und Dateinamen der Visual Basic-Hilfedatei.</param>
      <param name="HelpContext" vsli:raw="Optional. The context ID identifying a topic within &lt;paramref name=&quot;HelpFile&quot; /&gt; that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property is used, if it exists.">Dies ist optional. Die Kontext-ID, die ein Thema in <paramref name="HelpFile" /> identifiziert, das Hilfe für den Fehler bereitstellt. Wenn keine Angabe erfolgt, wird die Kontext-ID in der Visual Basic-Hilfedatei für den Fehler verwendet, der der <see langword="Number" />-Eigenschaft entspricht, sofern vorhanden.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary vsli:raw="Indicates the file attributes to use when calling file-access functions.">Gibt beim Aufruf von Dateizugriffsfunktionen die zu verwendenden Dateiattribute an.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary vsli:raw="File has changed since last backup. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArchive&quot; /&gt;.">Die Datei wurde nach der letzten Sicherung geändert. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbArchive" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary vsli:raw="Directory or folder. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDirectory&quot; /&gt;.">Verzeichnis oder Ordner. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbDirectory" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary vsli:raw="Hidden. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHidden&quot; /&gt;.">Ausgeblendet. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbHidden" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary vsli:raw="Normal (default for &lt;see langword=&quot;Dir&quot; /&gt; and &lt;see langword=&quot;SetAttr&quot; /&gt;). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormal&quot; /&gt;.">Normal (Standardwert für <see langword="Dir" /> und <see langword="SetAttr" />). Diese Datei weist keine besonderen Charakteristika auf. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbNormal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary vsli:raw="Read only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbReadOnly&quot; /&gt;.">Schreibgeschützt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbReadOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary vsli:raw="System file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystem&quot; /&gt;.">Systemdatei. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbSystem" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary vsli:raw="Volume label. This attribute is not valid when used with &lt;see langword=&quot;SetAttr&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVolume&quot; /&gt;.">Volumebezeichnung. Dieses Attribut ist bei Verwendung mit <see langword="SetAttr" /> nicht gültig. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbVolume" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories.">Gibt an, was geschehen soll, wenn ein Verzeichnis, das gelöscht werden soll, Dateien oder Verzeichnisse enthält.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary vsli:raw="Delete the contents of the directory along with the directory. Default.">Löscht den Inhalt des Verzeichnisses sowie das Verzeichnis selbst. Standard.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary vsli:raw="Throw an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; if the directory is not empty. The &lt;see langword=&quot;Data&quot; /&gt; property of the exception lists the file(s) that could not be deleted.">Löst eine <see cref="T:System.IO.IOException" /> aus, wenn das Verzeichnis nicht leer ist. Die <see langword="Data" />-Eigenschaft der Ausnahme listet die Dateien auf, die nicht gelöscht werden konnten.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary vsli:raw="Indicates whether text fields are delimited or fixed width.">Gibt an, ob Textfelder Trennzeichen enthalten oder eine feste Breite aufweisen.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary vsli:raw="Indicates that the fields are delimited.">Gibt an, dass die Felder Trennzeichen enthalten.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary vsli:raw="Indicates that the fields are fixed width.">Gibt an, dass die Felder eine feste Breite aufweisen.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary vsli:raw="Provides properties and methods for working with drives, files, and directories.">Stellt Eigenschaften und Methoden für die Arbeit mit Laufwerken, Dateien und Verzeichnissen bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary vsli:raw="Combines two paths and returns a properly formatted path.">Verknüpft zwei Pfade und gibt einen ordnungsgemäß formatierten Pfad zurück.</summary>
      <param name="baseDirectory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. First path to be combined.">
        <see langword="String" />. Erster Pfad, der kombiniert werden soll.</param>
      <param name="relativePath" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Second path to be combined.">
        <see langword="String" />. Zweiter Pfad, der kombiniert werden soll.</param>
      <returns vsli:raw="The combination of the specified paths.">Die Kombination der angegebenen Pfade.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;baseDirectory&quot; /&gt; or &lt;paramref name=&quot;relativePath&quot; /&gt; are malformed paths.">
        <paramref name="baseDirectory" /> oder <paramref name="relativePath" /> sind fehlerhafte Pfade.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Kopiert den Inhalt eines Verzeichnisses in ein anderes Verzeichnis.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Das zu kopierende Verzeichnis.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Der Speicherort, an den der Verzeichnisinhalt kopiert werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> oder <paramref name="sourceDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">Das Quellverzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">Der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Ein Ordnername im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Eine Zieldatei ist vorhanden, aber es ist kein Zugriff auf die Datei möglich.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Kopiert den Inhalt eines Verzeichnisses in ein anderes Verzeichnis.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Das zu kopierende Verzeichnis.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Der Speicherort, an den der Verzeichnisinhalt kopiert werden soll.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> oder <paramref name="sourceDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">Das Quellverzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">Der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Ein Ordnername im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Eine Zieldatei ist vorhanden, aber es ist kein Zugriff auf die Datei möglich.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> ist auf <see langword="UIOption.AllDialogs" /> festgelegt, und der Vorgang wird vom Benutzer abgebrochen, oder mindestens eine Datei im Verzeichnis kann nicht kopiert werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Kopiert den Inhalt eines Verzeichnisses in ein anderes Verzeichnis.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Das zu kopierende Verzeichnis.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Der Speicherort, an den der Verzeichnisinhalt kopiert werden soll.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">Gibt die Aktion an, die ausgeführt werden soll, wenn während des Vorgangs auf Abbrechen geklickt wird. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> oder <paramref name="sourceDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">Das Quellverzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">Der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Ein Ordnername im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Eine Zieldatei ist vorhanden, aber es ist kein Zugriff auf die Datei möglich.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> ist auf <see langword="UIOption.AllDialogs" /> festgelegt, und der Vorgang wird vom Benutzer abgebrochen, oder mindestens eine Datei im Verzeichnis kann nicht kopiert werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Kopiert den Inhalt eines Verzeichnisses in ein anderes Verzeichnis.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Das zu kopierende Verzeichnis.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Der Speicherort, an den der Verzeichnisinhalt kopiert werden soll.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> oder <paramref name="sourceDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">Das Quellverzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">Der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Ein Ordnername im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Eine Zieldatei ist vorhanden, aber es ist kein Zugriff auf die Datei möglich.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary vsli:raw="Copies a file to a new location.">Kopiert eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Die zu kopierende Datei.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Der Speicherort, an den die Datei kopiert werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> oder <paramref name="sourceFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the target directory with the same name is in use.">Eine Datei im Zielverzeichnis mit demselben Namen wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies a file to a new location.">Kopiert eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Die zu kopierende Datei.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Der Speicherort, an den die Datei kopiert werden soll.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> oder <paramref name="sourceFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Die Zieldatei ist bereits vorhanden, und <paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies a file to a new location.">Kopiert eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Die zu kopierende Datei.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Der Speicherort, an den die Datei kopiert werden soll.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">Gibt die Aktion an, die ausgeführt werden soll, wenn während des Vorgangs auf Abbrechen geklickt wird. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> oder <paramref name="sourceFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Die Zieldatei ist bereits vorhanden, und <paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;UICancelOption&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user has canceled the operation or an unspecified I/O error occurs.">
        <paramref name="UICancelOption" /> ist auf <see langword="ThrowException" /> festgelegt, und entweder hat der Benutzer den Vorgang abgebrochen, oder ein nicht näher bezeichneter E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies a file to a new location.">Kopiert eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Die zu kopierende Datei.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Der Speicherort, an den die Datei kopiert werden soll.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing files should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> oder <paramref name="sourceFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Die Zieldatei ist bereits vorhanden, und <paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary vsli:raw="Creates a directory.">Erstellt ein Verzeichnis.</summary>
      <param name="directory" vsli:raw="Name and location of the directory.">Der Name und der Speicherort des Verzeichnisses.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The directory name is malformed. For example, it contains illegal characters or is only white space.">Der Name des Verzeichnisses ist falsch formatiert. Er enthält beispielsweise unzulässige Zeichen oder besteht nur aus Leerzeichen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The directory name is too long.">Der Verzeichnisname ist zu lang.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name is only a colon (:).">Der Verzeichnisname besteht nur aus einem Doppelpunkt (:).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The parent directory of the directory to be created is read-only.">Das übergeordnete Verzeichnis des zu erstellenden Verzeichnisses ist schreibgeschützt.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to create the directory.">Der Benutzer ist nicht zum Erstellen des Verzeichnisses berechtigt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary vsli:raw="Gets or sets the current directory.">Ruft das aktuelle Verzeichnis ab oder legt dieses fest.</summary>
      <returns vsli:raw="The current directory for file I/O operations.">Das aktuelle Verzeichnis für Datei-E/A-Operationen.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is not valid.">Der Pfad ist nicht gültig.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary vsli:raw="Deletes a directory.">Löscht ein Verzeichnis.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Das zu löschende Verzeichnis.</param>
      <param name="onDirectoryNotEmpty" vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories. Default is &lt;see langword=&quot;DeleteDirectoryOption.DeleteAllContents&quot; /&gt;.">Gibt an, was geschehen soll, wenn ein Verzeichnis, das gelöscht werden soll, Dateien oder Verzeichnisse enthält. Der Standardwert ist <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0, der Pfad ist falsch formatiert, er enthält nur Leerzeichen oder er enthält ungültige Zeichen (einschließlich Platzhalterzeichen). Der Pfad ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">Das Verzeichnis ist nicht vorhanden, oder es handelt sich um eine Datei.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Eine Datei im Verzeichnis oder Unterverzeichnis wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">Der Verzeichnisname enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">Der Benutzer bricht den Vorgang ab, oder das Verzeichnis kann nicht gelöscht werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a directory.">Löscht ein Verzeichnis.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Das zu löschende Verzeichnis.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Gibt an, ob die gelöschte Datei in den Papierkorb verschoben werden soll. Der Standardwert ist <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0, der Pfad ist falsch formatiert, er enthält nur Leerzeichen oder er enthält ungültige Zeichen (einschließlich Platzhalterzeichen). Der Pfad ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">Das Verzeichnis ist nicht vorhanden, oder es handelt sich um eine Datei.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Eine Datei im Verzeichnis oder Unterverzeichnis wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">Der Verzeichnisname enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">Der Benutzer bricht den Vorgang ab, oder das Verzeichnis kann nicht gelöscht werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a directory.">Löscht ein Verzeichnis.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Das zu löschende Verzeichnis.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Gibt an, ob die gelöschte Datei in den Papierkorb verschoben werden soll. Der Standardwert ist <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether to throw an exception if the user clicks Cancel.">Gibt an, ob eine Ausnahme ausgelöst werden soll, wenn auf Abbrechen geklickt wird.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0, der Pfad ist falsch formatiert, er enthält nur Leerzeichen oder er enthält ungültige Zeichen (einschließlich Platzhalterzeichen). Der Pfad ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">Das Verzeichnis ist nicht vorhanden, oder es handelt sich um eine Datei.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Eine Datei im Verzeichnis oder Unterverzeichnis wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">Der Verzeichnisname enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">Der Benutzer bricht den Vorgang ab, oder das Verzeichnis kann nicht gelöscht werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary vsli:raw="Deletes a file.">Löscht eine Datei.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Name und Pfad der zu löschenden Datei.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; er weist an der Position, an der eine Datei angegeben werden muss, einen abschließenden Schrägstrich auf; es handelt sich um einen Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">Die Datei wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">Der Benutzer verfügt nicht über die erforderliche Berechtigung zum Löschen der Datei, oder die Datei ist schreibgeschützt.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a file.">Löscht eine Datei.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Name und Pfad der zu löschenden Datei.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Gibt an, ob die gelöschte Datei in den Papierkorb verschoben werden soll. Der Standardwert ist <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; er weist an der Position, an der eine Datei angegeben werden muss, einen abschließenden Schrägstrich auf; es handelt sich um einen Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">Die Datei wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">Der Benutzer verfügt nicht über die erforderliche Berechtigung zum Löschen der Datei, oder die Datei ist schreibgeschützt.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a file.">Löscht eine Datei.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Name und Pfad der zu löschenden Datei.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Gibt an, ob die gelöschte Datei in den Papierkorb verschoben werden soll. Der Standardwert ist <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Gibt an, ob eine Ausnahme ausgelöst wird, wenn der Benutzer den Vorgang abbricht. Der Standardwert ist <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; er weist an der Position, an der eine Datei angegeben werden muss, einen abschließenden Schrägstrich auf; es handelt sich um einen Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">Die Datei wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">Der Benutzer verfügt nicht über die erforderliche Berechtigung zum Löschen der Datei, oder die Datei ist schreibgeschützt.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancelled the operation and &lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">Der Benutzer hat den Vorgang abgebrochen, und <paramref name="onUserCancel" /> ist auf <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> festgelegt.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified directory exists.">Gibt <see langword="True" /> zurück, wenn das angegebene Verzeichnis vorhanden ist.</summary>
      <param name="directory" vsli:raw="Path of the directory.">Der Pfad des Verzeichnisses.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the directory exists; otherwise &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the name and path of a file rather than a directory.">
        <see langword="True" />, wenn das Verzeichnis vorhanden ist, andernfalls <see langword="False" />. Diese Methode gibt auch <see langword="False" /> zurück, wenn der Parameter den Namen und Pfad einer Datei statt ein Verzeichnis darstellt.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary vsli:raw="Returns a read-only collection of all available drive names.">Gibt eine schreibgeschützte Auflistung aller verfügbaren Laufwerknamen zurück.</summary>
      <returns vsli:raw="A read-only collection of all available drives as &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; objects.">Eine schreibgeschützte Auflistung aller verfügbaren Laufwerke als <see cref="T:System.IO.DriveInfo" />-Objekte.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified file exists.">Gibt <see langword="True" /> zurück, wenn die angegebene Datei vorhanden ist.</summary>
      <param name="file" vsli:raw="Name and path of the file.">Name und Pfad der Datei.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the file exists; otherwise this method returns &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the path of a directory rather than a file.">Diese Methode gibt <see langword="True" /> zurück, wenn die Datei vorhanden ist, andernfalls gibt sie <see langword="False" /> zurück. Diese Methode gibt auch <see langword="False" /> zurück, wenn der Parameter den Pfad eines Verzeichnisses statt einer Datei darstellt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the file ends with a backslash (\).">Der Name der Datei endet mit einem umgekehrten Schrägstrich (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">Gibt eine schreibgeschützte Auflistung von Zeichenfolgen zurück, die die Namen der Dateien mit dem angegebenen Text darstellen.</summary>
      <param name="directory" vsli:raw="The directory to be searched.">Das zu durchsuchende Verzeichnis.</param>
      <param name="containsText" vsli:raw="The search text.">Der Suchtext.</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="True" />, wenn die Groß-/Kleinschreibung bei der Suche berücksichtigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="True" />.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Gibt an, ob Unterordner eingeschlossen werden. Der Standardwert ist <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">Eine schreibgeschützte Collection der Namen der Dateien, die den angegebenen Text enthalten.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0 (null), er enthält nur Leerzeichen, er enthält ungültige Zeichen, oder er ist ein Gerätepfad (beginnt mit <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">Das angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">Das angegebene Verzeichnis zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">Der angegebene Verzeichnispfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">Gibt eine schreibgeschützte Auflistung von Zeichenfolgen zurück, die die Namen der Dateien mit dem angegebenen Text darstellen.</summary>
      <param name="directory" vsli:raw="The directory to be searched.">Das zu durchsuchende Verzeichnis.</param>
      <param name="containsText" vsli:raw="The search text.">Der Suchtext.</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="True" />, wenn die Groß-/Kleinschreibung bei der Suche berücksichtigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="True" />.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Gibt an, ob Unterordner eingeschlossen werden. Der Standardwert ist <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards" vsli:raw="Pattern to be matched.">Das Muster, das übereinstimmen muss.</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">Eine schreibgeschützte Collection der Namen der Dateien, die den angegebenen Text enthalten.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0 (null), er enthält nur Leerzeichen, er enthält ungültige Zeichen, oder er ist ein Gerätepfad (beginnt mit <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">Das angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">Das angegebene Verzeichnis zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">Der angegebene Verzeichnispfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">Gibt eine Auflistung von Zeichenfolgen zurück, die die Pfadnamen der Unterverzeichnisse in einem Verzeichnis darstellen.</summary>
      <param name="directory" vsli:raw="Name and path of directory.">Name und Pfad des Verzeichnisses.</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">Schreibgeschützte Auflistung der Pfadnamen für die Unterverzeichnisse im angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">Das angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">Das angegebene Verzeichnis zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">Gibt eine Auflistung von Zeichenfolgen zurück, die die Pfadnamen der Unterverzeichnisse in einem Verzeichnis darstellen.</summary>
      <param name="directory" vsli:raw="Name and path of directory.">Name und Pfad des Verzeichnisses.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Gibt an, ob Unterordner eingeschlossen werden. Der Standardwert ist <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards" vsli:raw="Pattern to match names.">Das Muster für den Namensvergleich.</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">Schreibgeschützte Auflistung der Pfadnamen für die Unterverzeichnisse im angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the specified wildcard characters is &lt;see langword=&quot;Nothing&quot; /&gt;, an empty string, or contains only spaces.">Mindestens eines der angegebenen Platzhalterzeichen ist <see langword="Nothing" />, eine leere Zeichenfolge oder enthält nur Leerzeichen.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">Das angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">Das angegebene Verzeichnis zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">Gibt für den angegebenen Pfad ein <see cref="T:System.IO.DirectoryInfo" />-Objekt zurück.</summary>
      <param name="directory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Path of directory.">
        <see langword="String" />. Pfad des Verzeichnisses.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">Ein <see cref="T:System.IO.DirectoryInfo" />-Objekt für den angegebenen Pfad.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory path contains a colon (:) or is in an invalid format.">Der Verzeichnispfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">Gibt ein <see cref="T:System.IO.DriveInfo" />-Objekt für das angegebene Laufwerk zurück.</summary>
      <param name="drive" vsli:raw="Drive to be examined.">Das zu überprüfende Laufwerk.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">Ein <see cref="T:System.IO.DriveInfo" />-Objekt für das angegebene Laufwerk.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;drive&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="drive" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">Gibt ein <see cref="T:System.IO.FileInfo" />-Objekt für die angegebene Datei zurück.</summary>
      <param name="file" vsli:raw="Name and path of the file.">Name und Pfad der Datei.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">Ein <see cref="T:System.IO.FileInfo" />-Objekt für die angegebene Datei.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.">Der Pfadname ist falsch formatiert. Er enthält beispielsweise ungültige Zeichen oder besteht nur aus Leerzeichen. Der Dateiname enthält einen nachgestellten Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The path contains a colon in the middle of the string.">Der Pfad enthält einen Doppelpunkt in der Mitte der Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path is too long.">Der Pfad ist zu lang.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks ACL (access control list) access to the file.">Der Benutzer verfügt über keinen ACL (Access Control List)-Zugriff auf die Datei.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">Gibt eine schreibgeschützte Auflistung von Zeichenfolgen zurück, die die Namen der Dateien in einem Verzeichnis darstellen.</summary>
      <param name="directory" vsli:raw="Directory to be searched.">Das zu durchsuchende Verzeichnis.</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">Eine schreibgeschützte Auflistung von Dateinamen aus dem angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">Das zu durchsuchende Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">Gibt eine schreibgeschützte Auflistung von Zeichenfolgen zurück, die die Namen der Dateien in einem Verzeichnis darstellen.</summary>
      <param name="directory" vsli:raw="Directory to be searched.">Das zu durchsuchende Verzeichnis.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Gibt an, ob Unterordner eingeschlossen werden. Der Standardwert ist <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards" vsli:raw="Pattern to be matched.">Das Muster, das übereinstimmen muss.</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">Eine schreibgeschützte Auflistung von Dateinamen aus dem angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">Das zu durchsuchende Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary vsli:raw="Parses the file name out of the path provided.">Analysiert den Dateinamen aus dem bereitgestellten Pfad.</summary>
      <param name="path" vsli:raw="Required. Path to be parsed. &lt;see langword=&quot;String&quot; /&gt;.">Erforderlich. Der zu analysierende Pfad. <see langword="String" />.</param>
      <returns vsli:raw="The file name from the specified path.">Der Dateiname aus dem angegebenen Pfad.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary vsli:raw="Returns the parent path of the provided path.">Gibt den übergeordneten Pfad des bereitgestellten Pfades zurück.</summary>
      <param name="path" vsli:raw="Path to be examined.">Der zu überprüfende Pfad.</param>
      <returns vsli:raw="The parent path of the provided path.">Der übergeordnete Pfad des bereitgestellten Pfads.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Path does not have a parent path because it is a root path.">Der Pfad verfügt über keinen übergeordneten Pfad, weil er ein Stammpfad ist.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary vsli:raw="Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.">Erstellt eine eindeutig benannte temporäre Datei mit einer Größe von 0 Byte auf dem Datenträger und gibt den vollständigen Pfad dieser Datei zurück.</summary>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the full path of the temporary file.">Ein <see langword="String" />, der den vollständigen Pfad der temporären Datei enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary vsli:raw="Moves a directory from one location to another.">Verschiebt ein Verzeichnis von einem Speicherort an einen anderen.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Der Pfad des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Der Pfad des Verzeichnisses, in das das Quellverzeichnis verschoben wird.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source is a root directory or The source path and the target path are the same.">Die Quelle ist ein Stammverzeichnis, oder der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a directory from one location to another.">Verschiebt ein Verzeichnis von einem Speicherort an einen anderen.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Der Pfad des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Der Pfad des Verzeichnisses, in das das Quellverzeichnis verschoben wird.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Das Zielverzeichnis ist bereits vorhanden, und <paramref name="overwrite" /> ist auf den Wert <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a directory from one location to another.">Verschiebt ein Verzeichnis von einem Speicherort an einen anderen.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Der Pfad des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Der Pfad des Verzeichnisses, in das das Quellverzeichnis verschoben wird.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Gibt an, ob eine Ausnahme ausgelöst wird, wenn der Benutzer den Vorgang abbricht. Der Standardwert ist <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt; and a subdirectory of the file cannot be copied.">
        <paramref name="onUserCancel" /> ist auf <see langword="ThrowException" /> festgelegt, und ein Unterverzeichnis der Datei kann nicht kopiert werden.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user cancels the operation, or the operation cannot be completed.">
        <paramref name="onUserCancel" /> ist auf <see langword="ThrowException" /> festgelegt, und der Benutzer bricht den Vorgang ab, oder der Vorgang kann nicht abgeschlossen werden.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a directory from one location to another.">Verschiebt ein Verzeichnis von einem Speicherort an einen anderen.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Der Pfad des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Der Pfad des Verzeichnisses, in das das Quellverzeichnis verschoben wird.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing directories should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn vorhandene Verzeichnisse überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">Das Zielverzeichnis ist bereits vorhanden, und <paramref name="overwrite" /> ist auf den Wert <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary vsli:raw="Moves a file to a new location.">Verschiebt eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Der Pfad der zu verschiebenden Datei.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Der Pfad des Verzeichnisses, in das die Datei verschoben werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="destinationFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a file to a new location.">Verschiebt eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Der Pfad der zu verschiebenden Datei.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Der Pfad des Verzeichnisses, in das die Datei verschoben werden soll.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="destinationFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a file to a new location.">Verschiebt eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Der Pfad der zu verschiebenden Datei.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Der Pfad des Verzeichnisses, in das die Datei verschoben werden soll.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Gibt an, ob eine Ausnahme ausgelöst wird, wenn der Benutzer den Vorgang abbricht. Der Standardwert ist <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="destinationFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and either the user has cancelled the operation or an unspecified I/O error occurs.">
        <paramref name="onUserCancel" /> ist auf <see langword="ThrowException" /> festgelegt, und entweder hat der Benutzer den Vorgang abgebrochen, oder ein nicht näher bezeichneter E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a file to a new location.">Verschiebt eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Der Pfad der zu verschiebenden Datei.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Der Pfad des Verzeichnisses, in das die Datei verschoben werden soll.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="destinationFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object,  which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">Mit der <see langword="OpenTextFieldParser" />-Methode kann ein <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt erstellt werden, mit dessen Hilfe strukturierte Textdateien, z.B. Protokolle, sowohl einfach, als auch effizient analysiert werden können. Mit dem <see langword="TextFieldParser" />-Objekt können sowohl Dateien mit Trennzeichen als auch Dateien mit fester Breite gelesen werden.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Die Datei, die mit dem <see langword="TextFieldParser" /> geöffnet werden soll.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> zum Lesen der angegebenen Datei.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">Eine Zeile kann nicht mit dem angegebenen Format analysiert werden. Die Ausnahmemeldung gibt die Zeile an, die die Ausnahme verursacht, während der in der Zeile enthaltene Text der <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />-Eigenschaft zugewiesen wird.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">Mit der <see langword="OpenTextFieldParser" />-Methode kann ein <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt erstellt werden, mit dessen Hilfe strukturierte Textdateien, z. B. Protokolle, sowohl einfach als auch effizient analysiert werden können. Mit dem <see langword="TextFieldParser" />-Objekt können sowohl Dateien mit Trennzeichen als auch Dateien mit fester Breite gelesen werden.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Die Datei, die mit dem <see langword="TextFieldParser" /> geöffnet werden soll.</param>
      <param name="fieldWidths" vsli:raw="Widths of the fields.">Die Breiten der Felder.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> zum Lesen der angegebenen Datei.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">Eine Zeile kann nicht mit dem angegebenen Format analysiert werden. Die Ausnahmemeldung gibt die Zeile an, die die Ausnahme verursacht, während der in der Zeile enthaltene Text der <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />-Eigenschaft zugewiesen wird.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">Mit der <see langword="OpenTextFieldParser" />-Methode kann ein <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt erstellt werden, mit dessen Hilfe strukturierte Textdateien, z. B. Protokolle, sowohl einfach als auch effizient analysiert werden können. Mit dem <see langword="TextFieldParser" />-Objekt können sowohl Dateien mit Trennzeichen als auch Dateien mit fester Breite gelesen werden.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Die Datei, die mit dem <see langword="TextFieldParser" /> geöffnet werden soll.</param>
      <param name="delimiters" vsli:raw="Delimiters for the fields.">Trennzeichen für die Felder.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> zum Lesen der angegebenen Datei.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">Eine Zeile kann nicht mit dem angegebenen Format analysiert werden. Die Ausnahmemeldung gibt die Zeile an, die die Ausnahme verursacht, während der in der Zeile enthaltene Text der <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />-Eigenschaft zugewiesen wird.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">Öffnet ein <see cref="T:System.IO.StreamReader" />-Objekt, das aus einer Datei gelesen werden soll.</summary>
      <param name="file" vsli:raw="File to be read.">Die zu lesende Datei.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">
        <see cref="T:System.IO.StreamReader" />-Objekt zum Lesen aus der Datei</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">Der Dateiname endet mit einem umgekehrten Schrägstrich (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">Die angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen zum Lesen aus der Datei.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">Öffnet ein <see cref="T:System.IO.StreamReader" />-Objekt, das aus einer Datei gelesen werden soll.</summary>
      <param name="file" vsli:raw="File to be read.">Die zu lesende Datei.</param>
      <param name="encoding" vsli:raw="The encoding to use for the file contents. Default is ASCII.">Die für den Inhalt der Datei zu verwendende Codierung. Der Standardwert ist ASCII.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">
        <see cref="T:System.IO.StreamReader" />-Objekt zum Lesen aus der Datei</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">Der Dateiname endet mit einem umgekehrten Schrägstrich (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">Die angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen zum Lesen aus der Datei.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">Öffnet ein <see cref="T:System.IO.StreamWriter" />-Objekt, das in die angegebene Datei geschrieben werden soll.</summary>
      <param name="file" vsli:raw="File to be written to.">Die Datei, in die geschrieben werden soll.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn Daten an den Inhalt der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll. Der Standardwert ist <see langword="False" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">
        <see cref="T:System.IO.StreamWriter" />-Objekt, das in die angegebene Datei geschrieben werden soll.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">Der Dateiname endet mit einem nachgestellten Schrägstrich.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; to write to the specified file.">Öffnet einen <see cref="T:System.IO.StreamWriter" />, der in die angegebene Datei geschrieben werden soll.</summary>
      <param name="file" vsli:raw="File to be written to.">Die Datei, in die geschrieben werden soll.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents in the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn Daten an den Inhalt in der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll. Der Standardwert ist <see langword="False" />.</param>
      <param name="encoding" vsli:raw="Encoding to be used in writing to the file. Default is ASCII.">Die Codierung, die beim Schreiben in die Datei verwendet werden soll. Der Standardwert ist ASCII.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">
        <see cref="T:System.IO.StreamWriter" />-Objekt, das in die angegebene Datei geschrieben werden soll.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">Der Dateiname endet mit einem nachgestellten Schrägstrich.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary vsli:raw="Returns the contents of a file as a byte array.">Gibt den Inhalt einer Datei als Bytearray zurück.</summary>
      <param name="file" vsli:raw="File to be read.">Die zu lesende Datei.</param>
      <returns vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt; array containing the contents of the file.">Ein <see langword="Byte" />-Array mit dem Inhalt der Datei.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">Gibt den Inhalt einer Textdatei als <see langword="String" /> zurück.</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">Name und Pfad der zu lesenden Datei.</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">Ein <see langword="String" /> mit dem Inhalt der Datei.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">Gibt den Inhalt einer Textdatei als <see langword="String" /> zurück.</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">Name und Pfad der zu lesenden Datei.</param>
      <param name="encoding" vsli:raw="Character encoding to use in reading the file. Default is UTF-8.">Die Zeichencodierung, die beim Lesen der Datei verwendet werden soll. Die Standardeinstellung ist UTF-8.</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">Ein <see langword="String" /> mit dem Inhalt der Datei.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary vsli:raw="Renames a directory.">Benennt ein Verzeichnis um.</summary>
      <param name="directory" vsli:raw="Path and name of directory to be renamed.">Der Pfad und der Name des umzubenennenden Verzeichnisses.</param>
      <param name="newName" vsli:raw="New name for directory.">Neuer Name für das Verzeichnis.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information.">
        <paramref name="newName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> ist <see langword="Nothing" />.  

oder - 
Der <paramref name="newName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">Es ist eine Datei oder ein Verzeichnis mit dem in <paramref name="newName" /> angegebenen Namen vorhanden.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary vsli:raw="Renames a file.">Benennt eine Datei um.</summary>
      <param name="file" vsli:raw="File to be renamed.">Die Datei, die umbenannt werden soll.</param>
      <param name="newName" vsli:raw="New name of file.">Neuer Name der Datei.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information or ends with a backslash (\).">
        <paramref name="newName" /> enthält Pfadinformationen oder endet mit einem umgekehrten Schrägstrich (\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> ist <see langword="Nothing" />.  

oder - 
Der <paramref name="newName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The directory does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">Es ist eine Datei oder ein Verzeichnis mit dem in <paramref name="newName" /> angegebenen Namen vorhanden.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary vsli:raw="Writes data to a binary file.">Schreibt Daten in eine Binärdatei.</summary>
      <param name="file" vsli:raw="Path and name of the file to be written to.">Der Pfad und Name der Datei, in die geschrieben werden soll.</param>
      <param name="data" vsli:raw="Data to be written to the file.">Die in die Datei zu schreibenden Daten.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the file contents; &lt;see langword=&quot;False&quot; /&gt; to overwrite the file contents. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn Daten an den Inhalt der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes text to a file.">Schreibt Text in eine Datei.</summary>
      <param name="file" vsli:raw="File to be written to.">Die Datei, in die geschrieben werden soll.</param>
      <param name="text" vsli:raw="Text to be written to file.">Text, der in eine Datei geschrieben werden soll.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">
        <see langword="True" />, wenn Daten an den Inhalt der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Writes text to a file.">Schreibt Text in eine Datei.</summary>
      <param name="file" vsli:raw="File to be written to.">Die Datei, in die geschrieben werden soll.</param>
      <param name="text" vsli:raw="Text to be written to file.">Text, der in eine Datei geschrieben werden soll.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">
        <see langword="True" />, wenn Daten an den Inhalt der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll.</param>
      <param name="encoding" vsli:raw="What encoding to use when writing to file.">Die beim Schreiben in die Datei zu verwendende Codierung.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary vsli:raw="The exception that is thrown when the &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields&quot; /&gt; method cannot parse a row using the specified format.">Diese Ausnahme wird ausgelöst, wenn die <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />-Methode eine Zeile mit dem angegebenen Format nicht analysieren kann.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Klasse.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">Die <see cref="T:System.Runtime.Serialization.StreamingContext" />-Struktur, die Kontextinformationen über die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Eine Meldung mit einer Beschreibung des Fehlers.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; describing the error.">Ein <see cref="T:System.String" />, der den Fehler beschreibt.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">Das <see cref="T:System.Exception" />-Objekt, das die aktuelle Ausnahme verursacht. Wenn der <see cref="P:System.Exception.InnerException" />-Parameter kein NULL-Verweis ist (<see langword="Nothing" /> in Visual Basic), wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a line number.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Klasse mit einer angegebenen Fehlermeldung und einer Zeilennummer.</summary>
      <param name="message" vsli:raw="The message for the exception.">Die Nachricht für die Ausnahme.</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">Die Zeilennummer der fehlerhaften Zeile.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Klasse mit einer angegebenen Fehlermeldung, einer Zeilennummer und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="The message for the exception.">Die Nachricht für die Ausnahme.</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">Die Zeilennummer der fehlerhaften Zeile.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">Die <see cref="T:System.Exception" />, die die aktuelle Ausnahme verursacht hat. Wenn der <see cref="P:System.Exception.InnerException" />-Parameter kein NULL-Verweis ist (<see langword="Nothing" /> in Visual Basic), wird die aktuelle Ausnahme in einem Catch-Block ausgelöst, der die innere Ausnahme verarbeitet.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with information about the exception.">Legt das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit Informationen zur Ausnahme fest.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">Die <see cref="T:System.Runtime.Serialization.StreamingContext" />-Struktur, die Kontextinformationen über die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary vsli:raw="Gets the line number of the malformed line.">Ruft die Zeilennummer der fehlerhaften Zeile ab.</summary>
      <returns vsli:raw="The line number of the malformed line.">Die Zeilennummer der fehlerhaften Zeile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current exception.">Erstellt eine Zeichenfolgendarstellung der aktuellen Ausnahme und gibt diese zurück.</summary>
      <returns vsli:raw="A string representation of the current exception.">Eine Zeichenfolgendarstellung der aktuellen Ausnahme.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary vsli:raw="Specifies whether a file should be deleted permanently or placed in the Recycle Bin.">Gibt an, ob eine Datei endgültig gelöscht oder in den Papierkorb verschoben werden soll.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary vsli:raw="Delete the file or directory permanently. Default.">Löscht die Datei oder das Verzeichnis dauerhaft. Standard.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary vsli:raw="Send the file or directory to the Recycle Bin.">Verschiebt die Datei oder das Verzeichnis in den Papierkorb.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary vsli:raw="Specifies whether to search all or only top-level directories.">Gibt an, ob alle Verzeichnisse oder nur die Verzeichnisse der obersten Ebene durchsucht werden sollen.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary vsli:raw="Search the specified directory and all subdirectories within it. Default.">Durchsucht das angegebene Verzeichnis und alle darin enthaltenen Unterverzeichnisse. Standard.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary vsli:raw="Search only the specified directory and exclude subdirectories.">Durchsucht nur das angegebene Verzeichnis und schließt die Unterverzeichnisse aus.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary vsli:raw="Provides properties for accessing commonly referenced directories.">Stellt Eigenschaften für den Zugriff auf häufig verwiesene Verzeichnisse bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories&quot; /&gt; class.">Gibt eine Instanz der <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />-Klasse zurück.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the all users.">Ruft einen Pfadnamen ab, der auf das Anwendungsdatenverzeichnis für alle Benutzer zeigt.</summary>
      <returns vsli:raw="The path to the Application Data directory for the all users.">Der Pfad zum Anwendungsdatenverzeichnis für alle Benutzer.</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission" vsli:raw="Controls access to system and user environment variables. Associated enumeration: &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;.">Steuert den Zugriff auf System- und Benutzerumgebungsvariablen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the current user.">Ruft einen Pfadnamen ab, der auf das Anwendungsdatenverzeichnis für den aktuellen Benutzer zeigt.</summary>
      <returns vsli:raw="The path to the Application Data directory for the current user.">Der Pfad zum Anwendungsdatenverzeichnis für den aktuellen Benutzer.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary vsli:raw="Gets a path name pointing to the Desktop directory.">Ruft einen Pfadnamen ab, der auf das Desktop-Verzeichnis zeigt.</summary>
      <returns vsli:raw="The path to the Desktop directory.">Der Pfad zum Desktopverzeichnis.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary vsli:raw="Gets a path name pointing to the My Documents directory.">Ruft einen Pfadnamen ab, der auf das Verzeichnis Eigene Dokumente zeigt.</summary>
      <returns vsli:raw="The path to the My Documents directory.">Der Pfad zum Verzeichnis Eigene Dateien.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary vsli:raw="Gets a path name pointing to the My Music directory.">Ruft einen Pfadnamen ab, der auf das Verzeichnis Eigene Musik zeigt.</summary>
      <returns vsli:raw="The path to the My Music directory.">Der Pfad zum Verzeichnis Eigene Musik.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary vsli:raw="Gets a path name pointing to the My Pictures directory.">Ruft einen Pfadnamen ab, der auf das Verzeichnis Eigene Bilder zeigt.</summary>
      <returns vsli:raw="The path to the My Pictures directory.">Der Pfad zum Verzeichnis Eigene Bilder.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary vsli:raw="Gets a path pointing to the Program Files directory.">Ruft einen Pfad ab, der auf das Verzeichnis Programme zeigt.</summary>
      <returns vsli:raw="The path to the Program Files directory.">Der Pfad zum Verzeichnis " Programme ".</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary vsli:raw="Gets a path name pointing to the Programs directory.">Ruft einen Pfadnamen ab, der auf das Verzeichnis Programme zeigt.</summary>
      <returns vsli:raw="The path to the Programs directory.">Der Pfad zum Verzeichnis Programme.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary vsli:raw="Gets a path name pointing to the Temp directory.">Ruft einen Pfadnamen ab, der auf das Temp-Verzeichnis zeigt.</summary>
      <returns vsli:raw="The path to the Temp directory.">Der Pfad zum Verzeichnis Temp.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary vsli:raw="Provides methods and properties for parsing structured text files.">Stellt Methoden und Eigenschaften zur Analyse strukturierter Textdateien bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="TextFieldParser" />-Klasse.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Der zu analysierende Datenstrom.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" /> kann nicht gelesen werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="TextFieldParser" />-Klasse.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Der zu analysierende Datenstrom.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Die zu verwendende Zeichencodierung, wenn die Codierung nicht aus der Datei ermittelt werden kann. Der Standardwert ist <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> oder <paramref name="defaultEncoding" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" /> kann nicht gelesen werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="TextFieldParser" />-Klasse.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Der zu analysierende Datenstrom.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Die zu verwendende Zeichencodierung, wenn die Codierung nicht aus der Datei ermittelt werden kann. Der Standardwert ist <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll. Der Standardwert ist <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> oder <paramref name="defaultEncoding" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" /> kann nicht gelesen werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="TextFieldParser" />-Klasse.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Der zu analysierende Datenstrom.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Die zu verwendende Zeichencodierung, wenn die Codierung nicht aus der Datei ermittelt werden kann. Der Standardwert ist <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll. Der Standardwert ist <see langword="True" />.</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to leave &lt;paramref name=&quot;stream&quot; /&gt; open when the &lt;see langword=&quot;TextFieldParser&quot; /&gt; object is closed. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" />. Gibt an, ob <paramref name="stream" /> geöffnet bleiben soll, wenn das <see langword="TextFieldParser" />-Objekt geschlossen wird. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> oder <paramref name="defaultEncoding" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">
        <paramref name="stream" /> kann nicht gelesen werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="TextFieldParser" />-Klasse.</summary>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;. The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; stream to be parsed.">
        <see cref="T:System.IO.TextReader" />. Der zu analysierende <see cref="T:System.IO.TextReader" />-Datenstrom.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="reader" /> ist <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="TextFieldParser" />-Klasse.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Der vollständige Pfad der zu analysierenden Datei.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string.">
        <paramref name="path" /> ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="TextFieldParser" />-Klasse.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Der vollständige Pfad der zu analysierenden Datei.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Die zu verwendende Zeichencodierung, wenn die Codierung nicht aus der Datei ermittelt werden kann. Der Standardwert ist <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> ist eine leere Zeichenfolge, oder <paramref name="defaultEncoding" /> ist <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Initialisiert eine neue Instanz der <see langword="TextFieldParser" />-Klasse.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Der vollständige Pfad der zu analysierenden Datei.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Die zu verwendende Zeichencodierung, wenn die Codierung nicht aus der Datei ermittelt werden kann. Der Standardwert ist <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll. Der Standardwert ist <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> ist eine leere Zeichenfolge, oder <paramref name="defaultEncoding" /> ist <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary vsli:raw="Closes the current &lt;see langword=&quot;TextFieldParser&quot; /&gt; object.">Schließt das aktuelle <see langword="TextFieldParser" />-Objekt.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary vsli:raw="Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.">Definiert Kommentartoken. Ein Kommentartoken ist eine Zeichenfolge am Anfang einer Zeile, die angibt, dass die Zeile ein Kommentar ist und vom Parser ignoriert werden soll.</summary>
      <returns vsli:raw="A string array that contains all of the comment tokens for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Ein Zeichenfolgenarray, das alle Kommentartoken für das <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A comment token includes white space.">Ein Kommentartoken enthält Leerzeichen.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary vsli:raw="Defines the delimiters for a text file.">Definiert die Trennzeichen für eine Textdatei.</summary>
      <returns vsli:raw="A string array that contains all of the field delimiters for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Ein Zeichenfolgenarray, das alle Feldtrennzeichen für das <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter value is set to a newline character, an empty string, or &lt;see langword=&quot;Nothing&quot; /&gt;.">Ein Trennzeichenwert wird auf ein Neue-Zeile-Zeichen, eine leere Zeichenfolge oder <see langword="Nothing" /> festgelegt.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary vsli:raw="Releases resources used by the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Gibt vom <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt verwendete Ressourcen frei.</summary>
      <param name="disposing" vsli:raw="Boolean. &lt;see langword=&quot;True&quot; /&gt; releases both managed and unmanaged resources; &lt;see langword=&quot;False&quot; /&gt; releases only unmanaged resources.">Boolesch. Bei <see langword="True" /> werden sowohl verwaltete als auch nicht verwaltete Ressourcen, bei <see langword="False" /> nur nicht verwaltete Ressourcen freigegeben.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if there are no non-blank, non-comment lines between the current cursor position and the end of the file.">Gibt <see langword="True" /> zurück, wenn sich zwischen der aktuellen Cursorposition und dem Dateiende keine Zeilen befinden, die nicht leer bzw. keine Kommentare sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if there is no more data to read; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn keine weiteren Daten gelesen werden, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary vsli:raw="Returns the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Gibt die Zeile zurück, die die letzte <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Ausnahme verursacht hat.</summary>
      <returns vsli:raw="The line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Die Zeile, die die letzte <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Ausnahme verursacht hat.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary vsli:raw="Returns the number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Gibt die Nummer der Zeile zurück, die die letzte <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Ausnahme verursacht hat.</summary>
      <returns vsli:raw="The number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Die Nummer der Zeile, die die letzte <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />-Ausnahme verursacht hat.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary vsli:raw="Denotes the width of each column in the text file being parsed.">Kennzeichnet die Breite der einzelnen Spalten in der Textdatei, die analysiert wird.</summary>
      <returns vsli:raw="An integer array that contains the width of each column in the text file that is being parsed.">Ein Array mit ganzen Zahlen, das die Breite jeder Spalte in der Textdatei enthält, die analysiert wird.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A width value in any location other than the last entry of the array is less than or equal to zero.">Ein Wert für die Breite eines beliebigen Eintrags außer dem letzten Eintrag des Arrays ist kleiner oder gleich 0 (null).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.">Ermöglicht es dem <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor dieser vom Garbage Collector wieder zugänglich gemacht wird.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary vsli:raw="Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.">Gibt beim Analysieren einer Datei mit Trennzeichen an, ob die Felder in Anführungszeichen eingeschlossen sind.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if fields are enclosed in quotation marks; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn Felder in Anführungszeichen eingeschlossen sind, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary vsli:raw="Returns the current line number, or returns -1 if no more characters are available in the stream.">Gibt die aktuelle Zeilennummer oder -1 zurück, wenn im Stream keine weiteren Zeichen verfügbar sind.</summary>
      <returns vsli:raw="The current line number.">Die aktuelle Zeilennummer.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary vsli:raw="Reads the specified number of characters without advancing the cursor.">Liest die angegebene Anzahl von Zeichen, ohne die Cursorposition zu ändern.</summary>
      <param name="numberOfChars" vsli:raw="The number of characters to read. Required.">
        <see langword="Int32" />. Anzahl der zu lesenden Zeichen. Erforderlich.</param>
      <returns vsli:raw="A string that contains the specified number of characters read.">Eine Zeichenfolge, die die angegebene Anzahl gelesener Zeichen enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;numberOfChars&quot; /&gt; is less than 0.">
        <paramref name="numberOfChars" /> ist kleiner als 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary vsli:raw="Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.">Liest alle Felder in der aktuellen Zeile, gibt sie als Zeichenfolgenarray zurück und setzt den Cursor in die nächste Zeile mit Daten.</summary>
      <returns vsli:raw="An array of strings that contains field values for the current line.">Ein Array von Zeichenfolgen, das Feldwerte für die aktuelle Zeile enthält.</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A field cannot be parsed by using the specified format.">Ein Feld kann mit dem angegebenen Format nicht analysiert werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary vsli:raw="Returns the current line as a string and advances the cursor to the next line.">Gibt die aktuelle Zeile als Zeichenfolge zurück und setzt den Cursor in die nächste Zeile.</summary>
      <returns vsli:raw="The current line from the file or stream.">Die aktuelle Zeile aus der Datei oder dem Datenstrom.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary vsli:raw="Reads the remainder of the text file and returns it as a string.">Liest die verbleibende Textdatei und gibt sie als Zeichenfolge zurück.</summary>
      <returns vsli:raw="The remaining text from the file or stream.">Der verbleibende Text aus der Datei oder dem Datenstrom.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values, and sets the field type to &lt;see langword=&quot;Delimited&quot; /&gt;.">Legt die Trennzeichen für den Reader auf die angegebenen Werte und den Feldtyp auf <see langword="Delimited" /> fest.</summary>
      <param name="delimiters" vsli:raw="Array of type &lt;see langword=&quot;String&quot; /&gt;.">Array vom Typ <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter is zero-length.">Ein Trennzeichen hat die Länge 0 (null).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values.">Legt die Trennzeichen für den Reader auf die angegebenen Werte fest.</summary>
      <param name="fieldWidths" vsli:raw="Array of &lt;see langword=&quot;Integer&quot; /&gt;.">Array von <see langword="Integer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>Gibt vom <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt verwendete Ressourcen frei.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary vsli:raw="Indicates whether the file to be parsed is delimited or fixed-width.">Gibt an, ob die zu analysierende Datei Trennzeichen enthält oder eine feste Breite aufweist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType&quot; /&gt; value that indicates whether the file to be parsed is delimited or fixed-width.">Ein <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />-Wert, der angibt, ob die zu analysierende Datei Trennzeichen enthält oder eine feste Breite aufweist.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary vsli:raw="Indicates whether leading and trailing white space should be trimmed from field values.">Gibt an, ob vorangestellte und nachfolgende Leerzeichen aus Feldwerten entfernt werden sollen.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if leading and trailing white space should be trimmed from field values; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" />, wenn vorangestellte und nachfolgende Leerzeichen aus Feldwerten entfernt werden sollen, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary vsli:raw="Specifies whether an exception is thrown if the user clicks Cancel during an operation.">Gibt an, ob eine Ausnahme ausgelöst wird, wenn der Benutzer während eines Vorgangs auf Abbrechen klickt.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary vsli:raw="Do nothing when the user clicks Cancel.">Wenn der Benutzer auf Abbrechen klickt, wird keine Aktion durchgeführt.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary vsli:raw="Throw an exception when the user clicks Cancel.">Wenn der Benutzer auf Abbrechen klickt, wird eine Ausnahme ausgelöst.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary vsli:raw="Specifies which dialog boxes to show when copying, deleting, or moving files or directories.">Gibt an, welche Dialogfelder beim Kopieren, Löschen oder Verschieben von Dateien oder Verzeichnissen angezeigt werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary vsli:raw="Show progress dialog box and any error dialog boxes.">Zeigt ein Statusdialogfeld und ggf. Fehlerdialogfelder an.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary vsli:raw="Only show error dialog boxes and hide progress dialog boxes. Default.">Zeigt nur Fehlerdialogfelder an und blendet Statusdialogfeldfelder aus. Standard.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary vsli:raw="The &lt;see langword=&quot;FileSystem&quot; /&gt; module contains the procedures that are used to perform file, directory or folder, and system operations. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than using the &lt;see langword=&quot;FileSystem&quot; /&gt; module. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Das <see langword="FileSystem" />-Modul enthält Prozeduren, mit denen Datei-, Verzeichnis- oder Ordner- und Systemoperationen ausgeführt werden. Das <see langword="My" />-Feature ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als bei Verwendung des <see langword="FileSystem" />-Moduls. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary vsli:raw="Changes the current directory or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;ChDir&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt; .">Ändert das aktuelle Verzeichnis oder den aktuellen Ordner. Das <see langword="My" />-Feature ermöglicht bei Datei-E/A-Vorgängen eine höhere Produktivität und Leistung als die <see langword="ChDir" />-Funktion. Weitere Informationen finden Sie unter <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies which directory or folder becomes the new default directory or folder. &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;ChDir&quot; /&gt; changes the default directory or folder on the current drive.">Erforderlich. Ein Zeichenfolgenausdruck, der das Verzeichnis oder den Ordner bezeichnet, das bzw. der zum neuen Verzeichnis oder Ordner wird. <paramref name="Path" /> enthält möglicherweise das Laufwerk. Wenn kein Laufwerk angegeben wird, ändert <see langword="ChDir" /> das Standardverzeichnis oder den Ordner in das aktuelle Laufwerk.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is empty.">
        <paramref name="Path" /> ist leer.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Angegebenes Laufwerk ungültig oder nicht verfügbar.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary vsli:raw="Changes the current drive.">Ändert das aktuelle Laufwerk.</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">Erforderlich. Zeichenfolgenausdruck, der ein vorhandenes Laufwerk angibt. Wenn Sie eine Zeichenfolge der Länge 0 (null) ("") angeben, ändert sich das aktuelle Laufwerk nicht. Wenn das <paramref name="Drive" />-Argument eine Zeichenfolge mit mehreren Zeichen ist, verwendet <see langword="ChDrive" /> nur den ersten Buchstaben.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Angegebenes Laufwerk ungültig oder nicht verfügbar.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary vsli:raw="Changes the current drive.">Ändert das aktuelle Laufwerk.</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">Erforderlich. Zeichenfolgenausdruck, der ein vorhandenes Laufwerk angibt. Wenn Sie eine Zeichenfolge der Länge 0 (null) ("") angeben, ändert sich das aktuelle Laufwerk nicht. Wenn das <paramref name="Drive" />-Argument eine Zeichenfolge mit mehreren Zeichen ist, verwendet <see langword="ChDrive" /> nur den ersten Buchstaben.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Angegebenes Laufwerk ungültig oder nicht verfügbar.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">Gibt eine Zeichenfolge mit dem aktuellen Pfad zurück. Das <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="CurDir" />. Weitere Informationen finden Sie unter <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns vsli:raw="A string representing the current path.">Eine Zeichenfolge mit dem aktuellen Pfad.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">Gibt eine Zeichenfolge mit dem aktuellen Pfad zurück. Das <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="CurDir" />. Weitere Informationen finden Sie unter <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Drive" vsli:raw="Optional. &lt;see langword=&quot;Char&quot; /&gt; expression that specifies an existing drive. If no drive is specified, or if &lt;paramref name=&quot;Drive&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;CurDir&quot; /&gt; returns the path for the current drive.">Dies ist optional. Ein <see langword="Char" />-Ausdruck, der ein vorhandenes Laufwerk angibt. Wenn kein Laufwerk angegeben wird oder <paramref name="Drive" /> eine Zeichenfolgen der Länge 0 (null) ("") ist, gibt <see langword="CurDir" /> den Pfad für das aktuelle Laufwerk zurück.</param>
      <returns vsli:raw="A string representing the current path.">Eine Zeichenfolge mit dem aktuellen Pfad.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">Gibt eine Zeichenfolge zurück, die den Namen einer Datei, eines Verzeichnisses oder eines Ordners darstellt, der einem bestimmten Muster oder Dateiattribut oder der Volumebezeichnung eines Laufwerks entspricht. Das <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als die <see langword="Dir" />-Funktion. Weitere Informationen finden Sie unter <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">Eine Zeichenfolge, die den Namen einer Datei, eines Verzeichnisses oder eines Ordners darstellt, der einem bestimmten Muster oder Dateiattribut oder der Volumebezeichnung eines Laufwerks entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">Gibt eine Zeichenfolge zurück, die den Namen einer Datei, eines Verzeichnisses oder eines Ordners darstellt, der einem bestimmten Muster oder Dateiattribut oder der Volumebezeichnung eines Laufwerks entspricht. Das <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als die <see langword="Dir" />-Funktion. Weitere Informationen finden Sie unter <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <param name="PathName" vsli:raw="Optional. A string expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string (&lt;see langword=&quot;&amp;quot;&amp;quot;&quot; /&gt;) is returned if &lt;paramref name=&quot;PathName&quot; /&gt; is not found.">Dies ist optional. Ein Zeichenfolgenausdruck, der einen Dateinamen, ein Verzeichnis, einen Ordnernamen oder eine Volumebezeichnung des Laufwerks angibt. Eine Zeichenfolge der Länge 0 (null) (<see langword="&quot;&quot;" />) wird zurückgegeben, wenn <paramref name="PathName" /> nicht gefunden wird.</param>
      <param name="Attributes" vsli:raw="Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, &lt;see langword=&quot;Dir&quot; /&gt; returns files that match &lt;paramref name=&quot;Pathname&quot; /&gt; but have no attributes.">Dies ist optional. Enumeration oder numerischer Ausdruck, dessen Wert Dateiattribute angibt. Wenn der Wert nicht angegeben wird, gibt <see langword="Dir" /> Dateien zurück, die mit <paramref name="Pathname" /> übereinstimmen, aber keine Attribute besitzen.</param>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">Eine Zeichenfolge, die den Namen einer Datei, eines Verzeichnisses oder eines Ordners darstellt, der einem bestimmten Muster oder Dateiattribut oder der Volumebezeichnung eines Laufwerks entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary vsli:raw="Returns a Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">Gibt den booleschen Wert <see langword="True" /> zurück, wenn das Ende einer für <see langword="Random" />- oder sequenziellen <see langword="Input" />-Zugriff geöffneten Datei erreicht wurde.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains any valid file number.">Erforderlich. Ein <see langword="Integer" /> mit einer beliebigen gültigen Dateinummer.</param>
      <returns vsli:raw="A Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">Ein boolescher Wert <see langword="True" />, wenn das Ende einer für <see langword="Random" /> oder sequenzielle <see langword="Input" /> geöffneten Datei erreicht wurde.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary vsli:raw="Returns an enumeration representing the file mode for files opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;FileAttr&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt; for more information.">Gibt eine Enumeration zurück, die den Dateimodus für Dateien darstellt, die mit der <see langword="FileOpen" />-Funktion geöffnet wurden. Das <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als die <see langword="FileAttr" />-Funktion. Weitere Informationen finden Sie unter <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="FileNumber" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Any valid file number.">Erforderlich. <see langword="Integer" />. Eine beliebige gültige Dateinummer.</param>
      <returns vsli:raw="One of the following values:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Value&lt;/term&gt;&lt;description&gt;File access mode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;1&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Input&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;2&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Output&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;4&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Random&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;8&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Append&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;32&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Binary&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Die folgenden Enumerationswerte geben den Dateizugriffsmodus an: 
  Wert 
  Modus 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary vsli:raw="Concludes input/output (I/O) to a file opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. &lt;see langword=&quot;My&quot; /&gt; gives you better productivity and performance in file I/O operations. See &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; for more information.">Schließt die Eingabe/Ausgabe (E/A) für eine Datei, die mit der <see langword="FileOpen" />-Funktion geöffnet wird. <see langword="My" /> ermöglicht bei Datei-E/A-Vorgängen eine höhere Produktivität und Leistung. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumbers" vsli:raw="Optional. Parameter array of 0 or more channels to be closed.">Dies ist optional. Parameterarray von 0 oder mehr zu schließenden Channels.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> existiert nicht.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary vsli:raw="Copies a file. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileCopy&quot; /&gt;. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)&quot; /&gt; for more information.">Kopiert eine Datei Das <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="FileCopy" />. Weitere Informationen finden Sie unter <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</summary>
      <param name="Source" vsli:raw="Required. A string expression that specifies the name of the file to be copied. &lt;paramref name=&quot;Source&quot; /&gt; may include the directory or folder, and drive, of the source file.">Erforderlich. Ein Zeichenfolgenausdruck, der den Namen der zu kopierenden Datei angibt. <paramref name="Source" /> kann das Verzeichnis oder den Ordner sowie das Laufwerk der Quelldatei beinhalten.</param>
      <param name="Destination" vsli:raw="Required. A string expression that specifies the destination file name. &lt;paramref name=&quot;Destination&quot; /&gt; may include the directory or folder, and drive, of the destination file.">Erforderlich. Ein Zeichenfolgenausdruck, der den Zieldateinamen angibt. <paramref name="Destination" /> kann das Verzeichnis oder den Ordner sowie das Laufwerk der Zieldatei beinhalten.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; or &lt;paramref name=&quot;Destination&quot; /&gt; is invalid or not specified.">
        <paramref name="Source" /> oder <paramref name="Destination" /> ist ungültig oder nicht angegeben.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File is already open.">Datei ist bereits geöffnet.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">Die Datei ist nicht vorhanden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was written to. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileDateTime&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">Gibt einen <see langword="Date" />-Wert zurück, der Datum und Uhrzeit des Schreibvorgangs in einer Datei angibt. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileDateTime" />. Weitere Informationen finden Sie unter <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">Erforderlich. Ein Zeichenfolgenausdruck, der einen Dateinamen angibt. <paramref name="PathName" /> kann das Verzeichnis bzw. den Ordner und das Laufwerk enthalten.</param>
      <returns vsli:raw="&lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was created or last modified.">Ein <see langword="Date" />-Wert, der Datum und Uhrzeit der Erstellung oder letzten Änderung der Datei angibt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;PathName&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="PathName" /> ist ungültig oder enthält Platzhalterzeichen.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">Zieldatei ist nicht vorhanden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.">Dies ist optional. Betrifft nur das Schreiben eines Arrays. Gibt an, ob das Array als dynamisches Array behandelt werden soll und ein Arraydeskriptor erforderlich ist, der die Größe und die Begrenzungen des Arrays beschreibt.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">Dies ist optional. Betrifft nur das Schreiben einer Zeichenfolge. Gibt an, ob ein 2-Byte-Deskriptor für die Zeichenfolge geschrieben werden soll, der die Länge beschreibt. Die Standardeinstellung ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">Dies ist optional. Betrifft nur das Schreiben einer Zeichenfolge. Gibt an, ob ein 2-Byte-Deskriptor für die Zeichenfolge geschrieben werden soll, der die Länge beschreibt. Die Standardeinstellung ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable. Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGet" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGetObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Liest Daten aus einer offenen Datenträgerdatei in eine Variable.  Die <see langword="My" />-Funktion bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileGetObject" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Erforderlich. Der gültige Name einer Variablen, in die Daten gelesen werden.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), bei der der Lesevorgang beginnt.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary vsli:raw="Returns a value that specifies the length of a file in bytes. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileLen&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">Gibt einen Wert zurück, der die Länge einer Datei in Byte angibt. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileLen" />. Weitere Informationen finden Sie unter <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">Erforderlich. Ein Zeichenfolgenausdruck, der eine Datei angibt. <paramref name="PathName" /> kann das Verzeichnis bzw. den Ordner und das Laufwerk enthalten.</param>
      <returns vsli:raw="The length of a file in bytes.">Die Länge einer Datei in Byte.</returns>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">Die Datei ist nicht vorhanden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary vsli:raw="Opens a file for input or output. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileOpen&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Öffnet eine Datei für Eingabe oder Ausgabe. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileOpen" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number. Use the &lt;see langword=&quot;FreeFile&quot; /&gt; function to obtain the next available file number.">Erforderlich. Eine beliebige gültige Dateinummer. Verwenden Sie die <see langword="FreeFile" />-Funktion, um die nächste verfügbare Dateinummer zu erhalten.</param>
      <param name="FileName" vsli:raw="Required. A string expression that specifies a file name - may include directory or folder, and drive.">Erforderlich. Ein Zeichenfolgenausdruck, der einen Dateinamen angibt. Kann das Verzeichnis oder den Ordner und das Laufwerk enthalten.</param>
      <param name="Mode" vsli:raw="Required. Enumeration specifying the file mode: &lt;see langword=&quot;Append&quot; /&gt;, &lt;see langword=&quot;Binary&quot; /&gt;, &lt;see langword=&quot;Input&quot; /&gt;, &lt;see langword=&quot;Output&quot; /&gt;, or &lt;see langword=&quot;Random&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenMode&quot; /&gt; .">Erforderlich. Eine Enumeration, die den Dateimodus angibt: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> oder <see langword="Random" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.OpenMode" />.</param>
      <param name="Access" vsli:raw="Optional. Enumeration specifying the operations permitted on the open file: &lt;see langword=&quot;Read&quot; /&gt;, &lt;see langword=&quot;Write&quot; /&gt;, or &lt;see langword=&quot;ReadWrite&quot; /&gt;. Defaults to &lt;see langword=&quot;ReadWrite&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenAccess&quot; /&gt; .">Dies ist optional. Eine Enumeration, die die für eine offene Datei erlaubten Operationen angibt: <see langword="Read" />, <see langword="Write" /> oder <see langword="ReadWrite" />. Wird standardmäßig auf <see langword="ReadWrite" /> festgelegt. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</param>
      <param name="Share" vsli:raw="Optional. Enumeration specifying the operations not permitted on the open file by other processes: &lt;see langword=&quot;Shared&quot; /&gt;, &lt;see langword=&quot;Lock Read&quot; /&gt;, &lt;see langword=&quot;Lock Write&quot; /&gt;, and &lt;see langword=&quot;Lock Read Write&quot; /&gt;. Defaults to &lt;see langword=&quot;Lock Read Write&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenShare&quot; /&gt; .">Dies ist optional. Eine Enumeration, die für eine offene Datei aus anderen Prozessen nicht erlaubten Operationen angibt: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> und <see langword="Lock Read Write" />. Wird standardmäßig auf <see langword="Lock Read Write" /> festgelegt. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.OpenShare" />.</param>
      <param name="RecordLength" vsli:raw="Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.">Dies ist optional. Eine Zahl kleiner oder gleich 32.767 (Bytes). Bei Dateien, die mit Random-Zugriff geöffnet wurden, ist dieser Wert die Datensatzlänge. Bei sequenziellen Dateien ist dieser Wert die Anzahl von gepufferten Zeichen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Record length is negative (and not equal to -1).">Datensatzlänge ist negativ (und nicht gleich -1).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileName&quot; /&gt; is already open, or &lt;paramref name=&quot;FileName&quot; /&gt; is invalid.">
        <paramref name="FileName" /> ist bereits geöffnet, oder <paramref name="FileName" /> ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.">Dies ist optional. Betrifft nur das Schreiben eines Arrays. Gibt an, ob das Array als dynamisches Array behandelt werden soll und ein Arraydeskriptor für die Zeichenfolge erforderlich ist, der die Länge beschreibt.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">Dies ist optional. Betrifft nur das Schreiben einer Zeichenfolge. Gibt an, ob ein 2-Byte-Zeichenfolgenlängendeskriptor in die Datei für die Zeichenfolge geschrieben werden soll. Die Standardeinstellung ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">Dies ist optional. Betrifft nur das Schreiben einer Zeichenfolge. Gibt an, ob ein 2-Byte-Zeichenfolgenlängendeskriptor in die Datei für die Zeichenfolge geschrieben werden soll. Die Standardeinstellung ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePut" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 und ungleich –1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePutObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schreibt Daten aus einer Variablen in eine Datei auf einem Datenträger.  Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FilePutObject" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Erforderlich. Gültiger Variablenname, der auf den Datenträger geschriebene Daten enthält.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Dies ist optional. Datensatznummer (Dateien im <see langword="Random" />-Modus) oder Bytenummer (Dateien im <see langword="Binary" />-Modus), an der der Schreibvorgang beginnt.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary vsli:raw="Assigns an output line width to a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Weist einer Datei, die mit der <see langword="FileOpen" />-Funktion geöffnet wurde, eine Ausgabezeilenbreite zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="RecordWidth" vsli:raw="Required. Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started. If &lt;paramref name=&quot;RecordWidth&quot; /&gt; equals 0, there is no limit to the length of a line. The default value for &lt;paramref name=&quot;RecordWidth&quot; /&gt; is 0.">Erforderlich. Ein numerischer Ausdruck im Bereich 0–255 einschließlich, der angibt, wie viele Zeichen auf einer Zeile stehen, bevor eine neue Zeile beginnt. Wenn <paramref name="RecordWidth" /> gleich 0 ist, ist die Länge einer Zeile unbegrenzt. Der Standardwert von <paramref name="RecordWidth" /> ist 0.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Gibt einen <see langword="Integer" />-Wert zurück, der die nächste zur Verwendung durch die <see langword="FileOpen" />-Funktion verfügbare Dateinummer darstellt.</summary>
      <returns vsli:raw="An integer value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Ein ganzzahliger Wert, der die nächste für die Funktion <see langword="FileOpen" /> verfügbare Dateinummer angibt.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="More than 255 files are in use.">Mehr als 255 Dateien verwendet.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;FileAttribute&quot; /&gt; value that represents the attributes of a file, directory, or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileAttribute&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Gibt einen <see langword="FileAttribute" />-Wert zurück, der die Attribute einer Datei, eines Verzeichnisses oder eines Ordners darstellt. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="FileAttribute" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file, directory, or folder name. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">Erforderlich. Ein Zeichenfolgenausdruck, der einen Datei-, Verzeichnis- oder Ordnernamen angibt. <paramref name="PathName" /> kann auch das Verzeichnis oder den Ordner sowie das Laufwerk beinhalten.</param>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Eine bitweise Kombination der Enumerationswerte.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;Pathname&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="Pathname" /> ist ungültig oder enthält Platzhalterzeichen.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">Zieldatei ist nicht vorhanden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Liest Daten aus einer geöffneten sequenziellen Datei und weist diese Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Erforderlich. Eine Variable, der die aus der Datei gelesenen Werte zugewiesen werden, kann kein Array und keine Objektvariable sein.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary vsli:raw="Returns &lt;see langword=&quot;String&quot; /&gt; value that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Gibt einen <see langword="String" />-Wert zurück, der Zeichen aus einer im Modus <see langword="Input" /> oder <see langword="Binary" /> geöffneten Datei enthält. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="InputString" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="CharCount" vsli:raw="Required. Any valid numeric expression specifying the number of characters to read.">Erforderlich. Ein beliebiger gültiger numerischer Ausdruck, der die Anzahl der zu lesenden Zeichen angibt.</param>
      <returns vsli:raw="A string that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;.">Eine Zeichenfolge, die Zeichen aus einer im <see langword="Input" />- oder <see langword="Binary" />-Modus geöffneten Datei enthält. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="InputString" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> existiert nicht.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCount&quot; /&gt; &amp;lt; 0 or &amp;gt; 214.">
        <paramref name="CharCount" /> &lt; 0 oder &gt; 214.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary vsli:raw="Deletes files from a disk. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Kill&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; .">Löscht Dateien von einem Datenträger. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="Kill" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies one or more file names to be deleted. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">Erforderlich. Ein Zeichenfolgenausdruck, der einen oder mehrere Namen von zu löschenden Dateien angibt. <paramref name="PathName" /> kann auch das Verzeichnis oder den Ordner sowie das Laufwerk beinhalten.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Target file(s) open.">Zieldatei(en) geöffnet.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file(s) not found.">Zieldatei(en) nicht gefunden.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">Berechtigung verweigert.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">Liest eine einzelne Zeile aus einer offenen sequenziellen Datei und weist diese einer <see langword="String" />-Variablen zu.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <returns vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">Liest eine einzelne Zeile aus einer offenen sequenziellen Datei und weist diese einer <see langword="String" />-Variablen zu.</returns>
      <exception cref="T:System.IO.EndOfStreamException" vsli:raw="End of file reached.">Dateiende erreicht.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> existiert nicht.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary vsli:raw="Returns a value that specifies the current read/write position in an open file.">Gibt einen Wert zurück, der die aktuelle Lese-/Schreibposition in einer geöffneten Datei angibt.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid &lt;see langword=&quot;Integer&quot; /&gt; file number.">Erforderlich. Eine beliebige gültige <see langword="Integer" />-Dateinummer.</param>
      <returns vsli:raw="The current read/write position in an open file.">Die aktuelle Lese- oder Schreibposition in einer geöffneten Datei.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Steuert den Zugriff durch andere Prozesse auf die gesamte mithilfe der <see langword="Open" />-Funktion geöffnete Datei oder einen Teil davon. Das <see langword="My" />-Feature ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="Lock" /> und <see langword="Unlock" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Steuert den Zugriff durch andere Prozesse auf die gesamte mithilfe der <see langword="Open" />-Funktion geöffnete Datei oder einen Teil davon. Das <see langword="My" />-Feature ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="Lock" /> und <see langword="Unlock" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">Optional. Die Nummer des einzigen zu sperrenden oder zu entsperrenden Datensatzes.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Steuert den Zugriff durch andere Prozesse auf die gesamte mithilfe der <see langword="Open" />-Funktion geöffnete Datei oder einen Teil davon. Das <see langword="My" />-Feature ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="Lock" /> und <see langword="Unlock" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">Optional. Die Nummer des ersten zu sperrenden oder zu entsperrenden Datensatzes.</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">Dies ist optional. Die Nummer des letzten zu sperrenden oder zu entsperrenden Datensatzes.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary vsli:raw="Returns the size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Gibt die Größe in Byte einer mithilfe der <see langword="FileOpen" />-Funktion geöffneten Datei zurück. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="LOF" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An integer that contains a valid file number.">Erforderlich. Ein ganzzahliger Wert, der eine gültige Dateinummer enthält.</param>
      <returns vsli:raw="The size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;.">Gibt die Größe in Byte einer mithilfe der <see langword="FileOpen" />-Funktion geöffneten Datei zurück. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="LOF" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary vsli:raw="Creates a new directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;MkDir&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)&quot; /&gt;.">Erstellt ein neues Verzeichnis. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="MkDir" />. Weitere Informationen finden Sie unter <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory to be created. The &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;MkDir&quot; /&gt; creates the new directory on the current drive.">Erforderlich. Ein Zeichenfolgenausdruck, der das zu erstellende Verzeichnis angibt. <paramref name="Path" /> enthält möglicherweise das Laufwerk. Wenn kein Laufwerk angegeben wird, erstellt <see langword="MkDir" /> das neue Verzeichnis auf dem aktuellen Laufwerk.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> ist nicht angegeben oder leer.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">Berechtigung verweigert.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Directory already exists.">Verzeichnis ist bereits vorhanden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">Schreibt für die Anzeige formatierte Daten in eine sequenzielle Datei.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">Optional. 0 (null) oder mehrere durch Trennzeichen getrennte Ausdrücke, die in eine Datei geschrieben werden sollen.  
Die <paramref name="Output" />-Argumenteinstellungen lauten: 
 <see langword="T:System.IO.IOException" />: Dateimodus ist ungültig.  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> existiert nicht.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">Schreibt für die Anzeige formatierte Daten in eine sequenzielle Datei.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">Dies ist optional. 0 (null) oder mehrere durch Trennzeichen getrennte Ausdrücke, die in eine Datei geschrieben werden sollen.  
Die <paramref name="Output" />-Argumenteinstellungen lauten: 
 <see langword="T:System.IO.IOException" />: Dateimodus ist ungültig.  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> existiert nicht.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary vsli:raw="Renames a disk file or directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Rename&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Benennt eine Datenträgerdatei oder ein Verzeichnis um. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="Rename" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath" vsli:raw="Required. A string expression that specifies the existing file name and location. &lt;paramref name=&quot;OldPath&quot; /&gt; may include the directory, and drive, of the file.">Erforderlich. Ein Zeichenfolgenausdruck, der den Namen und den Speicherort der vorhandenen Datei angibt. <paramref name="OldPath" /> kann das Verzeichnis und das Laufwerk der Datei beinhalten.</param>
      <param name="NewPath" vsli:raw="Required. A string expression that specifies the new file name and location. &lt;paramref name=&quot;NewPath&quot; /&gt; may include directory and drive of the destination location. The file name specified by &lt;paramref name=&quot;NewPath&quot; /&gt; cannot already exist.">Erforderlich. Ein Zeichenfolgenausdruck, der den Namen und den Speicherort der neuen Datei angibt. <paramref name="NewPath" /> kann das Verzeichnis und das Laufwerk des Zielspeicherorts beinhalten. Der durch <paramref name="NewPath" /> angegebene Dateiname darf noch nicht vorhanden sein.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Path is invalid.">Der Pfad ist ungültig.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;OldPath&quot; /&gt; file does not exist.">Die <paramref name="OldPath" />-Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Cannot rename to different device.">Kann nicht auf anderes Gerät umbenannt werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary vsli:raw="Closes all disk files opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Reset&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Schließt alle mit der <see langword="FileOpen" />-Funktion geöffneten Datenträgerdateien. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="Reset" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary vsli:raw="Removes an existing directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;RmDir&quot; /&gt;. For more information, see &lt;see cref=&quot;Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory&quot; /&gt;.">Entfernt ein vorhandenes Verzeichnis. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="RmDir" />. Weitere Informationen finden Sie unter <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory or folder to be removed. &lt;paramref name=&quot;Path&quot; /&gt; can include the drive. If no drive is specified, &lt;see langword=&quot;RmDir&quot; /&gt; removes the directory on the current drive.">Erforderlich. Ein Zeichenfolgenausdruck, der das zu entfernende Verzeichnis oder den zu entfernenden Ordner angibt. <paramref name="Path" /> kann das Laufwerk enthalten. Wenn kein Laufwerk angegeben wird, entfernt <see langword="RmDir" /> das Verzeichnis vom aktuellen Laufwerk.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> ist nicht angegeben oder leer.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Target directory contains files.">Zielverzeichnis enthält Dateien.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Directory does not exist.">Verzeichnis ist nicht vorhanden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Gibt einen <see langword="Long" />-Wert zurück, der die aktuelle Lese-/Schreibposition innerhalb einer mithilfe der <see langword="FileOpen" />-Funktion geöffneten Datei angibt, oder legt die Position des nächsten Lese-/Schreibvorgangs innerhalb einer mithilfe der <see langword="FileOpen" />-Funktion geöffneten Datei fest. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="Seek" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">Erforderlich. Ein <see langword="Integer" /> mit einer gültigen Dateinummer.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Ein <see langword="Long" />-Wert, der die aktuelle Lese-/Schreibposition innerhalb einer mithilfe der <see langword="FileOpen" />-Funktion geöffneten Datei angibt oder die Position des nächsten Lese-/Schreibvorgangs innerhalb einer mithilfe der <see langword="FileOpen" />-Funktion geöffneten Datei festlegt.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Gibt einen <see langword="Long" />-Wert zurück, der die aktuelle Lese-/Schreibposition innerhalb einer mithilfe der <see langword="FileOpen" />-Funktion geöffneten Datei angibt, oder legt die Position des nächsten Lese-/Schreibvorgangs innerhalb einer mithilfe der <see langword="FileOpen" />-Funktion geöffneten Datei fest. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="Seek" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">Erforderlich. Ein <see langword="Integer" /> mit einer gültigen Dateinummer.</param>
      <param name="Position" vsli:raw="Required. Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.">Erforderlich. Eine Zahl im Bereich 1–2.147.483.647 einschließlich, die angibt, wo die nächste Lese-/Schreiboperation erfolgen soll.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Sets attribute information for a file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;SetAttr&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Legt Attributinformationen für eine Datei fest. Das <see langword="My" />-Feature bietet höhere Produktivität und Leistung bei Datei-E/A-Vorgängen als <see langword="SetAttr" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; can include directory or folder, and drive.">Erforderlich. Ein Zeichenfolgenausdruck, der einen Dateinamen angibt. <paramref name="PathName" /> kann auch das Verzeichnis oder den Ordner sowie das Laufwerk beinhalten.</param>
      <param name="Attributes" vsli:raw="Required. Constant or numeric expression, whose sum specifies file attributes.">Erforderlich. Konstanter oder numerischer Ausdruck, dessen Summe Dateiattribute angibt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Attribute&quot; /&gt; type is invalid.">
        <paramref name="Attribute" />-Typ ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">Wird mit der <see langword="Print" />-Funktion oder der <see langword="PrintLine" />-Funktion zum Positionieren der Ausgabe verwendet.</summary>
      <param name="Count" vsli:raw="Required. The number of spaces to insert before displaying or printing the next expression in a list.">Erforderlich. Die Anzahl von Leerzeichen, die vor dem Anzeigen oder Ausgeben des nächsten Ausdrucks in einer Liste eingefügt werden sollen.</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">Wird mit der <see langword="Print" />-Funktion oder der <see langword="PrintLine" />-Funktion zum Positionieren der Ausgabe verwendet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">Wird mit der <see langword="Print" />-Funktion oder der <see langword="PrintLine" />-Funktion zum Positionieren der Ausgabe verwendet.</summary>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">Wird mit der <see langword="Print" />-Funktion oder der <see langword="PrintLine" />-Funktion zum Positionieren der Ausgabe verwendet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">Wird mit der <see langword="Print" />-Funktion oder der <see langword="PrintLine" />-Funktion zum Positionieren der Ausgabe verwendet.</summary>
      <param name="Column" vsli:raw="Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, &lt;see langword=&quot;TAB&quot; /&gt; moves the insertion point to the start of the next print zone.">Dies ist optional. Die Spaltennummer, zu der vor dem Anzeigen oder Drucken des nächsten Ausdrucks in einer Liste gewechselt wird. Wenn der Wert nicht angegeben wird, verschiebt <see langword="TAB" /> die Einfügemarke an den Anfang der nächsten Ausgabezone.</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">Wird mit der <see langword="Print" />-Funktion oder der <see langword="PrintLine" />-Funktion zum Positionieren der Ausgabe verwendet.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Steuert den Zugriff durch andere Prozesse auf die gesamte mithilfe der <see langword="Open" />-Funktion geöffnete Datei oder einen Teil davon. Das <see langword="My" />-Feature ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="Lock" /> und <see langword="Unlock" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Steuert den Zugriff durch andere Prozesse auf die gesamte mithilfe der <see langword="Open" />-Funktion geöffnete Datei oder einen Teil davon. Das <see langword="My" />-Feature ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="Lock" /> und <see langword="Unlock" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">Dies ist optional. Die Nummer des einzigen zu sperrenden oder zu entsperrenden Datensatzes.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Steuert den Zugriff durch andere Prozesse auf die gesamte mithilfe der <see langword="Open" />-Funktion geöffnete Datei oder einen Teil davon. Das <see langword="My" />-Feature ermöglicht bei Datei-E/A-Vorgängen höhere Produktivität und Leistung als <see langword="Lock" /> und <see langword="Unlock" />. Weitere Informationen finden Sie unter <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Erforderlich. Eine beliebige gültige Dateinummer.</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">Optional. Die Nummer des ersten zu sperrenden oder zu entsperrenden Datensatzes.</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">Dies ist optional. Die Nummer des letzten zu sperrenden oder zu entsperrenden Datensatzes.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">Schreibt Daten in eine sequenzielle Datei. Mit <see langword="Write" /> geschriebene Daten werden in der Regel mit <see langword="Input" /> aus einer Datei gelesen.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">Erforderlich. Ein <see langword="Integer" />-Ausdruck, der eine beliebige gültige Dateinummer enthält.</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">Dies ist optional. Ein Ausdruck oder mehrere, durch Trennzeichen getrennte Ausdrücke, die in eine Datei geschrieben werden sollen.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">Dateimodus ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">Schreibt Daten in eine sequenzielle Datei. Mit <see langword="Write" /> geschriebene Daten werden in der Regel mit <see langword="Input" /> aus einer Datei gelesen.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">Erforderlich. Ein <see langword="Integer" />-Ausdruck, der eine beliebige gültige Dateinummer enthält.</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">Dies ist optional. Ein Ausdruck oder mehrere, durch Trennzeichen getrennte Ausdrücke, die in eine Datei geschrieben werden sollen.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary vsli:raw="The &lt;see langword=&quot;Financial&quot; /&gt; module contains procedures used to perform financial operations.">Das <see langword="Financial" />-Modul enthält Prozeduren, mit denen finanzielle Operationen ausgeführt werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">Gibt einen Wert zurück, der die Abschreibung eines Vermögenswerts über einen bestimmten Zeitraum mithilfe der geometrisch degressiven Abschreibungsmethode oder einer von Ihnen gewählten Methode angibt.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Erforderlich. Die Anschaffungskosten des Vermögenswerts.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Erforderlich. Der Wert des Vermögenswerts am Ende seiner Nutzungsdauer.</param>
      <param name="Life" vsli:raw="Required. The length of useful life of the asset.">Erforderlich. Die Länge der Nutzungsdauer des Vermögenswerts.</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">Erforderlich. Der Zeitraum für den die Abschreibung des Vermögenswerts berechnet wird.</param>
      <param name="Factor" vsli:raw="Optional. The rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.">Dies ist optional. Der Faktor, um den der Wert vermindert wird. Wird der Wert nicht angegeben, so wird 2 (geometrisch degressive Methode) angenommen.</param>
      <returns vsli:raw="The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">Die Abschreibung eines Vermögenswerts über einen bestimmten Zeitraum mithilfe der geometrisch degressiven Abschreibungsmethode oder einer von Ihnen gewählten Methode.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Factor&quot; /&gt; &amp;lt;= 0, &lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;= 0, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;.">
        <paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, oder <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.">Gibt einen Wert zurück, der den zukünftigen Wert einer Annuität bei regelmäßigen, konstanten Zahlungsausgängen und einem konstanten Zinssatz angibt.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Erforderlich. Der Zinssatz pro Zeitraum. Wenn Sie beispielsweise einen Kredit für ein Auto mit einem Jahreszins von 10 Prozent aufnehmen und monatliche Zahlungen vereinbart haben, beträgt der Zinssatz pro Zeitraum 0,1 dividiert durch 12 oder 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Erforderlich. Die Gesamtzahl der Zahlungszeiträume für die Annuität. Wenn Sie beispielsweise monatliche Zahlungen für einen Autokredit mit vierjähriger Laufzeit vereinbart haben, beträgt die Summe der Zahlungszeiträume für den Kredit 4 x 12 (oder 48).</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">Erforderlich. Die in jedem Zeitraum zu leistende Zahlung. Die Zahlungen enthalten in der Regel Kapital und Zinsen und ändern sich während der Laufzeit einer Annuität nicht.</param>
      <param name="PV" vsli:raw="Optional. The present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.">Optional. Der Barwert (oder Gesamtbetrag) einer Folge zukünftiger Zahlungen. Wenn Sie beispielsweise einen Kredit für einen Autokauf aufnehmen, stellt die Kredithöhe für den Kreditgeber den Barwert der von Ihnen zu leistenden monatlichen Zahlungen dar. Wenn der Wert nicht angegeben wird, wird 0 angenommen.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; if payments are due at the end of the payment period, or &lt;see langword=&quot;DueDate.BegOfPeriod&quot; /&gt; if payments are due at the beginning of the period. If omitted, &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; is assumed.">Optional. Ein Objekt vom Typ <see cref="T:Microsoft.VisualBasic.DueDate" />, das den Fälligkeitszeitpunkt einer Zahlung angibt. Dieses Argument muss entweder <see langword="DueDate.EndOfPeriod" /> sein, wenn die Zahlungen am Ende des Zahlungszeitraums fällig sind, oder <see langword="DueDate.BegOfPeriod" />, wenn die Zahlungen zu Beginn des Zeitraums fällig sind. Wird der Wert nicht angegeben, so wird <see langword="DueDate.EndOfPeriod" /> angenommen.</param>
      <returns vsli:raw="The future value of an annuity based on periodic, fixed payments and a fixed interest rate.">Der zukünftige Wert einer Annuität bei regelmäßigen, konstanten Zahlungsausgängen und einem konstanten Zinssatz.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">Gibt einen Wert zurück, der die Zinszahlung für einen bestimmten Zeitraum einer Annuität bei regelmäßigen, konstanten Zahlungen und einem konstanten Zinssatz angibt.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Erforderlich. Der Zinssatz pro Zeitraum. Wenn Sie beispielsweise einen Kredit für ein Auto mit einem Jahreszins von 10 Prozent aufnehmen und monatliche Zahlungen vereinbart haben, beträgt der Zinssatz pro Zeitraum 0,1 dividiert durch 12 oder 0,0083.</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">Erforderlich. Der Zahlungszeitraum im Bereich von 1 bis <paramref name="NPer" />.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Erforderlich. Die Gesamtzahl der Zahlungszeiträume für die Annuität. Wenn Sie beispielsweise monatliche Zahlungen für einen Autokredit mit vierjähriger Laufzeit vereinbart haben, beträgt die Summe der Zahlungszeiträume für den Kredit 4 x 12 (oder 48).</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Erforderlich. Der Barwert oder heutige Wert einer Folge zukünftiger Einnahmen oder Ausgaben. Wenn Sie beispielsweise einen Kredit für einen Autokauf aufnehmen, stellt die Kredithöhe für den Kreditgeber den Barwert der von Ihnen zu leistenden monatlichen Zahlungen dar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Optional. Der zukünftige Wert oder Kassenbestand, der nach der letzten Zahlung erreicht sein soll. Der Endwert eines Kredits ist z. B. 0 Euro, da dies die Kredithöhe nach der letzten Zahlung ist. Wenn Sie jedoch für die Ausbildung Ihrer Kinder 50.000 Euro in 18 Jahren ansparen möchten, entspricht der Endwert 50.000 Euro. Wenn der Wert nicht angegeben wird, wird 0 angenommen.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Dies ist optional. Ein Objekt vom Typ <see cref="T:Microsoft.VisualBasic.DueDate" />, das den Fälligkeitszeitpunkt einer Zahlung angibt. Dieses Argument muss entweder <c>DueDate.EndOfPeriod</c> sein, wenn die Zahlungen am Ende des Zahlungszeitraums fällig sind, oder <c>DueDate.BegOfPeriod</c>, wenn die Zahlungen zu Beginn des Zeitraums fällig sind. Wenn der Wert nicht angegeben wird, wird <c>DueDate.EndOfPeriod</c> angenommen.</param>
      <returns vsli:raw="The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">Die Zinszahlung für einen bestimmten Zeitraum einer Annuität bei regelmäßigen, konstanten Zahlungen und einem konstanten Zinssatz.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;">
        <paramref name="Per" /> &lt;= 0 oder <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary vsli:raw="Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).">Gibt einen Wert zurück, der den internen Ertragssatz für eine Folge regelmäßiger Cashflows (Aus- und Einzahlungen) angibt.</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Erforderlich. Ein Array von Werten des Typs <see langword="Double" />, die Cashflowwerte enthalten. Das Array muss mindestens einen negativen Wert (Zahlungsausgang) und einen positiven Wert (Zahlungseingang) enthalten.</param>
      <param name="Guess" vsli:raw="Optional. Object specifying value you estimate will be returned by &lt;see langword=&quot;IRR&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">Dies ist optional. Ein Objekt, das einen von Ihnen geschätzten Wert enthält, der von <see langword="IRR" /> zurückgegeben wird. Wird der Wert nicht angegeben, so ist <paramref name="Guess" /> gleich 0,1 (10 Prozent).</param>
      <returns vsli:raw="The internal rate of return for a series of periodic cash flows (payments and receipts).">Der interne Ertragssatz für eine Folge regelmäßiger Cashflows (Aus- und Einzahlungen).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Array argument values are invalid or &lt;paramref name=&quot;Guess&quot; /&gt; &amp;lt;= -1.">Arrayargumentwerte sind ungültig oder <paramref name="Guess" /> &lt;= –1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).">Gibt einen Wert zurück, der den geänderten internen Ertragssatz für eine Folge regelmäßiger Cashflows (Aus- und Einzahlungen) angibt.</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Erforderlich. Ein Array von Werten des Typs <see langword="Double" />, die Cashflowwerte enthalten. Das Array muss mindestens einen negativen Wert (Zahlungsausgang) und einen positiven Wert (Zahlungseingang) enthalten.</param>
      <param name="FinanceRate" vsli:raw="Required. The interest rate paid as the cost of financing.">Erforderlich. Der Zinssatz, der als Finanzierungskosten anfällt.</param>
      <param name="ReinvestRate" vsli:raw="Required. The interest rate received on gains from cash reinvestment.">Erforderlich. Der Zinssatz, der bei erneuter Anlage von Kapital erzielt werden kann.</param>
      <returns vsli:raw="The modified internal rate of return for a series of periodic cash flows (payments and receipts).">Der geänderte interne Ertragssatz für eine Folge regelmäßiger Cashflows (Aus- und Einzahlungen).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; does not equal 1, &lt;paramref name=&quot;FinanceRate&quot; /&gt; = -1, or &lt;paramref name=&quot;ReinvestRate&quot; /&gt; = -1">Rang von <paramref name="ValueArray" /> ist ungleich 1, <paramref name="FinanceRate" /> = -1 oder <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException" vsli:raw="Division by zero has occurred.">Division durch 0 (null) durchgeführt.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">Gibt einen Wert zurück, der die Anzahl der Zeiträume für eine Annuität bei regelmäßigen, konstanten Zahlungen und einem konstanten Zinssatz angibt.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Erforderlich. Der Zinssatz pro Zeitraum. Wenn Sie beispielsweise einen Kredit für ein Auto mit einem Jahreszins von 10 Prozent aufnehmen und monatliche Zahlungen vereinbart haben, beträgt der Zinssatz pro Zeitraum 0,1 dividiert durch 12 oder 0,0083.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.">Erforderlich. Die in jedem Zeitraum zu leistende Zahlung. Die Zahlungen enthalten in der Regel Kapital und Zinsen und ändern sich während der Laufzeit einer Annuität nicht.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Erforderlich. Der Barwert oder heutige Wert einer Folge zukünftiger Einnahmen oder Ausgaben. Wenn Sie beispielsweise einen Kredit für einen Autokauf aufnehmen, stellt die Kredithöhe für den Kreditgeber den Barwert der von Ihnen zu leistenden monatlichen Zahlungen dar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Dies ist optional. Der zukünftige Wert oder Kassenbestand, der nach der letzten Zahlung erreicht sein soll. Der Endwert eines Kredits ist z. B. 0 Euro, da dies die Kredithöhe nach der letzten Zahlung ist. Wenn Sie jedoch für die Ausbildung Ihrer Kinder 50.000 Euro in 18 Jahren ansparen möchten, entspricht der Endwert 50.000 Euro. Wenn der Wert nicht angegeben wird, wird 0 angenommen.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Dies ist optional. Ein Objekt vom Typ <see cref="T:Microsoft.VisualBasic.DueDate" />, das den Fälligkeitszeitpunkt einer Zahlung angibt. Dieses Argument muss entweder <c>DueDate.EndOfPeriod</c> sein, wenn die Zahlungen am Ende des Zahlungszeitraums fällig sind, oder <c>DueDate.BegOfPeriod</c>, wenn die Zahlungen zu Beginn des Zeitraums fällig sind. Wenn der Wert nicht angegeben wird, wird <c>DueDate.EndOfPeriod</c> angenommen.</param>
      <returns vsli:raw="The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">Die Anzahl der Zeiträume für eine Annuität bei regelmäßigen, konstanten Zahlungen und einem konstanten Zinssatz.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Rate&quot; /&gt; = 0 and &lt;paramref name=&quot;Pmt&quot; /&gt; = 0">
        <paramref name="Rate" /> = 0 und <paramref name="Pmt" /> = 0</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary vsli:raw="Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">Gibt einen Wert zurück, der den Nettobarwert einer Investition bei regelmäßigen Cashflows (Aus- und Einzahlungen) und einem Diskontsatz angibt.</summary>
      <param name="Rate" vsli:raw="Required. The discount rate over the length of the period, expressed as a decimal.">Erforderlich. Der Diskontsatz bezogen auf die Dauer des Zeitraums (ausgedrückt als Dezimalzahl).</param>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Erforderlich. Ein Array von Werten des Typs <see langword="Double" />, die Cashflowwerte enthalten. Das Array muss mindestens einen negativen Wert (Zahlungsausgang) und einen positiven Wert (Zahlungseingang) enthalten.</param>
      <returns vsli:raw="The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">Der Nettobarwert einer Investition bei regelmäßigen Cashflows (Aus- und Einzahlungen) und einem Diskontsatz.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ValueArray&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; &amp;lt;&amp;gt; 1, or &lt;paramref name=&quot;Rate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> ist gleich <see langword="Nothing" />. Bereich von <paramref name="ValueArray" /> &lt;&gt; 1 oder <paramref name="Rate" /> = –1</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.">Gibt einen Wert zurück, der die Zahlung für eine Annuität bei regelmäßigen konstanten Zahlungsausgängen und konstantem Zinssatz angibt.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Erforderlich. Der Zinssatz pro Zeitraum. Wenn Sie beispielsweise einen Kredit für ein Auto mit einem Jahreszins von 10 Prozent aufnehmen und monatliche Zahlungen vereinbart haben, beträgt der Zinssatz pro Zeitraum 0,1 dividiert durch 12 oder 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.">Erforderlich. Die Gesamtzahl der Zahlungszeiträume für die Annuität. Wenn Sie beispielsweise monatliche Zahlungen für einen Autokredit mit vierjähriger Laufzeit vereinbart haben, beträgt die Summe der Zahlungszeiträume für den Kredit 4 × 12 (oder 48).</param>
      <param name="PV" vsli:raw="Required. The present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Erforderlich. Der Barwert (oder Gesamtbetrag), den eine Folge zukünftiger Aus- oder Einzahlungen jetzt ausmacht. Wenn Sie beispielsweise einen Kredit für einen Autokauf aufnehmen, stellt die Kredithöhe für den Kreditgeber den Barwert der von Ihnen zu leistenden monatlichen Zahlungen dar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Dies ist optional. Der zukünftige Wert oder Kassenbestand, der nach der letzten Zahlung erreicht sein soll. Der Endwert eines Kredits ist z. B. 0 Euro, da dies die Kredithöhe nach der letzten Zahlung ist. Wenn Sie jedoch für die Ausbildung Ihrer Kinder über 18 Jahre 50.000 Euro ansparen möchten, entspricht der Endwert 50.000 Euro. Wenn der Wert nicht angegeben wird, wird 0 angenommen.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Optional. Ein Objekt vom Typ <see cref="T:Microsoft.VisualBasic.DueDate" />, das den Fälligkeitszeitpunkt einer Zahlung angibt. Dieses Argument muss entweder <c>DueDate.EndOfPeriod</c> sein, wenn die Zahlungen am Ende des Zahlungszeitraums fällig sind, oder <c>DueDate.BegOfPeriod</c>, wenn die Zahlungen zu Beginn des Zeitraums fällig sind. Wenn der Wert nicht angegeben wird, wird <c>DueDate.EndOfPeriod</c> angenommen.</param>
      <returns vsli:raw="The payment for an annuity based on periodic, fixed payments and a fixed interest rate.">Die Zahlung für eine Annuität bei regelmäßigen konstanten Zahlungsausgängen und konstantem Zinssatz.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; = 0.">
        <paramref name="NPer" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">Gibt einen Wert zurück, der die Hauptzahlung für einen bestimmten Zeitraum einer Annuität bei regelmäßigen, konstanten Zahlungen und einem konstanten Zinssatz angibt.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Erforderlich. Der Zinssatz pro Zeitraum. Wenn Sie beispielsweise einen Kredit für ein Auto mit einem Jahreszins von 10 Prozent aufnehmen und monatliche Zahlungen vereinbart haben, beträgt der Zinssatz pro Zeitraum 0,1 dividiert durch 12 oder 0,0083.</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">Erforderlich. Der Zahlungszeitraum im Bereich von 1 bis <paramref name="NPer" />.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Erforderlich. Die Gesamtzahl der Zahlungszeiträume für die Annuität. Wenn Sie beispielsweise monatliche Zahlungen für einen Autokredit mit vierjähriger Laufzeit vereinbart haben, beträgt die Summe der Zahlungszeiträume für den Kredit 4 x 12 (oder 48).</param>
      <param name="PV" vsli:raw="Required. The current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Erforderlich. Der aktuelle Wert einer Folge zukünftiger Einnahmen oder Ausgaben. Wenn Sie beispielsweise einen Kredit für einen Autokauf aufnehmen, stellt die Kredithöhe für den Kreditgeber den Barwert der von Ihnen zu leistenden monatlichen Zahlungen dar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Optional. Der zukünftige Wert oder Kassenbestand, der nach der letzten Zahlung erreicht sein soll. Der Endwert eines Kredits ist z. B. 0 Euro, da dies die Kredithöhe nach der letzten Zahlung ist. Wenn Sie jedoch für die Ausbildung Ihrer Kinder 50.000 Euro in 18 Jahren ansparen möchten, entspricht der Endwert 50.000 Euro. Wenn der Wert nicht angegeben wird, wird 0 angenommen.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Optional. Ein Objekt vom Typ <see cref="T:Microsoft.VisualBasic.DueDate" />, das den Fälligkeitszeitpunkt einer Zahlung angibt. Dieses Argument muss entweder <c>DueDate.EndOfPeriod</c> sein, wenn die Zahlungen am Ende des Zahlungszeitraums fällig sind, oder <c>DueDate.BegOfPeriod</c>, wenn die Zahlungen zu Beginn des Zeitraums fällig sind. Wenn der Wert nicht angegeben wird, wird <c>DueDate.EndOfPeriod</c> angenommen.</param>
      <returns vsli:raw="The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">Die Hauptzahlung für einen bestimmten Zeitraum einer Annuität bei regelmäßigen, konstanten Zahlungen und einem konstanten Zinssatz.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;=0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;.">
        <paramref name="Per" /> &lt;=0 oder <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">Gibt einen Wert zurück, der den Barwert einer Annuität bei zukünftig regelmäßig und konstant zu leistenden Zahlungsausgängen und einem konstanten Zinssatz angibt.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Erforderlich. Der Zinssatz pro Zeitraum. Wenn Sie beispielsweise einen Kredit für ein Auto mit einem Jahreszins von 10 Prozent aufnehmen und monatliche Zahlungen vereinbart haben, beträgt der Zinssatz pro Zeitraum 0,1 dividiert durch 12 oder 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.">Erforderlich. Die Gesamtzahl der Zahlungszeiträume für die Annuität. Wenn Sie beispielsweise monatliche Zahlungen für einen Autokredit mit vierjähriger Laufzeit vereinbart haben, beträgt die Summe der Zahlungszeiträume für den Kredit 4 x 12 (oder 48).</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.">Erforderlich. Die in jedem Zeitraum zu leistende Zahlung. Die Zahlungen enthalten in der Regel Kapital und Zinsen und ändern sich während der Laufzeit einer Annuität nicht.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Dies ist optional. Der Endwert oder Kassenbestand, der nach der letzten Zahlung erreicht sein soll. Der Endwert eines Kredits ist z. B. 0 Euro, da dies die Kredithöhe nach der letzten Zahlung ist. Wenn Sie jedoch für die Ausbildung Ihrer Kinder 50.000 Euro in 18 Jahren ansparen möchten, entspricht der Endwert 50.000 Euro. Wenn der Wert nicht angegeben wird, wird 0 angenommen.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Dies ist optional. Ein Objekt vom Typ <see cref="T:Microsoft.VisualBasic.DueDate" />, das den Fälligkeitszeitpunkt einer Zahlung angibt. Dieses Argument muss entweder <c>DueDate.EndOfPeriod</c> sein, wenn die Zahlungen am Ende des Zahlungszeitraums fällig sind, oder <c>DueDate.BegOfPeriod</c>, wenn die Zahlungen zu Beginn des Zeitraums fällig sind. Wenn der Wert nicht angegeben wird, wird <c>DueDate.EndOfPeriod</c> angenommen.</param>
      <returns vsli:raw="The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">Der Barwert einer Annuität bei zukünftig regelmäßig und konstant zu leistenden Zahlungsausgängen und einem konstanten Zinssatz.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary vsli:raw="Returns a value specifying the interest rate per period for an annuity.">Gibt einen Wert zurück, der den Zinssatz einer Annuität pro Zeitraum angibt.</summary>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.">Erforderlich. Die Gesamtzahl der Zahlungszeiträume für die Annuität. Wenn Sie beispielsweise monatliche Zahlungen für einen Autokredit mit vierjähriger Laufzeit vereinbart haben, beträgt die Summe der Zahlungszeiträume für den Kredit 4 * 12 (oder 48).</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">Erforderlich. Die in jedem Zeitraum zu leistende Zahlung. Die Zahlungen enthalten in der Regel Kapital und Zinsen und ändern sich während der Laufzeit einer Annuität nicht.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Erforderlich. Der Barwert oder heutige Wert einer Folge zukünftiger Einnahmen oder Ausgaben. Wenn Sie beispielsweise einen Kredit für einen Autokauf aufnehmen, stellt die Kredithöhe für den Kreditgeber den Barwert der von Ihnen zu leistenden monatlichen Zahlungen dar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Dies ist optional. Der Endwert oder Kassenbestand, der nach der letzten Zahlung erreicht sein soll. Der Endwert eines Kredits ist z. B. 0 Euro, da dies die Kredithöhe nach der letzten Zahlung ist. Wenn Sie jedoch für die Ausbildung Ihrer Kinder 50.000 Euro in 18 Jahren ansparen möchten, entspricht der Endwert 50.000 Euro. Wenn der Wert nicht angegeben wird, wird 0 angenommen.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Dies ist optional. Ein Objekt vom Typ <see cref="T:Microsoft.VisualBasic.DueDate" />, das den Fälligkeitszeitpunkt einer Zahlung angibt. Dieses Argument muss entweder <c>DueDate.EndOfPeriod</c> sein, wenn die Zahlungen am Ende des Zahlungszeitraums fällig sind, oder <c>DueDate.BegOfPeriod</c>, wenn die Zahlungen zu Beginn des Zeitraums fällig sind. Wenn der Wert nicht angegeben wird, wird <c>DueDate.EndOfPeriod</c> angenommen.</param>
      <param name="Guess" vsli:raw="Optional. The value you estimate is returned by &lt;see langword=&quot;Rate&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">Optional. Der von Ihnen geschätzte Wert wird von <see langword="Rate" /> zurückgegeben. Wird der Wert nicht angegeben, so ist <paramref name="Guess" /> gleich 0,1 (10 Prozent).</param>
      <returns vsli:raw="The interest rate per period for an annuity.">Der Zinssatz einer Annuität pro Zeitraum.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; &amp;lt;= 0.">
        <paramref name="NPer" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the straight-line depreciation of an asset for a single period.">Gibt einen Wert zurück, der die arithmetische Abschreibung eines Vermögenswerts über einen bestimmten Zeitraum angibt.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Erforderlich. Die Anschaffungskosten des Vermögenswerts.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Erforderlich. Der Wert des Vermögenswerts am Ende seiner Nutzungsdauer.</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">Erforderlich. Die Länge der Nutzungsdauer des Vermögenswerts.</param>
      <returns vsli:raw="The straight-line depreciation of an asset for a single period.">Die arithmetische Abschreibung eines Vermögenswerts über einen einzelnen Zeitraum.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Life&quot; /&gt; = 0.">
        <paramref name="Life" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.">Gibt einen Wert zurück, der die Jahresabschreibung eines Vermögenswerts für einen bestimmten Zeitraum angibt.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Erforderlich. Die Anschaffungskosten des Vermögenswerts.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Erforderlich. Der Wert des Vermögenswerts am Ende seiner Nutzungsdauer.</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">Erforderlich. Die Länge der Nutzungsdauer des Vermögenswerts.</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">Erforderlich. Der Zeitraum für den die Abschreibung des Vermögenswerts berechnet wird.</param>
      <returns vsli:raw="The sum-of-years digits depreciation of an asset for a specified period.">Die Jahresabschreibung eines Vermögenswerts über einen bestimmten Zeitraum.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;=0.">
        <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, oder <paramref name="Period" /> &lt;=0.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary vsli:raw="Indicates the first day of the week to use when calling date-related functions.">Gibt in Aufrufen datumsbezogener Funktionen an, welcher Tag den ersten Tag der Woche darstellen soll.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary vsli:raw="Friday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFriday&quot; /&gt;.">Friday. Dieser Member entspricht der Konstante <see langword="vbFriday" /> in Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary vsli:raw="Monday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMonday&quot; /&gt;.">Monday. Dieser Member entspricht der Konstante <see langword="vbMonday" /> in Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary vsli:raw="Saturday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSaturday&quot; /&gt;.">Saturday. Dieser Member entspricht der Konstante <see langword="vbSaturday" /> in Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary vsli:raw="Sunday (default) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSunday&quot; /&gt;.">Sunday (Standardeinstellung). Dieser Member entspricht der Konstante <see langword="vbSunday" /> in Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary vsli:raw="The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystemDayOfWeek&quot; /&gt;.">Der Wochentag, der in den Systemeinstellungen als erster Wochentag festgelegt ist. Dieser Member entspricht der Konstante <see langword="vbUseSystemDayOfWeek" /> in Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary vsli:raw="Thursday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbThursday&quot; /&gt;.">Thursday. Dieser Member entspricht der Konstante <see langword="vbThursday" /> in Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary vsli:raw="Tuesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTuesday&quot; /&gt;.">Tuesday. Dieser Member entspricht der Konstante <see langword="vbTuesday" /> in Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary vsli:raw="Wednesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWednesday&quot; /&gt;.">Wednesday. Dieser Member entspricht der Konstante <see langword="vbWednesday" /> in Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary vsli:raw="Indicates the first week of the year to use when calling date-related functions.">Gibt in Aufrufen datumsbezogener Funktionen die Woche an, welche die erste Woche des Jahres darstellen soll.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary vsli:raw="The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFourDays&quot; /&gt;.">Die erste Woche, die im neuen Jahr mindestens vier Tage hat. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbFirstFourDays" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary vsli:raw="The first full week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFullWeek&quot; /&gt;.">Die erste vollständige Woche eines Jahres. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbFirstFullWeek" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary vsli:raw="The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstJan1&quot; /&gt;.">Die Woche, in der der 1. Januar liegt (Standardwert). Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbFirstJan1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary vsli:raw="The week specified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystem&quot; /&gt;.">Die in den Systemeinstellungen als erste Woche des Jahres festgelegte Woche. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbUseSystem" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;HideModuleNameAttribute&quot; /&gt; attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.">Wenn das <see langword="HideModuleNameAttribute" />-Attribut auf ein Modul angewendet wird, sind für den Zugriff auf die Member des Moduls nur die Zugriffsberechtigungen für das Modul erforderlich.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.HideModuleNameAttribute&quot; /&gt; attribute.">Initialisiert eine neue Instanz des <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />-Attributs.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary vsli:raw="The &lt;see langword=&quot;Information&quot; /&gt; module contains the procedures used to return, test for, or verify information.">Das <see langword="Information" />-Modul enthält Prozeduren, mit denen Informationen zurückgegeben, getestet oder überprüft werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary vsli:raw="Contains information about run-time errors.">Enthält Informationen über Laufzeitfehler.</summary>
      <returns vsli:raw="Contains information about run-time errors.">Enthält Informationen über Laufzeitfehler.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob eine Variable auf ein Array verweist.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable.">Erforderlich. <see langword="Object" />-Variable.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob eine Variable auf ein Array verweist.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck einen gültigen <see langword="Date" />-Wert darstellt.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Erforderlich. <see langword="Object" />-Ausdruck.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck einen gültigen <see langword="Date" />-Wert darstellt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck die <see cref="T:System.DBNull" />-Klasse ergibt.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Erforderlich. <see langword="Object" />-Ausdruck.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck die <see cref="T:System.DBNull" />-Klasse ergibt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck ein Ausnahmetyp ist.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Erforderlich. <see langword="Object" />-Ausdruck.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck ein Ausnahmetyp ist.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob einem Ausdruck kein Objekt zugewiesen ist.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Erforderlich. <see langword="Object" />-Ausdruck.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob einem Ausdruck kein Objekt zugewiesen ist.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck als Zahl ausgewertet werden kann.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Erforderlich. <see langword="Object" />-Ausdruck.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck als Zahl ausgewertet werden kann.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck einen Verweistyp ergibt.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Erforderlich. <see langword="Object" />-Ausdruck.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">Gibt einen <see langword="Boolean" />-Wert zurück, der angibt, ob ein Ausdruck einen Verweistyp ergibt.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the lowest available subscript for the indicated dimension of an array.">Gibt den niedrigsten verfügbaren Feldindex für die angegebene Dimension eines Arrays zurück.</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.">Erforderlich. Array eines beliebigen Datentyps. Das Array, in dem der niedrigste mögliche Feldindex einer Dimension ermittelt werden soll.</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">Dies ist optional. <see langword="Integer" />. Die Dimension, für die der niedrigste mögliche Feldindex zurückgegeben wird. Verwenden Sie für die erste Dimension 1, für die zweite 2 usw. Wird <paramref name="Rank" /> ausgelassen, so wird bei 1 begonnen.</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The lowest value the subscript for the specified dimension can contain. &lt;see langword=&quot;LBound&quot; /&gt; always returns 0 as long as &lt;paramref name=&quot;Array&quot; /&gt; has been initialized, even if it has no elements, for example if it is a zero-length string. If &lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;LBound&quot; /&gt; throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;.">
        <see langword="Integer" />. Der niedrigste Wert, den der Feldindex für die angegebene Dimension enthalten kann. <see langword="LBound" /> gibt immer 0 zurück, sobald <paramref name="Array" /> initialisiert wurde, auch wenn es keine Elemente enthält (z. B. bei einer Zeichenfolge der Länge 0). Wenn <paramref name="Array" /><see langword="Nothing" /> ist, löst <see langword="LBound" /> eine <see cref="T:System.ArgumentNullException" /> aus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> ist kleiner als 1 oder <paramref name="Rank" /> ist größer als der Rang von <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">Gibt einen <see langword="Integer" />-Wert zurück, der den RGB-Farbcode darstellt, der der angegebenen Farbnummer entspricht.</summary>
      <param name="Color" vsli:raw="Required. A whole number in the range 0-15.">Erforderlich. Eine ganze Zahl zwischen 0–15.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">Gibt einen <see langword="Integer" />-Wert zurück, der den RGB-Farbcode darstellt, der der angegebenen Farbnummer entspricht.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Color&quot; /&gt; is outside of range 0 to 15, inclusive.">
        <paramref name="Color" /> befindet sich nicht im Bereich von 0 bis einschließlich 15.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">Gibt einen <see langword="Integer" /> zurück, der einen RGB-Farbwert aus roten, grünen und blauen Farbanteilen darstellt.</summary>
      <param name="Red" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the red component of the color.">Erforderlich. <see langword="Integer" /> im Bereich zwischen 0 und 255 bis einschließlich 255, der die Intensität des Rotanteils der Farbe darstellt.</param>
      <param name="Green" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the green component of the color.">Erforderlich. <see langword="Integer" /> im Bereich zwischen 0 und 255 bis einschließlich 255, der die Intensität des Grünanteils der Farbe darstellt.</param>
      <param name="Blue" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the blue component of the color.">Erforderlich. <see langword="Integer" /> im Bereich zwischen 0 und 255 bis einschließlich 255, der die Intensität des Blauanteils der Farbe darstellt.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">Gibt einen <see langword="Integer" /> zurück, der einen RGB-Farbwert aus roten, grünen und blauen Farbanteilen darstellt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Green&quot; /&gt;, &lt;paramref name=&quot;Blue&quot; /&gt;, or &lt;paramref name=&quot;Red&quot; /&gt; is outside of range 0 to 255, inclusive.">
        <paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> befindet sich außerhalb des Bereichs 0 bis 255 (einschließlich).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">Gibt einen <see langword="String" />-Wert mit dem Systemnamen des Datentyps einer Variablen zurück.</summary>
      <param name="VbName" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; variable containing a Visual Basic type name.">Erforderlich. Eine <see langword="String" />-Variable, die einen Visual Basic-Typnamen enthält.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">Gibt einen <see langword="String" />-Wert mit dem Systemnamen des Datentyps einer Variablen zurück.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">Gibt einen <see langword="String" />-Wert zurück, der Datentypinformationen über eine Variable enthält.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Erforderlich. <see langword="Object" />-Variable. Wenn für <see langword="Option Strict" /> der Wert <see langword="Off" /> festgelegt ist, können Sie, mit Ausnahme von Strukturen, Variablen eines beliebigen Datentyps übergeben.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">Gibt einen <see langword="String" />-Wert zurück, der Datentypinformationen über eine Variable enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the highest available subscript for the indicated dimension of an array.">Gibt den höchsten verfügbaren Feldindex für die angegebene Dimension eines Arrays zurück.</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.">Erforderlich. Array eines beliebigen Datentyps. Das Array, in dem der höchste mögliche Feldindex einer Dimension ermittelt werden soll.</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">Dies ist optional. <see langword="Integer" />. Die Dimension, für die der höchste mögliche Feldindex zurückgegeben wird. Verwenden Sie für die erste Dimension 1, für die zweite 2 usw. Wird <paramref name="Rank" /> ausgelassen, so wird bei 1 begonnen.</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The highest value the subscript for the specified dimension can contain. If &lt;paramref name=&quot;Array&quot; /&gt; has only one element, &lt;see langword=&quot;UBound&quot; /&gt; returns 0. If &lt;paramref name=&quot;Array&quot; /&gt; has no elements, for example if it is a zero-length string, &lt;see langword=&quot;UBound&quot; /&gt; returns -1.">
        <see langword="Integer" />. Der höchste Wert, den der Feldindex für die angegebene Dimension enthalten kann. Wenn <paramref name="Array" /> nur über ein Element verfügt, gibt <see langword="UBound" /> 0 zurück. Wenn <paramref name="Array" /> keine Elemente enthält, z. B., wenn es eine Zeichenfolge der Länge 0 ist, gibt <see langword="UBound" /> -1 zurück.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; is less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> ist kleiner als 1 oder <paramref name="Rank" /> ist größer als der Rang von <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">Gibt einen <see langword="Integer" />-Wert mit der Datentypklassifizierung einer Variablen zurück.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Erforderlich. <see langword="Object" />-Variable. Wenn für <see langword="Option Strict" /> der Wert <see langword="Off" /> festgelegt ist, können Sie, mit Ausnahme von Strukturen, Variablen eines beliebigen Datentyps übergeben.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">Gibt einen <see langword="Integer" />-Wert mit der Datentypklassifizierung einer Variablen zurück.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">Gibt einen <see langword="String" />-Wert mit dem Visual Basic-Namen des Datentyps einer Variablen zurück.</summary>
      <param name="UrtName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; variable containing a type name used by the common language runtime.">Erforderlich. <see langword="String" />-Variable mit einem Typnamen, der von der Common Language Runtime verwendet wird.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">Gibt einen <see langword="String" />-Wert mit dem Visual Basic-Namen des Datentyps einer Variablen zurück.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary vsli:raw="The &lt;see langword=&quot;Interaction&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">Das <see langword="Interaction" />-Modul enthält Prozeduren für die Interaktion mit Objekten, Anwendungen und Systemen.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary vsli:raw="Sounds a tone through the computer's speaker.">Spielt einen Signalton über den Lautsprecher des Computers ab.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Führt eine Methode für ein Objekt aus oder legt eine Eigenschaft für ein Objekt fest oder gibt diese zurück.</summary>
      <param name="ObjectRef" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">Erforderlich. <see langword="Object" />. Ein Zeiger auf das Objekt, das die Eigenschaft oder Methode verfügbar macht.</param>
      <param name="ProcName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">Erforderlich. <see langword="String" />. Ein Zeichenfolgenausdruck, der den Namen der Eigenschaft oder der Methode für das Objekt enthält.</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Erforderlich. Ein Enumerationsmember vom Typ <see cref="T:Microsoft.VisualBasic.CallType" />, der den Typ der aufgerufenen Prozedur darstellt. Der Wert von <see langword="CallType" /> kann <see langword="Method" />, <see langword="Get" /> oder <see langword="Set" /> sein.</param>
      <param name="Args" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">Optional. <see langword="ParamArray" />. Ein Parameterarray mit den Argumenten, die an die aufgerufene Eigenschaft oder Methode übergeben werden sollen.</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Führt eine Methode für ein Objekt aus oder legt eine Eigenschaft für ein Objekt fest oder gibt diese zurück.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Invalid &lt;paramref name=&quot;UseCallType&quot; /&gt; value; must be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Ungültiger <paramref name="UseCallType" />-Wert; muss <see langword="Method" />, <see langword="Get" /> oder <see langword="Set" /> sein.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">Erstellt und gibt einen Verweis auf ein COM-Objekt zurück. <see langword="CreateObject" /> kann in Visual Basic nur dann zur Erstellung von Klasseninstanzen verwendet werden, wenn diese explizit als COM-Komponenten verfügbar gemacht werden.</summary>
      <param name="ProgId" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. The program ID of the object to create.">Erforderlich. <see langword="String" />. Die Programm-ID des zu erstellenden Objekts.</param>
      <param name="ServerName" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt;. The name of the network server where the object will be created. If &lt;paramref name=&quot;ServerName&quot; /&gt; is an empty string (&quot;&quot;), the local computer is used.">Dies ist optional. <see langword="String" />. Der Name des Netzwerkservers, auf dem das Objekt erstellt wird. Wenn <paramref name="ServerName" /> eine leere Zeichenfolge ("") ist, wird der lokale Computer verwendet.</param>
      <returns vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">Erstellt und gibt einen Verweis auf ein COM-Objekt zurück. <see langword="CreateObject" /> kann in Visual Basic nur dann zur Erstellung von Klasseninstanzen verwendet werden, wenn diese explizit als COM-Komponenten verfügbar gemacht werden.</returns>
      <exception cref="T:System.Exception" vsli:raw="Server is unavailable">Server ist nicht verfügbar</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="No object of the specified type exists.">Es ist kein Objekt des angegebenen Typs vorhanden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">Gibt eines von zwei Objekten zurück, abhängig von der Evaluierung eines Ausdrucks.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt;. The expression you want to evaluate.">Erforderlich. <see langword="Boolean" />. Der auszuwertende Ausdruck.</param>
      <param name="TruePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;True&quot; /&gt;.">Erforderlich. <see langword="Object" />. Wird zurückgegeben, wenn <paramref name="Expression" /> den Wert <see langword="True" /> ergibt.</param>
      <param name="FalsePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;False&quot; /&gt;.">Erforderlich. <see langword="Object" />. Wird zurückgegeben, wenn <paramref name="Expression" /> den Wert <see langword="False" /> ergibt.</param>
      <returns vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">Gibt eines von zwei Objekten zurück, abhängig von der Evaluierung eines Ausdrucks.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary vsli:raw="Indicates which button was pressed on a message box, returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt gemäß Rückgabe durch die <see langword="MsgBox" />-Funktion an, welche Schaltfläche in einem Meldungsfeld gedrückt wurde.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary vsli:raw="Abort button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbort&quot; /&gt;.">Die Schaltfläche Abbrechen wurde gedrückt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbAbort" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary vsli:raw="Cancel button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCancel&quot; /&gt;.">Die Schaltfläche Abbrechen wurde gedrückt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary vsli:raw="Ignore button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbIgnore&quot; /&gt;.">Die Schaltfläche Ignorieren wurde gedrückt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary vsli:raw="No button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNo&quot; /&gt;.">Die Schaltfläche Nein wurde gedrückt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary vsli:raw="OK button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOK&quot; /&gt;.">Die Schaltfläche OK wurde gedrückt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbOK" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary vsli:raw="Retry button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetry&quot; /&gt;.">Die Schaltfläche Wiederholen wurde gedrückt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbRetry" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary vsli:raw="Yes button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYes&quot; /&gt;.">Die Schaltfläche Ja wurde gedrückt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbYes" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary vsli:raw="Indicates which buttons to display when calling the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Gibt an, welche Schaltflächen beim Aufrufen der <see langword="MsgBox" />-Funktion angezeigt werden.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary vsli:raw="Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbortRetryIgnore&quot; /&gt;.">Die Schaltflächen Abbrechen, Wiederholen und Ignorieren. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbAbortRetryIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary vsli:raw="Application modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbApplicationModal&quot; /&gt;.">Modales Meldungsfeld der Anwendung. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbApplicationModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary vsli:raw="Critical message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCritical&quot; /&gt;.">Wichtige Meldung. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbCritical" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary vsli:raw="First button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton1&quot; /&gt;.">Erste Schaltfläche ist Standard. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbDefaultButton1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary vsli:raw="Second button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton2&quot; /&gt;.">Zweite Schaltfläche ist Standard. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbDefaultButton2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary vsli:raw="Third button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton3&quot; /&gt;.">Dritte Schaltfläche ist Standard. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbDefaultButton3" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary vsli:raw="Warning message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbExclamation&quot; /&gt;.">Warnmeldung. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbExclamation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary vsli:raw="Information message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInformation&quot; /&gt;.">Informationsmeldung. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbInformation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary vsli:raw="Help text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxHelp&quot; /&gt;.">Hilfetext. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbMsgBoxHelp" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary vsli:raw="Right-aligned text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRight&quot; /&gt;.">Rechtsbündiger Text. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbMsgBoxRight" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary vsli:raw="Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRtlReading&quot; /&gt;.">Von rechts nach links zu lesender Text (hebräische und arabische Systeme). Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbMsgBoxRtlReading" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary vsli:raw="Foreground message box window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxSetForeground&quot; /&gt;.">Fenster für Vordergrundmeldungsfeld. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbMsgBoxSetForeground" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary vsli:raw="OK and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKCancel&quot; /&gt;.">Die SchaltflächenOK und Abbrechen. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbOKCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary vsli:raw="OK button only (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKOnly&quot; /&gt;.">Nur die Schaltfläche OK (Standard). Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbOKOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary vsli:raw="Warning query. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbQuestion&quot; /&gt;.">Warnabfrage. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbQuestion" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary vsli:raw="Retry and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetryCancel&quot; /&gt;.">Die SchaltflächenWiederholen und Abbrechen. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbRetryCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary vsli:raw="System modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystemModal&quot; /&gt;.">Modales Meldungsfeld des Systems. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbSystemModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary vsli:raw="Yes and No buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNo&quot; /&gt;.">Die SchaltflächenJa und Nein. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbYesNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary vsli:raw="Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNoCancel&quot; /&gt;.">SchaltflächenJa, Neinund Abbrechen. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbYesNoCancel" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">Dieses Attribut unterstützt <see langword="My.Forms" /> und <see langword="My.WebServices" /> in Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">Dieses Attribut unterstützt <see langword="My.Forms" /> und <see langword="My.WebServices" /> in Visual Basic.</summary>
      <param name="typeToCollect" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName&quot; /&gt; property. The compiler generates accessor properties for classes that derive from this type.">
        <see langword="String" />. Initialisiert die <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />-Eigenschaft. Der Compiler generiert Accessoreigenschaften für Klassen, die von diesem Typ abgeleitet werden.</param>
      <param name="createInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod&quot; /&gt; property. Specifies the method in the class that creates the type's instances.">
        <see langword="String" />. Initialisiert die <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />-Eigenschaft. Gibt die Methode in der Klasse an, die die Instanzen des Typs erstellt.</param>
      <param name="disposeInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod&quot; /&gt; property. Specifies the method in the class that disposes of the type's instances.">
        <see langword="String" />. Initialisiert die <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />-Eigenschaft. Gibt die Methode in der Klasse an, die die Instanzen des Typs löscht.</param>
      <param name="defaultInstanceAlias" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias&quot; /&gt; property. Specifies the name of the property that returns the default instance of the class.">
        <see langword="String" />. Initialisiert die <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />-Eigenschaft. Gibt den Namen der Eigenschaft an, die die Standardinstanz der Klasse zurückgibt.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Diese Eigenschaft unterstützt <see langword="My" /> in Visual Basic.</summary>
      <returns vsli:raw="Specifies the method in the class that creates the type's instances.">Gibt die Methode in der Klasse an, die die Instanzen des Typs erstellt.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Diese Eigenschaft unterstützt <see langword="My" /> in Visual Basic.</summary>
      <returns vsli:raw="Specifies the name of the property that returns the default instance of the class.">Gibt den Namen der Eigenschaft an, die die Standardinstanz der Klasse zurückgibt.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Diese Eigenschaft unterstützt <see langword="My" /> in Visual Basic.</summary>
      <returns vsli:raw="Specifies the method in the class that disposes of the type's instances.">Gibt die Methode in der Klasse an, die die Instanzen des Typs löscht.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Diese Eigenschaft unterstützt <see langword="My" /> in Visual Basic.</summary>
      <returns vsli:raw="Specifies the name of the type for which the compiler generates accessor properties.">Gibt den Namen des Typs an, für den der Compiler Accessoreigenschaften generiert.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>Stellt Methoden zur Bearbeitung der Zwischenablage bereit.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>Stellt Eigenschaften und Methoden für die Arbeit mit Laufwerken, Dateien und Verzeichnissen bereit.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>Verknüpft zwei Pfade und gibt einen ordnungsgemäß formatierten Pfad zurück.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Erster Pfad, der kombiniert werden soll.</param>
      <param name="relativePath">
        <see langword="String" />. Zweiter Pfad, der kombiniert werden soll.</param>
      <returns>Die Kombination der angegebenen Pfade.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> oder <paramref name="relativePath" /> sind fehlerhafte Pfade.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>Kopiert ein Verzeichnis in ein anderes Verzeichnis.</summary>
      <param name="sourceDirectoryName">Das zu kopierende Verzeichnis.</param>
      <param name="destinationDirectoryName">Der Speicherort, an den das Verzeichnis kopiert werden soll.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> oder <paramref name="sourceDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Quellverzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Ordnername im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Eine Zieldatei ist vorhanden, aber es ist kein Zugriff auf die Datei möglich.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Kopiert ein Verzeichnis in ein anderes Verzeichnis.</summary>
      <param name="sourceDirectoryName">Das zu kopierende Verzeichnis.</param>
      <param name="destinationDirectoryName">Der Speicherort, an den das Verzeichnis kopiert werden soll.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> oder <paramref name="sourceDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Quellverzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Ordnername im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Eine Zieldatei ist vorhanden, aber es ist kein Zugriff auf die Datei möglich.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> ist auf <see langword="UIOption.AllDialogs" /> festgelegt, und der Vorgang wird vom Benutzer abgebrochen, oder mindestens eine Datei im Verzeichnis kann nicht kopiert werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Kopiert ein Verzeichnis in ein anderes Verzeichnis.</summary>
      <param name="sourceDirectoryName">Das zu kopierende Verzeichnis.</param>
      <param name="destinationDirectoryName">Der Speicherort, an den das Verzeichnis kopiert werden soll.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Gibt die Aktion an, die ausgeführt werden soll, wenn während des Vorgangs auf Abbrechen geklickt wird. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> oder <paramref name="sourceDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Quellverzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Ordnername im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Eine Zieldatei ist vorhanden, aber es ist kein Zugriff auf die Datei möglich.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> ist auf <see langword="UIOption.AllDialogs" /> festgelegt, und der Vorgang wird vom Benutzer abgebrochen, oder mindestens eine Datei im Verzeichnis kann nicht kopiert werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Kopiert ein Verzeichnis in ein anderes Verzeichnis.</summary>
      <param name="sourceDirectoryName">Das zu kopierende Verzeichnis.</param>
      <param name="destinationDirectoryName">Der Speicherort, an den das Verzeichnis kopiert werden soll.</param>
      <param name="overwrite">
        <see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> oder <paramref name="sourceDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Quellverzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Ordnername im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Eine Zieldatei ist vorhanden, aber es ist kein Zugriff auf die Datei möglich.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>Kopiert eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName">Die zu kopierende Datei.</param>
      <param name="destinationFileName">Der Speicherort, an den die Datei kopiert werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> oder <paramref name="sourceFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Eine Datei im Zielverzeichnis mit demselben Namen wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Kopiert eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName">Die zu kopierende Datei.</param>
      <param name="destinationFileName">Der Speicherort, an den die Datei kopiert werden soll.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> oder <paramref name="sourceFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Zieldatei ist bereits vorhanden, und <paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Kopiert eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName">Die zu kopierende Datei.</param>
      <param name="destinationFileName">Der Speicherort, an den die Datei kopiert werden soll.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Gibt die Aktion an, die ausgeführt werden soll, wenn während des Vorgangs auf Abbrechen geklickt wird. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> oder <paramref name="sourceFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Zieldatei ist bereits vorhanden, und <paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> ist auf <see langword="ThrowException" /> festgelegt, und entweder hat der Benutzer den Vorgang abgebrochen, oder ein nicht näher bezeichneter E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Kopiert eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName">Die zu kopierende Datei.</param>
      <param name="destinationFileName">Der Speicherort, an den die Datei kopiert werden soll.</param>
      <param name="overwrite">
        <see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> oder <paramref name="sourceFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Zieldatei ist bereits vorhanden, und <paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>Erstellt ein Verzeichnis.</summary>
      <param name="directory">Der Name und der Speicherort des Verzeichnisses.</param>
      <exception cref="T:System.ArgumentException">Der Name des Verzeichnisses ist falsch formatiert. Er enthält beispielsweise unzulässige Zeichen oder besteht nur aus Leerzeichen.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Verzeichnisname ist zu lang.</exception>
      <exception cref="T:System.NotSupportedException">Der Verzeichnisname besteht nur aus einem Doppelpunkt (:).</exception>
      <exception cref="T:System.IO.IOException">Das übergeordnete Verzeichnis des zu erstellenden Verzeichnisses ist schreibgeschützt.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer ist nicht zum Erstellen des Verzeichnisses berechtigt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>Ruft das aktuelle Verzeichnis ab oder legt dieses fest.</summary>
      <returns>Das aktuelle Verzeichnis für Datei-E/A-Operationen.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist nicht gültig.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Löscht ein Verzeichnis.</summary>
      <param name="directory">Das zu löschende Verzeichnis.</param>
      <param name="onDirectoryNotEmpty">Gibt an, was geschehen soll, wenn ein Verzeichnis, das gelöscht werden soll, Dateien oder Verzeichnisse enthält. Der Standardwert ist <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0, der Pfad ist falsch formatiert, er enthält nur Leerzeichen oder er enthält ungültige Zeichen (einschließlich Platzhalterzeichen). Der Pfad ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis ist nicht vorhanden, oder es handelt sich um eine Datei.</exception>
      <exception cref="T:System.IO.IOException">Eine Datei im Verzeichnis oder Unterverzeichnis wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.NotSupportedException">Der Verzeichnisname enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.OperationCanceledException">Der Benutzer bricht den Vorgang ab, oder das Verzeichnis kann nicht gelöscht werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Löscht ein Verzeichnis.</summary>
      <param name="directory">Das zu löschende Verzeichnis.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Gibt an, ob die gelöschte Datei in den Papierkorb verschoben werden soll. Der Standardwert ist <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0, der Pfad ist falsch formatiert, er enthält nur Leerzeichen oder er enthält ungültige Zeichen (einschließlich Platzhalterzeichen). Der Pfad ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis ist nicht vorhanden, oder es handelt sich um eine Datei.</exception>
      <exception cref="T:System.IO.IOException">Eine Datei im Verzeichnis oder Unterverzeichnis wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.NotSupportedException">Der Verzeichnisname enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.OperationCanceledException">Der Benutzer bricht den Vorgang ab, oder das Verzeichnis kann nicht gelöscht werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Löscht ein Verzeichnis.</summary>
      <param name="directory">Das zu löschende Verzeichnis.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Gibt an, ob die gelöschte Datei in den Papierkorb verschoben werden soll. Der Standardwert ist <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Gibt an, ob eine Ausnahme ausgelöst werden soll, wenn auf Abbrechen geklickt wird.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0, der Pfad ist falsch formatiert, er enthält nur Leerzeichen oder er enthält ungültige Zeichen (einschließlich Platzhalterzeichen). Der Pfad ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis ist nicht vorhanden, oder es handelt sich um eine Datei.</exception>
      <exception cref="T:System.IO.IOException">Eine Datei im Verzeichnis oder Unterverzeichnis wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.NotSupportedException">Der Verzeichnisname enthält einen Doppelpunkt (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.OperationCanceledException">Der Benutzer bricht den Vorgang ab, oder das Verzeichnis kann nicht gelöscht werden.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>Löscht eine Datei.</summary>
      <param name="file">Name und Pfad der zu löschenden Datei.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; er weist an der Position, an der eine Datei angegeben werden muss, einen abschließenden Schrägstrich auf; es handelt sich um einen Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung zum Löschen der Datei, oder die Datei ist schreibgeschützt.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Löscht eine Datei.</summary>
      <param name="file">Name und Pfad der zu löschenden Datei.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Gibt an, ob die gelöschte Datei in den Papierkorb verschoben werden soll. Der Standardwert ist <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; er weist an der Position, an der eine Datei angegeben werden muss, einen abschließenden Schrägstrich auf; es handelt sich um einen Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung zum Löschen der Datei, oder die Datei ist schreibgeschützt.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Löscht eine Datei.</summary>
      <param name="file">Name und Pfad der zu löschenden Datei.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Gibt an, ob die gelöschte Datei in den Papierkorb verschoben werden soll. Der Standardwert ist <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Gibt an, ob eine Ausnahme ausgelöst wird, wenn der Benutzer den Vorgang abbricht. Der Standardwert ist <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; er weist an der Position, an der eine Datei angegeben werden muss, einen abschließenden Schrägstrich auf; es handelt sich um einen Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird gegenwärtig verwendet.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung zum Löschen der Datei, oder die Datei ist schreibgeschützt.</exception>
      <exception cref="T:System.OperationCanceledException">Der Benutzer hat den Vorgang abgebrochen, und <paramref name="onUserCancel" /> ist auf <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> festgelegt.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>Gibt <see langword="True" /> zurück, wenn das angegebene Verzeichnis vorhanden ist.</summary>
      <param name="directory">Der Pfad des Verzeichnisses.</param>
      <returns>
        <see langword="True" />, wenn das Verzeichnis vorhanden ist, andernfalls <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>Gibt eine schreibgeschützte Auflistung aller verfügbaren Laufwerknamen zurück.</summary>
      <returns>Eine schreibgeschützte Auflistung aller verfügbaren Laufwerke als <see cref="T:System.IO.DriveInfo" />-Objekte.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>Gibt <see langword="True" /> zurück, wenn die angegebene Datei vorhanden ist.</summary>
      <param name="file">Name und Pfad der Datei.</param>
      <returns>Diese Methode gibt <see langword="True" /> zurück, wenn die Datei vorhanden ist, andernfalls gibt sie <see langword="False" /> zurück.</returns>
      <exception cref="T:System.ArgumentException">Der Name der Datei endet mit einem umgekehrten Schrägstrich (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Gibt eine schreibgeschützte Auflistung von Zeichenfolgen zurück, die die Namen der Dateien mit dem angegebenen Text darstellen.</summary>
      <param name="directory">Das zu durchsuchende Verzeichnis.</param>
      <param name="containsText">Der Suchtext.</param>
      <param name="ignoreCase">
        <see langword="True" />, wenn die Groß-/Kleinschreibung bei der Suche berücksichtigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="True" />.</param>
      <param name="searchType">Gibt an, ob Unterordner eingeschlossen werden. Der Standardwert ist <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns>Eine schreibgeschützte Collection der Namen der Dateien, die den angegebenen Text enthalten.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0 (null), er enthält nur Leerzeichen, er enthält ungültige Zeichen, oder er ist ein Gerätepfad (beginnt mit <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Das angegebene Verzeichnis zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Der angegebene Verzeichnispfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Gibt eine schreibgeschützte Auflistung von Zeichenfolgen zurück, die die Namen der Dateien mit dem angegebenen Text darstellen.</summary>
      <param name="directory">Das zu durchsuchende Verzeichnis.</param>
      <param name="containsText">Der Suchtext.</param>
      <param name="ignoreCase">
        <see langword="True" />, wenn die Groß-/Kleinschreibung bei der Suche berücksichtigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="True" />.</param>
      <param name="searchType">Gibt an, ob Unterordner eingeschlossen werden. Der Standardwert ist <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Das Muster, das übereinstimmen muss.</param>
      <returns>Eine schreibgeschützte Collection der Namen der Dateien, die den angegebenen Text enthalten.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0 (null), er enthält nur Leerzeichen, er enthält ungültige Zeichen, oder er ist ein Gerätepfad (beginnt mit <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Das angegebene Verzeichnis zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Der angegebene Verzeichnispfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>Gibt eine Auflistung von Zeichenfolgen zurück, die die Pfadnamen der Unterverzeichnisse in einem Verzeichnis darstellen.</summary>
      <param name="directory">Name und Pfad des Verzeichnisses.</param>
      <returns>Schreibgeschützte Auflistung der Pfadnamen für die Unterverzeichnisse im angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Das angegebene Verzeichnis zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Gibt eine Auflistung von Zeichenfolgen zurück, die die Pfadnamen der Unterverzeichnisse in einem Verzeichnis darstellen.</summary>
      <param name="directory">Name und Pfad des Verzeichnisses.</param>
      <param name="searchType">Gibt an, ob Unterordner eingeschlossen werden. Der Standardwert ist <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Das Muster für den Namensvergleich.</param>
      <returns>Schreibgeschützte Auflistung der Pfadnamen für die Unterverzeichnisse im angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Mindestens eines der angegebenen Platzhalterzeichen ist <see langword="Nothing" />, eine leere Zeichenfolge oder enthält nur Leerzeichen.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Das angegebene Verzeichnis zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>Gibt für den angegebenen Pfad ein <see cref="T:System.IO.DirectoryInfo" />-Objekt zurück.</summary>
      <param name="directory">
        <see langword="String" />. Pfad des Verzeichnisses.</param>
      <returns>Ein <see cref="T:System.IO.DirectoryInfo" />-Objekt für den angegebenen Pfad.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="directory" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Der Verzeichnispfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>Gibt ein <see cref="T:System.IO.DriveInfo" />-Objekt für das angegebene Laufwerk zurück.</summary>
      <param name="drive">Das zu überprüfende Laufwerk.</param>
      <returns>Ein <see cref="T:System.IO.DriveInfo" />-Objekt für das angegebene Laufwerk.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="drive" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>Gibt ein <see cref="T:System.IO.FileInfo" />-Objekt für die angegebene Datei zurück.</summary>
      <param name="file">Name und Pfad der Datei.</param>
      <returns>Ein <see cref="T:System.IO.FileInfo" />-Objekt für die angegebene Datei.</returns>
      <exception cref="T:System.ArgumentException">Der Pfadname ist falsch formatiert. Er enthält beispielsweise ungültige Zeichen oder besteht nur aus Leerzeichen. Der Dateiname enthält einen nachgestellten Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="file" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.NotSupportedException">Der Pfad enthält einen Doppelpunkt in der Mitte der Zeichenfolge.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad ist zu lang.</exception>
      <exception cref="T:System.Security.SecurityException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt über keinen ACL (Access Control List)-Zugriff auf die Datei.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>Gibt eine schreibgeschützte Auflistung von Zeichenfolgen zurück, die die Namen der Dateien in einem Verzeichnis darstellen.</summary>
      <param name="directory">Das zu durchsuchende Verzeichnis.</param>
      <returns>Eine schreibgeschützte Auflistung von Dateinamen aus dem angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das zu durchsuchende Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Gibt eine schreibgeschützte Auflistung von Zeichenfolgen zurück, die die Namen der Dateien in einem Verzeichnis darstellen.</summary>
      <param name="directory">Das zu durchsuchende Verzeichnis.</param>
      <param name="searchType">Gibt an, ob Unterordner eingeschlossen werden. Der Standardwert ist <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Das Muster, das übereinstimmen muss.</param>
      <returns>Eine schreibgeschützte Auflistung von Dateinamen aus dem angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das zu durchsuchende Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> zeigt auf eine vorhandene Datei.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>Analysiert den Dateinamen aus dem bereitgestellten Pfad.</summary>
      <param name="path">Erforderlich. Der zu analysierende Pfad. <see langword="String" />.</param>
      <returns>Der Dateiname aus dem angegebenen Pfad.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>Gibt den übergeordneten Pfad des bereitgestellten Pfades zurück.</summary>
      <param name="path">Der zu überprüfende Pfad.</param>
      <returns>Der übergeordnete Pfad des bereitgestellten Pfads.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad verfügt über keinen übergeordneten Pfad, weil er ein Stammpfad ist.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>Erstellt eine eindeutig benannte temporäre Datei mit einer Größe von 0 Byte auf dem Datenträger und gibt den vollständigen Pfad dieser Datei zurück.</summary>
      <returns>Ein <see langword="String" />, der den vollständigen Pfad der temporären Datei enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>Verschiebt ein Verzeichnis von einem Speicherort an einen anderen.</summary>
      <param name="sourceDirectoryName">Der Pfad des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destinationDirectoryName">Der Pfad des Verzeichnisses, in das das Quellverzeichnis verschoben wird.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Quelle ist ein Stammverzeichnis, oder der Quellpfad und der Zielpfad sind identisch.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Verschiebt ein Verzeichnis von einem Speicherort an einen anderen.</summary>
      <param name="sourceDirectoryName">Der Pfad des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destinationDirectoryName">Der Pfad des Verzeichnisses, in das das Quellverzeichnis verschoben wird.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Das Zielverzeichnis ist bereits vorhanden, und <paramref name="overwrite" /> ist auf den Wert <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Verschiebt ein Verzeichnis von einem Speicherort an einen anderen.</summary>
      <param name="sourceDirectoryName">Der Pfad des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destinationDirectoryName">Der Pfad des Verzeichnisses, in das das Quellverzeichnis verschoben wird.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Gibt an, ob eine Ausnahme ausgelöst wird, wenn der Benutzer den Vorgang abbricht. Der Standardwert ist <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> ist auf <see langword="ThrowException" /> festgelegt, und ein Unterverzeichnis der Datei kann nicht kopiert werden.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> ist auf <see langword="ThrowException" /> festgelegt, und der Benutzer bricht den Vorgang ab, oder der Vorgang kann nicht abgeschlossen werden.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Verschiebt ein Verzeichnis von einem Speicherort an einen anderen.</summary>
      <param name="sourceDirectoryName">Der Pfad des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destinationDirectoryName">Der Pfad des Verzeichnisses, in das das Quellverzeichnis verschoben wird.</param>
      <param name="overwrite">
        <see langword="True" />, wenn vorhandene Verzeichnisse überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Er ist eine Zeichenfolge der Länge 0; er enthält nur Leerräume; er enthält ungültige Zeichen; er ist ein Gerätepfad (beginnt mit \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> oder <paramref name="destinationDirectoryName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Das Zielverzeichnis ist bereits vorhanden, und <paramref name="overwrite" /> ist auf den Wert <see langword="False" /> festgelegt.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.InvalidOperationException">Der Vorgang ist zyklisch.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>Verschiebt eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName">Der Pfad der zu verschiebenden Datei.</param>
      <param name="destinationFileName">Der Pfad des Verzeichnisses, in das die Datei verschoben werden soll.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Verschiebt eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName">Der Pfad der zu verschiebenden Datei.</param>
      <param name="destinationFileName">Der Pfad des Verzeichnisses, in das die Datei verschoben werden soll.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Verschiebt eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName">Der Pfad der zu verschiebenden Datei.</param>
      <param name="destinationFileName">Der Pfad des Verzeichnisses, in das die Datei verschoben werden soll.</param>
      <param name="showUI">Gibt an, ob der Status des Vorgangs visuell dargestellt werden soll. Der Standardwert ist <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Gibt an, ob eine Ausnahme ausgelöst wird, wenn der Benutzer den Vorgang abbricht. Der Standardwert ist <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> ist auf <see langword="ThrowException" /> festgelegt, und entweder hat der Benutzer den Vorgang abgebrochen, oder ein nicht näher bezeichneter E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Verschiebt eine Datei an einen neuen Speicherort.</summary>
      <param name="sourceFileName">Der Pfad der zu verschiebenden Datei.</param>
      <param name="destinationFileName">Der Pfad des Verzeichnisses, in das die Datei verschoben werden soll.</param>
      <param name="overwrite">
        <see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationFileName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Quelldatei ist ungültig oder nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>Mit der <see langword="OpenTextFieldParser" />-Methode kann ein <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt erstellt werden, mit dessen Hilfe strukturierte Textdateien, z. B. Protokolle, sowohl einfach als auch effizient analysiert werden können. Mit dem <see langword="TextFieldParser" />-Objekt können sowohl Dateien mit Trennzeichen als auch Dateien mit fester Breite gelesen werden.</summary>
      <param name="file">Die Datei, die mit dem <see langword="TextFieldParser" /> geöffnet werden soll.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> zum Lesen der angegebenen Datei.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Eine Zeile kann nicht mit dem angegebenen Format analysiert werden. Die Ausnahmemeldung gibt die Zeile an, die die Ausnahme verursacht, während der in der Zeile enthaltene Text der <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />-Eigenschaft zugewiesen wird.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>Mit der <see langword="OpenTextFieldParser" />-Methode kann ein <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt erstellt werden, mit dessen Hilfe strukturierte Textdateien, z. B. Protokolle, sowohl einfach als auch effizient analysiert werden können. Mit dem <see langword="TextFieldParser" />-Objekt können sowohl Dateien mit Trennzeichen als auch Dateien mit fester Breite gelesen werden.</summary>
      <param name="file">Die Datei, die mit dem <see langword="TextFieldParser" /> geöffnet werden soll.</param>
      <param name="fieldWidths">Die Breiten der Felder.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> zum Lesen der angegebenen Datei.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Eine Zeile kann nicht mit dem angegebenen Format analysiert werden. Die Ausnahmemeldung gibt die Zeile an, die die Ausnahme verursacht, während der in der Zeile enthaltene Text der <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />-Eigenschaft zugewiesen wird.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>Mit der <see langword="OpenTextFieldParser" />-Methode kann ein <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />-Objekt erstellt werden, mit dessen Hilfe strukturierte Textdateien, z. B. Protokolle, sowohl einfach als auch effizient analysiert werden können. Mit dem <see langword="TextFieldParser" />-Objekt können sowohl Dateien mit Trennzeichen als auch Dateien mit fester Breite gelesen werden.</summary>
      <param name="file">Die Datei, die mit dem <see langword="TextFieldParser" /> geöffnet werden soll.</param>
      <param name="delimiters">Trennzeichen für die Felder.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> zum Lesen der angegebenen Datei.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Eine Zeile kann nicht mit dem angegebenen Format analysiert werden. Die Ausnahmemeldung gibt die Zeile an, die die Ausnahme verursacht, während der in der Zeile enthaltene Text der <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />-Eigenschaft zugewiesen wird.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>Öffnet ein <see cref="T:System.IO.StreamReader" />-Objekt, das aus einer Datei gelesen werden soll.</summary>
      <param name="file">Die zu lesende Datei.</param>
      <returns>
        <see cref="T:System.IO.StreamReader" />-Objekt zum Lesen aus der Datei</returns>
      <exception cref="T:System.ArgumentException">Der Dateiname endet mit einem umgekehrten Schrägstrich (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.Security.SecurityException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen zum Lesen aus der Datei.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Öffnet ein <see cref="T:System.IO.StreamReader" />-Objekt, das aus einer Datei gelesen werden soll.</summary>
      <param name="file">Die zu lesende Datei.</param>
      <param name="encoding">Die für den Inhalt der Datei zu verwendende Codierung. Der Standardwert ist ASCII.</param>
      <returns>
        <see cref="T:System.IO.StreamReader" />-Objekt zum Lesen aus der Datei</returns>
      <exception cref="T:System.ArgumentException">Der Dateiname endet mit einem umgekehrten Schrägstrich (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.Security.SecurityException">Der Benutzer verfügt nicht über die erforderlichen Berechtigungen zum Lesen aus der Datei.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Öffnet ein <see cref="T:System.IO.StreamWriter" />-Objekt, das in die angegebene Datei geschrieben werden soll.</summary>
      <param name="file">Die Datei, in die geschrieben werden soll.</param>
      <param name="append">
        <see langword="True" />, wenn Daten an den Inhalt der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll. Der Standardwert ist <see langword="False" />.</param>
      <returns>
        <see cref="T:System.IO.StreamWriter" />-Objekt, das in die angegebene Datei geschrieben werden soll.</returns>
      <exception cref="T:System.ArgumentException">Der Dateiname endet mit einem nachgestellten Schrägstrich.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Öffnet einen <see cref="T:System.IO.StreamWriter" />, der in die angegebene Datei geschrieben werden soll.</summary>
      <param name="file">Die Datei, in die geschrieben werden soll.</param>
      <param name="append">
        <see langword="True" />, wenn Daten an den Inhalt in der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll. Der Standardwert ist <see langword="False" />.</param>
      <param name="encoding">Die Codierung, die beim Schreiben in die Datei verwendet werden soll. Der Standardwert ist ASCII.</param>
      <returns>
        <see cref="T:System.IO.StreamWriter" />-Objekt, das in die angegebene Datei geschrieben werden soll.</returns>
      <exception cref="T:System.ArgumentException">Der Dateiname endet mit einem nachgestellten Schrägstrich.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>Gibt den Inhalt einer Datei als Bytearray zurück.</summary>
      <param name="file">Die zu lesende Datei.</param>
      <returns>Ein <see langword="Byte" />-Array mit dem Inhalt der Datei.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>Gibt den Inhalt einer Textdatei als <see langword="String" /> zurück.</summary>
      <param name="file">Name und Pfad der zu lesenden Datei.</param>
      <returns>Ein <see langword="String" /> mit dem Inhalt der Datei.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Gibt den Inhalt einer Textdatei als <see langword="String" /> zurück.</summary>
      <param name="file">Name und Pfad der zu lesenden Datei.</param>
      <param name="encoding">Die Zeichencodierung, die beim Lesen der Datei verwendet werden soll. Die Standardeinstellung ist UTF-8.</param>
      <returns>Ein <see langword="String" /> mit dem Inhalt der Datei.</returns>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>Benennt ein Verzeichnis um.</summary>
      <param name="directory">Der Pfad und der Name des umzubenennenden Verzeichnisses.</param>
      <param name="newName">Neuer Name für das Verzeichnis.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> enthält Pfadinformationen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> ist <see langword="Nothing" />.  

oder - 
Der <paramref name="newName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Es ist eine Datei oder ein Verzeichnis mit dem in <paramref name="newName" /> angegebenen Namen vorhanden.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>Benennt eine Datei um.</summary>
      <param name="file">Die Datei, die umbenannt werden soll.</param>
      <param name="newName">Neuer Name der Datei.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> enthält Pfadinformationen oder endet mit einem umgekehrten Schrägstrich (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.  

oder - 
Der <paramref name="newName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Es ist eine Datei oder ein Verzeichnis mit dem in <paramref name="newName" /> angegebenen Namen vorhanden.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Benutzer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>Ruft ein Objekt ab, das Eigenschaften für den Zugriff auf Verzeichnisse bereitstellt, auf die häufig verwiesen wird.</summary>
      <returns>Diese Eigenschaft gibt das <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />-Objekt für den Computer zurück.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Schreibt Daten in eine Binärdatei.</summary>
      <param name="file">Der Pfad und Name der Datei, in die geschrieben werden soll.</param>
      <param name="data">Die in die Datei zu schreibenden Daten.</param>
      <param name="append">
        <see langword="True" />, wenn Daten an den Inhalt der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Schreibt Text in eine Datei.</summary>
      <param name="file">Die Datei, in die geschrieben werden soll.</param>
      <param name="text">Text, der in eine Datei geschrieben werden soll.</param>
      <param name="append">
        <see langword="True" />, wenn Daten an den Inhalt der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll. Der Standardwert ist <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Schreibt Text in eine Datei.</summary>
      <param name="file">Die Datei, in die geschrieben werden soll.</param>
      <param name="text">Text, der in eine Datei geschrieben werden soll.</param>
      <param name="append">
        <see langword="True" />, wenn Daten an den Inhalt der Datei angefügt werden sollen, <see langword="False" />, wenn der Inhalt der Datei überschrieben werden soll. Der Standardwert ist <see langword="False" />.</param>
      <param name="encoding">Die beim Schreiben in die Datei zu verwendende Codierung. Die Standardeinstellung ist UTF-8.</param>
      <exception cref="T:System.ArgumentException">Der Pfad ist aus einem der folgenden Gründe ungültig: Es handelt sich um eine Zeichenfolge der Länge 0; der Pfad enthält nur Leerräume; er enthält ungültige Zeichen; es handelt sich um einen Gerätepfad (beginnt mit \\.\); er endet mit einem nachstehenden Schrägstrich.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> ist <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.IOException">Die Datei wird von einem anderen Prozess verwendet, oder ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der Pfad überschreitet die im System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Ein Datei- oder Verzeichnisname im Pfad enthält einen Doppelpunkt (:) oder hat ein ungültiges Format.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Zeichenfolge in den Puffer zu schreiben.</exception>
      <exception cref="T:System.Security.SecurityException">Dem Benutzer fehlen die erforderlichen Berechtigungen zum Anzeigen des Pfads.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>Stellt Eigenschaften und Methoden zur Bearbeitung der Registrierung bereit.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>Stellt Eigenschaften für den Zugriff auf häufig verwiesene Verzeichnisse bereit.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>Ruft einen Pfadnamen ab, der auf das Anwendungsdatenverzeichnis für alle Benutzer zeigt.</summary>
      <returns>Der Pfad zum Anwendungsdatenverzeichnis für alle Benutzer.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>Ruft einen Pfadnamen ab, der auf das Anwendungsdatenverzeichnis für den aktuellen Benutzer zeigt.</summary>
      <returns>Der Pfad zum Anwendungsdatenverzeichnis für den aktuellen Benutzer.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>Ruft einen Pfadnamen ab, der auf das Desktop-Verzeichnis zeigt.</summary>
      <returns>Der Pfad zum Desktopverzeichnis.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>Ruft einen Pfadnamen ab, der auf das Verzeichnis Eigene Dokumente zeigt.</summary>
      <returns>Der Pfad zum Verzeichnis Eigene Dateien.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>Ruft einen Pfadnamen ab, der auf das Verzeichnis Eigene Musik zeigt.</summary>
      <returns>Der Pfad zum Verzeichnis Eigene Musik.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>Ruft einen Pfadnamen ab, der auf das Verzeichnis Eigene Bilder zeigt.</summary>
      <returns>Der Pfad zum Verzeichnis Eigene Bilder.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Ruft einen Pfad ab, der auf das Verzeichnis Programme zeigt.</summary>
      <returns>Der Pfad zum Verzeichnis " Programme ".</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Ruft einen Pfadnamen ab, der auf das Verzeichnis Programme zeigt.</summary>
      <returns>Der Pfad zum Verzeichnis Programme.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Ruft einen Pfadnamen ab, der auf das Temp-Verzeichnis zeigt.</summary>
      <returns>Der Pfad zum Verzeichnis Temp.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist leer. Dies liegt in der Regel daran, dass das Betriebssystem das Verzeichnis nicht unterstützt.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Gibt an, wie eine Datei beim Aufruf von Dateizugriffsfunktionen geöffnet werden kann.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary vsli:raw="Read and write access permitted. This is the default.">Lese-/Schreibzugriff zulässig. Dies ist die Standardeinstellung.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary vsli:raw="Read access permitted.">Lesezugriff zulässig.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary vsli:raw="Read and write access permitted.">Lese-/Schreibzugriff zulässig.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary vsli:raw="Write access permitted.">Schreibzugriff zulässig.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Gibt an, wie eine Datei beim Aufruf von Dateizugriffsfunktionen geöffnet werden kann.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary vsli:raw="File opened to append to it. Default.">Die Datei wurde geöffnet, um Daten anzufügen. Standard.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary vsli:raw="File opened for binary access.">Die Datei wurde für den binären Zugriff geöffnet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary vsli:raw="File opened for read access.">Die Datei wurde für den Lesezugriff geöffnet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary vsli:raw="File opened for write access.">Die Datei wurde für den Schreibzugriff geöffnet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary vsli:raw="File opened for random access.">Die Datei wurde für den zufälligen Zugriff geöffnet.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Gibt an, wie eine Datei beim Aufruf von Dateizugriffsfunktionen geöffnet werden kann.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary vsli:raw="&lt;see langword=&quot;LockReadWrite&quot; /&gt;. This is the default.">
        <see langword="LockReadWrite" />. Dies ist die Standardeinstellung.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary vsli:raw="Other processes cannot read the file.">Andere Prozesse können die Datei nicht lesen.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary vsli:raw="Other processes cannot read or write to the file.">Andere Prozesse können nicht aus der Datei lesen oder in diese schreiben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary vsli:raw="Other processes cannot write to the file.">Andere Prozesse können nicht in die Datei schreiben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary vsli:raw="Any process can read or write to the file.">Alle Prozesse können aus der Datei lesen oder in diese schreiben.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Diese Klasse unterstützt die Visual Basic-Funktionen <see langword="Print" /> und <see langword="PrintLine" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Dieses Feld unterstützt die Visual Basic-Funktionen <see langword="Print" /> und <see langword="PrintLine" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary vsli:raw="The &lt;see langword=&quot;Strings&quot; /&gt; module contains procedures used to perform string operations.">Das <see langword="Strings" />-Modul enthält Prozeduren, mit denen Zeichenfolgenoperationen ausgeführt werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Erforderlich. Alle gültigen <see langword="Char" />-Ausdrücke oder <see langword="String" />-Ausdrücke. Wenn <paramref name="String" /> ein <see langword="String" />-Ausdruck ist, wird nur das erste Zeichen der Zeichenfolge als Eingabe verwendet. Wenn <paramref name="String" /><see langword="Nothing" /> ist oder keine Zeichen enthält, tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</param>
      <returns vsli:raw="The character code corresponding to a character.">Der Zeichencode, der einem Zeichen entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Erforderlich. Alle gültigen <see langword="Char" />-Ausdrücke oder <see langword="String" />-Ausdrücke. Wenn <paramref name="String" /> ein <see langword="String" />-Ausdruck ist, wird nur das erste Zeichen der Zeichenfolge als Eingabe verwendet. Wenn <paramref name="String" /><see langword="Nothing" /> ist oder keine Zeichen enthält, tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</param>
      <returns vsli:raw="The character code corresponding to a character.">Der Zeichencode, der einem Zeichen entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Erforderlich. Alle gültigen <see langword="Char" />-Ausdrücke oder <see langword="String" />-Ausdrücke. Wenn <paramref name="String" /> ein <see langword="String" />-Ausdruck ist, wird nur das erste Zeichen der Zeichenfolge als Eingabe verwendet. Wenn <paramref name="String" /><see langword="Nothing" /> ist oder keine Zeichen enthält, tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</param>
      <returns vsli:raw="The character code corresponding to a character.">Der Zeichencode, der einem Zeichen entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Erforderlich. Alle gültigen <see langword="Char" />-Ausdrücke oder <see langword="String" />-Ausdrücke. Wenn <paramref name="String" /> ein <see langword="String" />-Ausdruck ist, wird nur das erste Zeichen der Zeichenfolge als Eingabe verwendet. Wenn <paramref name="String" /><see langword="Nothing" /> ist oder keine Zeichen enthält, tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</param>
      <returns vsli:raw="The character code corresponding to a character.">Der Zeichencode, der einem Zeichen entspricht.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">Gibt das dem angegebenen Zeichencode zugeordnete Zeichen zurück.</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">Erforderlich. Ein <see langword="Integer" />-Ausdruck, der den <c>Codepunkt</c> oder Zeichencode für das Zeichen darstellt.</param>
      <returns vsli:raw="The character associated with the specified character code.">Das dem angegebenen Zeichencode zugeordnete Zeichen.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; 0 or &amp;gt; 255 for &lt;see langword=&quot;Chr&quot; /&gt;.">
        <paramref name="CharCode" /> &lt; 0 oder &gt; 255 für <see langword="Chr" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">Gibt das dem angegebenen Zeichencode zugeordnete Zeichen zurück.</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">Erforderlich. Ein <see langword="Integer" />-Ausdruck, der den <c>Codepunkt</c> oder Zeichencode für das Zeichen darstellt.</param>
      <returns vsli:raw="The character associated with the specified character code.">Das dem angegebenen Zeichencode zugeordnete Zeichen.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; -32768 or &amp;gt; 65535 for &lt;see langword=&quot;ChrW&quot; /&gt;.">
        <paramref name="CharCode" /> &lt; – 32768 oder &gt; 65535 für <see langword="ChrW" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Gibt ein nullbasiertes Array zurück, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">Erforderlich. Eindimensionales Zeichenfolgenarray, das durchsucht werden soll.</param>
      <param name="Match" vsli:raw="Required. String to search for.">Erforderlich. Die zu suchende Zeichenfolge.</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">Optional. Ein <see langword="Boolean" />-Wert, der angibt, ob untergeordnete Zeichenfolgen zurückgegeben werden sollen, die <paramref name="Match" /> einschließen oder ausschließen. Wenn <paramref name="Include" /><see langword="True" /> ist, gibt die <see langword="Filter" />-Funktion eine Teilmenge des Arrays zurück, die <paramref name="Match" /> als eine untergeordnete Zeichenfolge enthält. Wenn <paramref name="Include" /><see langword="False" /> ist, gibt die <see langword="Filter" />-Funktion eine Teilmenge des Arrays zurück, die <paramref name="Match" /> nicht als eine untergeordnete Zeichenfolge enthält.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">Optional. Numerischer Wert, der die Art des zu verwendenden Zeichenfolgenvergleichs angibt. Die Werte finden Sie unter „Einstellungen“.</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Ein nullbasiertes Array, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> ist <see langword="Nothing" /> oder kein eindimensionales Array.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Gibt ein nullbasiertes Array zurück, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">Erforderlich. Eindimensionales Zeichenfolgenarray, das durchsucht werden soll.</param>
      <param name="Match" vsli:raw="Required. String to search for.">Erforderlich. Die zu suchende Zeichenfolge.</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">Optional. Ein <see langword="Boolean" />-Wert, der angibt, ob untergeordnete Zeichenfolgen zurückgegeben werden sollen, die <paramref name="Match" /> einschließen oder ausschließen. Wenn <paramref name="Include" /><see langword="True" /> ist, gibt die <see langword="Filter" />-Funktion eine Teilmenge des Arrays zurück, die <paramref name="Match" /> als eine untergeordnete Zeichenfolge enthält. Wenn <paramref name="Include" /><see langword="False" /> ist, gibt die <see langword="Filter" />-Funktion eine Teilmenge des Arrays zurück, die <paramref name="Match" /> nicht als eine untergeordnete Zeichenfolge enthält.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">Optional. Numerischer Wert, der die Art des zu verwendenden Zeichenfolgenvergleichs angibt. Die Werte finden Sie unter „Einstellungen“.</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Ein nullbasiertes Array, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> ist <see langword="Nothing" /> oder kein eindimensionales Array.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary vsli:raw="Returns a string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">Gibt eine Zeichenfolge zurück, die entsprechend den Anweisungen in einem <see langword="String" />-Formatausdruck formatiert ist.</summary>
      <param name="Expression" vsli:raw="Required. Any valid expression.">Erforderlich. Jeder gültige Ausdruck.</param>
      <param name="Style" vsli:raw="Optional. A valid named or user-defined format &lt;see langword=&quot;String&quot; /&gt; expression.">Dies ist optional. Ein gültiger benannter oder benutzerdefinierter Format-<see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">Eine Zeichenfolge, die entsprechend den Anweisungen in einem <see langword="String" />-Formatausdruck formatiert ist.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.">Gibt einen Ausdruck als Währungsbetrag zurück, der mit dem in der Systemsteuerung festgelegten Währungssymbol formatiert ist.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Erforderlich. Der zu formatierende Ausdruck.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is -1, which indicates that the computer's regional settings are used.">Optional. Numerischer Wert, der angibt, wie viele Stellen hinter dem Dezimaltrennzeichen angezeigt werden. Der Standardwert ist –1 und gibt an, dass die regionalen Einstellungen des Computers verwendet werden.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not a leading zero is displayed for fractional values. See &quot;Remarks&quot; for values.">Optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Enumeration, die angibt, ob bei Bruchwerten eine führende Null angezeigt wird. Weitere Informationen finden Sie in den Hinweisen zu Werten.</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not to place negative values within parentheses. See &quot;Remarks&quot; for values.">Dies ist optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Enumeration, die angibt, ob negative Werte in Klammern gesetzt werden. Weitere Informationen finden Sie in den Hinweisen zu Werten.</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See &quot;Remarks&quot; for values.">Dies ist optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Enumeration, die angibt, ob Zahlen mithilfe des Gruppentrennzeichens gruppiert werden, das in den regionalen Einstellungen des Computers definiert ist. Weitere Informationen finden Sie in den Hinweisen zu Werten.</param>
      <returns vsli:raw="An expression formatted as a currency value using the currency symbol defined in the system control panel.">Ein mit dem in der Systemsteuerung festgelegten Währungssymbol als Währungsbetrag formatierter Ausdruck.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Number of digits after decimal point is greater than 99.">Anzahl der Stellen nach dem Dezimalzeichen ist größer als 99.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">Typ ist nicht numerisch.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary vsli:raw="Returns a string expression representing a date/time value.">Gibt einen Zeichenfolgenausdruck für einen Datums- und Uhrzeitwert zurück.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Date&quot; /&gt; expression to be formatted.">Erforderlich. Der zu formatierende <see langword="Date" />-Ausdruck.</param>
      <param name="NamedFormat" vsli:raw="Optional. Numeric value that indicates the date/time format used. If omitted, &lt;see langword=&quot;DateFormat.GeneralDate&quot; /&gt; is used.">Dies ist optional. Numerischer Wert, der das verwendete Datum-/Zeitformat angibt. Wird der Wert nicht angegeben, so wird <see langword="DateFormat.GeneralDate" /> verwendet.</param>
      <returns vsli:raw="A string expression representing a date/time value.">Ein Zeichenfolgenausdruck, der einen Datums-/Zeitwert darstellt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NamedFormat&quot; /&gt; setting is not valid.">Die Einstellung <paramref name="NamedFormat" /> ist nicht gültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a number.">Gibt einen als Zahl formatierten Ausdruck zurück.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Erforderlich. Der zu formatierende Ausdruck.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is -1, which indicates that the computer's regional settings are used.">Dies ist optional. Numerischer Wert, der angibt, wie viele Stellen hinter dem Dezimaltrennzeichen angezeigt werden. Der Standardwert ist –1 und gibt an, dass die regionalen Einstellungen des Computers verwendet werden.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether a leading 0 is displayed for fractional values. See &quot;Settings&quot; for values.">Optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob bei Bruchwerten eine führende 0 angezeigt wird. Die Werte finden Sie unter „Einstellungen“.</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether to place negative values within parentheses. See &quot;Settings&quot; for values.">Dies ist optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob negative Werte in Klammern gesetzt werden. Die Werte finden Sie unter „Einstellungen“.</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">Dies ist optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob Ziffern mithilfe des in den Gebietsschemaeinstellungen angegebenen Gruppentrennzeichens gruppiert werden sollen. Die Werte finden Sie unter „Einstellungen“.</param>
      <returns vsli:raw="An expression formatted as a number.">Ein als Zahl formatierter Ausdruck.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">Typ ist nicht numerisch.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">Gibt einen Ausdruck als Prozentangabe (d. h. multipliziert mit 100) und einem abschließenden %-Zeichen zurück.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Erforderlich. Der zu formatierende Ausdruck.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is -1, which indicates that the locale settings are used.">Optional. Numerischer Wert, der angibt, wie viele Stellen rechts neben dem Dezimaltrennzeichen angezeigt werden. Der Standardwert ist –1, was darauf hinweist, dass die Einstellungen des Gebietsschemas verwendet werden.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not a leading zero displays for fractional values. See &quot;Settings&quot; for values.">Dies ist optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob bei Dezimalzahlen eine führende Null angezeigt werden soll. Die Werte finden Sie unter „Einstellungen“.</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not to place negative values within parentheses. See &quot;Settings&quot; for values.">Dies ist optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob negative Werte in Klammern gesetzt werden sollen. Die Werte finden Sie unter „Einstellungen“.</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">Dies ist optional. <see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob Ziffern mithilfe des in den Gebietsschemaeinstellungen angegebenen Gruppentrennzeichens gruppiert werden sollen. Die Werte finden Sie unter „Einstellungen“.</param>
      <returns vsli:raw="An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">Ein als Prozentangabe (d. h. multipliziert mit 100) und mit einem abschließenden %-Zeichen formatierter Ausdruck.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">Typ ist nicht numerisch.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">Gibt einen <see langword="Char" />-Wert zurück, der das Zeichen am angegebenen Index in der angegebenen Zeichenfolge darstellt.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck.</param>
      <param name="Index" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The (1-based) index of the character in &lt;paramref name=&quot;str&quot; /&gt; to be returned.">Erforderlich. <see langword="Integer" />-Ausdruck. Der (1-basierte) Index des Zeichens in <paramref name="str" />, der zurückgegeben werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">
        <see langword="Char" />-Wert, der das Zeichen am angegebenen Index in der angegebenen Zeichenfolge darstellt.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;paramref name=&quot;Index&quot; /&gt; &amp;lt; 1, or &lt;paramref name=&quot;Index&quot; /&gt; is greater than index of last character of &lt;paramref name=&quot;str&quot; /&gt;.">
        <paramref name="str" /> ist <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 oder <paramref name="Index" /> ist größer als der Index des letzten Zeichens von <paramref name="str" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">Gibt einen Integer-Wert zurück, der die Anfangsposition des ersten Auftretens einer Zeichenfolge innerhalb einer anderen Zeichenfolge angibt.</summary>
      <param name="Start" vsli:raw="Optional. Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1-based.">Optional. Numerischer Ausdruck, der die Anfangsposition für jede Suche festlegt. Wenn dieser ausgelassen wird, beginnt die Suche an der ersten Zeichenposition. Der Anfangsindex ist 1-basiert.</param>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">Erforderlich. <see langword="String" />-Ausdruck, der durchsucht wird.</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">Erforderlich. Gesuchter <see langword="String" />-Ausdruck.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Dies ist optional. Gibt den Typ des Zeichenfolgenvergleichs an. Wenn <paramref name="Compare" /> ausgelassen wird, bestimmt die <see langword="Option Compare" />-Einstellung den Typ des Vergleichs.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt; Position where match begins&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; &amp;gt; length of &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  Rückgabewert von InStr 
 
                <paramref name="String1" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />. 0 
 
                <paramref name="String2" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />.
                <paramref name="start" /><paramref name="String2" /> wird nicht gefunden. 
  0 
 
                <paramref name="String2" /> wurde in <paramref name="String1" /> gefunden. Position, an der die gefundene Zeichenfolge beginnt 
 
                <paramref name="Start" /> &gt; Länge von <paramref name="String1" /> 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; 1.">
        <paramref name="Start" /> &lt; 1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">Gibt einen Integer-Wert zurück, der die Anfangsposition des ersten Auftretens einer Zeichenfolge innerhalb einer anderen Zeichenfolge angibt.</summary>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">Erforderlich. <see langword="String" />-Ausdruck, der durchsucht wird.</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">Erforderlich. Gesuchter <see langword="String" />-Ausdruck.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Dies ist optional. Gibt den Typ des Zeichenfolgenvergleichs an. Wenn <paramref name="Compare" /> ausgelassen wird, bestimmt die <see langword="Option Compare" />-Einstellung den Typ des Vergleichs.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;The starting position for the search, which defaults to the first character position.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position where match begins.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  Rückgabewert von InStr 
 
                <paramref name="String1" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />. 0 
 
                <paramref name="String2" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />. Die Startposition für die Suche, mit Standard an der ersten Zeichenposition.  

 
                <paramref name="String2" /> wird nicht gefunden. 
  0 
 
                <paramref name="String2" /> wurde in <paramref name="String1" /> gefunden. Position, an der die gefundene Zeichenfolge beginnt</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns the position of the first occurrence of one string within another, starting from the right side of the string.">Gibt die Position des ersten Vorkommens einer Zeichenfolge innerhalb einer anderen Zeichenfolge von rechts nach links gesehen zurück.</summary>
      <param name="StringCheck" vsli:raw="Required. String expression being searched.">Erforderlich. Der gesuchte Zeichenfolgenausdruck.</param>
      <param name="StringMatch" vsli:raw="Required. String expression being searched for.">Erforderlich. Der gesuchte Zeichenfolgenausdruck.</param>
      <param name="Start" vsli:raw="Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If &lt;paramref name=&quot;Start&quot; /&gt; is omitted then -1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.">Dies ist optional. Numerischer Ausdruck, der die 1-basierte Anfangsposition für jede Suche festlegt, beginnend auf der linken Seite der Zeichenfolge. Wenn <paramref name="Start" /> weggelassen wird, wird –1 verwendet, d. h., dass die Suche an der letzten Zeichenposition beginnt. Die Suche wird dann von rechts nach links fortgesetzt.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.">Dies ist optional. Numerischer Wert, der den Typ des Vergleichs angibt, der für das Auswerten von untergeordneten Zeichenfolgen verwendet wird. Wenn dieser ausgelassen wird, wird ein binärer Vergleich durchgeführt. Werte finden Sie im Abschnitt "Einstellungen".</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStrRev returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringCheck&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is found within &lt;paramref name=&quot;StringCheck&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position at which the first match is found, starting with the right side of the string.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;StringMatch&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">If 
  InStrRev gibt Folgendes zurück 
 
                <paramref name="StringCheck" /> ist eine Zeichenfolge mit der Länge 0 (null) 
  0 
 
                <paramref name="StringMatch" /> ist eine Zeichenfolge mit der Länge 0 (null) 
 
                <paramref name="Start" /><paramref name="StringMatch" /> wird nicht gefunden. 
  0 
 
                <paramref name="StringMatch" /> wurde in <paramref name="StringCheck" /> gefunden. Position, an der die erste Übereinstimmung gefunden wird, beginnend mit der rechten Seite der Zeichenfolge.  

 
                <paramref name="Start" /> ist größer als die Länge von <paramref name="StringMatch" />. 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; = 0 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; -1.">
        <paramref name="Start" /> = 0 oder <paramref name="Start" /> &lt; –1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">Gibt eine Zeichenfolge zurück, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">Erforderlich. Ein eindimensionales Array, das untergeordnete Zeichenfolgen enthält, die verknüpft werden sollen.</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">Dies ist optional. Eine beliebige Zeichenfolge, mit der die untergeordneten Zeichenfolgen in der zurückgegebenen Zeichenfolge getrennt werden. Wenn diese ausgelassen wird, wird das Leerzeichen (" ") verwendet. Wenn <paramref name="Delimiter" /> eine leere Zeichenfolge ("") oder <see langword="Nothing" /> ist, werden alle Elemente der Liste ohne Trennzeichen verkettet.</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">Eine Zeichenfolge, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> ist nicht eindimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">Gibt eine Zeichenfolge zurück, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">Erforderlich. Ein eindimensionales Array, das untergeordnete Zeichenfolgen enthält, die verknüpft werden sollen.</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">Dies ist optional. Eine beliebige Zeichenfolge, mit der die untergeordneten Zeichenfolgen in der zurückgegebenen Zeichenfolge getrennt werden. Wenn diese ausgelassen wird, wird das Leerzeichen (" ") verwendet. Wenn <paramref name="Delimiter" /> eine leere Zeichenfolge ("") oder <see langword="Nothing" /> ist, werden alle Elemente der Liste ohne Trennzeichen verkettet.</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">Eine Zeichenfolge, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> ist nicht eindimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das in Kleinbuchstaben konvertiert wurde.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Erforderlich. Alle gültigen <see langword="String" />-Ausdrücke oder <see langword="Char" />-Ausdrücke.</param>
      <returns vsli:raw="A string or character converted to lowercase.">Eine Zeichenfolge oder ein Zeichen, die bzw. das in Kleinbuchstaben konvertiert wurde.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das in Kleinbuchstaben konvertiert wurde.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Erforderlich. Alle gültigen <see langword="String" />-Ausdrücke oder <see langword="Char" />-Ausdrücke.</param>
      <returns vsli:raw="A string or character converted to lowercase.">Eine Zeichenfolge oder ein Zeichen, die bzw. das in Kleinbuchstaben konvertiert wurde.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the left side of a string.">Gibt eine Zeichenfolge zurück, die eine angegebene Zeichenanzahl von der linken Seite einer Zeichenfolge enthält.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the leftmost characters are returned.">Erforderlich. <see langword="String" />-Ausdruck, von dem die äußersten linken Zeichen zurückgegeben werden.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">Erforderlich. <see langword="Integer" />-Ausdruck. Numerischer Ausdruck, der angibt, wie viele Zeichen zurückgegeben werden sollen. Wenn der Wert 0 ist, wird eine Zeichenfolge ("") der Länge 0 (null) zurückgegeben. Wenn der Wert größer oder gleich der Anzahl von Zeichen in <paramref name="str" /> ist, wird die ganze Zeichenfolge zurückgegeben.</param>
      <returns vsli:raw="A string containing a specified number of characters from the left side of a string.">Eine Zeichenfolge, die eine angegebene Anzahl Zeichen von der linken Seite einer Zeichenfolge enthält.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname. Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a left-aligned string containing the specified string adjusted to the specified length.">Gibt eine links ausgerichtete Zeichenfolge zurück, die die angegebene Zeichenfolge angepasst an die angegebene Länge enthält.</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">Erforderlich. <see langword="String" />-Ausdruck. Name der Zeichenfolgenvariablen.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">Erforderlich. <see langword="Integer" />-Ausdruck. Länge der zurückgegebenen Zeichenfolge.</param>
      <returns vsli:raw="A left-aligned string containing the specified string adjusted to the specified length.">Eine links ausgerichtete Zeichenfolge, die die an die angegebene Länge angepasste angegebene Zeichenfolge enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Gibt eine Zeichenfolge zurück, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Eine Zeichenfolge, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary vsli:raw="Returns a string that contains all the characters starting from a specified position in a string.">Gibt eine Zeichenfolge zurück, die alle Zeichen enthält, beginnend bei einer angegebenen Position in einer Zeichenfolge.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">Erforderlich. <see langword="String" />-Ausdruck, aus dem Zeichen zurückgegeben werden.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one-based.">Erforderlich. <see langword="Integer" />-Ausdruck. Anfangsposition der zurückzugebenden Zeichen. Wenn <paramref name="Start" /> größer als die Anzahl der Zeichen in <paramref name="str" /> ist, gibt die <see langword="Mid" />-Funktion eine Zeichenfolge ("") der Länge 0 zurück. <paramref name="Start" /> ist 1-basiert.</param>
      <returns vsli:raw="A string that consists of all the characters starting from the specified position in the string.">Eine Zeichenfolge, die aus allen Zeichen beginnend bei der angegebenen Position in der Zeichenfolge besteht.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 oder <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a string that contains a specified number of characters starting from a specified position in a string.">Gibt eine Zeichenfolge zurück, die eine angegebene Anzahl von Zeichen enthält, beginnend bei einer angegebenen Position in einer Zeichenfolge.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">Erforderlich. <see langword="String" />-Ausdruck, aus dem Zeichen zurückgegeben werden.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one based.">Erforderlich. <see langword="Integer" />-Ausdruck. Anfangsposition der zurückzugebenden Zeichen. Wenn <paramref name="Start" /> größer als die Anzahl der Zeichen in <paramref name="str" /> ist, gibt die <see langword="Mid" />-Funktion eine Zeichenfolge ("") der Länge 0 zurück. <paramref name="Start" /> ist 1-basiert.</param>
      <param name="Length" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt; expression. Number of characters to return. If omitted or if there are fewer than &lt;paramref name=&quot;Length&quot; /&gt; characters in the text (including the character at position &lt;paramref name=&quot;Start&quot; /&gt;), all characters from the start position to the end of the string are returned.">Dies ist optional. <see langword="Integer" />-Ausdruck. Die Anzahl der zurückzugebenden Zeichen. Wenn der Ausdruck ausgelassen wird oder weniger als <paramref name="Length" /> Zeichen im Text enthalten sind (einschließlich des Zeichens an Position <paramref name="Start" />), werden alle Zeichen von der Anfangs- bis zur Endposition der Zeichenfolge zurückgegeben.</param>
      <returns vsli:raw="A string that consists of the specified number of characters starting from the specified position in the string.">Eine Zeichenfolge, die aus der angegebenen Anzahl von Zeichen besteht, beginnend bei der angegebenen Position in der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 oder <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a string in which a specified substring has been replaced with another substring a specified number of times.">Gibt eine Zeichenfolge zurück, in der eine bestimmte untergeordnete Zeichenfolge so oft wie angegeben durch eine andere Zeichenfolge ersetzt wurde.</summary>
      <param name="Expression" vsli:raw="Required. String expression containing substring to replace.">Erforderlich. Zeichenfolgenausdruck mit der zu ersetzenden untergeordneten Zeichenfolge.</param>
      <param name="Find" vsli:raw="Required. Substring being searched for.">Erforderlich. Die gesuchte untergeordnete Zeichenfolge.</param>
      <param name="Replacement" vsli:raw="Required. Replacement substring.">Erforderlich. Untergeordnete Ersetzungszeichenfolge.</param>
      <param name="Start" vsli:raw="Optional. Position within &lt;paramref name=&quot;Expression&quot; /&gt; that starts a substring used for replacement. The return value of &lt;see langword=&quot;Replace&quot; /&gt; is a string that begins at &lt;paramref name=&quot;Start&quot; /&gt;, with appropriate substitutions. If omitted, 1 is assumed.">Dies ist optional. Position in <paramref name="Expression" />, die eine für die Ersetzung verwendete Teilzeichenfolge startet. Der Rückgabewert von <see langword="Replace" /> ist eine Zeichenfolge, die bei <paramref name="Start" /> beginnt, mit entsprechenden Ersetzungen. Wenn der Wert nicht angegeben wird, wird 1 angenommen.</param>
      <param name="Count" vsli:raw="Optional. Number of substring substitutions to perform. If omitted, the default value is -1, which means &quot;make all possible substitutions.&quot;">Dies ist optional. Die Anzahl der durchzuführenden Ersetzungen für untergeordnete Zeichenfolgen. Wenn der Wert nicht angegeben wird, ist der Standardwert –1, d. h., dass alle möglichen Ersetzungen vorgenommen werden.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.">Dies ist optional. Numerischer Wert, der den Typ des Vergleichs angibt, der für das Auswerten von untergeordneten Zeichenfolgen verwendet wird. Werte finden Sie im Abschnitt "Einstellungen".</param>
      <returns vsli:raw="One of the following values.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;Replace returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Find&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Replace&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt; with no occurrences of &lt;paramref name=&quot;Find&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Expression&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;, or &lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;Nothing&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Count&quot; /&gt; is 0&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="Replace" /> gibt die folgenden Werte zurück.  
  If 
  Replace gibt Folgendes zurück 
 <paramref name="Find" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />. Kopie von <paramref name="Expression" /><paramref name="Replace" /> ist eine Zeichenfolge mit der Länge 0 (null) 
  Kopie von <paramref name="Expression" /> ohne Vorkommen von <paramref name="Find" /><paramref name="Expression" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />, oder <paramref name="Start" /> ist größer als die Länge von <paramref name="Expression" /><see langword="Nothing" /><paramref name="Count" /> ist 0 
  Kopie von <paramref name="Expression" /></returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Count&quot; /&gt; &amp;lt; -1 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0.">
        <paramref name="Count" /> &lt; –1 oder <paramref name="Start" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the right side of a string.">Gibt eine Zeichenfolge mit einer bestimmten Anzahl von Zeichen ab dem ersten Zeichen rechts von einer Zeichenfolge zurück.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the rightmost characters are returned.">Erforderlich. <see langword="String" />-Ausdruck, von dem die äußersten rechten Zeichen zurückgegeben werden.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">Erforderlich. <see langword="Integer" />. Numerischer Ausdruck, der angibt, wie viele Zeichen zurückgegeben werden sollen. Wenn der Wert 0 ist, wird eine Zeichenfolge ("") der Länge 0 (null) zurückgegeben. Wenn der Wert größer oder gleich der Anzahl von Zeichen in <paramref name="str" /> ist, wird die ganze Zeichenfolge zurückgegeben.</param>
      <returns vsli:raw="A string containing a specified number of characters from the right side of a string.">Eine Zeichenfolge mit einer angegebenen Anzahl von Zeichen von der rechten Seite einer Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a right-aligned string containing the specified string adjusted to the specified length.">Gibt eine rechts ausgerichtete Zeichenfolge zurück, die die angegebene Zeichenfolge in der vorgegebenen Länge enthält.</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">Erforderlich. <see langword="String" />-Ausdruck. Name der Zeichenfolgenvariablen.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">Erforderlich. <see langword="Integer" />-Ausdruck. Länge der zurückgegebenen Zeichenfolge.</param>
      <returns vsli:raw="A right-aligned string containing the specified string adjusted to the specified length.">Eine rechts ausgerichtete Zeichenfolge, die die an die angegebene Länge angepasste angegebene Zeichenfolge enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Gibt eine Zeichenfolge zurück, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Eine Zeichenfolge, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary vsli:raw="Returns a string consisting of the specified number of spaces.">Gibt eine Zeichenfolge mit der angegebenen Anzahl von Leerzeichen zurück.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The number of spaces you want in the string.">Erforderlich. <see langword="Integer" />-Ausdruck. Die Anzahl der gewünschten Leerzeichen in der Zeichenfolge.</param>
      <returns vsli:raw="A string consisting of the specified number of spaces.">Eine Zeichenfolge mit der angegebenen Anzahl Leerzeichen.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; &amp;lt; 0.">
        <paramref name="Number" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based, one-dimensional array containing a specified number of substrings.">Gibt ein nullbasiertes, eindimensionales Array zurück, das eine angegebene Anzahl von Teilzeichenfolgen enthält.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing substrings and delimiters.">Erforderlich. <see langword="String" />-Ausdruck mit untergeordneten Zeichenfolgen und Trennzeichen.</param>
      <param name="Delimiter" vsli:raw="Optional. Any single character used to identify substring limits. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is omitted, the space character (&quot; &quot;) is assumed to be the delimiter.">Optional. Jedes einzelne Zeichen, mit dem Grenzen von untergeordneten Zeichenfolgen gekennzeichnet werden. Wenn <paramref name="Delimiter" /> nicht angegeben wird, wird als Trennzeichen das Leerzeichen (" ") angenommen.</param>
      <param name="Limit" vsli:raw="Optional. Maximum number of substrings into which the input string should be split. The default, -1, indicates that the input string should be split at every occurrence of the &lt;paramref name=&quot;Delimiter&quot; /&gt; string.">Dies ist optional. Die maximale Anzahl von untergeordneten Zeichenfolgen, in die die Eingabezeichenfolge geteilt werden soll. Der Standardwert –1 gibt an, dass die Eingabezeichenfolge an jedem Vorkommen der <paramref name="Delimiter" />-Zeichenfolge getrennt werden soll.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the comparison to use when evaluating substrings. See &quot;Settings&quot; for values.">Optional. Numerischer Wert, der den Vergleich angibt, der für das Auswerten von untergeordneten Zeichenfolgen verwendet wird. Die Werte finden Sie unter „Einstellungen“.</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; array. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing a zero-length string. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string, or if it does not appear anywhere in &lt;paramref name=&quot;Expression&quot; /&gt;, &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing the entire &lt;paramref name=&quot;Expression&quot; /&gt; string.">
        <see langword="String" /> -Array. Wenn <paramref name="Expression" /> eine Zeichenfolge ("") der Länge 0 (null) ist, gibt <see langword="Split" /> ein Array mit einem Element zurück, das eine Zeichenfolge der Länge 0 (null) enthält. Wenn <paramref name="Delimiter" /> eine Zeichenfolge der Länge 0 (null) ist oder nicht in <paramref name="Expression" /> vorkommt, gibt <see langword="Split" /> ein Array mit einem Element zurück, das die gesamte <paramref name="Expression" />-Zeichenfolge enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns -1, 0, or 1, based on the result of a string comparison.">Gibt abhängig vom Ergebnis eines Zeichenfolgenvergleichs den Wert -1, 0 oder 1 zurück.</summary>
      <param name="String1" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck.</param>
      <param name="String2" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Optional. Gibt den Typ des Zeichenfolgenvergleichs an. Wenn <paramref name="Compare" /> ausgelassen wird, bestimmt die <see langword="Option Compare" />-Einstellung den Typ des Vergleichs.</param>
      <returns vsli:raw="One of the following values:&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;StrComp returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts ahead of &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;-1&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is equal to &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts after &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;1&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Die <see langword="StrComp" />-Funktion besitzt die folgenden Rückgabewerte.  
  If 
  Rückgabewert von StrComp 
 <paramref name="String1" /> Sortierung vor <paramref name="String2" /> -1 
 <paramref name="String1" /> ist gleich <paramref name="String2" />. 0 
 <paramref name="String1" /> Sortierung nach <paramref name="String2" /> 1</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Compare&quot; /&gt; value is not valid.">Der <paramref name="Compare" />-Wert ist ungültig.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary vsli:raw="Returns a string converted as specified.">Gibt eine wie angegeben konvertierte Zeichenfolge zurück.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression to be converted.">Erforderlich. Der zu konvertierende <see langword="String" />-Ausdruck.</param>
      <param name="Conversion" vsli:raw="Required. &lt;see cref=&quot;T:Microsoft.VisualBasic.VbStrConv&quot; /&gt; member. The enumeration value specifying the type of conversion to perform.">Erforderlich. <see cref="T:Microsoft.VisualBasic.VbStrConv" />-Member. Der Enumerationswert, der den Typ der auszuführenden Konvertierung angibt.</param>
      <param name="LocaleID" vsli:raw="Optional. The &lt;see langword=&quot;LocaleID&quot; /&gt; value, if different from the system &lt;see langword=&quot;LocaleID&quot; /&gt; value. (The system &lt;see langword=&quot;LocaleID&quot; /&gt; value is the default.)">Dies ist optional. Der <see langword="LocaleID" />-Wert, wenn dieser sich vom <see langword="LocaleID" />-Wert des Systems unterscheidet. (Der <see langword="LocaleID" />-Wert des Systems ist der Standardwert.)</param>
      <returns vsli:raw="A string converted as specified.">Eine wie angegeben konvertierte Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Unsupported &lt;paramref name=&quot;LocaleID&quot; /&gt;, &lt;paramref name=&quot;Conversion&quot; /&gt; &amp;lt; 0 or &amp;gt; 2048, or unsupported conversion for specified locale.">
        <paramref name="LocaleID" /> nicht unterstützt, <paramref name="Conversion" /> &lt; 0 oder &gt; 2048, oder nicht unterstützte Konvertierung für das angegebene Gebietsschema.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Gibt eine Zeichenfolge oder ein Objekt zurück, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Erforderlich. <see langword="Integer" />-Ausdruck. Die Länge der zurückzugebenden Zeichenfolge.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. Alle gültigen <see langword="Char" />-Ausdrücke, <see langword="String" />-Ausdrücke oder <see langword="Object" />-Ausdrücke. Es wird nur das erste Zeichen des Ausdrucks verwendet. Wenn das Zeichen vom Typ <see langword="Object" /> ist, muss es entweder einen <see langword="Char" />-Wert oder einen <see langword="String" />-Wert enthalten.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Eine Zeichenfolge oder ein Objekt, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> ist kleiner als 0 (null), oder der <paramref name="Character" />-Typ ist nicht gültig.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> ist <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Gibt eine Zeichenfolge oder ein Objekt zurück, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Erforderlich. <see langword="Integer" />-Ausdruck. Die Länge der zurückzugebenden Zeichenfolge.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. Alle gültigen <see langword="Char" />-Ausdrücke, <see langword="String" />-Ausdrücke oder <see langword="Object" />-Ausdrücke. Es wird nur das erste Zeichen des Ausdrucks verwendet. Wenn das Zeichen vom Typ <see langword="Object" /> ist, muss es entweder einen <see langword="Char" />-Wert oder einen <see langword="String" />-Wert enthalten.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Eine Zeichenfolge oder ein Objekt, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> ist kleiner als 0 (null), oder der <paramref name="Character" />-Typ ist nicht gültig.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> ist <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Gibt eine Zeichenfolge oder ein Objekt zurück, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Erforderlich. <see langword="Integer" />-Ausdruck. Die Länge der zurückzugebenden Zeichenfolge.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Erforderlich. Alle gültigen <see langword="Char" />-Ausdrücke, <see langword="String" />-Ausdrücke oder <see langword="Object" />-Ausdrücke. Es wird nur das erste Zeichen des Ausdrucks verwendet. Wenn das Zeichen vom Typ <see langword="Object" /> ist, muss es entweder einen <see langword="Char" />-Wert oder einen <see langword="String" />-Wert enthalten.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Eine Zeichenfolge oder ein Objekt, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> ist kleiner als 0 (null), oder der <paramref name="Character" />-Typ ist nicht gültig.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> ist <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary vsli:raw="Returns a string in which the order of the text elements in the specified string is reversed.">Gibt eine Zeichenfolge zurück, in der die Reihenfolge der Zeichen in einer bestimmten Zeichenfolge umgekehrt wurde.</summary>
      <param name="Expression" vsli:raw="Required. String expression whose text elements are to be reversed. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), a zero-length string is returned.">Erforderlich. Zeichenfolgenausdruck, dessen Zeichen umgekehrt werden müssen. Wenn <paramref name="Expression" /> eine Zeichenfolge der Länge 0 ("") ist, wird eine Zeichenfolge der Länge 0 (null) zurückgegeben.</param>
      <returns vsli:raw="A string in which the order of the text elements in the specified string is reversed.">Eine Zeichenfolge, in der die Reihenfolge der Zeichen in einer angegebenen Zeichenfolge umgekehrt wurde.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Gibt eine Zeichenfolge zurück, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Erforderlich. Jeder gültige <see langword="String" />-Ausdruck.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Eine Zeichenfolge, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das die angegebene Zeichenfolge in Großbuchstaben enthält.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Erforderlich. Alle gültigen <see langword="String" />-Ausdrücke oder <see langword="Char" />-Ausdrücke.</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">Eine Zeichenfolge oder ein Zeichen, die bzw. das die angegebene Zeichenfolge in Großbuchstaben konvertiert enthält.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das die angegebene Zeichenfolge in Großbuchstaben enthält.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Erforderlich. Alle gültigen <see langword="String" />-Ausdrücke oder <see langword="Char" />-Ausdrücke.</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">Eine Zeichenfolge oder ein Zeichen, die bzw. das die angegebene Zeichenfolge in Großbuchstaben konvertiert enthält.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Diese Klasse unterstützt die Visual Basic-Funktionen <see langword="Print" /> und <see langword="PrintLine" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Dieses Feld unterstützt die Visual Basic-Funktionen <see langword="Print" /> und <see langword="PrintLine" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary vsli:raw="Indicates a Boolean value or whether the default should be used when calling number-formatting functions.">Gibt einen booleschen Wert an oder gibt an, ob beim Aufrufen von Zahlenformatierungsfunktionen der Standardwert verwendet werden soll.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary vsli:raw="False. The numeric value of this member is 0.">False. Der numerische Wert dieses Members ist 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary vsli:raw="True. The numeric value of this member is -1.">True. Der numerische Wert dieses Members ist –1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary vsli:raw="Default setting. The numeric value of this member is -2.">Standardeinstellung. Der numerische Wert dieses Members ist –2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary vsli:raw="Indicates the type of a variant object, returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Gibt den Typ eines Variant-Objekts an und wird von der <see langword="VarType" />-Funktion zurückgegeben.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary vsli:raw="Array. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArray&quot; /&gt;.">Array. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbArray" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. (&lt;see langword=&quot;True&quot; /&gt; or &lt;see langword=&quot;False&quot; /&gt;.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBoolean&quot; /&gt;.">
        <see langword="Boolean" />. (<see langword="True" /> oder <see langword="False" />.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbBoolean" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt;. (0 through 255.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbByte&quot; /&gt;.">
        <see langword="Byte" />. (0 bis 255.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbByte" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary vsli:raw="&lt;see langword=&quot;Char&quot; /&gt;. (0 through 65535.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbChar&quot; /&gt;.">
        <see langword="Char" />. (0 bis 65535.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbChar" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary vsli:raw="Currency. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCurrency&quot; /&gt;.">Währung. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbCurrency" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary vsli:raw="DataObject.">DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary vsli:raw="&lt;see langword=&quot;Date&quot; /&gt;. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDate&quot; /&gt;.">
        <see langword="Date" />. 0:00:00, 1. Januar 0001 bis 23:59:59, 31. Dezember 9999. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary vsli:raw="&lt;see langword=&quot;Decimal&quot; /&gt;. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDecimal&quot; /&gt;.">
        <see langword="Decimal" />. (0 bis +/–79.228.162.514.264.337.593.543.950.335 ohne Dezimaltrennzeichen; 0 bis +/–7,9228162514264337593543950335 mit 28 Stellen rechts vom Dezimalkomma; die kleinste Zahl ungleich 0 lautet +/–0,0000000000000000000000000001.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbDecimal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary vsli:raw="&lt;see langword=&quot;Double&quot; /&gt;. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDouble&quot; /&gt;.">
        <see langword="Double" />. (–1,79769313486231E+308 bis –4,94065645841247E–324 für negative Werte; 4,94065645841247E–324 bis 1,79769313486231E+308 für positive Werte.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbDouble" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary vsli:raw="Null reference. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbEmpty&quot; /&gt;.">NULL-Verweis. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbEmpty" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Exception&quot; /&gt;">
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInteger&quot; /&gt;.">
        <see langword="Integer" />. (–2.147.483.648 bis 2.147.483.647.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbInteger" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary vsli:raw="&lt;see langword=&quot;Long&quot; /&gt;. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLong&quot; /&gt;.">
        <see langword="Long" />. (–9.223.372.036.854.775.808 bis 9.223.372.036.854.775.807.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbLong" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary vsli:raw="Null object. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNull&quot; /&gt;.">Nullobjekt. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbNull" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary vsli:raw="Any type can be stored in a variable of type &lt;see langword=&quot;Object&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbObject&quot; /&gt;.">In einer Variablen vom Typ <see langword="Object" /> kann jeder beliebige Typ gespeichert werden. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbObject" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary vsli:raw="&lt;see langword=&quot;Short&quot; /&gt;. (-32,768 through 32,767.)">
        <see langword="Short" />. (–32.768 bis 32.767)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary vsli:raw="&lt;see langword=&quot;Single&quot; /&gt;. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSingle&quot; /&gt;.">
        <see langword="Single" />. (-3,402823E+38 bis -1,401298E-45 für negative Werte; 1,401298E-45 bis 3,402823E+38 für positive Werte.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbSingle" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbString&quot; /&gt;.">
        <see langword="String" />. (0 bis ca. 2 Milliarden Unicode-Zeichen.) Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbString" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary vsli:raw="User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUserDefinedType&quot; /&gt;.">Benutzerdefinierter Typ. Jeder Member in der Struktur hat einen Wertbereich, der von seinem Datentyp bestimmt wird. Dieser ist unabhängig von den Wertbereichen der anderen Member. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbUserDefinedType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary vsli:raw="&lt;see langword=&quot;Variant&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVariant&quot; /&gt;.">
        <see langword="Variant" />. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbVariant" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary vsli:raw="Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.">Gibt an, dass ein Array in einer Struktur oder nicht lokalen Variable als Array fester Länge behandelt werden soll.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">Initialisiert den Wert der <see langword="Bounds" />-Eigenschaft.</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">Initialisiert den Wert des oberen Feldes, der die Größe der ersten Dimension des Arrays darstellt.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">Initialisiert den Wert der <see langword="Bounds" />-Eigenschaft.</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">Initialisiert den Wert des oberen Feldes, der die Größe der ersten Dimension des Arrays darstellt.</param>
      <param name="UpperBound2" vsli:raw="Initializes the value of upper field, which represents the size of the second dimension of the array.">Initialisiert den Wert des oberen Feldes, der die Größe der zweiten Dimension des Arrays darstellt.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary vsli:raw="Returns the bounds of the array.">Gibt die Arraygrenzen zurück.</summary>
      <returns vsli:raw="Contains an integer array that represents the bounds of the array.">Enthält ein Ganzzahlarray, das die Grenzen des Arrays darstellt.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary vsli:raw="Returns the size of the array.">Gibt die Größe des Arrays zurück.</summary>
      <returns vsli:raw="Contains an integer that represents the number of elements in the array.">Enthält eine ganze Zahl, die die Anzahl der Elemente in dem Array darstellt.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary vsli:raw="Indicates that a string should be treated as if it were fixed length.">Gibt an, dass eine Zeichenfolge behandelt werden soll, als ob sie eine feste Länge hätte.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;SizeConst&quot; /&gt; field.">Initialisiert den Wert des <see langword="SizeConst" />-Feldes.</summary>
      <param name="Length" vsli:raw="The length of the fixed string.">Die Länge der Zeichenfolge fester Länge.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary vsli:raw="Gets the length of the string.">Ruft die Länge der Zeichenfolge ab.</summary>
      <returns vsli:raw="The length of the string.">Die Länge der Zeichenfolge.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary vsli:raw="The &lt;see langword=&quot;VbMath&quot; /&gt; module contains procedures used to perform mathematical operations.">Das <see langword="VbMath" />-Modul enthält Prozeduren, mit denen mathematische Operationen ausgeführt werden.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary vsli:raw="Initializes the random-number generator.">Initialisiert den Zufallszahlengenerator.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary vsli:raw="Initializes the random-number generator.">Initialisiert den Zufallszahlengenerator.</summary>
      <param name="Number" vsli:raw="Optional. An &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression.">Dies ist optional. Ein <see langword="Object" /> oder ein gültiger numerischer Ausdruck.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Gibt eine Zufallszahl des Typs <see langword="Single" /> zurück.</summary>
      <returns vsli:raw="The next random number in the sequence.">Die nächste Zufallszahl in der Folge.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Gibt eine Zufallszahl des Typs <see langword="Single" /> zurück.</summary>
      <param name="Number" vsli:raw="Optional. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value or any valid &lt;see cref=&quot;T:System.Single&quot; /&gt; expression.">Dies ist optional. Ein <see langword="Single" />-Wert oder ein gültiger <see langword="Single" />-Ausdruck.</param>
      <returns vsli:raw="If number is less than zero, Rnd generates the same number every time, using &lt;paramref name=&quot;Number&quot; /&gt; as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.">Wenn die Zahl kleiner als 0 ist, generiert Rnd jedes Mal dieselbe Zahl und verwendet <paramref name="Number" /> als Startwert. Ist die Zahl größer als 0, generiert Rnd die nächste Zufallszahl in der Folge. Wenn die Zahl gleich 0 ist, generiert Rnd die zuletzt generierte Zahl. Wird die Zahl nicht angegeben, generiert Rnd die nächste Zufallszahl in der Folge.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary vsli:raw="Indicates which type of conversion to perform when calling the &lt;see langword=&quot;StrConv&quot; /&gt; function.">Gibt an, welche Art der Konvertierung beim Aufruf der <see langword="StrConv" />-Funktion ausgeführt werden soll.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary vsli:raw="Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHiragana&quot; /&gt;.">Konvertiert Katakana-Zeichen in der Zeichenfolge in Hiragana-Zeichen. Gilt nur für das japanische Gebietsschema. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbHiragana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary vsli:raw="Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbKatakana&quot; /&gt;.">Konvertiert Hiragana-Zeichen in der Zeichenfolge in Katakana-Zeichen. Gilt nur für das japanische Gebietsschema. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbKatakana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary vsli:raw="Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLinguisticCasing&quot; /&gt;.">Konvertiert die Zeichenfolge von einer Schreibweise gemäß Dateisystemregeln in eine Schreibweise gemäß linguistischer Regeln. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbLinguisticCasing" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary vsli:raw="Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLowerCase&quot; /&gt;.">Konvertiert die Zeichenfolge in Kleinbuchstaben. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbLowerCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary vsli:raw="Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNarrow&quot; /&gt;.">Konvertiert Doppelbytezeichen in der Zeichenfolge in Einzelbytezeichen. Gilt für asiatische Gebietsschemas. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbNarrow" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary vsli:raw="Performs no conversion.">Führt keine Konvertierung aus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary vsli:raw="Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbProperCase&quot; /&gt;.">Konvertiert den ersten Buchstaben jedes Worts in der Zeichenfolge in einen Großbuchstaben. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbProperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary vsli:raw="Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSimplifiedChinese&quot; /&gt;.">Konvertiert die Zeichenfolge in vereinfachte chinesische Zeichen. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbSimplifiedChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary vsli:raw="Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTraditionalChinese&quot; /&gt;.">Konvertiert die Zeichenfolge in traditionelle chinesische Zeichen. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbTraditionalChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary vsli:raw="Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUpperCase&quot; /&gt;.">Konvertiert die Zeichenfolge in Großbuchstaben. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbUpperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary vsli:raw="Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWide&quot; /&gt;. The conversion may use Normalization Form C even if an input character is already full-width. For example, the string &quot;は゛&quot; (which is already full-width) is normalized to &quot;ば&quot;. See Unicode normalization forms.">Konvertiert Einzelbytezeichen in der Zeichenfolge in Doppelbytezeichen. Gilt für asiatische Gebietsschemas. Dieser Member ist identisch mit der Visual Basic-Konstanten <see langword="vbWide" />. Die Konvertierung kann die Normalisierungsform „C“ verwenden, auch wenn ein Eingabezeichen bereits die volle Breite aufweist. Die Zeichenfolge „は“, die bereits die volle Breite aufweist, wird beispielsweise zu „ば“ normalisiert. Weitere Informationen finden Sie unter Unicode normalization forms (Unicode-Normalisierungsformen).</summary>
    </member>
  </members>
</doc>