<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Overlapped</name>
  </assembly>
  <members>
    <member name="T:System.Threading.IOCompletionCallback">
      <summary vsli:raw="Receives the error code, number of bytes, and overlapped value type when an I/O operation completes on the thread pool.">Empfängt beim Abschluss einer E/A-Operation im Threadpool den Fehlercode, die Anzahl der Bytes sowie den überlappenden Werttyp.</summary>
      <param name="errorCode" vsli:raw="The error code.">Der Fehlercode.</param>
      <param name="numBytes" vsli:raw="The number of bytes that are transferred.">Die Anzahl der übertragenen Bytes.</param>
      <param name="pOVERLAP" vsli:raw="A &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; representing an unmanaged pointer to the native overlapped value type.">Ein <see cref="T:System.Threading.NativeOverlapped" />, das einen nicht verwalteten Zeiger auf den systemeigenen überlappenden Werttyp darstellt.</param>
    </member>
    <member name="T:System.Threading.NativeOverlapped">
      <summary vsli:raw="Provides an explicit layout that is visible from unmanaged code and that will have the same layout as the Win32 OVERLAPPED structure with additional reserved fields at the end.">Stellt ein explizites Layout bereit, das für nicht verwalteten Code sichtbar ist und dem Layout der OVERLAPPED-Win32-Struktur entspricht, jedoch zusätzliche reservierte Felder am Ende aufweist.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.EventHandle">
      <summary vsli:raw="Specifies the handle to an event set to the signaled state when the operation is complete. The calling process must set this member either to zero or to a valid event handle before calling any overlapped functions.">Gibt das Handle für ein Ereignis an, das beim Abschluss der Operation auf den signalisierten Zustand festgelegt wird. Der aufrufende Prozess muss diesen Member vor dem Aufruf überlappender Funktionen entweder auf 0 oder auf ein gültiges Ereignishandle festlegen.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalHigh">
      <summary vsli:raw="Specifies the length of the data transferred. Reserved for operating system use.">Gibt die Länge der übertragenen Daten an. Reserviert für die Verwendung durch das Betriebssystem.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalLow">
      <summary vsli:raw="Specifies a system-dependent status. Reserved for operating system use.">Gibt einen systemabhängigen Status an. Reserviert für die Verwendung durch das Betriebssystem.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetHigh">
      <summary vsli:raw="Specifies the high word of the byte offset at which to start the transfer.">Gibt das höherwertige Word des Byteoffsets an, an dem die Übertragung begonnen werden soll.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetLow">
      <summary vsli:raw="Specifies a file position at which to start the transfer.">Gibt eine Dateiposition an, an der die Übertragung begonnen werden soll.</summary>
    </member>
    <member name="T:System.Threading.Overlapped">
      <summary vsli:raw="Provides a managed representation of a Win32 &lt;c&gt;OVERLAPPED&lt;/c&gt; structure, including methods to transfer information from an &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; instance to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Bietet eine verwaltete Darstellung einer Win32-<c>OVERLAPPED</c>-Struktur, einschließlich Methoden zum Übertragen von Informationen aus einer <see cref="T:System.Threading.Overlapped" />-Instanz in eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor">
      <summary vsli:raw="Initializes a new, empty instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class.">Initialisiert eine neue leere Instanz der <see cref="T:System.Threading.Overlapped" />-Klasse.</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Overlapped" />-Klasse mit der angegebenen Dateiposition, dem 32-Bit-Ganzzahl-Handle für ein Ereignis, das signalisiert wird, wenn der E/A-Vorgang abgeschlossen ist, und einer Schnittstelle, durch die die Ergebnisse des Vorgangs zurückgegeben werden.</summary>
      <param name="offsetLo" vsli:raw="The low word of the file position at which to start the transfer.">Das niedrige WORD der Dateiposition, an der die Übertragung gestartet werden soll.</param>
      <param name="offsetHi" vsli:raw="The high word of the file position at which to start the transfer.">Das hohe WORD der Dateiposition, an der die Übertragung gestartet werden soll.</param>
      <param name="hEvent" vsli:raw="The handle to an event that is signaled when the I/O operation is complete.">Das Handle zu einem Ereignis, das signalisiert wird, wenn der E/A-Vorgang abgeschlossen ist.</param>
      <param name="ar" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface and provides status information on the I/O operation.">Ein Objekt, das die <see cref="T:System.IAsyncResult" />-Schnittstelle implementiert und Statusinformationen über den E/A-Vorgang bereitstellt.</param>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Overlapped" />-Klasse mit der angegebenen Dateiposition, dem Handle für ein Ereignis, das signalisiert wird, wenn ein E/A-Vorgang abgeschlossen ist, und einer Schnittstelle, durch die die Ergebnisse des Vorgangs zurückgegeben werden.</summary>
      <param name="offsetLo" vsli:raw="The low word of the file position at which to start the transfer.">Das niedrige WORD der Dateiposition, an der die Übertragung gestartet werden soll.</param>
      <param name="offsetHi" vsli:raw="The high word of the file position at which to start the transfer.">Das hohe WORD der Dateiposition, an der die Übertragung gestartet werden soll.</param>
      <param name="hEvent" vsli:raw="The handle to an event that is signaled when the I/O operation is complete.">Das Handle zu einem Ereignis, das signalisiert wird, wenn der E/A-Vorgang abgeschlossen ist.</param>
      <param name="ar" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface and provides status information on the I/O operation.">Ein Objekt, das die <see cref="T:System.IAsyncResult" />-Schnittstelle implementiert und Statusinformationen über den E/A-Vorgang bereitstellt.</param>
    </member>
    <member name="P:System.Threading.Overlapped.AsyncResult">
      <summary vsli:raw="Gets or sets the object that provides status information on the I/O operation.">Ruft das Objekt ab, das Statusinformationen über den E/A-Vorgang bereitstellt, oder legt es fest.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface.">Ein Objekt, das die <see cref="T:System.IAsyncResult" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandle">
      <summary vsli:raw="Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.">Ruft das 32-Bit-Ganzzahl-Handle eines Synchronisierungsereignisses ab, das angegeben wird, wenn ein E/A-Vorgang abgeschlossen ist, oder legt es fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the handle of the synchronization event.">Ein <see cref="T:System.Int32" />-Wert, der das Handle des Synchronisierungsereignisses darstellt.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandleIntPtr">
      <summary vsli:raw="Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.">Ruft das Handle eines Synchronisierungsereignisses ab, das angegeben wird, wenn ein E/A-Vorgang abgeschlossen ist, oder legt es fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; representing the handle of the event.">Eine <see cref="T:System.IntPtr" />-Struktur, die das Handle des Ereignisses darstellt.</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Frees the unmanaged memory associated with a native overlapped structure allocated by the &lt;see cref=&quot;Overload:System.Threading.Overlapped.Pack&quot; /&gt; method.">Gibt den nicht verwalteten Arbeitsspeicher frei, der einer systemeigenen überlappenden Struktur zugewiesen ist, die von der <see cref="Overload:System.Threading.Overlapped.Pack" />-Methode zugeordnet wird.</summary>
      <param name="nativeOverlappedPtr" vsli:raw="A pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure to be freed.">Ein Zeiger auf die freizugebende <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;nativeOverlappedPtr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeOverlappedPtr" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetHigh">
      <summary vsli:raw="Gets or sets the high-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.">Ruft das hohe WORD der Dateiposition ab, an der die Übertragung gestartet werden soll, oder legt dieses fest. Die Dateiposition ist ein Byteoffset vom Anfang der Datei.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the high word of the file position.">Ein <see cref="T:System.Int32" />-Wert, der das hohe WORD der Dateiposition darstellt.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetLow">
      <summary vsli:raw="Gets or sets the low-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.">Ruft das niedrige WORD der Dateiposition ab, an der die Übertragung gestartet werden soll, oder legt dieses fest. Die Dateiposition ist ein Byteoffset vom Anfang der Datei.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the low word of the file position.">Ein <see cref="T:System.Int32" />-Wert, der das niedrige WORD der Dateiposition darstellt.</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.">Packt die aktuelle Instanz in eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur und gibt den Delegaten an, der aufgerufen werden soll, wenn der asynchrone E/A-Vorgang abgeschlossen ist.</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">Ein <see cref="T:System.Threading.IOCompletionCallback" />-Delegat, der die Rückrufmethode darstellt, die aufgerufen wird, wenn der asynchrone E/A-Vorgang abgeschlossen ist.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Ein nicht verwalteter Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">Die aktuelle <see cref="T:System.Threading.Overlapped" />-Klasse wurde bereits gepackt.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.">Packt die aktuelle Instanz in eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur und gibt einen Delegaten, der aufgerufen wird, wenn der asynchrone E/A-Vorgang abgeschlossen ist, und ein verwaltetes Objekt an, das als Puffer dient.</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">Ein <see cref="T:System.Threading.IOCompletionCallback" />-Delegat, der die Rückrufmethode darstellt, die aufgerufen wird, wenn der asynchrone E/A-Vorgang abgeschlossen ist.</param>
      <param name="userData" vsli:raw="An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.">Ein Objekt oder ein Objektarray, das den Eingabe- oder den Ausgabepuffer für den Vorgang darstellt. Jedes Objekt stellt einen Puffer dar, z. B. ein Array von Bytes.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Ein nicht verwalteter Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">Die aktuelle <see cref="T:System.Threading.Overlapped" />-Klasse wurde bereits gepackt.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Unpacks the specified unmanaged &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure into a managed &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; object.">Entpackt die angegebene, nicht verwaltete <see cref="T:System.Threading.NativeOverlapped" />-Struktur in ein verwaltetes <see cref="T:System.Threading.Overlapped" />-Objekt.</summary>
      <param name="nativeOverlappedPtr" vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Ein nicht verwalteter Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; object containing the information unpacked from the native structure.">Ein <see cref="T:System.Threading.Overlapped" />-Objekt, das die Informationen enthält, die aus der systemeigenen Struktur entpackt wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;nativeOverlappedPtr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeOverlappedPtr" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure specifying the delegate to invoke when the asynchronous I/O operation is complete. Does not propagate the calling stack.">Packt die aktuelle Instanz in eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur und gibt den Delegaten an, der aufgerufen werden soll, wenn der asynchrone E/A-Vorgang abgeschlossen ist. Gibt den aufrufenden Stapel nicht weiter.</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">Ein <see cref="T:System.Threading.IOCompletionCallback" />-Delegat, der die Rückrufmethode darstellt, die aufgerufen wird, wenn der asynchrone E/A-Vorgang abgeschlossen ist.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Ein nicht verwalteter Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">Die aktuelle <see cref="T:System.Threading.Overlapped" />-Klasse wurde bereits gepackt.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer. Does not propagate the calling stack.">Packt die aktuelle Instanz in eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur, und gibt einen Delegaten, der aufgerufen werden soll, wenn der asynchrone E/A-Vorgang abgeschlossen ist, und ein verwaltetes Objekt an, das als Puffer dient. Gibt den aufrufenden Stapel nicht weiter.</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">Ein <see cref="T:System.Threading.IOCompletionCallback" />-Delegat, der die Rückrufmethode darstellt, die aufgerufen wird, wenn der asynchrone E/A-Vorgang abgeschlossen ist.</param>
      <param name="userData" vsli:raw="An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.">Ein Objekt oder ein Objektarray, das den Eingabe- oder den Ausgabepuffer für den Vorgang darstellt. Jedes Objekt stellt einen Puffer dar, z. B. ein Array von Bytes.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Ein nicht verwalteter Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; is already packed.">Die aktuelle <see cref="T:System.Threading.Overlapped" />-Klasse ist bereits gepackt.</exception>
    </member>
    <member name="T:System.Threading.PreAllocatedOverlapped">
      <summary vsli:raw="Represents pre-allocated state for native overlapped I/O operations.">Stellt den Zustand vor der Zuweisung für native überlappende E/-A-Vorgänge dar.</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; class and specifies a delegate to invoke when each asynchronous I/O operation is complete, a user-provided object that provides context, and managed objects that serve as buffers.">Initialisiert eine neue Instanz der <see cref="T:System.Threading.PreAllocatedOverlapped" />-Klasse und gibt einen Delegaten an, der aufgerufen wird, wenn jeder E/A-Vorgang abgeschlossen wird sowie ein vom Benutzer bereitgestelltes Objekt, das Kontext gibt, und verwaltete Objekte, die als Puffer fungieren.</summary>
      <param name="callback" vsli:raw="A delegate that represents the callback method to invoke when each asynchronous I/O operation completes.">Ein Delegat, der die Rückrufmethode darstellt, die aufgerufen wird, wenn jeder asynchrone E/A-Vorgang abgeschlossen ist.</param>
      <param name="state" vsli:raw="A user-supplied object that distinguishes the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance produced from this object from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">Ein vom Benutzer bereitgestelltes Objekt, das die <see cref="T:System.Threading.NativeOverlapped" />-Instanz, die von diesem Objekt erzeugt wurde, von anderen <see cref="T:System.Threading.NativeOverlapped" />-Instanzen unterscheidet. Ihr Wert kann <see langword="null" /> sein.</param>
      <param name="pinData" vsli:raw="An object or array of objects that represent the input or output buffer for the operations. Each object represents a buffer, such as an array of bytes. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">Ein Objekt oder Array von Objekten, das den Eingabe- oder Ausgabepuffer für den Vorgang darstellt. Jedes Objekt stellt einen Puffer dar, wie z.B. ein Array von Bytes. Ihr Wert kann <see langword="null" /> sein.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; was disposed.">Diese Methode wurde aufgerufen, nachdem das <see cref="T:System.Threading.ThreadPoolBoundHandle" />-Objekt freigegeben wurde.</exception>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Dispose">
      <summary vsli:raw="Frees the resources associated with this &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; instance.">Gibt die dieser <see cref="T:System.Threading.PreAllocatedOverlapped" />-Instanz zugeordneten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Finalize">
      <summary vsli:raw="Frees unmanaged resources before the current instance is reclaimed by garbage collection.">Stellt nicht verwaltete Ressourcen frei, bevor die aktuelle Instanz von der automatischen Speicherbereinigung freigegeben wird.</summary>
    </member>
    <member name="T:System.Threading.ThreadPoolBoundHandle">
      <summary vsli:raw="Represents an I/O handle that is bound to the system thread pool and enables low-level components to receive notifications for asynchronous I/O operations.">Stellt ein E/A-Handle dar, das an den Threadpool des Systems gebunden ist und Komponenten auf niedriger Ebene ermöglicht, Benachrichtigungen asynchroner E/A-Operationen zu empfangen.</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary vsli:raw="Returns an unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete, a user-provided object that supplies context, and managed objects that serve as buffers.">Gibt einen nicht verwalteten Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur zurück, der einen Delegaten angibt, der aufgerufen wird, wenn der asynchrone E/A-Vorgang abgeschlossen ist sowie ein vom Benutzer bereitgestelltes Objekt, das Kontext gibt, und verwaltete Objekte, die als Puffer fungieren.</summary>
      <param name="callback" vsli:raw="A delegate that represents the callback method to invoke when the asynchronous I/O operation completes.">Ein Delegat, der die Rückrufmethode darstellt, die aufgerufen wird, wenn der asynchrone E/A-Vorgang abgeschlossen ist.</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances.">Ein vom Benutzer bereitgestelltes Objekt, das diese <see cref="T:System.Threading.NativeOverlapped" />-Instanz von anderen <see cref="T:System.Threading.NativeOverlapped" />-Instanzen unterscheidet.</param>
      <param name="pinData" vsli:raw="An object or array of objects that represent the input or output buffer for the operation, or &lt;see langword=&quot;null&quot; /&gt;. Each object represents a buffer, such an array of bytes.">Ein Objekt oder Array von Objekten, das den Eingabe- oder Ausgabepuffer für den Vorgang darstellt, oder <see langword="null" />. Jedes Objekt stellt einen Puffer dar, wie z.B. ein Array von Bytes.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Ein nicht verwalteter Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; object was disposed.">Diese Methode wurde aufgerufen, nachdem das <see cref="T:System.Threading.ThreadPoolBoundHandle" />-Objekt freigegeben wurde.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)">
      <summary vsli:raw="Returns an unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure using the callback state and buffers associated with the specified &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; object.">Gibt einen nicht verwalteten Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur zurück, die den Rückrufzustand und die Puffer verwendet, die mit dem angegebenen <see cref="T:System.Threading.PreAllocatedOverlapped" />-Objekt verknüpft sind.</summary>
      <param name="preAllocated" vsli:raw="An object from which to create the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; pointer.">Ein Objekt, aus dem der <see cref="T:System.Threading.NativeOverlapped" />-Zeiger erstellt werden kann.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Ein nicht verwalteter Zeiger auf eine <see cref="T:System.Threading.NativeOverlapped" />-Struktur.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;preAllocated&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="preAllocated" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;preAllocated&quot; /&gt; is currently in use for another I/O operation.">
        <paramref name="preAllocated" /> wird aktuell für andere E/A-Vorgänge verwendet.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; was disposed.  &#xA;  &#xA; -or-  &#xA;  &#xA; This method was called after &lt;paramref name=&quot;preAllocated&quot; /&gt; was disposed.">Diese Methode wurde aufgerufen, nachdem das <see cref="T:System.Threading.ThreadPoolBoundHandle" />-Objekt freigegeben wurde.  

oder - 
Diese Methode wurde aufgerufen, nachdem das <paramref name="preAllocated" />-Objekt verfügbar gemacht wurde.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; for the specified handle, which is bound to the system thread pool.">Gibt ein <see cref="T:System.Threading.ThreadPoolBoundHandle" />-Objekt für das angegebene Handle zurück, das an den Systemthreadpool gebunden ist.</summary>
      <param name="handle" vsli:raw="An object that holds the operating system handle. The handle must have been opened for overlapped I/O in unmanaged code.">Ein Objekt, das das Betriebssystemhandle enthält. Das Handle muss für überlappende E/A im nicht verwalteten Code offen sein.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; for &lt;paramref name=&quot;handle&quot; /&gt;, which is bound to the system thread pool.">Ein <see cref="T:System.Threading.ThreadPoolBoundHandle" />-Objekt für ein <paramref name="handle" />-Objekt, das an den Systemthreadpool gebunden ist.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; has been disposed.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; does not refer to a valid I/O handle.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; refers to a handle that has not been opened for overlapped I/O.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; refers to a handle that has already been bound.">
        <paramref name="handle" /> wurde verworfen.  

oder - 
<paramref name="handle" /> verweist nicht auf ein gültiges E/A-Handle.  

oder - 
<paramref name="handle" /> verweist auf ein Handle, das nicht für die überlappende E/A offen ist.  

oder - 
<paramref name="handle" /> verweist auf ein Handle, das bereits gebunden wurde.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.Dispose">
      <summary vsli:raw="Releases all unmanaged resources used by the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; instance.">Gibt alle von der <see cref="T:System.Threading.ThreadPoolBoundHandle" />-Instanz verwendeten nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Frees the memory associated with a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure allocated by the &lt;see cref=&quot;Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped&quot; /&gt; method.">Gibt den Speicher frei, der im Zusammenhang mit einer <see cref="T:System.Threading.NativeOverlapped" />-Struktur steht, die von der <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />-Methode zugeordnet wird.</summary>
      <param name="overlapped" vsli:raw="An unmanaged pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure to be freed.">Ein nicht verwalteter Zeiger auf die <see cref="T:System.Threading.NativeOverlapped" />-Struktur, die freigegeben wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;overlapped&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="overlapped" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; object was disposed.">Diese Methode wurde aufgerufen, nachdem das <see cref="T:System.Threading.ThreadPoolBoundHandle" />-Objekt freigegeben wurde.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Returns the user-provided object that was specified when the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance was allocated by calling the &lt;see cref=&quot;M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)&quot; /&gt; method.">Gibt das vom Benutzer bereitgestellte Objekt zurück, das angegeben wurde, als die <see cref="T:System.Threading.NativeOverlapped" />-Instanz durch das Aufrufen der <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />-Methode zugewiesen wurde.</summary>
      <param name="overlapped" vsli:raw="An unmanaged pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure from which to return the associated user-provided object.">Ein nicht verwalteter Zeiger auf die <see cref="T:System.Threading.NativeOverlapped" />-Struktur, aus der das verknüpfte vom Benutzer bereitgestellte Objekt zurückgegeben werden soll.</param>
      <returns vsli:raw="A user-provided object that distinguishes this &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances, or &lt;see langword=&quot;null&quot; /&gt; if one was not specified when the instance was allocated by calling the &lt;see cref=&quot;Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped&quot; /&gt; method.">Ein vom Benutzer bereitgestelltes Objekt, das diese <see cref="T:System.Threading.NativeOverlapped" />-Instanz von anderen <see cref="T:System.Threading.NativeOverlapped" />-Instanzen unterscheidet, oder <see langword="null" />, wenn keins angegeben wurde, als die Instanz durch einen Aufruf der <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />-Methode zugewiesen wurde.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;overlapped&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="overlapped" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Threading.ThreadPoolBoundHandle.Handle">
      <summary vsli:raw="Gets the bound operating system handle.">Ruft das gebundene Betriebssystemhandle ab.</summary>
      <returns vsli:raw="An object that holds the bound operating system handle.">Ein Objekt, das das gebundene Betriebssystemhandle enthält.</returns>
    </member>
  </members>
</doc>