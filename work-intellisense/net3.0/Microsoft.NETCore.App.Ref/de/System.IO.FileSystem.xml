<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.FileSystem</name>
  </assembly>
  <members>
    <member name="T:System.IO.Directory">
      <summary>Macht statische Methoden zum Erstellen, Verschieben und Auflisten in Verzeichnissen und Unterverzeichnissen verfügbar. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.IO.Directory.CreateDirectory(System.String)">
      <summary>Erstellt alle Verzeichnisse und Unterverzeichnisse im angegebenen Pfad, es sei denn, sie sind bereits vorhanden.</summary>
      <param name="path">Das zu erstellende Verzeichnis.</param>
      <returns>Ein Objekt, das das Verzeichnis im angegebenen Pfad darstellt. Dieses Objekt wird unabhängig davon zurückgegeben, ob ein Verzeichnis unter dem angegebenen Pfad bereits vorhanden ist.</returns>
      <exception cref="T:System.IO.IOException">Das durch <paramref name="path" /> angegebene Verzeichnis ist eine Datei.  

oder -Der Netzwerkname ist nicht bekannt.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="path" /> ist ein Doppelpunkt (:) vorangestellt bzw. enthält nur einen Doppelpunkt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> enthält einen Doppelpunkt (:), der nicht Teil einer Laufwerksbezeichnung ist („C:\“).</exception>
    </member>
    <member name="M:System.IO.Directory.Delete(System.String)">
      <summary>Löscht ein leeres Verzeichnis aus einem angegebenen Pfad.</summary>
      <param name="path">Der Name des zu entfernenden leeren Verzeichnisses. Dieses Verzeichnis muss schreibbar und leer sein.</param>
      <exception cref="T:System.IO.IOException">Es gibt eine Datei, die denselben Namen und Speicherort hat wie in <paramref name="path" /> angegeben.  

oder -Das Verzeichnis ist das aktuelle Arbeitsverzeichnis der Anwendung.  

oder -Das durch <paramref name="path" /> angegebene Verzeichnis ist nicht leer.  

oder -Das Verzeichnis ist schreibgeschützt oder enthält eine schreibgeschützte Datei.  

oder -Das Verzeichnis wird von einem anderen Prozess verwendet.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist nicht vorhanden oder wurde nicht gefunden.  

oder -Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.Delete(System.String,System.Boolean)">
      <summary>Löscht das angegebene Verzeichnis und, sofern angegeben, alle Unterverzeichnisse und Dateien im Verzeichnis.</summary>
      <param name="path">Der Name des zu entfernenden Verzeichnisses.</param>
      <param name="recursive">
        <see langword="true" /> zum Entfernen von Verzeichnissen, Unterverzeichnissen und Dateien in <paramref name="path" />, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.IO.IOException">Es gibt eine Datei, die denselben Namen und Speicherort hat wie in <paramref name="path" /> angegeben.  

oder -Das von <paramref name="path" /> angegebene Verzeichnis ist schreibgeschützt, oder <paramref name="recursive" /> ist <see langword="false" />, und <paramref name="path" /> ist kein leeres Verzeichnis.  

oder -Das Verzeichnis ist das aktuelle Arbeitsverzeichnis der Anwendung.  

oder -Das Verzeichnis enthält eine schreibgeschützte Datei.  

oder -Das Verzeichnis wird von einem anderen Prozess verwendet.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist nicht vorhanden oder wurde nicht gefunden.  

oder -Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Verzeichnisnamen in einem angegebenen Pfad zurück.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <returns>Eine aufzählbare Auflistung der vollständigen Namen (einschließlich Pfade) für die Verzeichnisse im Verzeichnis, das von <paramref name="path" /> angegeben wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Verzeichnisnamen zurück, die einem Suchmuster in einem angegebenen Pfad entsprechen.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Eine aufzählbare Auflistung der vollständigen Namen (einschließlich Pfade) für die Verzeichnisse im Verzeichnis, das von <paramref name="path" /> angegebenen wird und der angegebene Suchmuster entsprechen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder - 
<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.  

oder -<paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
      <summary>Gibt eine aufzählbare Auflistung von Verzeichnisnamen zurück, die einem Suchmuster in einem angegebenen Pfad entsprechen. Optional werden Unterverzeichnisse durchsucht.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen.  
Der Standardwert ist <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <returns>Eine aufzählbare Auflistung der vollständigen Namen (einschließlich Pfade) für die Verzeichnisse im Verzeichnis, das von <paramref name="path" /> angegebenen wird und der angegebene Suchmuster und Option entsprechen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.  

oder -<paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Dateinamen in einem angegebenen Pfad zurück.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <returns>Eine aufzählbare Auflistung der vollständigen Namen (einschließlich Pfade) für die Verzeichnisse im Verzeichnis, das von <paramref name="path" /> angegeben wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Dateinamen zurück, die einem Suchmuster in einem angegebenen Pfad entsprechen.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Eine aufzählbare Auflistung der vollständigen Namen (einschließlich Pfade) für die Dateien im Verzeichnis, das von <paramref name="path" /> angegebenen wird und der angegebene Suchmuster entsprechen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.  

oder -<paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
      <summary>Gibt eine aufzählbare Auflistung von Dateinamen zurück, die einem Suchmuster in einem angegebenen Pfad entsprechen. Optional werden Unterverzeichnisse durchsucht.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen.  
Der Standardwert ist <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <returns>Eine aufzählbare Auflistung der vollständigen Namen (einschließlich Pfade) für die Dateien im Verzeichnis, das von <paramref name="path" /> angegebenen wird und der angegebene Suchmuster und Option entsprechen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.  

oder -<paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Dateinamen und Verzeichnisnamen in einem angegebenen Pfad zurück.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <returns>Eine aufzählbare Auflistung von Dateisystemeinträgen im von <paramref name="path" /> angegebenen Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Dateinamen und Verzeichnisnamen zurück, die einem Suchmuster in einem angegebenen Pfad entsprechen.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateisystemeinträgen in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Eine aufzählbare Auflistung von Dateisystemeinträgen, die sich in dem von <paramref name="path" /> angegebenen Verzeichnis befinden und dem angegebenen Suchmuster entsprechen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.  

oder -<paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
      <summary>Gibt eine aufzählbare Auflistung von Dateinamen und Verzeichnisnamen zurück, die einem Suchmuster in einem angegebenen Pfad entsprechen. Optional werden Unterverzeichnisse durchsucht.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung von Dateisystemeinträgen in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen.  
Der Standardwert ist <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <returns>Eine aufzählbare Auflistung von Dateisystemeinträgen, die sich in dem von <paramref name="path" /> angegebenen Verzeichnis befinden und dem angegebenen Suchmuster und der Option entsprechen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.  

oder -<paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.Exists(System.String)">
      <summary>Bestimmt, ob der angegebene Pfad auf ein vorhandenes Verzeichnis auf einem Datenträger verweist.</summary>
      <param name="path">Der zu testende Pfad.</param>
      <returns>
        <see langword="true" />, wenn sich <paramref name="path" /> auf ein vorhandenes Verzeichnis bezieht; <see langword="false" />, wenn ein Verzeichnis nicht vorhanden ist, oder wenn beim Versuch festzustellen, ob ein angegebenes Verzeichnis vorhanden ist, ein Fehler auftritt.</returns>
    </member>
    <member name="M:System.IO.Directory.GetCreationTime(System.String)">
      <summary>Ruft Datum und Zeit der Erstellung eines Verzeichnisses ab.</summary>
      <param name="path">Der Pfad des Verzeichnisses.</param>
      <returns>Eine Struktur, die auf das Erstellungsdatum und den Erstellungszeitpunkt für das angegebene Verzeichnis festgelegt wird. Dieser Wert wird in Ortszeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
    </member>
    <member name="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
      <summary>Ruft das Erstellungsdatum und den Erstellungszeitpunkt im UTC-Format (Coordinated Universal Time, koordinierte Weltzeit) eines Verzeichnisses ab.</summary>
      <param name="path">Der Pfad des Verzeichnisses.</param>
      <returns>Eine Struktur, die auf das Erstellungsdatum und den Erstellungszeitpunkt für das angegebene Verzeichnis festgelegt wird. Der Wert wird in UTC-Zeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
    </member>
    <member name="M:System.IO.Directory.GetCurrentDirectory">
      <summary>Ruft das aktuelle Arbeitsverzeichnis der Anwendung ab.</summary>
      <returns>Eine Zeichenfolge, die den absoluten Pfad des aktuellen Arbeitsverzeichnisses enthält und nicht mit einem umgekehrten Schrägstrich (\) endet.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">Das Betriebssystem ist Windows CE, das keine Funktionalität für das aktuelle Verzeichnis enthält.  
 Diese Methode ist in .NET Compact Framework verfügbar, wird aber derzeit nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String)">
      <summary>Gibt die Namen der Unterverzeichnisse (einschließlich der Pfade) im angegebenen Verzeichnis zurück.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <returns>Ein Array der vollständigen Namen (einschließlich der Pfade) der Unterverzeichnisse im angegebenen Pfad, oder ein leeres Array, wenn keine Verzeichnisse gefunden werden.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String)">
      <summary>Gibt die Namen von Unterverzeichnissen (einschließlich der zugehörigen Pfade) zurück, die dem angegebenen Suchmuster im angegebenen Verzeichnis entsprechen.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Unterverzeichnissen in <paramref name="path" /> auf Übereinstimmungen. Dieser Parameter kann eine Kombination aus gültigen Literal- und Platzhalterzeichen enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Ein Array der vollständigen Namen (einschließlich der Pfade) der Unterverzeichnisse, die dem Suchmuster im angegebenen Verzeichnis entsprechen, oder ein leeres Array, wenn keine Verzeichnisse gefunden werden.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Mit <see cref="M:System.IO.Path.GetInvalidPathChars" /> können Sie Abfragen für ungültige Zeichen ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
      <summary>Gibt die Namen der Unterverzeichnisse (einschließlich der Pfade) zurück, die dem angegebenen Suchmuster im aktuellen Verzeichnis entsprechen. Optional werden Unterverzeichnisse durchsucht.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Unterverzeichnissen in <paramref name="path" /> auf Übereinstimmungen. Dieser Parameter kann eine Kombination aus gültigen Literal- und Platzhalterzeichen enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen.</param>
      <returns>Ein Array der vollständigen Namen (einschließlich der Pfade) der Unterverzeichnisse, die den angegebenen Kriterien entsprechen, oder ein leeres Array, wenn keine Verzeichnisse gefunden werden.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.GetDirectoryRoot(System.String)">
      <summary>Gibt für den angegebenen Pfad die Informationen über Volume, Stammverzeichnis oder beides zurück.</summary>
      <param name="path">Der Pfad einer Datei oder eines Verzeichnisses.</param>
      <returns>Eine Zeichenfolge, die für den angegebenen Pfad die Informationen über Volume, Stammverzeichnis oder beides enthält.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Mit <see cref="M:System.IO.Path.GetInvalidPathChars" /> können Sie Abfragen für ungültige Zeichen ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String)">
      <summary>Gibt die Namen aller Dateien (einschließlich des Pfads) im angegebenen Verzeichnis zurück.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <returns>Ein Array der vollständigen Namen (einschließlich der Pfade) für die Dateien im angegebenen Verzeichnis, oder ein leeres Array, wenn keine Dateien gefunden werden.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.  

oder -Netzwerkfehler.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad wurde nicht gefunden oder ist ungültig (er befindet sich z. B.auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String)">
      <summary>Gibt die Namen der Dateien (einschließlich der zugehörigen Pfade) zurück, die dem angegebenen Suchmuster im angegebenen Verzeichnis entsprechen.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Ein Array der vollständigen Namen der Dateien im angegebenen Verzeichnis (einschließlich der zugehörigen Pfade), die dem angegebenen Suchmuster entsprechen, oder ein leeres Array, wenn keine Dateien gefunden werden.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.  

oder -Netzwerkfehler.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Mit <see cref="M:System.IO.Path.GetInvalidPathChars" /> können Sie Abfragen für ungültige Zeichen ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad wurde nicht gefunden oder ist ungültig (er befindet sich z. B.auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
      <summary>Gibt die Namen der Dateien (einschließlich der zugehörigen Pfade) zurück, die dem angegebenen Suchmuster im angegebenen Verzeichnis entsprechen. Anhand eines Werts wird bestimmt, ob Unterverzeichnisse durchsucht werden sollen.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen.</param>
      <returns>Ein Array der vollständigen Namen der Dateien im angegebenen Verzeichnis (einschließlich der Pfade), die dem angegebenen Suchmuster und der Option entsprechen, oder ein leeres Array, wenn keine Dateien gefunden werden.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="searchpattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad wurde nicht gefunden oder ist ungültig (er befindet sich z. B.auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.  

oder -Netzwerkfehler.</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String)">
      <summary>Gibt die Namen aller Dateien und Unterverzeichnisse in einem angegebenen Pfad zurück.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <returns>Ein Array mit den Namen der Dateien und Unterverzeichnisse im angegebenen Verzeichnis, oder ein leeres Array, wenn keine Dateien oder Unterverzeichnisse gefunden werden.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Mit <see cref="M:System.IO.Path.GetInvalidPathChars" /> können Sie Abfragen für ungültige Zeichen ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
      <summary>Gibt ein Array von Dateinamen und Verzeichnisnamen zurück, die einem Suchmuster in einem angegebenen Pfad entsprechen.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien und Verzeichnissen in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Ein Array von Dateinamen und Verzeichnisnamen, die den angegebenen Suchkriterien entsprechen, oder ein leeres Array, wenn keine Dateien oder Verzeichnisse gefunden werden.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)">
      <param name="path" />
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
      <summary>Gibt ein Array aller Dateinamen und Verzeichnisnamen zurück, die einem Suchmuster in einem angegebenen Pfad entsprechen. Optional werden Unterverzeichnisse durchsucht.</summary>
      <param name="path">Der relative oder absolute Pfad zum Verzeichnis, das durchsucht werden soll. Bei dieser Zeichenfolge wird die Groß-/Kleinschreibung nicht berücksichtigt.</param>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien und Verzeichnissen in <paramref name="path" /> auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen.  
Der Standardwert ist <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <returns>Ein Array von Dateinamen und Verzeichnisnamen, die den angegebenen Suchkriterien entsprechen, oder ein leeres Array, wenn keine Dateien oder Verzeichnisse gefunden werden.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), die nur Leerraum oder ungültige Zeichen enthält. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.  

oder -<paramref name="searchPattern" /> enthält kein gültiges Muster.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.  

oder -<paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (verweist z. B. auf ein nicht zugeordnetes Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> ist ein Dateiname.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastAccessTime(System.String)">
      <summary>Gibt das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. das die Informationen über Zugriffsdatum und -zeitpunkt abgerufen werden sollen.</param>
      <returns>Eine Struktur, die auf das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis festgelegt wird. Dieser Wert wird in Ortszeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Der <paramref name="path" />-Parameter hat ein ungültiges Format.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
      <summary>Gibt das Datum und den Zeitpunkt im UTC-Format (Coordinated Universal Time, koordinierte Weltzeit) des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. das die Informationen über Zugriffsdatum und -zeitpunkt abgerufen werden sollen.</param>
      <returns>Eine Struktur, die auf das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis festgelegt wird. Der Wert wird in UTC-Zeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">Der <paramref name="path" />-Parameter hat ein ungültiges Format.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastWriteTime(System.String)">
      <summary>Gibt das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. für das die Informationen über Datum und Uhrzeit der letzten Änderung abgerufen werden sollen.</param>
      <returns>Eine Struktur, die auf das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei bzw. das angegebene Verzeichnis festgelegt wird. Dieser Wert wird in Ortszeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
      <summary>Gibt das Datum und den Zeitpunkt des letzten Schreibzugriffs im UTC-Format (Coordinated Universal Time, koordinierte Weltzeit) auf die angegebenen Datei bzw. das angegebene Verzeichnis zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. für das die Informationen über Datum und Uhrzeit der letzten Änderung abgerufen werden sollen.</param>
      <returns>Eine Struktur, die auf das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei bzw. das angegebene Verzeichnis festgelegt wird. Der Wert wird in UTC-Zeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
    </member>
    <member name="M:System.IO.Directory.GetLogicalDrives">
      <summary>Ruft die Namen der logischen Laufwerke auf diesem Computer im Format „&lt;Laufwerkbuchstabe&gt;:\“ ab.</summary>
      <returns>Die logischen Laufwerke auf diesem Computer.</returns>
      <exception cref="T:System.IO.IOException">Es ist ein E/A-Fehler aufgetreten (z. B. ein Datenträgerfehler).</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.Directory.GetParent(System.String)">
      <summary>Ruft das übergeordnete Verzeichnis des angegebenen Pfads ab, sowohl für absolute als auch für relative Pfade.</summary>
      <param name="path">Der Pfad, dessen übergeordnetes Verzeichnis abgerufen werden soll.</param>
      <returns>Das übergeordnete Verzeichnis oder <see langword="null" />, wenn <paramref name="path" /> das Stammverzeichnis ist, einschließlich des Stammverzeichnisses eines UNC-Server- oder Freigabenamens.</returns>
      <exception cref="T:System.IO.IOException">Das durch <paramref name="path" /> angegebene Verzeichnis ist schreibgeschützt.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge. Weitere Informationen finden Sie im Thema <see cref="T:System.IO.PathTooLongException" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">Das Format von <paramref name="path" /> ist ungültig.</exception>
      <exception cref="T:System.Security.SecurityException">Nur .NET Framework: Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.IO.Directory.Move(System.String,System.String)">
      <summary>Verschiebt eine Datei oder ein Verzeichnis und dessen Inhalt an einen neuen Speicherort.</summary>
      <param name="sourceDirName">Der Pfad der Datei oder des Verzeichnisses, das verschoben werden soll.</param>
      <param name="destDirName">Der Pfad zum neuen Speicherort für <paramref name="sourceDirName" />. Wenn <paramref name="sourceDirName" /> eine Datei ist, muss <paramref name="destDirName" /> auch ein Dateiname sein.</param>
      <exception cref="T:System.IO.IOException">Es wurde versucht, ein Verzeichnis auf ein anderes Volume zu verschieben.

oder -<paramref name="destDirName" /> ist bereits vorhanden. Weitere Informationen finden Sie im Abschnitt „Hinweise“.

oder -Der <paramref name="sourceDirName" />-Parameter und <paramref name="destDirName" />-Parameter verweisen auf dieselbe Datei oder dasselbe Verzeichnis.  

oder -Das Verzeichnis oder eine darin enthaltene Datei wird von einem anderen Prozess verwendet.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceDirName" /> oder <paramref name="destDirName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirName" /> oder <paramref name="destDirName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der von <paramref name="sourceDirName" /> angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
      <summary>Legt das Erstellungsdatum und den Erstellungszeitpunkt für die angegebene Datei bzw. das angegebene Verzeichnis fest.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für das die Informationen über Erstellungsdatum und -zeitpunkt festgelegt werden sollen.</param>
      <param name="creationTime">Datum und Zeitpunkt des letzten Schreibvorgangs in einer Datei oder einem Verzeichnis. Dieser Wert wird in Ortszeit angegeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> gibt einen Wert außerhalb des Datums- oder Uhrzeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
    </member>
    <member name="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
      <summary>Legt das Erstellungsdatum und den Erstellungszeitpunkt im UTC-Format (Coordinated Universal Time, koordinierte Weltzeit) für die angegebene Datei oder das angegebene Verzeichnis fest.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für das die Informationen über Erstellungsdatum und -zeitpunkt festgelegt werden sollen.</param>
      <param name="creationTimeUtc">Datum und Uhrzeit der Erstellung des Verzeichnisses oder der Datei. Dieser Wert wird in Ortszeit angegeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> gibt einen Wert außerhalb des Datums- oder Uhrzeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
    </member>
    <member name="M:System.IO.Directory.SetCurrentDirectory(System.String)">
      <summary>Legt das aktuelle Arbeitsverzeichnis der Anwendung auf das angegebene Verzeichnis fest.</summary>
      <param name="path">Der Pfad, auf den das aktuelle Arbeitsverzeichnis festgelegt ist.</param>
      <exception cref="T:System.IO.IOException">E/A-Fehler</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung zum Zugreifen auf nicht verwalteten Code.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das angegebene Verzeichnis wurde nicht gefunden.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
      <summary>Legt das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis fest.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. für das die Informationen über Zugriffsdatum und -zeitpunkt festgelegt werden sollen.</param>
      <param name="lastAccessTime">Eine Objekt, das den festzulegenden Wert für Zugriffsdatum und -zeitpunkt von <paramref name="path" /> enthält. Dieser Wert wird in Ortszeit angegeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTime" /> gibt einen Wert außerhalb des Datums- oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <summary>Legt das Datum und den Zeitpunkt im UTC-Format (Coordinated Universal Time, koordinierte Weltzeit) des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis fest.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. für das die Informationen über Zugriffsdatum und -zeitpunkt festgelegt werden sollen.</param>
      <param name="lastAccessTimeUtc">Eine Objekt, das den festzulegenden Wert für Zugriffsdatum und -zeitpunkt von <paramref name="path" /> enthält. Der Wert wird in UTC-Zeit angegeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTimeUtc" /> gibt einen Wert außerhalb des Datums- oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
      <summary>Legt Datum und Zeit des letzten Schreibvorgangs in einem Verzeichnis fest.</summary>
      <param name="path">Der Pfad des Verzeichnisses.</param>
      <param name="lastWriteTime">Datum und Zeitpunkt des letzten Schreibvorgangs in einem Verzeichnis. Dieser Wert wird in Ortszeit angegeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> wurde nicht gefunden (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> wurde nicht gefunden (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTime" /> gibt einen Wert außerhalb des Datums- oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <summary>Legt das Datum und den Zeitpunkt im UTC-Format (Coordinated Universal Time, koordinierte Weltzeit) des letzten Schreibzugriffs auf ein Verzeichnis fest.</summary>
      <param name="path">Der Pfad des Verzeichnisses.</param>
      <param name="lastWriteTimeUtc">Datum und Zeitpunkt des letzten Schreibvorgangs in einem Verzeichnis. Der Wert wird in UTC-Zeit angegeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> wurde nicht gefunden (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> wurde nicht gefunden (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen. Sie können Abfragen für ungültige Zeichen mithilfe der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode ausführen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTimeUtc" /> gibt einen Wert außerhalb des Datums- oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
    </member>
    <member name="T:System.IO.DirectoryInfo">
      <summary>Macht Instanzmethoden zum Erstellen, Verschieben und Auflisten in Verzeichnissen und Unterverzeichnissen verfügbar. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.IO.DirectoryInfo.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.DirectoryInfo" />-Klasse im angegebenen Pfad.</summary>
      <param name="path">Eine Zeichenfolge, die den Pfad angibt, auf dem die <see langword="DirectoryInfo" /> erstellt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> enthält ungültige Zeichen, z.B. ", &lt;, &gt; oder |.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Create">
      <summary>Erstellt ein Verzeichnis.</summary>
      <exception cref="T:System.IO.IOException">Das Verzeichnis kann nicht erstellt werden.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
      <summary>Erstellt ein oder mehrere Unterverzeichnisse im angegebenen Pfad. Der angegebene Pfad kann zu dieser Instanz der <see cref="T:System.IO.DirectoryInfo" />-Klasse relativ sein.</summary>
      <param name="path">Der angegebene Pfad. Dieser kann nicht ein anderer Datenträgervolumename oder ein anderer UNC-Name (Universal Naming Convention) sein.</param>
      <returns>Das letzte im <paramref name="path" /> angegebene Verzeichnis.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> gibt keinen gültigen Dateipfad an oder enthält ungültige <see langword="DirectoryInfo" />-Zeichen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.IOException">Das Unterverzeichnis kann nicht erstellt werden.  

oder - 
Eine Datei oder ein Verzeichnis weist bereits den durch <paramref name="path" /> angegebenen Namen auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die Codezugriffsberechtigung zum Erstellen des Verzeichnisses.  

oder - 
Der Aufrufer verfügt nicht über die Codezugriffsberechtigung zum Lesen des Verzeichnisses, das vom zurückgegebenen <see cref="T:System.IO.DirectoryInfo" />-Objekt beschrieben wird.  Dies kann der Fall sein, wenn der <paramref name="path" />-Parameter ein vorhandenes Verzeichnis beschreibt.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> enthält einen Doppelpunkt (:), der nicht Teil einer Laufwerksbezeichnung ist („C:\“).</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Delete">
      <summary>Löscht dieses <see cref="T:System.IO.DirectoryInfo" />, wenn es leer ist.</summary>
      <exception cref="T:System.UnauthorizedAccessException">Das Verzeichnis enthält eine schreibgeschützte Datei.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das von diesem <see cref="T:System.IO.DirectoryInfo" />-Objekt beschriebene Verzeichnis ist nicht vorhanden, oder es konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Das Verzeichnis ist nicht leer.  

oder - 
Das Verzeichnis ist das aktuelle Arbeitsverzeichnis der Anwendung.  

oder - 
Für das Verzeichnis ist ein geöffnetes Handle vorhanden, und das Betriebssystem ist Windows XP oder früher. Dieses geöffnete Handle kann aus der Auflistung von Verzeichnissen entstanden sein. Weitere Informationen finden Sie unter Vorgehensweise: Auflisten von Verzeichnissen und Dateien.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
      <summary>Löscht diese Instanz von <see cref="T:System.IO.DirectoryInfo" /> und gibt an, ob Unterverzeichnisse und Dateien gelöscht werden sollen.</summary>
      <param name="recursive">
        <see langword="true" />, um dieses Verzeichnis, seine Unterverzeichnisse und alle Dateien zu löschen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.UnauthorizedAccessException">Das Verzeichnis enthält eine schreibgeschützte Datei.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das von diesem <see cref="T:System.IO.DirectoryInfo" />-Objekt beschriebene Verzeichnis ist nicht vorhanden, oder es konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Das Verzeichnis ist schreibgeschützt.  

oder - 
Das Verzeichnis enthält mindestens eine Datei oder ein Unterverzeichnis, und <paramref name="recursive" /> ist <see langword="false" />.  

oder - 
Das Verzeichnis ist das aktuelle Arbeitsverzeichnis der Anwendung.  

oder - 
Für das Verzeichnis oder eine der Dateien darin ist ein geöffnetes Handle vorhanden, und das Betriebssystem ist Windows XP oder früher. Dieses geöffnete Handle kann vom Auflisten von Verzeichnissen und Dateien stammen. Weitere Informationen finden Sie unter Vorgehensweise: Auflisten von Verzeichnissen und Dateien.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories">
      <summary>Gibt eine aufzählbare Auflistung von Verzeichnisinformationen im aktuellen Verzeichnis zurück.</summary>
      <returns>Eine aufzählbare Auflistung der Verzeichnisse im aktuellen Verzeichnis.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" />-Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Verzeichnisinformationen zurück, die einem angegebenen Suchmuster entsprechen.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Eine aufzählbare Auflistung von Verzeichnissen, die <paramref name="searchPattern" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" /> -Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
      <summary>Gibt eine aufzählbare Auflistung von Verzeichnisinformationen zurück, die einem angegebenen Suchmuster und einer angegebenen Option zum Durchsuchen von Unterverzeichnissen entspricht.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen. Der Standardwert ist <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />sein.</param>
      <returns>Eine aufzählbare Auflistung von Verzeichnissen, die <paramref name="searchPattern" /> und <paramref name="searchOption" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" /> -Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles">
      <summary>Gibt eine aufzählbare Auflistung von Dateiinformationen im aktuellen Verzeichnis zurück.</summary>
      <returns>Eine aufzählbare Auflistung der Dateien im aktuellen Verzeichnis.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" />-Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Dateiinformationen zurück, die einem Suchmuster entsprechen.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Eine aufzählbare Auflistung von Dateien, die <paramref name="searchPattern" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" /> -Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
      <summary>Gibt eine aufzählbare Auflistung von Dateiinformationen zurück, die einem angegebenen Suchmuster und einer angegebenen Option zum Durchsuchen von Unterverzeichnissen entspricht.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen. Der Standardwert ist <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />sein.</param>
      <returns>Eine aufzählbare Auflistung von Dateien, die <paramref name="searchPattern" /> und <paramref name="searchOption" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" /> -Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
      <summary>Gibt eine aufzählbare Auflistung von Systeminformationen im aktuellen Verzeichnis zurück.</summary>
      <returns>Eine aufzählbare Auflistung von Systeminformationen im aktuellen Verzeichnis.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" />-Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
      <summary>Gibt eine aufzählbare Auflistung von Dateisysteminformationen zurück, die einem angegebenen Suchmuster entsprechen.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Eine aufzählbare Auflistung von Objekten mit Dateisysteminformationen, die <paramref name="searchPattern" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" /> -Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
      <summary>Gibt eine aufzählbare Auflistung von Dateisysteminformationen zurück, die einem angegebenen Suchmuster und einer angegebenen Option zum Durchsuchen von Unterverzeichnissen entspricht.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen. Der Standardwert ist <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />sein.</param>
      <returns>Eine aufzählbare Auflistung von Objekten mit Dateisysteminformationen, die <paramref name="searchPattern" /> und <paramref name="searchOption" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" /> -Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Exists">
      <summary>Ruft einen Wert ab, der angibt, ob das Verzeichnis vorhanden ist.</summary>
      <returns>
        <see langword="true" />, wenn das Verzeichnis vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories">
      <summary>Gibt die Unterverzeichnisse des aktuellen Verzeichnisses zurück.</summary>
      <returns>Ein Array von <see cref="T:System.IO.DirectoryInfo" />-Objekten.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see cref="T:System.IO.DirectoryInfo" />-Objekt gekapselte Pfad ist ungültig. Dies ist z. B. der Fall, wenn das Laufwerk des Pfads nicht zugeordnet ist.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
      <summary>Gibt ein Array von Verzeichnissen im aktuellen <see cref="T:System.IO.DirectoryInfo" /> zurück, die den angegebenen Suchkriterien entsprechen.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Ein Array vom Typ <see langword="DirectoryInfo" />, der <paramref name="searchPattern" /> entspricht.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see langword="DirectoryInfo" /> -Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
      <summary>Gibt ein Array von Verzeichnissen im aktuellen <see cref="T:System.IO.DirectoryInfo" /> zurück, die den angegebenen Suchkriterien entsprechen. Anhand eines Werts wird bestimmt, ob in Unterverzeichnissen gesucht wird.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen.</param>
      <returns>Ein Array vom Typ <see langword="DirectoryInfo" />, der <paramref name="searchPattern" /> entspricht.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der im <see langword="DirectoryInfo" /> -Objekt gekapselte Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles">
      <summary>Gibt eine Dateiliste des aktuellen Verzeichnisses zurück.</summary>
      <returns>Ein Array vom Typ <see cref="T:System.IO.FileInfo" />.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist ungültig. Dies ist z. B. der Fall, wenn das Laufwerk des Pfads nicht zugeordnet ist.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String)">
      <summary>Gibt eine Dateiliste des aktuellen Verzeichnisses zurück, das dem angegebenen Suchmuster entspricht.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Ein Array vom Typ <see cref="T:System.IO.FileInfo" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
      <summary>Gibt eine Dateiliste des aktuellen Verzeichnisses zurück, das dem angegebenen Suchmuster entspricht. Anhand eines Werts wird bestimmt, ob in Unterverzeichnissen gesucht wird.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Dateien auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen.</param>
      <returns>Ein Array vom Typ <see cref="T:System.IO.FileInfo" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" />-Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos">
      <summary>Gibt ein Array von stark typisierten <see cref="T:System.IO.FileSystemInfo" />-Einträgen zurück, das alle Dateien und Unterverzeichnisse in einem Verzeichnis darstellt.</summary>
      <returns>Ein Array von stark typisierten <see cref="T:System.IO.FileSystemInfo" />-Einträgen.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der Pfad ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
      <summary>Ruft ein Array von stark typisierten <see cref="T:System.IO.FileSystemInfo" />-Objekten ab, das die Dateien und Unterverzeichnisse darstellt, die den angegebenen Suchkriterien entsprechen.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen und Dateien auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <returns>Ein Array von stark typisierten <see langword="FileSystemInfo" />-Objekten, die den Suchkriterien entsprechen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)">
      <param name="searchPattern" />
      <param name="enumerationOptions" />
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
      <summary>Ruft ein Array von <see cref="T:System.IO.FileSystemInfo" />-Objekten ab, die die Dateien und Unterverzeichnisse darstellen, die den angegebenen Suchkriterien entsprechen.</summary>
      <param name="searchPattern">Die Suchzeichenfolge für die Überprüfung der Namen von Verzeichnissen und Dateien auf Übereinstimmungen.  Dieser Parameter kann eine Kombination aus gültigen Literalpfad- und Platzhalterzeichen (* und ?) enthalten, unterstützt jedoch keine regulären Ausdrücke.</param>
      <param name="searchOption">Einer der Enumerationswerte, der angibt, ob nur das aktuelle Verzeichnis oder auch alle Unterverzeichnisse durchsucht werden sollen. Der Standardwert ist <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />sein.</param>
      <returns>Ein Array von Dateisystemeinträgen, die den Suchkriterien entsprechen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="searchPattern" /> enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> ist kein gültiger <see cref="T:System.IO.SearchOption" /> -Wert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.MoveTo(System.String)">
      <summary>Verschiebt eine <see cref="T:System.IO.DirectoryInfo" />-Instanz und deren Inhalt in einen neuen Pfad.</summary>
      <param name="destDirName">Der Name und Pfad des Verzeichnisses, in das das Verzeichnis verschoben werden soll. Das Ziel darf kein anderes Datenträgervolume und kein Verzeichnis mit dem gleichen Namen sein. Es kann ein vorhandenes Verzeichnis sein, dem dieses Verzeichnis als Unterverzeichnis hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destDirName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destDirName" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.IO.IOException">Es wurde versucht, ein Verzeichnis auf ein anderes Volume zu verschieben.  

oder - 
<paramref name="destDirName" /> ist bereits vorhanden.  

oder - 
Sie sind nicht autorisiert, auf diesen Pfad zuzugreifen.  

oder - 
Das verschobene Verzeichnis und das Zielverzeichnis haben denselben Namen.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Zielverzeichnis kann nicht gefunden werden.</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Name">
      <summary>Ruft den Namen dieser <see cref="T:System.IO.DirectoryInfo" />-Instanz ab.</summary>
      <returns>Der Name des Verzeichnisses.</returns>
    </member>
    <member name="P:System.IO.DirectoryInfo.Parent">
      <summary>Ruft das übergeordnete Verzeichnis eines angegebenen Unterverzeichnisses ab.</summary>
      <returns>Das übergeordnete Verzeichnis oder <see langword="null" /> , wenn der Pfad NULL ist oder wenn der Dateipfad einen Stamm ( \z. b C:\., \\server\shareoder) angibt.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="P:System.IO.DirectoryInfo.Root">
      <summary>Ruft den Stammteil des Verzeichnisses ab.</summary>
      <returns>Ein Objekt, das den Stamm des Verzeichnisses darstellt.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.ToString">
      <summary>Gibt den ursprünglichen Pfad zurück, der an den Konstruktor <see cref="T:System.IO.DirectoryInfo" /> übergeben wurde. Verwenden Sie die Eigenschaft <see cref="P:System.IO.DirectoryInfo.FullName" /> bzw. <see cref="P:System.IO.DirectoryInfo.Name" /> für den vollständigen Pfad bzw. den Datei- und Verzeichnisnamen anstatt dieser Methode.</summary>
      <returns>Der ursprüngliche Pfad, der vom Benutzer übergeben wurde.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEntry">
      <summary>Bietet eine detaillierte Ansicht von <see cref="T:System.IO.FileSystemInfo" />, um Suchergebnisse zu verarbeiten und zu filtern.</summary>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Attributes">
      <summary>Ruft die Attribute für diesen Eintrag ab.</summary>
      <returns>Die Attribute für diesen Eintrag.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.CreationTimeUtc">
      <summary>Ruft die Erstellungszeit für den Eintrag oder den ältesten verfügbaren Zeitstempel ab, wenn das Betriebssystem keine Zeitstempel für die Erstellungszeit unterstützt.</summary>
      <returns>Die Erstellungszeit für den Eintrag.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Directory">
      <summary>Ruft den vollständigen Pfad des Verzeichnisses ab, in dem dieser Eintrag gespeichert ist.</summary>
      <returns>Der vollständige Pfad des Verzeichnisses dieses Eintrags.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.FileName">
      <summary>Ruft den Dateinamen für diesen Eintrag ab.</summary>
      <returns>Der Dateiname des Eintrags.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.IsDirectory">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Eintrag ein Verzeichnis ist.</summary>
      <returns>
        <see langword="true" />Wenn der Eintrag ein Verzeichnis ist, <see langword="true" />andernfalls.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.IsHidden">
      <summary>Ruft einen Wert ab, der angibt, ob die Datei das hidden-Attribut aufweist.</summary>
      <returns>
        <see langword="true" />, wenn die Datei das hidden-Attribut aufweist. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.LastAccessTimeUtc">
      <summary>Ruft einen datetime-Offset ab, der den Zeitpunkt des letzten Zugriffs in UTC darstellt.</summary>
      <returns>Der Zeitpunkt des letzten Zugriffs in UTC.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.LastWriteTimeUtc">
      <summary>Ruft einen datetime-Offset ab, der den Zeitpunkt des letzten Zugriffs in UTC darstellt.</summary>
      <returns>Die letzte Schreibzeit in UTC.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Length">
      <summary>Ruft die Länge der Datei in Bytes ab.</summary>
      <returns>Die Länge der Datei in Bytes.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.OriginalRootDirectory">
      <summary>Ruft das Stammverzeichnis für die Enumeration ab, wie im Konstruktor angegeben.</summary>
      <returns>Das ursprüngliche Stammverzeichnis.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.RootDirectory">
      <summary>Ruft den vollständigen Pfad des Stammverzeichnisses ab, das für die-Enumeration verwendet wird.</summary>
      <returns>Das Stammverzeichnis.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToFileSystemInfo">
      <summary>Konvertiert den Wert dieser Instanz in einen <see cref="T:System.IO.FileSystemInfo" />.</summary>
      <returns>Der Wert dieser Instanz als <see cref="T:System.IO.FileSystemInfo" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToFullPath">
      <summary>Gibt den vollständigen Pfad des Suchergebnisses zurück.</summary>
      <returns>Eine Zeichenfolge, die den vollständigen Pfad darstellt.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToSpecifiedFullPath">
      <summary>Gibt basierend auf dem ursprünglich bereitgestellten Pfad den vollständigen Pfad für die Suchergebnisse zurück.</summary>
      <returns>Eine Zeichenfolge, die den vollständigen Pfad darstellt.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1">
      <summary>Ermöglicht die Verwendung von benutzerdefinierten Filterprädikaten und Transformationsdelegaten zu Enumerationszwecken.</summary>
      <typeparam name="TResult">Der Typ, den dieser Aufzähl Bare kapselt.</typeparam>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.#ctor(System.String,System.IO.Enumeration.FileSystemEnumerable{`0}.FindTransform,System.IO.EnumerationOptions)">
      <param name="directory" />
      <param name="transform" />
      <param name="options" />
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1.FindPredicate">
      <summary>Kapselt eine Methode zum Filtern von Suchergebnissen.</summary>
      <param name="entry">Ein Verweis auf den Dateisystemeintrag, der mit der Prädikatbedingung ausgewertet wird.</param>
      <typeparam name="TResult" />
      <returns>
        <see langword="true" />, wenn die Prädikatbedingung erfüllt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1.FindTransform">
      <summary>Kapselt eine Methode zum Transformieren von Ergebnisrohdaten in ein Ergebnis.</summary>
      <param name="entry">Ein Verweis auf den Dateisystemeintrag, der mit der Prädikatbedingung ausgewertet wird.</param>
      <typeparam name="TResult" />
      <returns>Eine Instanz des Typs, den dieser Delegat kapselt.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.GetEnumerator">
      <summary>Ruft den Enumerator für diesen Ergebnistyp ab.</summary>
      <returns>Ein Enumerator.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerable`1.ShouldIncludePredicate">
      <summary>Ruft das Prädikat ab, das verwendet werden kann, um zu überprüfen, ob TResults einbezogen werden sollen, oder legt dieses Prädikat fest.</summary>
      <returns>Das include-Prädikat.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerable`1.ShouldRecursePredicate">
      <summary>Ruft das Prädikat ab, das verwendet werden kann, um zu überprüfen, ob TResults rekursiv durchlaufen werden sollen, oder legt dieses Prädikat fest.</summary>
      <returns>Das recurse-Prädikat.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ruft einen Enumerator ab, der für Iterationen verwendet werden kann.</summary>
      <returns>Eine Enumeratorinstanz.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerator`1">
      <typeparam name="TResult" />
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.#ctor(System.String,System.IO.EnumerationOptions)">
      <summary>Kapselt einen Suchvorgang.</summary>
      <param name="directory">Das Verzeichnis, in dem gesucht werden soll.</param>
      <param name="options">Die zu verwendenden Enumerationsoptionen.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ContinueOnError(System.Int32)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse einen Wert zurück, der angibt, ob die Ausführung fortgesetzt oder die Standardausnahme ausgelöst werden soll.</summary>
      <param name="error">Der native Fehlercode.</param>
      <returns>
        <see langword="true" />, um die Ausführung fortzusetzen. <see langword="false" />, um die Standardausnahme für den angegebenen Fehler auszulösen.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerator`1.Current">
      <summary>Ruft das aktuell besuchte Element ab.</summary>
      <returns>Das aktuell besuchte Element.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Dispose(System.Boolean)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse die von der <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" />-Klasse verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.MoveNext">
      <summary>Legt den Enumerator auf das nächste Element von <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" /> fest.</summary>
      <returns>
        <see langword="true" />, wenn der Enumerator die Ausführung erfolgreich mit dem nächsten Element fortgesetzt hat. <see langword="false" />, wenn das Ende des Enumerators überschritten wurde.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.OnDirectoryFinished(System.ReadOnlySpan{System.Char})">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird diese Methode immer dann aufgerufen, wenn das Ende eines Verzeichnisses erreicht wird.</summary>
      <param name="directory">Der Verzeichnispfad als schreibgeschützter Bereich.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Reset">
      <summary>Löst immer <see cref="T:System.NotSupportedException" /> aus.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ShouldIncludeEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob der angegebene Dateisystemeintrag in die Ergebnisse einbezogen werden soll.</summary>
      <param name="entry">Ein Verweis auf einen Dateisystemeintrag.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Dateisystemeintrag in die Ergebnisse einbezogen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ShouldRecurseIntoEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob der angegebene Dateisystemeintrag rekursiv durchlaufen werden soll.</summary>
      <param name="entry">Ein Verweis auf einen Dateisystemeintrag.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Verzeichniseintrag rekursiv durchlaufen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerator`1.System#Collections#IEnumerator#Current">
      <summary>Ruft das aktuell besuchte Objekt ab.</summary>
      <returns>Das aktuell besuchte Objekt.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.TransformEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>Generiert beim Überschreiben in einer abgeleiteten Klasse den Ergebnistyp aus dem aktuellen Eintrag.</summary>
      <param name="entry" />
      <returns>Der Ergebnistyp aus dem aktuellen Eintrag.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemName">
      <summary>Stellt Methoden für das Abgleichen von Dateisystemnamen bereit.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.MatchesSimpleExpression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)">
      <summary>Überprüft, ob der angegebene Ausdruck mit dem angegebenen Namen übereinstimmt. Unterstützt die folgenden Platzhalterzeichen: „*“ und „?“. Der umgekehrte Schrägstrich '' dient als Escapezeichen.</summary>
      <param name="expression">Der Ausdruck, mit dem verglichen werden soll.</param>
      <param name="name">Der Name, der mit dem Ausdruck verglichen werden soll.</param>
      <param name="ignoreCase">
        <see langword="true" /> zum Ignorieren von Groß-/Kleinschreibung (Standard). <see langword="false" />, wenn Groß-/Kleinschreibung beachtet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Ausdruck mit dem angegebenen Namen übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.MatchesWin32Expression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)">
      <summary>Überprüft, ob der angegebene Win32-Ausdruck mit dem angegebenen Namen übereinstimmt. Unterstützt die folgenden Platzhalterzeichen: „*“, „?“, „&lt;“, „&gt;“, „"“. Der umgekehrte Schrägstrich '' dient als Escapezeichen.</summary>
      <param name="expression">Der Ausdruck, mit dem verglichen werden soll, z.B. „*.foo“.</param>
      <param name="name">Der Name, der mit dem Ausdruck verglichen werden soll.</param>
      <param name="ignoreCase">
        <see langword="true" /> zum Ignorieren von Groß-/Kleinschreibung (Standard). <see langword="false" />, wenn Groß-/Kleinschreibung bei der Übereinstimmung beachtet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Ausdruck mit dem angegebenen Namen übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.TranslateWin32Expression(System.String)">
      <summary>Übersetzt den angegebenen Win32-Ausdruck. Ändern Sie „*“ und „?“ in „&lt;“, „&gt;“ und „"“, um Win32-Verhalten zu ermitteln.</summary>
      <param name="expression">Der zu übersetzende Ausdruck.</param>
      <returns>Eine Zeichenfolge mit dem übersetzten Win32-Ausdruck.</returns>
    </member>
    <member name="T:System.IO.EnumerationOptions" />
    <member name="M:System.IO.EnumerationOptions.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.EnumerationOptions" />-Klasse mit den empfohlenen Standardoptionen.</summary>
    </member>
    <member name="P:System.IO.EnumerationOptions.AttributesToSkip">
      <summary>Ruft die zu überspringenden Attribute ab oder legt sie fest. Der Standardwert <c>FileAttributes.Hidden | FileAttributes.System</c>.</summary>
      <returns>Die zu über springenden Attribute.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.BufferSize">
      <summary>Ruft die vorgeschlagene Puffergröße in Bytes ab oder legt Sie fest. Der Standardwert ist 0 (kein Vorschlag).</summary>
      <returns>Die Puffergröße.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.IgnoreInaccessible">
      <summary>Ruft einen Wert ab, der angibt, ob Dateien oder Verzeichnisse übersprungen werden sollen, wenn der Zugriff verweigert wird (z.B. <see cref="T:System.UnauthorizedAccessException" /> oder <see cref="T:System.Security.SecurityException" />), oder legt diesen Wert fest. Die Standardeinstellung ist <see langword="true" />.</summary>
      <returns>
        <see langword="true" />zum Überspringen von Dateien oder Verzeichnissen, die sich in der Liste befinden. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.MatchCasing">
      <summary>Ruft das Verhalten bezüglich Groß-/Kleinschreibung ab oder legt es fest.</summary>
      <returns>Einer der Enumerationswerte, der das Verhalten der Groß-/Kleinschreibung angibt.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.MatchType">
      <summary>Ruft den Übereinstimmungstyp ab oder legt ihn fest.</summary>
      <returns>Einer der Enumerationswerte, der den Übereinstimmungstyp angibt.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.RecurseSubdirectories">
      <summary>Ruft einen Wert ab, der angibt, ob beim Aufzählen Unterverzeichnisse rekursiv durchlaufen werden sollen, oder legt diesen Wert fest. Die Standardeinstellung ist <see langword="false" />.</summary>
      <returns>
        <see langword="true" />, wenn in die Unterverzeichnisse rekursiert werden sollen. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.ReturnSpecialDirectories">
      <summary>Ruft einen Wert ab, der angibt, ob die besonderen Verzeichniseinträge „.“ und „..“ zurückgegeben werden sollen, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />So geben Sie die speziellen Verzeichniseinträge "." und ".." zurück <see langword="false" />andernfalls.</returns>
    </member>
    <member name="T:System.IO.File">
      <summary>Stellt statische Methoden zum Erstellen, Kopieren, Löschen, Verschieben und Öffnen einer Datei bereit und unterstützt das Erstellen von <see cref="T:System.IO.FileStream" />-Objekten.</summary>
    </member>
    <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Fügt Zeilen an eine Datei an und schließt dann die Datei. Wenn die angegebene Datei nicht vorhanden ist, erstellt diese Methode eine Datei, schreibt die angegebenen Zeilen in die Datei und schließt die Datei dann.</summary>
      <param name="path">Die Datei, an die Zeilen angefügt werden sollen. Wenn die Datei nicht bereits vorhanden ist, wird sie erstellt.</param>
      <param name="contents">Die Zeilen, die an die Datei angefügt werden sollen.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition durch die <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">Entweder <paramref name="path" /> oder <paramref name="contents" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> überschreitet die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer ist nicht zum Schreiben in die Datei berechtigt.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> gibt eine schreibgeschützte Datei an.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> ist ein Verzeichnis.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <summary>Fügt Zeilen unter Verwendung einer angegebenen Codierung an eine Datei an und schließt dann die Datei. Wenn die angegebene Datei nicht vorhanden ist, erstellt diese Methode eine Datei, schreibt die angegebenen Zeilen in die Datei und schließt die Datei dann.</summary>
      <param name="path">Die Datei, an die Zeilen angefügt werden sollen. Wenn die Datei nicht bereits vorhanden ist, wird sie erstellt.</param>
      <param name="contents">Die Zeilen, die an die Datei angefügt werden sollen.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition durch die <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">Entweder <paramref name="path" />, <paramref name="contents" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> überschreitet die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> gibt eine schreibgeschützte Datei an.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> ist ein Verzeichnis.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Fügt Zeilen unter Verwendung einer angegebenen Codierung asynchron an eine Datei an und schließt dann die Datei. Wenn die angegebene Datei nicht vorhanden ist, erstellt diese Methode eine Datei, schreibt die angegebenen Zeilen in die Datei und schließt die Datei dann.</summary>
      <param name="path">Die Datei, an die Zeilen angefügt werden sollen. Wenn die Datei nicht bereits vorhanden ist, wird sie erstellt.</param>
      <param name="contents">Die Zeilen, die an die Datei angefügt werden sollen.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Anfügungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>Fügt Zeilen asynchron an eine Datei an und schließt dann die Datei. Wenn die angegebene Datei nicht vorhanden ist, erstellt diese Methode eine Datei, schreibt die angegebenen Zeilen in die Datei und schließt die Datei dann.</summary>
      <param name="path">Die Datei, an die Zeilen angefügt werden sollen. Wenn die Datei nicht bereits vorhanden ist, wird sie erstellt.</param>
      <param name="contents">Die Zeilen, die an die Datei angefügt werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Anfügungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllText(System.String,System.String)">
      <summary>Öffnet eine Datei, fügt die angegebene Zeichenfolge an die Datei an und schließt dann die Datei. Wenn die Datei nicht vorhanden ist, erstellt diese Methode eine Datei, schreibt die angegebene Zeichenfolge in die Datei und schließt die Datei dann.</summary>
      <param name="path">Die Datei, an die die angegebene Zeichenfolge angefügt werden soll.</param>
      <param name="contents">Die Zeichenfolge, die an die Datei angefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)">
      <summary>Fügt die angegebene Zeichenfolge unter Verwendung der angegebenen Codierung an die Datei an und erstellt die Datei, wenn sie nicht bereits vorhanden ist.</summary>
      <param name="path">Die Datei, an die die angegebene Zeichenfolge angefügt werden soll.</param>
      <param name="contents">Die Zeichenfolge, die an die Datei angefügt werden soll.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Öffnet eine Datei asynchron oder erstellt die Datei, wenn sie noch nicht vorhanden ist, fügt die angegebene Zeichenfolge unter Verwendung der angegebenen Codierung an die Datei an und schließt dann die Datei.</summary>
      <param name="path">Die Datei, an die die angegebene Zeichenfolge angefügt werden soll.</param>
      <param name="contents">Die Zeichenfolge, die an die Datei angefügt werden soll.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Anfügungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>Öffnet eine Datei asynchron oder erstellt eine Datei, wenn sie noch nicht vorhanden ist, fügt die angegebene Zeichenfolge an die Datei an und schließt dann die Datei.</summary>
      <param name="path">Die Datei, an die die angegebene Zeichenfolge angefügt werden soll.</param>
      <param name="contents">Die Zeichenfolge, die an die Datei angefügt werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Anfügungsvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.File.AppendText(System.String)">
      <summary>Erstellt einen <see cref="T:System.IO.StreamWriter" />, der UTF-8 codierten Text an eine vorhandene Datei anfügt oder an eine neue Datei, wenn die angegebene Datei nicht vorhanden ist.</summary>
      <param name="path">Der Pfad zu der Datei, an die angefügt wird.</param>
      <returns>Ein Streamwriter, der UTF-8 codierten Text an die angegebene Datei oder eine neue Datei anfügt.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (z. B. ist das Verzeichnis nicht vorhanden oder befindet sich auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Copy(System.String,System.String)">
      <summary>Kopiert eine vorhandene Datei in eine neue Datei. Das Überschreiben einer gleichnamigen Datei ist nicht zulässig.</summary>
      <param name="sourceFileName">Die zu kopierende Datei.</param>
      <param name="destFileName">Der Name der Zieldatei. Dies darf kein Verzeichnis und keine vorhandene Datei sein.</param>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.  

oder - 
<paramref name="sourceFileName" /> oder <paramref name="destFileName" /> gibt ein Verzeichnis an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der in <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" /> ist vorhanden.  

oder - 
Ein E/A-Fehler ist aufgetreten.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Copy(System.String,System.String,System.Boolean)">
      <summary>Kopiert eine vorhandene Datei in eine neue Datei. Das Überschreiben einer gleichnamigen Datei ist zulässig.</summary>
      <param name="sourceFileName">Die zu kopierende Datei.</param>
      <param name="destFileName">Der Name der Zieldatei. Dabei darf es sich nicht um ein Verzeichnis handeln.</param>
      <param name="overwrite">
        <see langword="true" />, wenn die Zieldatei überschrieben werden kann, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="destFileName" /> ist schreibgeschützt.

oder - 
<paramref name="overwrite" /> ist <see langword="true" />, <paramref name="destFileName" /> ist vorhanden und ausgeblendet, aber <paramref name="sourceFileName" /> ist nicht ausgeblendet.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.  

oder - 
<paramref name="sourceFileName" /> oder <paramref name="destFileName" /> gibt ein Verzeichnis an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der in <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" /> ist vorhanden und <paramref name="overwrite" /> ist <see langword="false" />.  

oder - 
Ein E/A-Fehler ist aufgetreten.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String)">
      <summary>Erstellt oder überschreibt eine Datei im angegebenen Pfad.</summary>
      <param name="path">Der Pfad und der Name der zu erstellenden Datei.</param>
      <returns>Ein <see cref="T:System.IO.FileStream" />, der Lese- und Schreibzugriff auf die in <paramref name="path" /> angegebene Datei bereitstellt.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Erstellen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String,System.Int32)">
      <summary>Erstellt oder überschreibt die angegebene Datei.</summary>
      <param name="path">Der Name der Datei.</param>
      <param name="bufferSize">Die Anzahl der für Lese- und Schreibvorgänge in die Datei gepufferten Bytes.</param>
      <returns>Ein <see cref="T:System.IO.FileStream" /> mit der angegebenen Puffergröße, der Lese-/Schreibzugriff auf die in <paramref name="path" /> angegebene Datei bereitstellt.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Erstellen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)">
      <summary>Erstellt oder überschreibt die angegebene Datei und gibt eine Puffergröße sowie einen <see cref="T:System.IO.FileOptions" />-Wert an, der beschreibt, wie die Datei erstellt oder überschrieben werden soll.</summary>
      <param name="path">Der Name der Datei.</param>
      <param name="bufferSize">Die Anzahl der für Lese- und Schreibvorgänge in die Datei gepufferten Bytes.</param>
      <param name="options">Einer der <see cref="T:System.IO.FileOptions" />-Werte, der beschreibt, wie die Datei erstellt oder überschrieben werden soll.</param>
      <returns>Eine neue Datei mit der angegebenen Puffergröße.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Erstellen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.CreateText(System.String)">
      <summary>Erstellt oder öffnet eine Datei zum Schreiben von UTF-8 codiertem Text. Wenn die Datei bereits vorhanden ist, werden deren Inhalte überschrieben.</summary>
      <param name="path">Die Datei, die zum Schreiben geöffnet werden soll.</param>
      <returns>Ein <see cref="T:System.IO.StreamWriter" />, der unter Verwendung der UTF-8-Codierung in die angegebene Datei schreibt.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Decrypt(System.String)">
      <summary>Entschlüsselt eine Datei, die vom aktuellen Konto mit der <see cref="M:System.IO.File.Encrypt(System.String)" />-Methode verschlüsselt wurde.</summary>
      <param name="path">Ein Pfad, der eine zu entschlüsselnde Datei beschreibt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="path" />-Parameter ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="path" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DriveNotFoundException">Es wurde ein ungültiges Laufwerk angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch den <paramref name="path" />-Parameter beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten. Beispielsweise ist die verschlüsselte Datei bereits geöffnet.  

oder -  

 Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.NotSupportedException">Das Dateisystem ist nicht NTFS.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der <paramref name="path" />-Parameter hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
Der <paramref name="path" />-Parameter hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.Delete(System.String)">
      <summary>Löscht die angegebene Datei.</summary>
      <param name="path">Der Name der zu löschenden Datei. Platzhalterzeichen werden nicht unterstützt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B.auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Die angegebene Datei wird verwendet.  

oder - 
Es liegt ein geöffnetes Handle für die Datei vor, und das Betriebssystem ist Windows XP oder früher. Dieses geöffnete Handle kann vom Auflisten von Verzeichnissen und Dateien stammen. Weitere Informationen finden Sie unter Vorgehensweise: Auflisten von Verzeichnissen und Dateien.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
Die Datei ist eine ausführbare Datei, die verwendet wird.  

oder - 
<paramref name="path" /> ist ein Verzeichnis.  

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.</exception>
    </member>
    <member name="M:System.IO.File.Encrypt(System.String)">
      <summary>Verschlüsselt eine Datei, sodass sie nur mit dem Konto, mit dem die Datei verschlüsselt wurde, entschlüsselt werden kann.</summary>
      <param name="path">Ein Pfad, der eine zu verschlüsselnde Datei beschreibt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="path" />-Parameter ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="path" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DriveNotFoundException">Es wurde ein ungültiges Laufwerk angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch den <paramref name="path" />-Parameter beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.  

oder -  

 Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.NotSupportedException">Das Dateisystem ist nicht NTFS.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der <paramref name="path" />-Parameter hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
Der <paramref name="path" />-Parameter hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.Exists(System.String)">
      <summary>Bestimmt, ob die angegebene Datei vorhanden ist.</summary>
      <param name="path">Die zu überprüfende Datei.</param>
      <returns>
        <see langword="true" />, wenn der Aufrufer über die erforderlichen Berechtigungen verfügt und <paramref name="path" /> den Namen einer vorhandenen Datei enthält, andernfalls <see langword="false" />. Diese Methode gibt auch <see langword="false" /> zurück, wenn für <paramref name="path" /><see langword="null" />, ein ungültiger Pfad oder eine Zeichenfolge der Länge 0 (null) festgelegt ist. Wenn ein Aufrufer nicht über ausreichende Berechtigungen zum Lesen der angegebenen Datei verfügt, wird keine Ausnahme ausgelöst, und die Methode gibt <see langword="false" /> zurück, unabhängig vom Vorhandensein von <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.File.GetAttributes(System.String)">
      <summary>Ruft die <see cref="T:System.IO.FileAttributes" /> der Datei in dem Pfad ab.</summary>
      <param name="path">Der Pfad zur Datei.</param>
      <returns>Die <see cref="T:System.IO.FileAttributes" /> der Datei in dem Pfad.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist leer, enthält nur Leerzeichen oder ungültige Zeichen.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> stellt eine Datei dar und ist ungültig, z. B. die Speicherung auf einem nicht zugeordneten Laufwerk oder eine nicht auffindbare Datei.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> stellt ein Verzeichnis dar und ist ungültig, z. B. die Speicherung auf einem nicht zugeordneten Laufwerk oder ein nicht auffindbares Verzeichnis.</exception>
      <exception cref="T:System.IO.IOException">Diese Datei wird von einem anderen Prozess verwendet.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.GetCreationTime(System.String)">
      <summary>Gibt das Erstellungsdatum und den Erstellungszeitpunkt für die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. für das die Informationen über Erstellungsdatum und -zeitpunkt abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.DateTime" />-Struktur, die auf das Erstellungsdatum und den Erstellungszeitpunkt für das angegebene Verzeichnis oder die angegebene Datei festgelegt wird. Dieser Wert wird in Ortszeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.GetCreationTimeUtc(System.String)">
      <summary>Gibt das Erstellungsdatum und den Erstellungszeitpunkt der angegebenen Datei bzw. des angegebenen Verzeichnisses im UTC-Format (Coordinated Universal Time) zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. für das die Informationen über Erstellungsdatum und -zeitpunkt abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.DateTime" />-Struktur, die auf das Erstellungsdatum und den Erstellungszeitpunkt für das angegebene Verzeichnis oder die angegebene Datei festgelegt wird. Der Wert wird in UTC-Zeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.GetLastAccessTime(System.String)">
      <summary>Gibt das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. das die Informationen über Zugriffsdatum und -zeitpunkt abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.DateTime" />-Struktur, die auf das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis festgelegt wird. Dieser Wert wird in Ortszeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.GetLastAccessTimeUtc(System.String)">
      <summary>Gibt das Datum und den Zeitpunkt im UTC-Format (Coordinated Universal Time) des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. das die Informationen über Zugriffsdatum und -zeitpunkt abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.DateTime" />-Struktur, die auf das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis festgelegt wird. Der Wert wird in UTC-Zeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.GetLastWriteTime(System.String)">
      <summary>Gibt das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. für das die Informationen über Schreibdatum und -zeitpunkt abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.DateTime" />-Struktur, die auf das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei bzw. das angegebene Verzeichnis festgelegt wird. Dieser Wert wird in Ortszeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.GetLastWriteTimeUtc(System.String)">
      <summary>Gibt das Datum und den Zeitpunkt des letzten Schreibzugriffs auf die angegebenen Datei bzw. das angegebene Verzeichnis im UTC-Format (Coordinated Universal Time) zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für die bzw. für das die Informationen über Schreibdatum und -zeitpunkt abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.DateTime" />-Struktur, die auf das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei bzw. das angegebene Verzeichnis festgelegt wird. Der Wert wird in UTC-Zeit angegeben.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Move(System.String,System.String)">
      <summary>Verschiebt eine angegebene Datei an einen neuen Speicherort und ermöglicht das Angeben eines neuen Dateinamens.</summary>
      <param name="sourceFileName">Der Name der zu verschiebenden Datei. Kann einen absoluten oder relativen Pfad enthalten.</param>
      <param name="destFileName">Der neue Pfad und Name für die Datei.</param>
      <exception cref="T:System.IO.IOException">Die Zieldatei ist bereits vorhanden.  

oder - 
<paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält ungültige Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der in <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> angegebene Pfad ist ungültig (er befindet sich z. B.auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Move(System.String,System.String,System.Boolean)">
      <summary>Verschiebt eine angegebene Datei an einen neuen Speicherort und stellt die Optionen zum Angeben eines neuen Dateinamens und zum Überschreiben der Zieldatei bereit, falls diese bereits vorhanden ist.</summary>
      <param name="sourceFileName">Der Name der zu verschiebenden Datei. Kann einen absoluten oder relativen Pfad enthalten.</param>
      <param name="destFileName">Der neue Pfad und Name für die Datei.</param>
      <param name="overwrite">
        <see langword="true" /> zum Überschreiben der Zieldatei, wenn diese bereits vorhanden ist, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält ungültige Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der in <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> angegebene Pfad ist ungültig (er befindet sich z. B.auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="sourceFileName" /> oder <paramref name="destFileName" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode)">
      <summary>Öffnet einen <see cref="T:System.IO.FileStream" /> für den angegebenen Pfad mit Lese- und Schreibzugriff, der nicht weitergegeben werden kann.</summary>
      <param name="path">Die zu öffnende Datei.</param>
      <param name="mode">Ein <see cref="T:System.IO.FileMode" />-Wert, der angibt, ob eine Datei erstellt wird, wenn sie nicht vorhanden ist, und bestimmt, ob der Inhalt vorhandener Dateien beibehalten oder überschrieben wird.</param>
      <returns>Ein im angegebenen Modus und Pfad geöffneter, nicht freigegebener <see cref="T:System.IO.FileStream" /> mit Lese- und Schreibzugriff.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="mode" /> ist <see cref="F:System.IO.FileMode.Create" /> , und bei der angegebenen Datei handelt es sich um eine versteckte Datei.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> hat einen ungültigen Wert angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Öffnet einen <see cref="T:System.IO.FileStream" /> unter dem angegebenen Pfad mit dem angegebenen Modus und Zugriff, der nicht weitergegeben werden kann.</summary>
      <param name="path">Die zu öffnende Datei.</param>
      <param name="mode">Ein <see cref="T:System.IO.FileMode" />-Wert, der angibt, ob eine Datei erstellt wird, wenn sie nicht vorhanden ist, und bestimmt, ob der Inhalt vorhandener Dateien beibehalten oder überschrieben wird.</param>
      <param name="access">Ein <see cref="T:System.IO.FileAccess" />-Wert, der die Vorgänge angibt, die für die Datei ausgeführt werden können.</param>
      <returns>Ein <see cref="T:System.IO.FileStream" /> ohne Freigabe, der Zugriff im angegebenen Modus mit angegebenem Zugriff auf die angegebene Datei bereitstellt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.  

oder - 
<paramref name="access" /> hat <see langword="Read" /> und <paramref name="mode" /> hat <see langword="Create" />, <see langword="CreateNew" />, <see langword="Truncate" />oder <see langword="Append" />angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben, und <paramref name="access" /> ist nicht <see langword="Read" />.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="mode" /> ist <see cref="F:System.IO.FileMode.Create" /> , und bei der angegebenen Datei handelt es sich um eine versteckte Datei.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> oder <paramref name="access" /> hat einen ungültigen Wert angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Öffnet einen <see cref="T:System.IO.FileStream" /> auf dem angegebenen Pfad, der über den angegebenen Modus mit Lese-, Schreib- oder Lese-/Schreibzugriff und die angegebene Freigabeoption verfügt.</summary>
      <param name="path">Die zu öffnende Datei.</param>
      <param name="mode">Ein <see cref="T:System.IO.FileMode" />-Wert, der angibt, ob eine Datei erstellt wird, wenn sie nicht vorhanden ist, und bestimmt, ob der Inhalt vorhandener Dateien beibehalten oder überschrieben wird.</param>
      <param name="access">Ein <see cref="T:System.IO.FileAccess" />-Wert, der die Vorgänge angibt, die für die Datei ausgeführt werden können.</param>
      <param name="share">Ein <see cref="T:System.IO.FileShare" />-Wert, der die Art des Zugriffs angibt, die andere Threads auf die Datei haben.</param>
      <returns>Ein <see cref="T:System.IO.FileStream" /> auf dem angegebenen Pfad, der über den angegebenen Modus mit Lese-, Schreib- oder Lese-/Schreibzugriff und die angegebene Freigabeoption verfügt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.  

oder - 
<paramref name="access" /> hat <see langword="Read" /> und <paramref name="mode" /> hat <see langword="Create" />, <see langword="CreateNew" />, <see langword="Truncate" />oder <see langword="Append" />angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben, und <paramref name="access" /> ist nicht <see langword="Read" />.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="mode" /> ist <see cref="F:System.IO.FileMode.Create" />, und bei der angegebenen Datei handelt es sich um eine versteckte Datei.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" />, <paramref name="access" /> oder <paramref name="share" /> hat einen ungültigen Wert angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.OpenRead(System.String)">
      <summary>Öffnet eine vorhandene Datei zum Lesen.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <returns>Ein schreibgeschützter <see cref="T:System.IO.FileStream" /> für den angegebenen Pfad.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.IO.File.OpenText(System.String)">
      <summary>Öffnet eine vorhandene UTF-8-codierte Textdatei zum Lesen.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <returns>Ein <see cref="T:System.IO.StreamReader" /> für den angegebenen Pfad.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.OpenWrite(System.String)">
      <summary>Öffnet eine vorhandene Datei oder erstellt eine neue Datei zum Schreiben.</summary>
      <param name="path">Die Datei, die zum Schreiben geöffnet werden soll.</param>
      <returns>Ein nicht freigegebenes <see cref="T:System.IO.FileStream" />-Objekt am angegebenen Pfad mit <see cref="F:System.IO.FileAccess.Write" />-Zugriff.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.  

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei oder ein Verzeichnis angegeben.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.ReadAllBytes(System.String)">
      <summary>Öffnet eine Binärdatei, liest den Inhalt der Datei in ein Bytearray ein und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <returns>Ein Bytearray mit dem Inhalt der Datei.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.ReadAllBytesAsync(System.String,System.Threading.CancellationToken)">
      <summary>Öffnet eine Binärdatei asynchron, liest den Inhalt der Datei in ein Bytearray ein und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der das Bytearray umschließt, das den gesamten Inhalt der Datei enthält.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLines(System.String)">
      <summary>Öffnet eine Textdatei, liest alle Zeilen der Datei und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <returns>Ein Zeichenfolgenarray, das alle Zeilen der Datei enthält.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.ReadAllLines(System.String,System.Text.Encoding)">
      <summary>Öffnet eine Datei, liest alle Zeilen der Datei mit der angegebenen Codierung und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <param name="encoding">Die auf den Inhalt der Datei angewendete Codierung.</param>
      <returns>Ein Zeichenfolgenarray, das alle Zeilen der Datei enthält.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Öffnet asynchron eine Textdatei, liest alle Zeilen der Datei mit der angegebenen Codierung und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <param name="encoding">Die auf den Inhalt der Datei angewendete Codierung.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der das Zeichenfolgenarray umschließt, das alle Zeilen der Datei enthält.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLinesAsync(System.String,System.Threading.CancellationToken)">
      <summary>Öffnet asynchron eine Textdatei, liest alle Zeilen der Datei und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der das Zeichenfolgenarray umschließt, das alle Zeilen der Datei enthält.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllText(System.String)">
      <summary>Öffnet eine Textdatei, liest den gesamten Text der Datei und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <returns>Eine Zeichenfolge, die den gesamten Text der Datei enthält.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Öffnet eine Datei, liest den gesamten Text der Datei mit der angegebenen Codierung und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <param name="encoding">Die auf den Inhalt der Datei angewendete Codierung.</param>
      <returns>Eine Zeichenfolge, die den gesamten Text der Datei enthält.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Öffnet asynchron eine Textdatei, liest den gesamten Text der Datei mit der angegebenen Codierung und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <param name="encoding">Die auf den Inhalt der Datei angewendete Codierung.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der die Zeichenfolge umschließt, die den gesamten Text der Datei enthält.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllTextAsync(System.String,System.Threading.CancellationToken)">
      <summary>Öffnet asynchron eine Textdatei, liest den gesamten Text der Datei und schließt dann die Datei.</summary>
      <param name="path">Die Datei, die zum Lesen geöffnet werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der die Zeichenfolge umschließt, die den gesamten Text der Datei enthält.</returns>
    </member>
    <member name="M:System.IO.File.ReadLines(System.String)">
      <summary>Liest die Zeilen einer Datei.</summary>
      <param name="path">Die zu lesende Datei.</param>
      <returns>Alle Zeilen der Datei oder die Zeilen, die das Ergebnis einer Abfrage sind.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> überschreitet die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> gibt eine schreibgeschützte Datei an.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> ist ein Verzeichnis.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.ReadLines(System.String,System.Text.Encoding)">
      <summary>Liest die Zeilen einer Datei mit einer angegebenen Codierung.</summary>
      <param name="path">Die zu lesende Datei.</param>
      <param name="encoding">Die auf den Inhalt der Datei angewendete Codierung.</param>
      <returns>Alle Zeilen der Datei oder die Zeilen, die das Ergebnis einer Abfrage sind.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch <paramref name="path" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> überschreitet die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> gibt eine schreibgeschützte Datei an.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> ist ein Verzeichnis.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.Replace(System.String,System.String,System.String)">
      <summary>Ersetzt den Inhalt einer angegebenen Datei mit dem Inhalt einer anderen Datei, löscht die ursprüngliche Datei und erstellt eine Sicherung der ersetzten Datei.</summary>
      <param name="sourceFileName">Der Name einer Datei, die die von <paramref name="destinationFileName" /> angegebene Datei ersetzt.</param>
      <param name="destinationFileName">Der Name der Datei, die ersetzt wird.</param>
      <param name="destinationBackupFileName">Der Name der Sicherungsdatei.</param>
      <exception cref="T:System.ArgumentException">Der durch den <paramref name="destinationFileName" />-Parameter beschriebene Pfad hat ein ungültiges Format.  

oder - 
Der durch den <paramref name="destinationBackupFileName" />-Parameter beschriebene Pfad hat ein ungültiges Format.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationFileName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DriveNotFoundException">Es wurde ein ungültiges Laufwerk angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei konnte nicht gefunden werden.  

oder - 
Die durch den <paramref name="destinationBackupFileName" />-Parameter beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.  

oder - 
Die Parameter <paramref name="sourceFileName" /> und <paramref name="destinationFileName" /> geben dieselbe Datei an.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem ist Windows 98 Second Edition oder früher, und das Dateisystem ist nicht NTFS.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der <paramref name="sourceFileName" />- oder <paramref name="destinationFileName" />-Parameter gibt eine schreibgeschützte Datei an.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
Die Quell- oder Zielparameter geben ein Verzeichnis anstelle einer Datei an.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)">
      <summary>Ersetzt den Inhalt einer angegebenen Datei mit dem Inhalt einer anderen Datei, löscht die ursprüngliche Datei, erstellt eine Sicherung der ersetzten Datei und ignoriert optional Fehler beim Merge.</summary>
      <param name="sourceFileName">Der Name einer Datei, die die von <paramref name="destinationFileName" /> angegebene Datei ersetzt.</param>
      <param name="destinationFileName">Der Name der Datei, die ersetzt wird.</param>
      <param name="destinationBackupFileName">Der Name der Sicherungsdatei.</param>
      <param name="ignoreMetadataErrors">
        <see langword="true" />, um Fehler beim Zusammenführen der ersetzten Datei und der Ersetzungsdatei zu ignorieren (z. B. Attribute und Zugriffssteuerungslisten), andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Der durch den <paramref name="destinationFileName" />-Parameter beschriebene Pfad hat ein ungültiges Format.  

oder - 
Der durch den <paramref name="destinationBackupFileName" />-Parameter beschriebene Pfad hat ein ungültiges Format.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationFileName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DriveNotFoundException">Es wurde ein ungültiges Laufwerk angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei konnte nicht gefunden werden.  

oder - 
Die durch den <paramref name="destinationBackupFileName" />-Parameter beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.  

oder - 
Die Parameter <paramref name="sourceFileName" /> und <paramref name="destinationFileName" /> geben dieselbe Datei an.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem ist Windows 98 Second Edition oder früher, und das Dateisystem ist nicht NTFS.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der <paramref name="sourceFileName" />- oder <paramref name="destinationFileName" />-Parameter gibt eine schreibgeschützte Datei an.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
Die Quell- oder Zielparameter geben ein Verzeichnis anstelle einer Datei an.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)">
      <summary>Legt die angegebenen <see cref="T:System.IO.FileAttributes" /> der Datei im angegebenen Pfad fest.</summary>
      <param name="path">Der Pfad zur Datei.</param>
      <param name="fileAttributes">Eine bitweise Kombination der Enumerationswerte.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist leer, enthält nur Leerzeichen, enthält ungültige Zeichen, oder das Dateiattribut ist ungültig.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.SetCreationTime(System.String,System.DateTime)">
      <summary>Legt das Datum und die Uhrzeit fest, zu der die Datei erstellt wurde.</summary>
      <param name="path">Die Datei, für die die Informationen über Erstellungsdatum und -zeitpunkt festgelegt werden sollen.</param>
      <param name="creationTime">Eine <see cref="T:System.DateTime" />, die den festzulegenden Wert für Erstellungsdatum und -zeitpunkt von <paramref name="path" /> enthält. Dieser Wert wird in Ortszeit angegeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">Beim Ausführen des Vorgangs ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> gibt einen Wert außerhalb des Datums- und/oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)">
      <summary>Legt das Datum und die Uhrzeit der Erstellung der Datei im UTC-Format (Coordinated Universal Time) fest.</summary>
      <param name="path">Die Datei, für die die Informationen über Erstellungsdatum und -zeitpunkt festgelegt werden sollen.</param>
      <param name="creationTimeUtc">Eine <see cref="T:System.DateTime" />, die den festzulegenden Wert für Erstellungsdatum und -zeitpunkt von <paramref name="path" /> enthält. Der Wert wird in UTC-Zeit angegeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">Beim Ausführen des Vorgangs ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> gibt einen Wert außerhalb des Datums- und/oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
    </member>
    <member name="M:System.IO.File.SetLastAccessTime(System.String,System.DateTime)">
      <summary>Legt das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei fest.</summary>
      <param name="path">Die Datei, für die die Informationen über Zugriffsdatum und -zeitpunkt festgelegt werden sollen.</param>
      <param name="lastAccessTime">Eine <see cref="T:System.DateTime" />, die den festzulegenden Wert für Datum und Zeitpunkt des letzten Zugriffs auf <paramref name="path" /> enthält. Dieser Wert wird in Ortszeit angegeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTime" /> gibt einen Wert außerhalb des Datums- oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
    </member>
    <member name="M:System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <summary>Legt das Datum und den Zeitpunkt des letzten Zugriffs auf die angegebene Datei im UTC-Format (Coordinated Universal Time) fest.</summary>
      <param name="path">Die Datei, für die die Informationen über Zugriffsdatum und -zeitpunkt festgelegt werden sollen.</param>
      <param name="lastAccessTimeUtc">Eine <see cref="T:System.DateTime" />, die den festzulegenden Wert für Datum und Zeitpunkt des letzten Zugriffs auf <paramref name="path" /> enthält. Der Wert wird in UTC-Zeit angegeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTimeUtc" /> gibt einen Wert außerhalb des Datums- oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
    </member>
    <member name="M:System.IO.File.SetLastWriteTime(System.String,System.DateTime)">
      <summary>Legt das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei fest.</summary>
      <param name="path">Die Datei, für die die Informationen über Datum und Uhrzeit festgelegt werden sollen.</param>
      <param name="lastWriteTime">Eine <see cref="T:System.DateTime" />, die den festzulegenden Wert für Datum und Uhrzeit des letzten Schreibvorgangs von <paramref name="path" /> enthält. Dieser Wert wird in Ortszeit angegeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTime" /> gibt einen Wert außerhalb des Datums- oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
    </member>
    <member name="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <summary>Legt das Datum und den Zeitpunkt des letzten Schreibzugriffs auf die angegebene Datei im UTC-Format (Coordinated Universal Time) fest.</summary>
      <param name="path">Die Datei, für die die Informationen über Datum und Uhrzeit festgelegt werden sollen.</param>
      <param name="lastWriteTimeUtc">Eine <see cref="T:System.DateTime" />, die den festzulegenden Wert für Datum und Uhrzeit des letzten Schreibvorgangs von <paramref name="path" /> enthält. Der Wert wird in UTC-Zeit angegeben.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Der angegebene Pfad wurde nicht gefunden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTimeUtc" /> gibt einen Wert außerhalb des Datums- oder Zeitbereichs an, der für diesen Vorgang zulässig ist.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])">
      <summary>Erstellt eine neue Datei, schreibt das angegebene Bytearray in die Datei und schließt die Datei dann. Ist die Zieldatei bereits vorhanden, wird sie überschrieben.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="bytes">Die Bytes, die in die Datei geschrieben werden sollen.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist gleich <see langword="null" />, oder das Bytearray ist leer.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)">
      <summary>Erstellt asynchron eine neue Datei, schreibt das angegebene Bytearray in die Datei und schließt die Datei dann. Ist die Zieldatei bereits vorhanden, wird sie überschrieben.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="bytes">Die Bytes, die in die Datei geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Erstellt eine neue Datei, schreibt eine Auflistung von Zeichenfolgen in die Datei und schließt dann die Datei.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Die Zeilen, die in die Datei geschrieben werden sollen.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">Entweder <paramref name="path" /> oder <paramref name="contents" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> überschreitet die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> ist ein Verzeichnis.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <summary>Erstellt eine neue Datei unter Verwendung der angegebenen Codierung, schreibt eine Auflistung von Zeichenfolgen in die Datei und schließt dann die Datei.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Die Zeilen, die in die Datei geschrieben werden sollen.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
      <exception cref="T:System.ArgumentNullException">Entweder <paramref name="path" />, <paramref name="contents" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> überschreitet die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> ist ein Verzeichnis.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.String[])">
      <summary>Erstellt eine neue Datei, schreibt das angegebene Zeichenfolgenarray in die Datei und schließt die Datei dann.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Das Zeichenfolgenarray, das in die Datei geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Entweder <paramref name="path" /> oder <paramref name="contents" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
      <summary>Erstellt eine neue Datei, schreibt das angegebene Zeichenfolgenarray unter Verwendung der angegebenen Codierung in die Datei und schließt dann die Datei.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Das Zeichenfolgenarray, das in die Datei geschrieben werden soll.</param>
      <param name="encoding">Ein <see cref="T:System.Text.Encoding" />-Objekt, das die Zeichencodierung darstellt, die auf das Zeichenfolgenarray angewendet wird.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Entweder <paramref name="path" /> oder <paramref name="contents" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Erstellt asynchron eine neue Datei, schreibt die angegebenen Zeilen unter Verwendung der angegebenen Codierung in die Datei und schließt dann die Datei.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Die Zeilen, die in die Datei geschrieben werden sollen.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>Erstellt asynchron eine neue Datei, schreibt die angegebenen Zeilen in die Datei und schließt die Datei dann.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Die Zeilen, die in die Datei geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllText(System.String,System.String)">
      <summary>Erstellt eine neue Datei, schreibt die angegebene Zeichenfolge in die Datei und schließt die Datei dann. Ist die Zieldatei bereits vorhanden, wird sie überschrieben.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Die Zeichenfolge, die in die Datei geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)">
      <summary>Erstellt eine neue Datei, schreibt die angegebene Zeichenfolge mit der angegebenen Codierung in die Datei und schließt die Datei dann. Ist die Zieldatei bereits vorhanden, wird sie überschrieben.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Die Zeichenfolge, die in die Datei geschrieben werden soll.</param>
      <param name="encoding">Die auf die Zeichenfolge anzuwendende Codierung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> hat eine schreibgeschützte Datei angegeben.

oder - 
<paramref name="path" /> hat eine schreibgeschützte Datei angegeben.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
<paramref name="path" /> hat ein Verzeichnis angegeben.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Erstellt asynchron eine neue Datei, schreibt die angegebene Zeichenfolge unter Verwendung der angegebenen Codierung in die Datei und schließt dann die Datei. Ist die Zieldatei bereits vorhanden, wird sie überschrieben.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Die Zeichenfolge, die in die Datei geschrieben werden soll.</param>
      <param name="encoding">Die auf die Zeichenfolge anzuwendende Codierung.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>Erstellt asynchron eine neue Datei, schreibt die angegebene Zeichenfolge in die Datei und schließt die Datei dann. Ist die Zieldatei bereits vorhanden, wird sie überschrieben.</summary>
      <param name="path">Die Datei, in die geschrieben werden soll.</param>
      <param name="contents">Die Zeichenfolge, die in die Datei geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="T:System.IO.FileInfo">
      <summary>Stellt Eigenschaften und Instanzmethoden zum Erstellen, Kopieren, Löschen, Verschieben und Öffnen von Dateien bereit und unterstützt das Erstellen von <see cref="T:System.IO.FileStream" />-Objekten. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.IO.FileInfo.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileInfo" />-Klasse, die als Wrapper für einen Dateipfad fungiert.</summary>
      <param name="fileName">Der vollqualifizierte Name der neuen Datei oder der relative Dateiname. Der Pfad darf nicht mit dem Verzeichnistrennzeichen enden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">Der Dateiname ist leer, enthält nur Leerzeichen oder enthält ungültige Zeichen.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Zugriff auf <paramref name="fileName" /> wurde verweigert.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="fileName" /> enthält einen Doppelpunkt (:) innerhalb der Zeichenfolge.</exception>
    </member>
    <member name="M:System.IO.FileInfo.AppendText">
      <summary>Erstellt einen <see cref="T:System.IO.StreamWriter" />, der der Datei Text hinzufügt, die von dieser Instanz von <see cref="T:System.IO.FileInfo" /> dargestellt wird.</summary>
      <returns>Ein neuer <see langword="StreamWriter" />.</returns>
    </member>
    <member name="M:System.IO.FileInfo.CopyTo(System.String)">
      <summary>Kopiert eine vorhandene Datei in eine neue Datei, ohne das Überschreiben einer vorhandenen Datei zuzulassen.</summary>
      <param name="destFileName">Der Name der neuen Datei, in die kopiert werden soll.</param>
      <returns>Eine neue Datei mit einem vollqualifizierten Pfad.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> ist leer, enthält nur Leerzeichen oder ungültige Zeichen.</exception>
      <exception cref="T:System.IO.IOException">Ein Fehler tritt auf, oder die Zieldatei ist bereits vorhanden.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ein Verzeichnispfad wird an ein anderes Laufwerk übergeben, oder die Datei wird auf ein anderes Laufwerk verschoben.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das in <paramref name="destFileName" /> angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> enthält einen Doppelpunkt (:) in der Zeichenfolge, gibt aber kein Volume an.</exception>
    </member>
    <member name="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
      <summary>Kopiert eine vorhandene Datei in eine neue Datei und lässt das Überschreiben einer vorhandenen Datei zu.</summary>
      <param name="destFileName">Der Name der neuen Datei, in die kopiert werden soll.</param>
      <param name="overwrite">
        <see langword="true" />, um das Überschreiben einer vorhandenen Datei zuzulassen, andernfalls <see langword="false" />.</param>
      <returns>Eine neue Datei oder eine Überschreibung einer vorhandenen Datei, wenn <paramref name="overwrite" /><see langword="true" /> ist. Wenn die Datei vorhanden und <paramref name="overwrite" /><see langword="false" /> ist, wird eine <see cref="T:System.IO.IOException" /> ausgelöst.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> ist leer, enthält nur Leerzeichen oder ungültige Zeichen.</exception>
      <exception cref="T:System.IO.IOException">Ein Fehler tritt auf, oder die Zieldatei ist bereits vorhanden, und <paramref name="overwrite" /> ist <see langword="false" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das in <paramref name="destFileName" /> angegebene Verzeichnis ist nicht vorhanden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Ein Verzeichnispfad wird an ein anderes Laufwerk übergeben, oder die Datei wird auf ein anderes Laufwerk verschoben.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> enthält einen Doppelpunkt (:) innerhalb der Zeichenfolge.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Create">
      <summary>Erstellt eine Datei.</summary>
      <returns>Eine neue Datei.</returns>
    </member>
    <member name="M:System.IO.FileInfo.CreateText">
      <summary>Erstellt einen <see cref="T:System.IO.StreamWriter" />, der eine neue Textdatei erstellt und in diese schreibt.</summary>
      <returns>Ein neuer <see langword="StreamWriter" />.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der Dateiname ist ein Verzeichnis.</exception>
      <exception cref="T:System.IO.IOException">Der Datenträger ist schreibgeschützt.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Decrypt">
      <summary>Entschlüsselt eine Datei, die vom aktuellen Konto mit der <see cref="M:System.IO.FileInfo.Encrypt" />-Methode verschlüsselt wurde.</summary>
      <exception cref="T:System.IO.DriveNotFoundException">Es wurde ein ungültiges Laufwerk angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.NotSupportedException">Das Dateisystem ist nicht NTFS.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows NT oder höher.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei ist schreibgeschützt.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Delete">
      <summary>Löscht eine Datei unwiderruflich.</summary>
      <exception cref="T:System.IO.IOException">Die Zieldatei ist geöffnet, oder es handelt sich um eine Speicherabbilddatei auf einem Computer unter Microsoft Windows NT.  

oder - 
Es liegt ein geöffnetes Handle für die Datei vor, und das Betriebssystem ist Windows XP oder früher. Dieses geöffnete Handle kann vom Auflisten von Verzeichnissen und Dateien stammen. Weitere Informationen finden Sie unter Vorgehensweise: Auflisten von Verzeichnissen und Dateien.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Pfad ist ein Verzeichnis.</exception>
    </member>
    <member name="P:System.IO.FileInfo.Directory">
      <summary>Ruft eine Instanz des übergeordneten Verzeichnisses ab.</summary>
      <returns>Ein <see cref="T:System.IO.DirectoryInfo" />-Objekt, das das übergeordnete Verzeichnis dieser Datei darstellt.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="P:System.IO.FileInfo.DirectoryName">
      <summary>Ruft eine Zeichenfolge ab, die den vollständigen Pfad des Verzeichnisses darstellt.</summary>
      <returns>Eine Zeichenfolge, die den vollständigen Pfad des Verzeichnisses darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> wurde für den Namen des Verzeichnisses übergeben.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der vollqualifizierte Pfadname übersteigt die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Encrypt">
      <summary>Verschlüsselt eine Datei, sodass sie nur mit dem Konto, mit dem die Datei verschlüsselt wurde, entschlüsselt werden kann.</summary>
      <exception cref="T:System.IO.DriveNotFoundException">Es wurde ein ungültiges Laufwerk angegeben.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.NotSupportedException">Das Dateisystem ist nicht NTFS.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows NT oder höher.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei ist schreibgeschützt.  

oder - 
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder - 
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="P:System.IO.FileInfo.Exists">
      <summary>Ruft einen Wert ab, der angibt, ob eine Datei vorhanden ist.</summary>
      <returns>
        <see langword="true" />, wenn die Datei vorhanden ist; <see langword="false" />, wenn die Datei nicht vorhanden ist oder es sich um ein Verzeichnis handelt.</returns>
    </member>
    <member name="P:System.IO.FileInfo.IsReadOnly">
      <summary>Ruft einen Wert ab, der bestimmt, ob die aktuelle Datei schreibgeschützt ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die aktuelle Datei schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.  

oder -  

 Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">Der Benutzer hat keine Schreibberechtigung, aber versucht, diese Eigenschaft auf <see langword="false" /> festzulegen.</exception>
    </member>
    <member name="P:System.IO.FileInfo.Length">
      <summary>Ruft die Größe der aktuellen Datei in Byte ab.</summary>
      <returns>Die Größe der aktuellen Datei in Bytes.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> kann den Status der Datei oder des Verzeichnisses nicht aktualisieren.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei ist nicht vorhanden.  

oder - 
Die <see langword="Length" />-Eigenschaft wird für ein Verzeichnis aufgerufen.</exception>
    </member>
    <member name="M:System.IO.FileInfo.MoveTo(System.String)">
      <summary>Verschiebt eine angegebene Datei an einen neuen Speicherort und ermöglicht das Angeben eines neuen Dateinamens.</summary>
      <param name="destFileName">Der Pfad, in den die Datei verschoben werden soll. Dadurch kann ein anderer Dateiname angegeben werden.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf, z. B. die Zieldatei ist bereits vorhanden oder das Zielgerät ist nicht bereit.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> ist leer, enthält nur Leerzeichen oder ungültige Zeichen.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="destFileName" /> ist schreibgeschützt oder ein Verzeichnis.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei wird nicht gefunden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> enthält einen Doppelpunkt (:) innerhalb der Zeichenfolge.</exception>
    </member>
    <member name="M:System.IO.FileInfo.MoveTo(System.String,System.Boolean)">
      <summary>Verschiebt eine angegebene Datei an einen neuen Speicherort und stellt die Optionen zum Angeben eines neuen Dateinamens und zum Überschreiben der Zieldatei bereit, falls diese bereits vorhanden ist.</summary>
      <param name="destFileName">Der Pfad, in den die Datei verschoben werden soll. Dadurch kann ein anderer Dateiname angegeben werden.</param>
      <param name="overwrite">
        <see langword="true" /> zum Überschreiben der Zieldatei, wenn diese bereits vorhanden ist; sonst <see langword="false" />.</param>
      <exception cref="T:System.IO.IOException">Es ist ein E/A-Fehler aufgetreten (z. B. ist das Zielgerät noch nicht bereit).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> ist leer, enthält nur Leerzeichen oder ungültige Zeichen.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="destFileName" /> ist schreibgeschützt oder ein Verzeichnis.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei wird nicht gefunden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> enthält einen Doppelpunkt (:) innerhalb der Zeichenfolge.</exception>
    </member>
    <member name="P:System.IO.FileInfo.Name">
      <summary>Ruft den Namen der Datei ab.</summary>
      <returns>Der Name der Datei.</returns>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode)">
      <summary>Öffnet eine Datei im angegebenen Modus.</summary>
      <param name="mode">Eine <see cref="T:System.IO.FileMode" />-Konstante, die den Modus angibt, in dem die Datei geöffnet werden soll (z. B. <see langword="Open" /> oder <see langword="Append" />).</param>
      <returns>Eine im angegebenen Modus geöffnete Datei mit Lese-/Schreibzugriff und ohne Freigabe.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei wird nicht gefunden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Die Datei ist schreibgeschützt oder ein Verzeichnis.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.IOException">Die Datei ist bereits geöffnet.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Öffnet eine Datei im angegebenen Modus mit Lese-, Schreib- oder Lese-/Schreibzugriff.</summary>
      <param name="mode">Eine <see cref="T:System.IO.FileMode" />-Konstante, die den Modus angibt, in dem die Datei geöffnet werden soll (z. B. <see langword="Open" /> oder <see langword="Append" />).</param>
      <param name="access">Eine <see cref="T:System.IO.FileAccess" />-Konstante, die angibt, ob die Datei mit <see langword="Read" />-Zugriff, <see langword="Write" />-Zugriff oder <see langword="ReadWrite" />-Zugriff geöffnet werden soll.</param>
      <returns>Ein im angegebenen Modus und mit dem angegebenem Zugriff geöffnetes <see cref="T:System.IO.FileStream" />-Objekt ohne Freigabe.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei wird nicht gefunden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> ist schreibgeschützt oder ein Verzeichnis.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.IOException">Die Datei ist bereits geöffnet.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist leer oder enthält nur Leerräume.</exception>
      <exception cref="T:System.ArgumentNullException">Mindestens ein Argument ist NULL.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Öffnet eine Datei im angegebenen Modus mit Lese-, Schreib- oder Lese-/Schreibzugriff und der angegebenen Freigabeoption.</summary>
      <param name="mode">Eine <see cref="T:System.IO.FileMode" />-Konstante, die den Modus angibt, in dem die Datei geöffnet werden soll (z. B. <see langword="Open" /> oder <see langword="Append" />).</param>
      <param name="access">Eine <see cref="T:System.IO.FileAccess" /> -Konstante, die angibt, ob die Datei mit <see langword="Read" />-Zugriff, <see langword="Write" />-Zugriff oder <see langword="ReadWrite" /> -Zugriff geöffnet werden soll.</param>
      <param name="share">Eine <see cref="T:System.IO.FileShare" />-Konstante, die die Art des Zugriffs angibt, die andere <see langword="FileStream" />-Objekte auf diese Datei haben.</param>
      <returns>Ein mit dem angegebenen Modus, dem angegebenen Zugriff und den angegebenen Freigabeoptionen geöffnetes <see cref="T:System.IO.FileStream" />-Objekt.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei wird nicht gefunden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> ist schreibgeschützt oder ein Verzeichnis.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.IOException">Die Datei ist bereits geöffnet.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist leer oder enthält nur Leerräume.</exception>
      <exception cref="T:System.ArgumentNullException">Mindestens ein Argument ist NULL.</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenRead">
      <summary>Erstellt einen schreibgeschützten <see cref="T:System.IO.FileStream" />.</summary>
      <returns>Ein neues schreibgeschütztes <see cref="T:System.IO.FileStream" />-Objekt.</returns>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> ist schreibgeschützt oder ein Verzeichnis.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.IOException">Die Datei ist bereits geöffnet.</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenText">
      <summary>Erstellt einen <see cref="T:System.IO.StreamReader" /> mit UTF8-Codierung, der aus einer vorhandenen Textdatei liest.</summary>
      <returns>Ein neuer <see langword="StreamReader" /> mit UTF8-Codierung.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei wird nicht gefunden.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> ist schreibgeschützt oder ein Verzeichnis.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
    </member>
    <member name="M:System.IO.FileInfo.OpenWrite">
      <summary>Erstellt einen lesegeschützten <see cref="T:System.IO.FileStream" />.</summary>
      <returns>Ein lesegeschütztes nicht freigegebenes <see cref="T:System.IO.FileStream" />-Objekt für eine neue oder existierende Datei.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Der beim Erstellen einer Instanz des <see cref="T:System.IO.FileInfo" />-Objekts angegebene Pfad ist schreibgeschützt oder entspricht einem Verzeichnis.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der beim Erstellen einer Instanz des <see cref="T:System.IO.FileInfo" />-Objekts angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Replace(System.String,System.String)">
      <summary>Ersetzt den Inhalt einer angegebenen Datei durch die vom aktuellen <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei, löscht die ursprüngliche Datei und erstellt eine Sicherungskopie der ersetzten Datei.</summary>
      <param name="destinationFileName">Der Name einer Datei, die durch die aktuelle Datei ersetzt werden soll.</param>
      <param name="destinationBackupFileName">Der Name einer Datei, mit der eine Sicherungskopie der mit dem <paramref name="destFileName" />-Parameter beschriebenen Datei erstellt werden soll.</param>
      <returns>Ein <see cref="T:System.IO.FileInfo" />-Objekt, das Informationen zu der mit dem <paramref name="destFileName" />-Parameter beschriebenen Datei kapselt.</returns>
      <exception cref="T:System.ArgumentException">Der durch den <paramref name="destFileName" />-Parameter beschriebene Pfad hat ein ungültiges Format.  

oder - 
Der durch den <paramref name="destBackupFileName" />-Parameter beschriebene Pfad hat ein ungültiges Format.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destFileName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei konnte nicht gefunden werden.  

oder - 
Die durch den <paramref name="destinationFileName" />-Parameter beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows NT oder höher.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
      <summary>Ersetzt den Inhalt einer angegebenen Datei durch die vom aktuellen <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei, löscht die ursprüngliche Datei und erstellt eine Sicherungskopie der ersetzten Datei.  Gibt auch an, ob Mergefehler ignoriert werden sollen.</summary>
      <param name="destinationFileName">Der Name einer Datei, die durch die aktuelle Datei ersetzt werden soll.</param>
      <param name="destinationBackupFileName">Der Name einer Datei, mit der eine Sicherungskopie der mit dem <paramref name="destFileName" />-Parameter beschriebenen Datei erstellt werden soll.</param>
      <param name="ignoreMetadataErrors">
        <see langword="true" />, um Fehler beim Zusammenführen der ersetzten Datei und der Ersetzungsdatei zu ignorieren (z. B. Zugriffssteuerungslisten), andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.IO.FileInfo" />-Objekt, das Informationen zu der mit dem <paramref name="destFileName" />-Parameter beschriebenen Datei kapselt.</returns>
      <exception cref="T:System.ArgumentException">Der durch den <paramref name="destFileName" />-Parameter beschriebene Pfad hat ein ungültiges Format.  

oder - 
Der durch den <paramref name="destBackupFileName" />-Parameter beschriebene Pfad hat ein ungültiges Format.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destFileName" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch das aktuelle <see cref="T:System.IO.FileInfo" />-Objekt beschriebene Datei konnte nicht gefunden werden.  

oder - 
Die durch den <paramref name="destinationFileName" />-Parameter beschriebene Datei konnte nicht gefunden werden.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows NT oder höher.</exception>
    </member>
    <member name="M:System.IO.FileInfo.ToString">
      <summary>Gibt den Pfad als Zeichenfolge zurück. Verwenden Sie die <see cref="P:System.IO.FileInfo.Name" />-Eigenschaft für den vollständigen Pfad.</summary>
      <returns>Eine Zeichenfolge, die den Pfad darstellt.</returns>
    </member>
    <member name="T:System.IO.FileSystemInfo">
      <summary>Stellt die Basisklasse sowohl für <see cref="T:System.IO.FileInfo" />-Objekte als auch für <see cref="T:System.IO.DirectoryInfo" />-Objekte bereit.</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileSystemInfo" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileSystemInfo" />-Klasse mit serialisierten Daten.</summary>
      <param name="info">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Kontextinformationen über die Quelle oder das Ziel enthält.</param>
      <exception cref="T:System.ArgumentNullException">Die angegebene <see cref="T:System.Runtime.Serialization.SerializationInfo" /> ist NULL.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Attributes">
      <summary>Ruft die Attribute für die aktuelle Datei oder das aktuelle Verzeichnis ab oder legt diese fest.</summary>
      <returns>
        <see cref="T:System.IO.FileAttributes" /> der aktuellen <see cref="T:System.IO.FileSystemInfo" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Die angegebene Datei ist nicht vorhanden. Wird nur ausgelöst, wenn der Eigenschaftswert festgelegt wird.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig. Er befindet sich z.B. auf einem nicht zugeordneten Laufwerk. Wird nur ausgelöst, wenn der Eigenschaftswert festgelegt wird.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.ArgumentException">Der Aufrufer versucht, ein ungültiges Dateiattribut festzulegen.  

oder -  

 Der Benutzer versucht, einen Attributwert festzulegen, verfügt jedoch nicht über Schreibberechtigungen.</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> kann die Daten nicht initialisieren.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.CreationTime">
      <summary>Ruft den Erstellungszeitpunkt der aktuellen Datei oder des aktuellen Verzeichnisses ab oder legt diesen fest.</summary>
      <returns>Das Erstellungsdatum und die Erstellungszeit des aktuellen <see cref="T:System.IO.FileSystemInfo" />-Objekts.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> kann die Daten nicht initialisieren.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig. Zum Beispiel befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Aufrufer versucht, eine ungültige Erstellungszeit festzulegen.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.CreationTimeUtc">
      <summary>Ruft die Erstellungszeit der aktuellen Datei oder des aktuellen Verzeichnisses im UTC-Format (Coordinated Universal Time) ab oder legt diese fest.</summary>
      <returns>Das Erstellungsdatum und die Erstellungszeit (im UTC-Format) des aktuellen <see cref="T:System.IO.FileSystemInfo" />-Objekts.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> kann die Daten nicht initialisieren.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig. Zum Beispiel befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Aufrufer versucht, eine ungültige Zugriffszeit festzulegen.</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.Delete">
      <summary>Löscht eine Datei oder ein Verzeichnis.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig. Zum Beispiel befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.IOException">Für die Datei oder das Verzeichnis ist ein geöffnetes Handle vorhanden, und das Betriebssystem ist Windows XP oder früher. Dieses geöffnete Handle kann vom Auflisten von Verzeichnissen und Dateien stammen. Weitere Informationen finden Sie unter Vorgehensweise: Auflisten von Verzeichnissen und Dateien.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Exists">
      <summary>Ruft einen Wert ab, der angibt, ob die Datei oder das Verzeichnis vorhanden ist.</summary>
      <returns>
        <see langword="true" />, wenn die Datei oder das Verzeichnis vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.Extension">
      <summary>Ruft die Zeichenfolge ab, die den Erweiterungsteil der Datei darstellt.</summary>
      <returns>Eine Zeichenfolge, die die <see cref="T:System.IO.FileSystemInfo" />-Erweiterung enthält.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.FullName">
      <summary>Ruft den vollständigen Pfad des Verzeichnisses oder der Datei ab.</summary>
      <returns>Eine Zeichenfolge mit dem vollständigen Pfad.</returns>
      <exception cref="T:System.IO.PathTooLongException">Der vollqualifizierte Pfad und Dateiname übersteigen die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="F:System.IO.FileSystemInfo.FullPath">
      <summary>Stellt den vollqualifizierten Pfad des Verzeichnisses oder der Datei dar.</summary>
      <exception cref="T:System.IO.PathTooLongException">Der vollqualifizierte Pfad übersteigt die vom System definierte maximale Länge.</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Legt das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit dem Dateinamen und zusätzlichen Informationen zur Ausnahme fest.</summary>
      <param name="info">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Kontextinformationen über die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastAccessTime">
      <summary>Ruft den Zeitpunkt des letzten Zugriffs auf die aktuelle Datei oder das aktuelle Verzeichnis ab oder legt diesen fest.</summary>
      <returns>Der Zeitpunkt des letzten Zugriffs auf die aktuelle Datei oder das aktuelle Verzeichnis.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> kann die Daten nicht initialisieren.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Aufrufer versucht, eine ungültige Zugriffszeit festzulegen.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastAccessTimeUtc">
      <summary>Ruft den Zeitpunkt des letzten Zugriffs auf die aktuelle Datei bzw. das aktuelle Verzeichnis im UTC-Format (Coordinated Universal Time) ab oder legt diesen fest.</summary>
      <returns>Die UTC-Zeit des letzten Zugriffs auf die aktuelle Datei oder das aktuelle Verzeichnis.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> kann die Daten nicht initialisieren.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Aufrufer versucht, eine ungültige Zugriffszeit festzulegen.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastWriteTime">
      <summary>Ruft den Zeitpunkt des letzten Schreibzugriffs auf die aktuelle Datei oder das aktuelle Verzeichnis ab oder legt diesen fest.</summary>
      <returns>Der Zeitpunkt des letzten Schreibzugriffs auf die Datei.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> kann die Daten nicht initialisieren.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Aufrufer versucht, eine ungültige Zeit für den Schreibvorgang festzulegen.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastWriteTimeUtc">
      <summary>Ruft den Zeitpunkt des letzten Schreibens in die aktuelle Datei oder das aktuelle Verzeichnis im UTC-Format (Coordinated Universal Time) ab oder legt diesen fest.</summary>
      <returns>Die UTC-Zeit des letzten Schreibzugriffs auf die aktuelle Datei.</returns>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> kann die Daten nicht initialisieren.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Windows NT oder höher.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Aufrufer versucht, eine ungültige Zeit für den Schreibvorgang festzulegen.</exception>
    </member>
    <member name="P:System.IO.FileSystemInfo.Name">
      <summary>Ruft bei Dateien den Namen der Datei ab. Ruft bei Verzeichnissen den Namen des letzten Verzeichnisses in der Hierarchie ab, sofern eine Hierarchie vorhanden ist. Andernfalls ruft die <see langword="Name" />-Eigenschaft den Namen des Verzeichnisses ab.</summary>
      <returns>Eine Zeichenfolge, die den Namen des übergeordneten Verzeichnisses, den Namen des letzten Verzeichnisses in der Hierarchie oder den Namen einer Datei, einschließlich der Dateinamenerweiterung, darstellt.</returns>
    </member>
    <member name="F:System.IO.FileSystemInfo.OriginalPath">
      <summary>Der ursprünglich vom Benutzer angegebene Pfad, relativ oder absolut.</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.Refresh">
      <summary>Aktualisiert den Zustand des Objekts.</summary>
      <exception cref="T:System.IO.IOException">Ein Gerät, z. B. ein Laufwerk, ist nicht verfügbar.</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.ToString">
      <summary>Gibt den ursprünglichen Pfad zurück. Verwenden Sie die Eigenschaft <see cref="P:System.IO.FileSystemInfo.FullName" /> bzw. <see cref="P:System.IO.FileSystemInfo.Name" /> für den vollständigen Pfad bzw. den Datei- und Verzeichnisnamen.</summary>
      <returns>Eine Zeichenfolge mit dem ursprünglichen Pfad.</returns>
    </member>
    <member name="T:System.IO.MatchCasing" />
    <member name="F:System.IO.MatchCasing.CaseInsensitive">
      <summary>Sucht nach Übereinstimmungen und ignoriert dabei Groß-/Kleinschreibung.</summary>
    </member>
    <member name="F:System.IO.MatchCasing.CaseSensitive">
      <summary>Sucht nach Übereinstimmungen und beachtet dabei Groß-/Kleinschreibung.</summary>
    </member>
    <member name="F:System.IO.MatchCasing.PlatformDefault">
      <summary>Sucht nach Übereinstimmungen und beachtet dabei den Standard für Groß-/Kleinschreibung für die angegebene Plattform.</summary>
    </member>
    <member name="T:System.IO.MatchType" />
    <member name="F:System.IO.MatchType.Simple">
      <summary>Sucht mithilfe der Platzhalterzeichen „*“ und „?“ nach Übereinstimmungen.</summary>
    </member>
    <member name="F:System.IO.MatchType.Win32">
      <summary>Die Suche nach Übereinstimmungen erfolgt mithilfe der Übereinstimmungssemantik im Win32-DOS-Stil. „*“, „?“, „&lt;“, „&gt;“ und „"“ sind gültige Platzhalter.</summary>
    </member>
    <member name="T:System.IO.SearchOption">
      <summary>Gibt an, ob das aktuelle Verzeichnis oder das aktuelle Verzeichnis und alle Unterverzeichnisse durchsucht werden sollen.</summary>
    </member>
    <member name="F:System.IO.SearchOption.AllDirectories">
      <summary>Schließt das aktuelle Verzeichnis und alle Unterverzeichnisse in einen Suchvorgang ein. Diese Option schließt Punkte für die erneute Analyse wie bereitgestellte Laufwerke und symbolische Links in die Suche ein.</summary>
    </member>
    <member name="F:System.IO.SearchOption.TopDirectoryOnly">
      <summary>Schließt nur das aktuelle Verzeichnis in den Suchevorgang ein.</summary>
    </member>
  </members>
</doc>