<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.Encoding.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Text.ASCIIEncoding">
      <summary vsli:raw="Represents an ASCII character encoding of Unicode characters.">Stellt eine ASCII-Zeichencodierung von Unicode-Zeichen dar.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.ASCIIEncoding&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Text.ASCIIEncoding" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen ab dem angegebenen Zeichenzeiger erzeugt werden.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen aus dem angegebenen Zeichenarray erzeugt werden.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">Berechnet die Anzahl von Bytes, die durch das Codieren des angegebenen Zeichenbereichs erzeugt werden.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">Der Bereich, der die zu codierenden Zeichen enthält.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">Die Anzahl von Bytes, die beim Codieren des angegebenen Zeichenbereichs erzeugt werden.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Berechnet die Anzahl der Bytes, die durch das Codieren der Zeichen in der angegebenen <see cref="T:System.String" />-Klasse erzeugt werden.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codiert Zeichen beginnend am angegebenen Zeichenzeiger in eine Bytefolge, die beginnend am angegebenen Bytezeiger gespeichert wird.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Die durch <paramref name="bytes" /> angegebene tatsächliche Anzahl von Bytes, die am Speicherort geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> oder <paramref name="byteCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">
        <paramref name="byteCount" /> ist niedriger als die sich ergebende Anzahl von Bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codiert Zeichen aus dem angegebenen Zeichenarray in das angegebene Bytearray.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">Codiert den angegebenen Zeichenbereich in den angegebenen Bytebereich.</summary>
      <param name="chars" vsli:raw="The character span to encode.">Der zu codierende Zeichenbereich.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">Der Bereich, der die sich ergebenden Bytes enthält.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codiert Zeichen aus der angegebenen <see cref="T:System.String" />-Klasse in das angegebene Bytearray.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge ab dem angegebenen Bytezeiger erzeugt werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge aus dem angegebenen Bytearray erzeugt werden.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">Berechnet die Anzahl von Zeichen, die beim Decodieren des angegebenen Bytebereichs erzeugt werden.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">Der Bereich, der die zu decodierenden Bytes enthält.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">Die Anzahl von Zeichen, die beim Decodieren des angegebenen Bytebereichs erzeugt werden.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodiert eine Bytefolge beginnend am angegebenen Bytezeiger in Zeichen, die beginnend am angegebenen Zeichenzeiger gespeichert werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Die durch <paramref name="chars" /> angegebene tatsächliche Anzahl der Zeichen, die am Speicherort geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.  

oder - 
<paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> oder <paramref name="charCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">
        <paramref name="charCount" /> ist niedriger als die sich ergebende Anzahl von Zeichen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodiert eine Bytefolge aus dem angegebenen Bytearray in das angegebene Zeichenarray.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Das Zeichenarray, das die sich ergebenden Zeichen enthalten soll.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Der Index, an dem mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.  

oder - 
<paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> oder <paramref name="charIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="byteindex" /> und <paramref name="byteCount" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
<paramref name="charIndex" /> ist kein gültiger Index in <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" /> hat von <paramref name="charIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Zeichen aufzunehmen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">Decodiert den angegebenen Bytebereich in den angegebenen Zeichenbereich.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">Der Bereich, der die zu decodierenden Bytes enthält.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">Der Bereich, der die sich ergebenden Zeichen enthalten soll.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">Ruft einen Decoder ab, der eine ASCII-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">Ein <see cref="T:System.Text.Decoder" />, der eine ASCII-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">Ruft einen Encoder ab, der eine Unicode-Zeichenfolge in eine ASCII-codierte Bytefolge konvertiert.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">Ein <see cref="T:System.Text.Encoder" />, der eine Unicode-Zeichenfolge in eine ASCII-codierte Bytefolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Berechnet die maximale Anzahl der Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt wird.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Die maximale Anzahl an Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Berechnet die maximale Anzahl der Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Die maximale Anzahl von Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodiert einen Bytebereich aus einem Bytearray in eine Zeichenfolge.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Eine <see cref="T:System.String" />-Klasse, die die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework ) 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="P:System.Text.ASCIIEncoding.IsSingleByte">
      <summary vsli:raw="Gets a value indicating whether the current encoding uses single-byte code points.">Ruft einen Wert ab, der angibt, ob für die aktuelle Codierung Einzelbytecodepunkte verwendet werden.</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;true&quot; /&gt;.">Diese Eigenschaft ist immer <see langword="true" />.</returns>
    </member>
    <member name="T:System.Text.UnicodeEncoding">
      <summary vsli:raw="Represents a UTF-16 encoding of Unicode characters.">Stellt eine UTF-16-Codierung von Unicode-Zeichen dar.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UnicodeEncoding" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UnicodeEncoding" />-Klasse. Parameter geben an, ob die Big-Endian-Bytereihenfolge verwendet werden soll und die <see cref="M:System.Text.UnicodeEncoding.GetPreamble" />-Methode eine Unicode-Bytereihenfolgemarkierung zurückgibt.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" />, um die Big-Endian-Bytereihenfolge (mit dem höchstwertigen Byte an erster Stelle) zu verwenden, oder <see langword="false" />, um die Little-Endian-Bytereihenfolge (mit dem niedrigstwertigen Byte an erster Stelle) zu verwenden.</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass die <see cref="M:System.Text.UnicodeEncoding.GetPreamble" />-Methode eine Unicode-Bytereihenfolgemarkierung zurückgibt; andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UnicodeEncoding" />-Klasse. Parameter geben an, ob die Big-Endian-Bytereihenfolge verwendet, eine Unicode-Bytereihenfolgemarkierung bereitgestellt und beim Erkennen einer ungültigen Codierung eine Ausnahme ausgelöst werden soll.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first); &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" />, um die Big-Endian-Bytereihenfolge (mit dem höchstwertigen Byte an erster Stelle) oder <see langword="false" />, um die Little-Endian-Bytereihenfolge (mit dem niedrigstwertigen Byte an erster Stelle) zu verwenden.</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass die <see cref="M:System.Text.UnicodeEncoding.GetPreamble" />-Methode eine Unicode-Bytereihenfolgemarkierung zurückgibt; andernfalls <see langword="false" />.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> um anzugeben, dass eine Ausnahme ausgelöst werden soll, wenn eine ungültige Codierung gefunden wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="F:System.Text.UnicodeEncoding.CharSize">
      <summary vsli:raw="Represents the Unicode character size in bytes. This field is a constant.">Stellt die Unicode-Zeichengröße in Bytes dar. Dieses Feld ist konstant.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Text.UnicodeEncoding" />-Objekt gleich sind.</summary>
      <param name="value" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> eine Instanz von <see cref="T:System.Text.UnicodeEncoding" /> und mit dem aktuellen Objekt identisch ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen ab dem angegebenen Zeichenzeiger erzeugt werden.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Zeichenfolge.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen aus dem angegebenen Zeichenarray erzeugt werden.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0 (null).  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Zeichenfolge.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified string.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen in der angegebenen Zeichenfolge erzeugt werden.</summary>
      <param name="s" vsli:raw="The string that contains the set of characters to encode.">Die Zeichenfolge, die die Menge der angegebenen Zeichen enthält.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">Die sich ergebende Anzahl von Bytes ist höher als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="s" /> enthält eine ungültige Zeichenfolge.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codiert Zeichen beginnend am angegebenen Zeichenzeiger in eine Bytefolge, die beginnend am angegebenen Bytezeiger gespeichert wird.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">Die tatsächliche Anzahl an Bytes, die an der durch den <paramref name="bytes" />-Parameter angegebenen Position geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="bytes" /> ist <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> oder <paramref name="byteCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="byteCount" /> ist niedriger als die sich ergebende Anzahl von Bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codiert Zeichen aus dem angegebenen Zeichenarray in das angegebene Bytearray.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codiert Zeichen aus der angegebenen <see cref="T:System.String" />-Klasse in das angegebene Bytearray.</summary>
      <param name="s" vsli:raw="The string containing the set of characters to encode.">Die Zeichenfolge mit den zu codierenden Zeichen.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="s" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge ab dem angegebenen Bytezeiger erzeugt werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Bytefolge.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge aus dem angegebenen Bytearray erzeugt werden.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0 (null).  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Bytefolge.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodiert eine Bytefolge beginnend am angegebenen Bytezeiger in Zeichen, die beginnend am angegebenen Zeichenzeiger gespeichert werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by the &lt;paramref name=&quot;chars&quot; /&gt; parameter.">Die tatsächliche Anzahl der Zeichen, die an der durch den <paramref name="chars" />-Parameter angegebenen Position geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="chars" /> ist <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> oder <paramref name="charCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.  

oder - 
<paramref name="charCount" /> ist niedriger als die sich ergebende Anzahl von Zeichen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodiert eine Bytefolge aus dem angegebenen Bytearray in das angegebene Zeichenarray.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Das Zeichenarray, das die sich ergebenden Zeichen enthalten soll.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Der Index, an dem mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="chars" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> oder <paramref name="charIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="byteindex" /> und <paramref name="byteCount" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
<paramref name="charIndex" /> ist kein gültiger Index in <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.  

oder - 
<paramref name="chars" /> hat von <paramref name="charIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Zeichen aufzunehmen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">Ruft einen Decoder ab, der eine UTF-16-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">Ein <see cref="T:System.Text.Decoder" />, der eine UTF-16-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">Ruft einen Encoder ab, der eine Unicode-Zeichenfolge in eine UTF-16-codierte Bytefolge konvertiert.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">Ein <see cref="T:System.Text.Encoder" />-Objekt, das eine Unicode-Zeichenfolge in eine UTF-16-codierte Bytefolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Gibt den Hashcode für die aktuelle Instanz zurück.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">Der Hashcode für das aktuelle <see cref="T:System.Text.UnicodeEncoding" />-Objekt.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Berechnet die maximale Anzahl der Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt wird.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Die maximale Anzahl an Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für<see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" />festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Berechnet die maximale Anzahl der Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Die maximale Anzahl von Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.">Gibt eine im UTF-16-Format codierte Unicode-Bytereihenfolgemarkierung zurück, wenn der Konstruktor für diese Instanz die Bereitstellung einer Bytereihenfolgemarkierung anfordert.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Ein Bytearray, das die Unicode-Bytereihenfolgemarkierung enthält, wenn das <see cref="T:System.Text.UnicodeEncoding" /> -Objekt dafür konfiguriert ist, eine bereitzustellen. Andernfalls gibt diese Methode ein Bytearray mit der Länge Null zurück.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodiert einen Bytebereich aus einem Bytearray in eine Zeichenfolge.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the results of decoding the specified sequence of bytes.">Ein <see cref="T:System.String" />-Objekt, das die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0 (null).  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="P:System.Text.UnicodeEncoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-16 format, if this object is configured to supply one.">Ruft eine Unicode-Bytereihenfolgemarkierung im UTF-16-Format ab, wenn dieses Objekt entsprechend konfiguriert ist.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">Eine Byte Spanne, die die Unicode-Byte Reihenfolge Markierung enthält, wenn dieses Objekt für die Bereitstellung eines solchen konfiguriert ist. andernfalls die Standard Spanne.</returns>
    </member>
    <member name="T:System.Text.UTF32Encoding">
      <summary vsli:raw="Represents a UTF-32 encoding of Unicode characters.">Stellt eine UTF-32-Codierung von Unicode-Zeichen dar.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF32Encoding" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UTF32Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF32Encoding" />-Klasse. Parameter geben an, ob die Big-Endian-Bytereihenfolge verwendet werden soll und die <see cref="M:System.Text.UTF32Encoding.GetPreamble" />-Methode eine Unicode-Bytereihenfolgemarkierung zurückgibt.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" />, um die Big-Endian-Bytereihenfolge (mit dem höchstwertigen Byte an erster Stelle) zu verwenden, oder <see langword="false" />, um die Little-Endian-Bytereihenfolge (mit dem niedrigstwertigen Byte an erster Stelle) zu verwenden.</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass eine Unicode-Bytereihenfolgemarkierung bereitgestellt wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF32Encoding" />-Klasse. Parameter geben an, ob die Big-Endian-Bytereihenfolge verwendet, eine Unicode-Bytereihenfolgemarkierung bereitgestellt und beim Erkennen einer ungültigen Codierung eine Ausnahme ausgelöst werden soll.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" />, um die Big-Endian-Bytereihenfolge (mit dem höchstwertigen Byte an erster Stelle) zu verwenden, oder <see langword="false" />, um die Little-Endian-Bytereihenfolge (mit dem niedrigstwertigen Byte an erster Stelle) zu verwenden.</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass eine Unicode-Bytereihenfolgemarkierung bereitgestellt wird, andernfalls <see langword="false" />.</param>
      <param name="throwOnInvalidCharacters" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> um anzugeben, dass eine Ausnahme ausgelöst werden soll, wenn eine ungültige Codierung gefunden wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Text.UTF32Encoding" />-Objekt gleich sind.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current object.">Das <see cref="T:System.Object" />, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> eine Instanz von <see cref="T:System.Text.UTF32Encoding" /> und mit dem aktuellen Objekt identisch ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen ab dem angegebenen Zeichenzeiger erzeugt werden.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen aus dem angegebenen Zeichenarray erzeugt werden.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Berechnet die Anzahl der Bytes, die durch das Codieren der Zeichen in der angegebenen <see cref="T:System.String" />-Klasse erzeugt werden.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">Die sich ergebende Anzahl von Bytes ist höher als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="s" /> enthält eine ungültige Folge von Zeichen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codiert Zeichen beginnend am angegebenen Zeichenzeiger in eine Bytefolge, die beginnend am angegebenen Bytezeiger gespeichert wird.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">Die tatsächliche Anzahl an Bytes, die an der durch den <paramref name="bytes" />-Parameter angegebenen Position geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> oder <paramref name="byteCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="byteCount" /> ist niedriger als die sich ergebende Anzahl von Bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codiert Zeichen aus dem angegebenen Zeichenarray in das angegebene Bytearray.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codiert Zeichen aus der angegebenen <see cref="T:System.String" />-Klasse in das angegebene Bytearray.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="s" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge ab dem angegebenen Bytezeiger erzeugt werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge aus dem angegebenen Bytearray erzeugt werden.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodiert eine Bytefolge beginnend am angegebenen Bytezeiger in Zeichen, die beginnend am angegebenen Zeichenzeiger gespeichert werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Die durch <paramref name="chars" /> angegebene tatsächliche Anzahl der Zeichen, die am Speicherort geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.  

oder - 
<paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> oder <paramref name="charCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.  

oder - 
<paramref name="charCount" /> ist niedriger als die sich ergebende Anzahl von Zeichen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodiert eine Bytefolge aus dem angegebenen Bytearray in das angegebene Zeichenarray.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Das Zeichenarray, das die sich ergebenden Zeichen enthalten soll.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Der Index, an dem mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.  

oder - 
<paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> oder <paramref name="charIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="byteindex" /> und <paramref name="byteCount" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
<paramref name="charIndex" /> ist kein gültiger Index in <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.  

oder - 
<paramref name="chars" /> hat von <paramref name="charIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Zeichen aufzunehmen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">Ruft einen Decoder ab, der eine UTF-32-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">Ein <see cref="T:System.Text.Decoder" />, der eine UTF-32-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">Ruft einen Encoder ab, der eine Unicode-Zeichenfolge in eine UTF-32-codierte Bytefolge konvertiert.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">Ein <see cref="T:System.Text.Encoder" />, der eine Unicode-Zeichenfolge in eine UTF-32-codierte Bytefolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Gibt den Hashcode für die aktuelle Instanz zurück.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">Der Hashcode für das aktuelle <see cref="T:System.Text.UTF32Encoding" />-Objekt.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Berechnet die maximale Anzahl der Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt wird.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Die maximale Anzahl an Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Berechnet die maximale Anzahl der Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Die maximale Anzahl von Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-32 format, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one.">Gibt eine Unicode-Bytereihenfolgemarkierung im UTF-32-Format zurück, wenn das <see cref="T:System.Text.UTF32Encoding" />-Objekt dafür konfiguriert ist, eine solche bereitzustellen.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Ein Bytearray, das die Unicode-Bytereihenfolgemarkierung enthält, wenn das <see cref="T:System.Text.UTF32Encoding" />-Objekt dafür konfiguriert ist, eine bereitzustellen. Andernfalls gibt diese Methode ein Bytearray mit der Länge Null zurück.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodiert einen Bytebereich aus einem Bytearray in eine Zeichenfolge.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="A string that contains the results of decoding the specified sequence of bytes.">Eine Zeichenfolge, die die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="P:System.Text.UTF32Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-32 format, if this object is configured to supply one.">Ruft eine Unicode-Bytereihenfolgemarkierung im UTF-32-Format ab, wenn dieses Objekt entsprechend konfiguriert ist.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, a default span.">Eine Byte Spanne, die die Unicode-Byte Reihenfolge Markierung enthält, wenn dieses Objekt für die Bereitstellung eines solchen konfiguriert ist. andernfalls eine Standard Spanne.</returns>
    </member>
    <member name="T:System.Text.UTF7Encoding">
      <summary vsli:raw="Represents a UTF-7 encoding of Unicode characters.">Stellt eine UTF-7-Codierung von Unicode-Zeichen dar.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF7Encoding" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class. A parameter specifies whether to allow optional characters.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF7Encoding" />-Klasse. Ein Parameter gibt an, ob optionale Zeichen zulässig sind.</summary>
      <param name="allowOptionals" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that optional characters are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass optionale Zeichen zulässig sind, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF7Encoding.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Ruft einen Wert ab, der angibt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Text.UTF7Encoding" />-Objekt gleich sind.</summary>
      <param name="value" vsli:raw="An object to compare to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Ein <see cref="T:System.Text.UTF7Encoding" />-Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is a &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object and is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> ein <see cref="T:System.Text.UTF7Encoding" />-Objekt und gleich dem aktuellen <see cref="T:System.Text.UTF7Encoding" />-Objekt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen ab dem angegebenen Zeichenzeiger erzeugt werden.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic .NET).">
        <paramref name="chars" /> ist <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen aus dem angegebenen Zeichenarray erzeugt werden.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0 (null).  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen in das angegebene <see cref="T:System.String" />-Objekt erzeugt werden.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the set of characters to encode.">Das <see cref="T:System.String" />-Objekt mit den zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an int.">Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codiert Zeichen beginnend am angegebenen Zeichenzeiger in eine Bytefolge, die beginnend am angegebenen Bytezeiger gespeichert wird.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Die durch <paramref name="bytes" /> angegebene tatsächliche Anzahl von Bytes, die am Speicherort geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="bytes" /> ist <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> oder <paramref name="byteCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">
        <paramref name="byteCount" /> ist niedriger als die sich ergebende Anzahl von Bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codiert Zeichen aus dem angegebenen Zeichenarray in das angegebene Bytearray.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codiert Zeichen aus der angegebenen <see cref="T:System.String" />-Klasse in das angegebene Bytearray.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge ab dem angegebenen Bytezeiger erzeugt werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Zeichenanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge aus dem angegebenen Bytearray erzeugt werden.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0 (null).  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
Die daraus resultierende Zeichenanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodiert eine Bytefolge beginnend am angegebenen Bytezeiger in Zeichen, die beginnend am angegebenen Zeichenzeiger gespeichert werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Die durch <paramref name="chars" /> angegebene tatsächliche Anzahl der Zeichen, die am Speicherort geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="chars" /> ist <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> oder <paramref name="charCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">
        <paramref name="charCount" /> ist niedriger als die sich ergebende Anzahl von Zeichen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodiert eine Bytefolge aus dem angegebenen Bytearray in das angegebene Zeichenarray.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Das Zeichenarray, das die sich ergebenden Zeichen enthalten soll.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Der Index, an dem mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).  

oder - 
<paramref name="chars" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> oder <paramref name="charIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="byteindex" /> und <paramref name="byteCount" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
<paramref name="charIndex" /> ist kein gültiger Index in <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" /> hat von <paramref name="charIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Zeichen aufzunehmen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">Ruft einen Decoder ab, der eine UTF-7-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">Ein <see cref="T:System.Text.Decoder" />, der eine UTF-7-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">Ruft einen Encoder ab, der eine Unicode-Zeichenfolge in eine UTF-7-codierte Bytefolge konvertiert.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">Ein <see cref="T:System.Text.Encoder" />, der eine Unicode-Zeichenfolge in eine UTF-7-codierte Bytefolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Gibt den Hashcode für das aktuelle <see cref="T:System.Text.UTF7Encoding" />-Objekt zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Berechnet die maximale Anzahl der Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt wird.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Die maximale Anzahl an Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="charCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Berechnet die maximale Anzahl der Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Die maximale Anzahl von Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="byteCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Zeichenanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodiert einen Bytebereich aus einem Bytearray in eine Zeichenfolge.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Eine <see cref="T:System.String" />-Klasse, die die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> ist <see langword="null" />(<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0 (null).  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="T:System.Text.UTF8Encoding">
      <summary vsli:raw="Represents a UTF-8 encoding of Unicode characters.">Stellt eine UTF-8-Codierung von Unicode-Zeichen dar.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF8Encoding" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. A parameter specifies whether to provide a Unicode byte order mark.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF8Encoding" />-Klasse. Ein Parameter gibt an, ob eine Unicode-Bytereihenfolgemarkierung bereitgestellt werden soll.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass die <see cref="M:System.Text.UTF8Encoding.GetPreamble" />-Methode eine Unicode-Bytereihenfolgemarkierung zurückgibt; andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.">Initialisiert eine neue Instanz der <see cref="T:System.Text.UTF8Encoding" />-Klasse. Parameter geben an, ob eine Unicode-Bytereihenfolgemarkierung bereitgestellt werden soll und ob eine Ausnahme ausgelöst werden soll, wenn eine ungültige Codierung gefunden wird.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method should return a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass die <see cref="M:System.Text.UTF8Encoding.GetPreamble" />-Methode eine Unicode-Bytereihenfolgemarkierung zurückgeben sollte; andernfalls <see langword="false" />.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, damit eine Ausnahme ausgelöst wird, wenn eine ungültige Codierung gefunden wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; object.">Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Text.UTF8Encoding" />-Objekt gleich sind.</summary>
      <param name="value" vsli:raw="The object to compare with the current instance.">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> eine Instanz von <see cref="T:System.Text.UTF8Encoding" /> und mit dem aktuellen Objekt identisch ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen ab dem angegebenen Zeichenzeiger erzeugt werden.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Berechnet die Anzahl der Bytes, die beim Codieren der Zeichen aus dem angegebenen Zeichenarray erzeugt werden.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; property is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Die <see cref="P:System.Text.Encoding.EncoderFallback" />-Eigenschaft ist auf <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">Berechnet die Anzahl von Bytes, die durch das Codieren des angegebenen Zeichenbereichs erzeugt werden.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">Der Bereich, der die zu codierenden Zeichen enthält.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">Die Anzahl von Bytes, die beim Codieren des angegebenen Zeichenbereichs erzeugt werden.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Berechnet die Anzahl der Bytes, die durch das Codieren der Zeichen in der angegebenen <see cref="T:System.String" />-Klasse erzeugt werden.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Die Anzahl der Bytes, die beim Codieren der angegebenen Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">Die sich ergebende Anzahl von Bytes ist höher als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codiert Zeichen beginnend am angegebenen Zeichenzeiger in eine Bytefolge, die beginnend am angegebenen Bytezeiger gespeichert wird.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Ein Zeiger auf das erste zu codierende Zeichen.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Die durch <paramref name="bytes" /> angegebene tatsächliche Anzahl von Bytes, die am Speicherort geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> oder <paramref name="byteCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="byteCount" /> ist niedriger als die sich ergebende Anzahl von Bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codiert Zeichen aus dem angegebenen Zeichenarray in das angegebene Bytearray.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Das Zeichenarray, das die zu codierenden Zeichen enthält.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="chars" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">Codiert den angegebenen Zeichenbereich in den angegebenen Bytebereich.</summary>
      <param name="chars" vsli:raw="The character span to encode.">Der zu codierende Zeichenbereich.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">Der Bereich, der die sich ergebenden Bytes enthält.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codiert Zeichen aus der angegebenen <see cref="T:System.String" />-Klasse in das angegebene Bytearray.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">Die <see cref="T:System.String" />-Klasse mit den zu codierenden Zeichen.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Der Index des ersten zu codierenden Zeichens.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Das Bytearray, das die sich ergebende Bytefolge enthalten soll.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Der Index, an dem mit dem Schreiben der sich ergebenden Bytefolge begonnen werden soll.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Die tatsächliche Anzahl der Bytes, die in <paramref name="bytes" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> ist <see langword="null" />.  

oder - 
<paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> oder <paramref name="byteIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="charIndex" /> und <paramref name="charCount" /> geben keinen gültigen Bereich in <paramref name="chars" />an.  

oder - 
<paramref name="byteIndex" /> ist kein gültiger Index in <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="s" /> enthält eine ungültige Folge von Zeichen.  

oder - 
<paramref name="bytes" /> hat von <paramref name="byteIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Bytes aufzunehmen.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge ab dem angegebenen Bytezeiger erzeugt werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Berechnet die Anzahl der Zeichen, die beim Decodieren einer Bytefolge aus dem angegebenen Bytearray erzeugt werden.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Die Anzahl der Zeichen, die beim Decodieren der angegebenen Bytefolge erzeugt werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">Berechnet die Anzahl von Zeichen, die beim Decodieren des angegebenen Bytebereichs erzeugt werden.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">Der Bereich, der die zu decodierenden Bytes enthält.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">Die Anzahl von Zeichen, die beim Decodieren des angegebenen Bytebereichs erzeugt werden.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Decodiert eine Bytefolge beginnend am angegebenen Bytezeiger in Zeichen, die beginnend am angegebenen Zeichenzeiger gespeichert werden.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Ein Zeiger auf das erste zu decodierende Byte.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Ein Zeiger auf die Position, an der mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Die durch <paramref name="chars" /> angegebene tatsächliche Anzahl der Zeichen, die am Speicherort geschrieben wurden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.  

oder - 
<paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> oder <paramref name="charCount" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.  

oder - 
<paramref name="charCount" /> ist niedriger als die sich ergebende Anzahl von Zeichen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Decodiert eine Bytefolge aus dem angegebenen Bytearray in das angegebene Zeichenarray.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Das Zeichenarray, das die sich ergebenden Zeichen enthalten soll.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Der Index, an dem mit dem Schreiben der sich ergebenden Zeichen begonnen werden soll.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.  

oder - 
<paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> oder <paramref name="charIndex" /> ist kleiner als 0 (null).  

oder - 
<paramref name="byteindex" /> und <paramref name="byteCount" /> geben keinen gültigen Bereich in <paramref name="bytes" />an.  

oder - 
<paramref name="charIndex" /> ist kein gültiger Index in <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.  

oder - 
<paramref name="chars" /> hat von <paramref name="charIndex" /> bis zum Ende des Arrays nicht genügend Kapazität, um die sich ergebenden Zeichen aufzunehmen.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">Decodiert den angegebenen Bytebereich in den angegebenen Zeichenbereich.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">Der Bereich, der die zu decodierenden Bytes enthält.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">Der Bereich, der die sich ergebenden Zeichen enthalten soll.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Die tatsächliche Anzahl der Zeichen, die in <paramref name="chars" /> geschrieben werden.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">Ruft einen Decoder ab, der eine UTF-8-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</summary>
      <returns vsli:raw="A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">Ein Decoder, der eine UTF-8-codierte Bytefolge in eine Unicode-Zeichenfolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">Ruft einen Encoder ab, der eine Unicode-Zeichenfolge in eine UTF-8-codierte Bytefolge konvertiert.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">Ein <see cref="T:System.Text.Encoder" />, der eine Unicode-Zeichenfolge in eine UTF-8-codierte Bytefolge konvertiert.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Gibt den Hashcode für die aktuelle Instanz zurück.</summary>
      <returns vsli:raw="The hash code for the current instance.">Der Hashcode für die aktuelle Instanz.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Berechnet die maximale Anzahl der Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt wird.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Die Anzahl der zu codierenden Zeichen.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Die maximale Anzahl an Bytes, die beim Codieren der angegebenen Anzahl von Zeichen erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.EncoderFallback" /> ist <see cref="T:System.Text.EncoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Berechnet die maximale Anzahl der Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Die maximale Anzahl von Zeichen, die beim Decodieren der angegebenen Anzahl von Bytes erzeugt werden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> ist kleiner als Null.  

oder - 
Die daraus resultierende Byteanzahl ist größer als die maximale Anzahl, die als ganze Zahl zurückgegeben werden kann.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-8 format, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one.">Gibt eine Unicode-Bytereihenfolgemarkierung im UTF-8-Format zurück, wenn das <see cref="T:System.Text.UTF8Encoding" />-Codierungsobjekt dafür konfiguriert ist, eine bereitzustellen.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Ein Bytearray, das die Unicode-Bytereihenfolgemarkierung enthält, wenn das <see cref="T:System.Text.UTF8Encoding" />-Codierungsobjekt dafür konfiguriert ist, eine bereitzustellen. Andernfalls gibt diese Methode ein Bytearray mit der Länge Null zurück.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Decodiert einen Bytebereich aus einem Bytearray in eine Zeichenfolge.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Das Bytearray, das die zu decodierende Bytefolge enthält.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Der Index des ersten zu decodierenden Bytes.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Die Anzahl der zu decodierenden Bytes.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Eine <see cref="T:System.String" />-Klasse, die die Ergebnisse der Decodierung der angegebenen Bytefolge enthält.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.  

oder - 
<paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in <paramref name="bytes" /> an.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Die Fehlererkennung ist aktiviert, und <paramref name="bytes" /> enthält eine ungültige Folge von Bytes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Es ist ein Fallback aufgetreten (eine ausführliche Erläuterung finden Sie unter Zeichencodierung in .NET Framework). 

und - 
Für <see cref="P:System.Text.Encoding.DecoderFallback" /> ist <see cref="T:System.Text.DecoderExceptionFallback" /> festgelegt.</exception>
    </member>
    <member name="P:System.Text.UTF8Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-8 format, if this object is configured to supply one.">Ruft eine Unicode-Bytereihenfolgemarkierung im UTF-8-Format ab, wenn dieses Objekt entsprechend konfiguriert ist.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">Eine Byte Spanne, die die Unicode-Byte Reihenfolge Markierung enthält, wenn dieses Objekt für die Bereitstellung eines solchen konfiguriert ist. andernfalls die Standard Spanne.</returns>
    </member>
  </members>
</doc>