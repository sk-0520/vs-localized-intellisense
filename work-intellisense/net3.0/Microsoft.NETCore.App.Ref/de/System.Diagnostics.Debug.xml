<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Debug</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Debug">
      <summary>Stellt eine Reihe von Methoden und Eigenschaften zum Debuggen von Code bereit.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, wird ein Meldungsfeld mit der Aufrufliste angezeigt.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, wird weder eine Fehlermeldung gesendet noch das Meldungsfeld angezeigt.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, wird eine bestimmte Meldung ausgegeben, und ein Meldungsfeld mit der Aufrufliste wird angezeigt.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, wird keine Meldung gesendet und kein Meldungsfeld angezeigt.</param>
      <param name="message">Die Nachricht, die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung gesendet werden soll.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, werden zwei angegebene Meldungen ausgegeben, und ein Meldungsfeld mit der Aufrufliste wird angezeigt.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, werden die angegebenen Meldungen nicht gesendet, und das Meldungsfeld wird nicht angezeigt.</param>
      <param name="message">Die an die <see cref="P:System.Diagnostics.Trace.Listeners" /> -Auflistung zu sendende Nachricht.</param>
      <param name="detailMessage">Die detaillierte Nachricht, die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung gesendet werden soll.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>Überprüft eine Bedingung. Wenn die Bedingung <see langword="false" /> ist, werden zwei angegebene Meldungen (einfach und formatiert) ausgegeben, und ein Meldungsfeld mit der Aufrufliste wird angezeigt.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, werden die angegebenen Meldungen nicht gesendet, und das Meldungsfeld wird nicht angezeigt.</param>
      <param name="message">Die Nachricht, die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung gesendet werden soll.</param>
      <param name="detailMessageFormat">Die zusammengesetzte Formatzeichenfolge, die an die <see cref="P:System.Diagnostics.Trace.Listeners" />-Auflistung gesendet werden soll. Diese Meldung enthält Text und optional ein oder mehrere Formatelemente, die Objekten im <paramref name="args" />-Array entsprechen.</param>
      <param name="args">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</param>
    </member>
    <member name="P:System.Diagnostics.Debug.AutoFlush">
      <summary>Ruft einen Wert ab, der angibt, ob für <see cref="M:System.Diagnostics.Debug.Flush" /> nach jedem Schreibvorgang <see cref="P:System.Diagnostics.Debug.Listeners" /> aufgerufen werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.Diagnostics.Debug.Flush" /> nach jedem Schreibvorgang für <see cref="P:System.Diagnostics.Debug.Listeners" /> aufgerufen wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Close">
      <summary>Leert den Ausgabepuffer und ruft dann für jeden <see cref="P:System.Diagnostics.Debug.Listeners" /> die <see langword="Close" />-Methode auf.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String)">
      <summary>Gibt die angegebene Fehlermeldung aus.</summary>
      <param name="message">Eine auszugebende Meldung.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
      <summary>Gibt eine Fehlermeldung und eine detaillierte Fehlermeldung aus.</summary>
      <param name="message">Eine auszugebende Meldung.</param>
      <param name="detailMessage">Eine detaillierte Meldung, die ausgegeben werden soll.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Flush">
      <summary>Leert den Ausgabepuffer und veranlasst das Schreiben der gepufferten Daten in die <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Indent">
      <summary>Erhöht den aktuellen <see cref="P:System.Diagnostics.Debug.IndentLevel" /> um eins.</summary>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentLevel">
      <summary>Ruft die Einzugsebene ab oder legt diese fest.</summary>
      <returns>Die Einzugebene. Der Standard ist 0.</returns>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentSize">
      <summary>Ruft die Anzahl der Leerzeichen in einem Einzug ab oder legt diese fest.</summary>
      <returns>Die Anzahl der Leerzeichen in einem Einzug. Der Standardwert ist vier.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String)">
      <summary>Schreibt eine Meldung, gefolgt von einem Zeilenabschluss, in die Ablaufverfolgungsüberwachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="message">Die zu schreibende Meldung.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
      <summary>Schreibt eine formatierte Zeichenfolge, gefolgt von einem Zeilenabschluss, in die Ablaufverfolgungsüberwachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="format">Eine zusammengesetzte Formatzeichenfolge mit Text, der 0 oder mehr Formatelemente enthält, die Objekten im Array <paramref name="args" /> entsprechen.</param>
      <param name="args">Ein Objektarray mit 0 oder mehr zu formatierenden Objekten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist ungültig.  

oder - 
Die Zahl, die ein zu formatierendes Argument angibt, ist kleiner als 0 (null) bzw. größer oder gleich der Anzahl der angegebenen zu formatierenden Objekte.</exception>
    </member>
    <member name="M:System.Diagnostics.Debug.Unindent">
      <summary>Verringert den aktuellen <see cref="P:System.Diagnostics.Debug.IndentLevel" /> um eins.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object)">
      <summary>Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungswachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="value">Ein Objekt, dessen Name an die <see cref="P:System.Diagnostics.Debug.Listeners" /> gesendet wird.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
      <summary>Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungsüberwachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="value">Ein Objekt, dessen Name an die <see cref="P:System.Diagnostics.Debug.Listeners" /> gesendet wird.</param>
      <param name="category">Ein Kategoriename für die Anordnung der Ausgabe.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String)">
      <summary>Schreibt eine Meldung in die Ablaufverfolgungsüberwachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="message">Eine zu schreibende Meldung.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
      <summary>Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungsüberwachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="message">Eine zu schreibende Meldung.</param>
      <param name="category">Ein Kategoriename für die Anordnung der Ausgabe.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
      <summary>Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, wird der Wert in die Ablaufverfolgungslistener in der Auflistung geschrieben.</param>
      <param name="value">Ein Objekt, dessen Name an die <see cref="P:System.Diagnostics.Debug.Listeners" /> gesendet wird.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
      <summary>Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, werden der Kategoriename und der Wert in die Ablaufverfolgungslistener in der Auflistung geschrieben.</param>
      <param name="value">Ein Objekt, dessen Name an die <see cref="P:System.Diagnostics.Debug.Listeners" /> gesendet wird.</param>
      <param name="category">Ein Kategoriename für die Anordnung der Ausgabe.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
      <summary>Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, wird die Meldung in die Ablaufverfolgungslistener in der Auflistung geschrieben.</param>
      <param name="message">Eine zu schreibende Meldung.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
      <summary>Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, werden der Kategoriename und die Meldung in die Ablaufverfolgungslistener in der Auflistung geschrieben.</param>
      <param name="message">Eine zu schreibende Meldung.</param>
      <param name="category">Ein Kategoriename für die Anordnung der Ausgabe.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungswachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="value">Ein Objekt, dessen Name an die <see cref="P:System.Diagnostics.Debug.Listeners" /> gesendet wird.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
      <summary>Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungsüberwachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="value">Ein Objekt, dessen Name an die <see cref="P:System.Diagnostics.Debug.Listeners" /> gesendet wird.</param>
      <param name="category">Ein Kategoriename für die Anordnung der Ausgabe.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>Schreibt eine Meldung, gefolgt von einem Zeilenabschluss, in die Ablaufverfolgungsüberwachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="message">Eine zu schreibende Meldung.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>Schreibt eine formatierte Meldung, gefolgt von einem Zeilenabschluss, in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="format">Eine zusammengesetzte Formatzeichenfolge mit Text, der 0 oder mehr Formatelemente enthält, die Objekten im Array <paramref name="args" /> entsprechen.</param>
      <param name="args">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
      <summary>Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungsüberwachungen in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung.</summary>
      <param name="message">Eine zu schreibende Meldung.</param>
      <param name="category">Ein Kategoriename für die Anordnung der Ausgabe.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
      <summary>Schreibt den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, wird der Wert in die Ablaufverfolgungslistener in der Auflistung geschrieben.</param>
      <param name="value">Ein Objekt, dessen Name an die <see cref="P:System.Diagnostics.Debug.Listeners" /> gesendet wird.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary>Schreibt einen Kategorienamen und den Wert der <see cref="M:System.Object.ToString" />-Methode des Objekts in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, werden der Kategoriename und der Wert in die Ablaufverfolgungslistener in der Auflistung geschrieben.</param>
      <param name="value">Ein Objekt, dessen Name an die <see cref="P:System.Diagnostics.Debug.Listeners" /> gesendet wird.</param>
      <param name="category">Ein Kategoriename für die Anordnung der Ausgabe.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>Schreibt eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</summary>
      <param name="condition">Der auszuwertende bedingte Ausdruck. Wenn die Bedingung <see langword="true" /> ist, wird die Meldung in die Ablaufverfolgungslistener in der Auflistung geschrieben.</param>
      <param name="message">Eine zu schreibende Meldung.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary>Schreibt einen Kategorienamen und eine Meldung in die Ablaufverfolgungslistener in der <see cref="P:System.Diagnostics.Debug.Listeners" />-Auflistung, wenn eine Bedingung <see langword="true" /> ist.</summary>
      <param name="condition">
        <see langword="true" />, damit eine Meldung geschrieben wird, andernfalls <see langword="false" />.</param>
      <param name="message">Eine zu schreibende Meldung.</param>
      <param name="category">Ein Kategoriename für die Anordnung der Ausgabe.</param>
    </member>
    <member name="T:System.Diagnostics.Debugger">
      <summary>Ermöglicht die Kommunikation mit einem Debugger. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Diagnostics.Debugger.Break">
      <summary>Signalisiert einem angefügten Debugger einen Haltepunkt.</summary>
      <exception cref="T:System.Security.SecurityException">Die <see cref="T:System.Security.Permissions.UIPermission" /> ist nicht so festgelegt, dass der Debugger unterbrochen wird.</exception>
    </member>
    <member name="F:System.Diagnostics.Debugger.DefaultCategory">
      <summary>Stellt die Standardkategorie einer Meldung mit einer Konstanten dar.</summary>
    </member>
    <member name="P:System.Diagnostics.Debugger.IsAttached">
      <summary>Ruft einen Wert ab, der angibt, ob ein Debugger an den Prozess angefügt ist.</summary>
      <returns>
        <see langword="true" />, wenn ein Debugger angefügt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.IsLogging">
      <summary>Überprüft, ob die Protokollierung durch einen angefügten Debugger aktiviert ist.</summary>
      <returns>
        <see langword="true" />, wenn ein Debugger angefügt und die Protokollierung aktiviert ist, andernfalls <see langword="false" />. Der angefügte Debugger ist der verwaltete Debugger, der im <see langword="DbgManagedDebugger" />-Registrierungsschlüssel registriert ist. Weitere Informationen über diesen Schlüssel finden Sie unter Enabling JIT-Attach Debugging.</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.Launch">
      <summary>Startet einen Debugger und fügt diesen an den Prozess an.</summary>
      <returns>
        <see langword="true" />, wenn der Debugger erfolgreich gestartet wurde oder der Debugger bereits angefügt ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> ist für das Starten des Debuggers nicht festgelegt.</exception>
    </member>
    <member name="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
      <summary>Stellt eine Meldung für den angefügten Debugger bereit.</summary>
      <param name="level">Eine Beschreibung der Wichtigkeit der Meldung.</param>
      <param name="category">Die Kategorie der Nachricht.</param>
      <param name="message">Die anzuzeigende Meldung.</param>
    </member>
    <member name="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency">
      <summary>Benachrichtigt einen Debugger, dass die Ausführung in einem Pfad fortgesetzt werden soll, der eine threadübergreifende Abhängigkeit beinhaltet.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableAttribute">
      <summary>Bestimmt, ob und wie ein Member in den variablen Debugfenstern angezeigt wird. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerBrowsableAttribute" />-Klasse.</summary>
      <param name="state">Einer der <see cref="T:System.Diagnostics.DebuggerBrowsableState" />-Werte, der angibt, wie der Member angezeigt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="state" /> entspricht keinem der <see cref="T:System.Diagnostics.DebuggerBrowsableState" />-Werte.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerBrowsableAttribute.State">
      <summary>Ruft den Anzeigezustand für das Attribut ab.</summary>
      <returns>Einer der <see cref="T:System.Diagnostics.DebuggerBrowsableState" />-Werte.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableState">
      <summary>Stellt Anzeigeanweisungen für den Debugger bereit.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Collapsed">
      <summary>Zeigen Sie das Element reduziert an.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Never">
      <summary>Zeigen Sie das Element nie an.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.RootHidden">
      <summary>Zeigen Sie das Stammelement nicht an, sondern zeigen Sie die untergeordneten Elemente an, wenn es sich bei dem Element um eine Auflistung oder ein Array von Elementen handelt.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerDisplayAttribute">
      <summary>Bestimmt, wie eine Klasse oder ein Feld in den variablen Fenstern des Debuggers angezeigt wird.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" />-Klasse.</summary>
      <param name="value">Die in der Wertespalte für Instanzen des Typs anzuzeigende Zeichenfolge. Bei einer leeren Zeichenfolge ("") wird die Wertespalte ausgeblendet.</param>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Name">
      <summary>Ruft den Namen ab, der in den variablen Debugfensters angezeigt werden soll, oder legt diesen fest.</summary>
      <returns>Der Name, der in den variablen Debugfenstern angezeigt werden soll.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Target">
      <summary>Ruft den Typ des Attributziels ab oder legt diesen fest.</summary>
      <returns>Der Zieltyp des Attributs.</returns>
      <exception cref="T:System.ArgumentNullException">Für <see cref="P:System.Diagnostics.DebuggerDisplayAttribute.Target" /> ist <see langword="null" /> festgelegt.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName">
      <summary>Ruft den Typnamen des Attributziels ab oder legt diesen fest.</summary>
      <returns>Der Name des Attributzieltyps.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Type">
      <summary>Ruft die Zeichenfolge ab, die in den variablen Debugfenstern in der Typspalte angezeigt werden soll, oder legt diese fest.</summary>
      <returns>Die Zeichenfolge, die in den variablen Debugfenster in der Typspalte angezeigt werden soll.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Value">
      <summary>Ruft die Zeichenfolge ab, die in den variablen Debugfenstern in der Wertspalte angezeigt werden soll.</summary>
      <returns>Die Zeichenfolge, die in der Wertspalte der Debuggervariable angezeigt werden soll.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerHiddenAttribute">
      <summary>Gibt das <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />-Element an. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <summary>Bezeichnet einen Typ oder einen Member, der nicht Teil des Benutzercodes einer Anwendung ist.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <summary>Gibt an, dass der dem Attribut folgende Code nicht im Schrittmodus, sondern im Ausführmodus ausgeführt werden soll.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepThroughAttribute">
      <summary>Weist den Debugger an, den Code automatisch im Prozedurschritt und nicht im Einzelschritt zu durchlaufen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <summary>Gibt den Anzeigeproxy für einen Typ an.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" />-Klasse unter Verwendung des Typnamens des Proxys.</summary>
      <param name="typeName">Der Typname des Proxytyps.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" />-Klasse unter Verwendung des Proxytyps.</summary>
      <param name="type">Der Proxytyp.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName">
      <summary>Ruft den Typnamen des Proxytyps ab.</summary>
      <returns>Der Typname des Proxytyps.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target">
      <summary>Ruft den Zieltyp für das Attribut ab oder legt dieses fest.</summary>
      <returns>Der Zieltyp für das Attribut.</returns>
      <exception cref="T:System.ArgumentNullException">Für <see cref="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" /> ist <see langword="null" /> festgelegt.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName">
      <summary>Ruft den Namen des Zieltyps ab oder legt diesen fest.</summary>
      <returns>Der Name des Zieltyps.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerVisualizerAttribute">
      <summary>Gibt an, dass der Typ über eine Schnellansicht verfügt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />-Klasse unter Angabe des Typnamens der Schnellansicht.</summary>
      <param name="visualizerTypeName">Der voll qualifizierte Typname der Schnellansicht.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />-Klasse unter Angabe des Typnamens der Schnellansicht und des Typnamens der Schnellansichtobjektquelle.</summary>
      <param name="visualizerTypeName">Der voll qualifizierte Typname der Schnellansicht.</param>
      <param name="visualizerObjectSourceTypeName">Der vollqualifizierte Typname der Schnellansicht-Objektquelle.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />-Klasse unter Angabe des Typnamens der Schnellansicht und des Typs der Schnellansichtobjektquelle.</summary>
      <param name="visualizerTypeName">Der voll qualifizierte Typname der Schnellansicht.</param>
      <param name="visualizerObjectSource">Der Typ der Schnellansicht-Objektquelle.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />-Klasse unter Angabe des Schnellansichtstyps.</summary>
      <param name="visualizer">Der Typ der Schnellansicht.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />-Klasse und gibt den Typ der Schnellansicht und den Typnamen der Schnellansicht-Objektquelle zurück.</summary>
      <param name="visualizer">Der Typ der Schnellansicht.</param>
      <param name="visualizerObjectSourceTypeName">Der vollqualifizierte Typname der Schnellansicht-Objektquelle.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" />-Klasse und gibt den Typ der Schnellansicht und den Typ der Schnellansicht-Objektquelle zurück.</summary>
      <param name="visualizer">Der Typ der Schnellansicht.</param>
      <param name="visualizerObjectSource">Der Typ der Schnellansicht-Objektquelle.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Description">
      <summary>Ruft die Beschreibung der Schnellansicht ab oder legt diese fest.</summary>
      <returns>Die Beschreibung der Schnellansicht.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Target">
      <summary>Ruft den Zieltyp ab oder legt diesen fest, wenn das Attribut auf Assemblyebene angewendet wird.</summary>
      <returns>Der Typ an, der das Ziel der Schnellansicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert kann nicht festgelegt werden, weil er <see langword="null" /> ist.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName">
      <summary>Ruft den voll qualifizierten Typnamen ab oder legt diesen fest, wenn das Attribut auf Assemblyebene angewendet wird.</summary>
      <returns>Der voll qualifizierte Typname des Zieltyps.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName">
      <summary>Ruft den voll qualifizierten Typnamen der Schnellansichtobjektquelle ab.</summary>
      <returns>Der vollqualifizierte Typname der Schnellansicht-Objektquelle.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName">
      <summary>Ruft den voll qualifizierten Typnamen der Schnellansicht ab.</summary>
      <returns>Der voll qualifizierte Typname der Schnellansicht.</returns>
    </member>
  </members>
</doc>