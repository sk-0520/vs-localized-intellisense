<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.FileSystem.Watcher</name>
  </assembly>
  <members>
    <member name="T:System.IO.ErrorEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.IO.FileSystemWatcher.Error" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.IO.ErrorEventArgs.#ctor(System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.ErrorEventArgs" />-Klasse.</summary>
      <param name="exception">Eine <see cref="T:System.Exception" />, die den aufgetretenen Fehler darstellt.</param>
    </member>
    <member name="M:System.IO.ErrorEventArgs.GetException">
      <summary>Ruft die <see cref="T:System.Exception" /> ab, die den aufgetretenen Fehler darstellt.</summary>
      <returns>Eine <see cref="T:System.Exception" />, die den aufgetretenen Fehler darstellt.</returns>
    </member>
    <member name="T:System.IO.ErrorEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.IO.FileSystemWatcher.Error" />-Ereignis eines <see cref="T:System.IO.FileSystemWatcher" />-Objekts behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.IO.ErrorEventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.IO.FileSystemEventArgs">
      <summary>Stellt Daten für die folgenden Verzeichnisereignisse bereit: <see cref="E:System.IO.FileSystemWatcher.Changed" />, <see cref="E:System.IO.FileSystemWatcher.Created" /> und <see cref="E:System.IO.FileSystemWatcher.Deleted" />.</summary>
    </member>
    <member name="M:System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileSystemEventArgs" />-Klasse.</summary>
      <param name="changeType">Einer der <see cref="T:System.IO.WatcherChangeTypes" />-Werte, der die Art der im Dateisystem festgestellten Änderung darstellt.</param>
      <param name="directory">Das Stammverzeichnis der betroffenen Datei bzw. des Verzeichnisses.</param>
      <param name="name">Der Name der betreffenden Datei bzw. des betreffenden Verzeichnisses.</param>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.ChangeType">
      <summary>Ruft den Typ des eingetretenen Verzeichnisereignisses ab.</summary>
      <returns>Einer der <see cref="T:System.IO.WatcherChangeTypes" />-Werte, der die Art der im Dateisystem festgestellten Änderung darstellt.</returns>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.FullPath">
      <summary>Ruft den vollqualifizierten Pfad der betroffenen Datei bzw. des Verzeichnisses ab.</summary>
      <returns>Der Pfad der betroffenen Datei bzw. des Verzeichnisses.</returns>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.Name">
      <summary>Ruft den Namen der betroffenen Datei bzw. des betroffenen Verzeichnisses ab.</summary>
      <returns>Der Name der betreffenden Datei bzw. des betreffenden Verzeichnisses.</returns>
    </member>
    <member name="T:System.IO.FileSystemEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.IO.FileSystemWatcher.Changed" />-Ereignis, das <see cref="E:System.IO.FileSystemWatcher.Created" />-Ereignis oder das <see cref="E:System.IO.FileSystemWatcher.Deleted" />-Ereignis einer <see cref="T:System.IO.FileSystemWatcher" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Das <see cref="T:System.IO.FileSystemEventArgs" />-Element, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.IO.FileSystemWatcher">
      <summary>Überwacht die Benachrichtigungen über Änderungen im Dateisystem und löst Ereignisse aus, wenn ein Verzeichnis oder eine Datei in einem Verzeichnis geändert werden.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileSystemWatcher" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileSystemWatcher" />-Klasse mit dem für die Überwachung angegebenen Verzeichnis.</summary>
      <param name="path">Das zu überwachende Verzeichnis in der Standard- oder UNC (Universal Naming Convention)-Notation.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="path" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="path" />-Parameter ist eine leere Zeichenfolge ("").  

oder - 
Der durch den <paramref name="path" />-Parameter angegebene Pfad ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> ist zu lang.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.FileSystemWatcher" />-Klasse mit dem für die Überwachung angegebenen Verzeichnis und Dateityp.</summary>
      <param name="path">Das zu überwachende Verzeichnis in der Standard- oder UNC (Universal Naming Convention)-Notation.</param>
      <param name="filter">Der zu überwachende Dateityp. Bei "*.txt" werden z. B. alle Textdateien auf Änderungen überwacht.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="path" />-Parameter ist <see langword="null" />.  

oder - 
Der <paramref name="filter" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="path" />-Parameter ist eine leere Zeichenfolge ("").  

oder - 
Der durch den <paramref name="path" />-Parameter angegebene Pfad ist nicht vorhanden.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> ist zu lang.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.BeginInit">
      <summary>Beginnt die Initialisierung von <see cref="T:System.IO.FileSystemWatcher" /> für die Verwendung in einem Formular oder durch eine andere Komponente. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Changed">
      <summary>Tritt ein, wenn im angegebenen <see cref="P:System.IO.FileSystemWatcher.Path" /> eine Datei oder ein Verzeichnis geändert wird.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Created">
      <summary>Tritt ein, wenn im angegebenen <see cref="P:System.IO.FileSystemWatcher.Path" /> eine Datei oder ein Verzeichnis erstellt wird.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Deleted">
      <summary>Tritt ein, wenn im angegebenen <see cref="P:System.IO.FileSystemWatcher.Path" /> eine Datei oder ein Verzeichnis gelöscht wird.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.FileSystemWatcher" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
      <summary>Ruft einen Wert ab, der angibt, ob die Komponente aktiviert ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Komponente aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />. Wenn Sie die Komponente in einem Designer in Visual Studio 2005 verwenden, ist der Standardwert <see langword="true" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.IO.FileSystemWatcher" />-Objekt wurde verworfen.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Das aktuelle Betriebssystem ist nicht Microsoft Windows NT oder höher.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Das in <see cref="P:System.IO.FileSystemWatcher.Path" /> angegebene Verzeichnis konnte nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.IO.FileSystemWatcher.Path" /> wurde nicht festgelegt oder ist ungültig.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.EndInit">
      <summary>Beendet die Initialisierung von <see cref="T:System.IO.FileSystemWatcher" /> für die Verwendung in einem Formular oder durch eine andere Komponente. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Error">
      <summary>Tritt auf, wenn die Instanz von <see cref="T:System.IO.FileSystemWatcher" /> das Überwachen von Änderungen nicht fortzusetzen kann, oder wenn der interne Puffer überläuft.</summary>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Filter">
      <summary>Ruft die Filterzeichenfolge ab, mit der die in einem Verzeichnis zu überwachenden Dateien bestimmt werden, oder legt diese fest.</summary>
      <returns>Die Filterzeichenfolge. Der Standardwert ist "*. *"(Überwacht alle Dateien.)</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Filters">
      <summary>Ruft die Auflistung aller Filter ab, mit denen bestimmt wird, welche Dateien in einem Verzeichnis überwacht werden.</summary>
      <returns>Eine Filter Auflistung.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
      <summary>Ruft einen Wert ab, der angibt, ob die Unterverzeichnisse im angegebenen Pfad überwacht werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Unterverzeichnisse überwacht werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.InternalBufferSize">
      <summary>Ruft die Größe (in Bytes) des internen Puffers ab oder legt diese fest.</summary>
      <returns>Die interne Puffergröße in Byte. Der Standardwert ist 8192 (8 KB).</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.NotifyFilter">
      <summary>Ruft den Typ der zu überwachenden Änderungen ab oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.IO.NotifyFilters" />-Werte. Der Standardwert ist die bitweise OR-Kombination von <see langword="LastWrite" />, <see langword="FileName" /> und <see langword="DirectoryName" />.</returns>
      <exception cref="T:System.ArgumentException">Der Wert ist keine gültige bitweise OR-Kombination der <see cref="T:System.IO.NotifyFilters" />-Werte.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der festgelegte Wert ist ungültig.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
      <summary>Löst das <see cref="E:System.IO.FileSystemWatcher.Changed" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.IO.FileSystemEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
      <summary>Löst das <see cref="E:System.IO.FileSystemWatcher.Created" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.IO.FileSystemEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
      <summary>Löst das <see cref="E:System.IO.FileSystemWatcher.Deleted" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.IO.FileSystemEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
      <summary>Löst das <see cref="E:System.IO.FileSystemWatcher.Error" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.IO.ErrorEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
      <summary>Löst das <see cref="E:System.IO.FileSystemWatcher.Renamed" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.IO.RenamedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Path">
      <summary>Ruft den Pfad des zu überwachenden Verzeichnisses ab oder legt diesen fest.</summary>
      <returns>Der zu überwachende Pfad. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
      <exception cref="T:System.ArgumentException">Der angegebene Pfad ist nicht vorhanden oder konnte nicht gefunden werden.  

oder -  

 Der angegebene Pfad enthält Platzhalterzeichen.  

oder -  

 Der angegebene Pfad enthält ungültige Zeichen.</exception>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Renamed">
      <summary>Tritt ein, wenn im angegebenen <see cref="P:System.IO.FileSystemWatcher.Path" /> eine Datei oder ein Verzeichnis umbenannt wird.</summary>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Site">
      <summary>Ruft eine <see cref="T:System.ComponentModel.ISite" /> für den <see cref="T:System.IO.FileSystemWatcher" /> ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.ISite" /> für das <see cref="T:System.IO.FileSystemWatcher" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.SynchronizingObject">
      <summary>Ruft das Objekt ab, das zum Marshallen von Ereignishandleraufrufen verwendet wird, die aufgrund einer Verzeichnisänderung ausgegeben werden, oder legt dieses fest.</summary>
      <returns>Das <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, das das Objekt zum Marshallen der Ereignishandleraufrufe darstellt, die aufgrund einer Verzeichnisänderung ausgegeben werden. Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
      <summary>Eine synchrone Methode, die eine Struktur mit spezifischen Informationen zur eingetretenen Änderung zurückgibt, sofern diese mit der Art der Änderung übereinstimmt, die überwacht werden soll.</summary>
      <param name="changeType">Die zu überwachenden <see cref="T:System.IO.WatcherChangeTypes" />.</param>
      <returns>Ein <see cref="T:System.IO.WaitForChangedResult" /> mit spezifischen Informationen zur eingetretenen Änderung.</returns>
    </member>
    <member name="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
      <summary>Eine synchrone Methode, die eine Struktur mit spezifischen Informationen zur eingetretenen Änderung zurückgibt, sofern diese mit der Art der zu überwachenden Änderung übereinstimmt und die Zeit (in Millisekunden) bis zum Timeout nicht abgelaufen ist.</summary>
      <param name="changeType">Die zu überwachenden <see cref="T:System.IO.WatcherChangeTypes" />.</param>
      <param name="timeout">Die Wartezeit (in Millisekunden) bis zum Timeout.</param>
      <returns>Ein <see cref="T:System.IO.WaitForChangedResult" /> mit spezifischen Informationen zur eingetretenen Änderung.</returns>
    </member>
    <member name="T:System.IO.InternalBufferOverflowException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn der interne Puffer überläuft.</summary>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor">
      <summary>Initialisiert eine neue Standardinstanz der <see cref="T:System.IO.InternalBufferOverflowException" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.IO.InternalBufferOverflowException" />-Klasse, die serialisierbar ist, wobei die angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekte und die angegebenen <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekte verwendet werden.</summary>
      <param name="info">Die Informationen, die erforderlich sind, um das T:System.IO.InternalBufferOverflowExceptions-Objekt zu serialisieren.</param>
      <param name="context">Die Quelle und das Ziel des dem T:System.IO.InternalBufferOverflowException-Objekt zugeordneten serialisierten Streams.</param>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.InternalBufferOverflowException" />-Klasse mit den Angaben für die anzuzeigende Fehlermeldung.</summary>
      <param name="message">Die bei der Ausnahme anzuzeigende Meldung.</param>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.InternalBufferOverflowException" />-Klasse mit den Angaben für die anzuzeigende Meldung und die generierte innere Ausnahme.</summary>
      <param name="message">Die bei der Ausnahme anzuzeigende Meldung.</param>
      <param name="inner">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.IO.NotifyFilters">
      <summary>Gibt die Änderungen an, die in einer Datei oder einem Ordner überwacht werden sollen.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Attributes">
      <summary>Die Attribute der Datei oder des Ordners.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.CreationTime">
      <summary>Der Zeitpunkt der Erstellung der Datei oder des Ordners.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.DirectoryName">
      <summary>Der Name des Verzeichnisses.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.FileName">
      <summary>Der Name der Datei.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.LastAccess">
      <summary>Das Datum des letzten Öffnens der Datei oder des Ordners.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.LastWrite">
      <summary>Das Datum, an dem zuletzt in die Datei oder den Ordner geschrieben wurde.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Security">
      <summary>Die Sicherheitseinstellungen der Datei oder des Ordners.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Size">
      <summary>Die Größe der Datei oder des Ordners.</summary>
    </member>
    <member name="T:System.IO.RenamedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.IO.FileSystemWatcher.Renamed" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.IO.RenamedEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.RenamedEventArgs" />-Klasse.</summary>
      <param name="changeType">Einer der <see cref="T:System.IO.WatcherChangeTypes" />-Werte.</param>
      <param name="directory">Der Name der betreffenden Datei bzw. des betreffenden Verzeichnisses.</param>
      <param name="name">Der Name der betreffenden Datei bzw. des betreffenden Verzeichnisses.</param>
      <param name="oldName">Der alte Name der betreffenden Datei bzw. des Verzeichnisses.</param>
    </member>
    <member name="P:System.IO.RenamedEventArgs.OldFullPath">
      <summary>Ruft den vorherigen voll gekennzeichneten Pfad der betreffenden Datei bzw. des Verzeichnisses ab.</summary>
      <returns>Der vorherige voll gekennzeichnete Pfad der betreffenden Datei bzw. des Verzeichnisses.</returns>
    </member>
    <member name="P:System.IO.RenamedEventArgs.OldName">
      <summary>Ruft den alten Namen der betreffenden Datei bzw. des Verzeichnisses ab.</summary>
      <returns>Der vorherige Name der betreffenden Datei bzw. des Verzeichnisses.</returns>
    </member>
    <member name="T:System.IO.RenamedEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.IO.FileSystemWatcher.Renamed" />-Ereignis einer <see cref="T:System.IO.FileSystemWatcher" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Das <see cref="T:System.IO.RenamedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.IO.WaitForChangedResult">
      <summary>Enthält Informationen zur aufgetretenen Änderung.</summary>
    </member>
    <member name="P:System.IO.WaitForChangedResult.ChangeType">
      <summary>Ruft den Typ der aufgetretenen Änderung ab oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.IO.WatcherChangeTypes" />-Werte.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.Name">
      <summary>Ruft den Namen der geänderten Datei oder des Verzeichnisses ab oder legt diesen fest.</summary>
      <returns>Der Name der geänderten Datei oder des Verzeichnisses.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.OldName">
      <summary>Ruft den ursprünglichen Namen der umbenannten Datei oder des Verzeichnisses ab oder legt diesen fest.</summary>
      <returns>Der ursprüngliche Name der umbenannten Datei oder des Verzeichnisses.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.TimedOut">
      <summary>Ruft einen Wert ab, der angibt, ob ein Timeout des Wartevorgangs erfolgt ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn für die <see cref="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)" />-Methode ein Timeout erfolgt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.WatcherChangeTypes">
      <summary>Änderungen, die an einer Datei oder einem Verzeichnis auftreten können.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.All">
      <summary>Das Erstellen, Löschen, Ändern oder Umbenennen einer Datei oder eines Ordners.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Changed">
      <summary>Die Änderung einer Datei oder eines Ordners. Es gibt u. a. folgende Arten von Änderungen: Änderungen an der Größe, an Attributen, an den Sicherheitseinstellungen und am Zeitpunkt des letzten Schreibvorgangs bzw. des letzten Zugriffs.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Created">
      <summary>Die Erstellung einer Datei oder eines Ordners.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Deleted">
      <summary>Das Löschen einer Datei oder eines Ordners.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Renamed">
      <summary>Die Umbenennung einer Datei oder eines Ordners.</summary>
    </member>
  </members>
</doc>