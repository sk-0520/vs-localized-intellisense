<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>Gibt verschiedene Optionen an, die beim Generieren von .NET Framework-Typen für einen XML-Webdienst verwendet werden.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>Aktiviert die Datenbindung.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>Erstellt Ereignisse für den asynchronen Aufruf von Webmethoden.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>Erstellt die Begin-Methode und die End-Methode für den asynchronen Aufruf von Webmethoden.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>Generiert explizit angeordneten Serialisierungscode, entsprechend der Angabe durch die <see langword="Order" />-Eigenschaft der Attribute <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> und <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>Stellt primitive Typen anhand von Eigenschaften dar.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>Stellt primitive Typen nach Feldern und primitive Typen nach <see cref="N:System" />-Namespacetypen dar.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>Stellt statische Methoden bereit, um Eingabetext in Namen für Codeentitäten zu konvertieren.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.CodeIdentifier" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>Erzeugt aus einer Eingabezeichenfolge eine Zeichenfolge in Höckerschreibweise.</summary>
      <param name="identifier">Der Name einer Codeentität, z. B. ein Methodenparameter, der normalerweise von einem XML-Element- oder -Attributnamen übernommen wird.</param>
      <returns>Eine Version der Parameterzeichenfolge in Höckerschreibweise.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>Erzeugt aus einer Eingabezeichenfolge eine Zeichenfolge in Pascal-Schreibweise.</summary>
      <param name="identifier">Der Name einer Codeentität, z. B. ein Methodenparameter, der normalerweise von einem XML-Element- oder -Attributnamen übernommen wird.</param>
      <returns>Eine Version der Parameterzeichenfolge in Pascal-Schreibweise.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>Erzeugt einen gültigen Codeentitätsnamen aus einer Eingabezeichenfolge.</summary>
      <param name="identifier">Der Name einer Codeentität, z. B. ein Methodenparameter, der normalerweise von einem XML-Element- oder -Attributnamen übernommen wird.</param>
      <returns>Eine Zeichenfolge, die als Codebezeichner verwendet werden kann, z. B. der Name eines Methodenparameters.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>Verwaltet eine Gruppe von Namen für entsprechende Codeentitäten oder Typzuordnungen, die von der Serialisierungsinfrastruktur von .NET Framework generiert werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Klasse und bestimmt, ob für die Codebezeichner die Groß- und Kleinschreibung beachtet werden muss.</summary>
      <param name="caseSensitive">
        <see langword="true" />, wenn für die Bezeichner die Groß- und Kleinschreibung zu beachten ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>Fügt dem Bereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz eine benannte Codeentität oder eine Typzuordnung hinzu.</summary>
      <param name="identifier">Ein Name, mit dessen Hilfe die Codeentität indiziert wird.</param>
      <param name="value">Die Informationen zur Codeentität oder der Typzuordnung.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>Verhindert, dass ein angegebener Name innerhalb des Gültigkeitsbereichs der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz verwendet wird.</summary>
      <param name="identifier">Ein Name, der innerhalb des Gültigkeitsbereichs der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz nicht verfügbar ist.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>Fügt dem Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz eine benannte Codeentität oder Typzuordnung hinzu und stellt sicher, dass der Name im Gültigkeitsbereich eindeutig ist.</summary>
      <param name="identifier">Ein möglicher Name, mit dessen Hilfe die Codeentität indiziert wird.</param>
      <param name="value">Die Informationen zur Codeentität oder der Typzuordnung.</param>
      <returns>Der Bezeichnerparameterwert oder eine geänderte Zeichenfolge, wenn ein Namenskonflikt vorliegt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>Entfernt alle Codeentitäten oder Typzuordnungen einschließlich ihrer Namen aus dem Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>Bestimmt, ob ein angegebener Name bereits im Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz verwendet wird.</summary>
      <param name="identifier">Der Name, für den überprüft werden soll, ob er im Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz verwendet wird.</param>
      <returns>
        <see langword="true" />, wenn der Name bereits verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>Stellt sicher, dass die Eingabe in der richtigen Groß- und Kleinschreibung erfolgt, indem der Name entsprechend dem Wert der <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />-Eigenschaft geändert wird.</summary>
      <param name="identifier">Der Name, der ggf. geändert werden muss.</param>
      <returns>Eine Zeichenfolge, die dem Eingabebezeichner entspricht bzw. deren erster Buchstabe hinsichtlich der Groß- und Kleinschreibung geändert wurde.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>Bestimmt, ob der Eingabename in Konflikt mit einem anderen Namen im Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz steht. Wenn ein Konflikt vorliegt, wird eine geänderte Zeichenfolge generiert.</summary>
      <param name="identifier">Der Name, der geändert werden muss, wenn er nicht eindeutig ist.</param>
      <returns>Der Bezeichnerparameterwert oder eine geänderte Zeichenfolge, wenn ein Namenskonflikt vorliegt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>Entfernt die durch den Eingabenamen angegebene Codeentität oder Typzuordnung aus dem Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz.</summary>
      <param name="identifier">Der Name der zu entfernenden Codeentität oder Typzuordnungsinformationen.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>Entfernt den Eingabenamen aus den reservierten Namen der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz.</summary>
      <param name="identifier">Ein Name, der innerhalb des Gültigkeitsbereichs der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz nicht verfügbar ist.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>Gibt ein Array der Codeentitäten oder Typzuordnungen im Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz zurück.</summary>
      <param name="type">Der Typ aller Codeentitäten oder Typzuordnungen für die Instanz.</param>
      <returns>Ein Array der Codeentitäten oder Typzuordnungen, die durch das <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Objekt gespeichert werden.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>Ruft einen Wert ab, der angibt, ob die Instanz die Höckerschreibweise verwendet, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um anzugeben, dass die Instanz die Höckerschreibweise verwendet; <see langword="false" />, um anzugeben, dass die Instanz die Pascal-Schreibweise verwendet.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>Beschreibt den Kontext, in dem eine Gruppe von Schemas an .NET Framework-Codeentitäten gebunden wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.ImportContext" />-Klasse für die angegebenen Codebezeichner mit der angegebenen Option für die gemeinsame Verwendung von Typen.</summary>
      <param name="identifiers">Die Codeentitäten, für die der Kontext gilt.</param>
      <param name="shareTypes">Ein <see cref="T:System.Boolean" />-Wert, der bestimmt, ob benutzerdefinierte Typen von Schemas gemeinsam verwendet werden.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>Ruft einen Wert ab, der bestimmt, ob benutzerdefinierte Typen gemeinsam verwendet werden.</summary>
      <returns>
        <see langword="true" />, wenn benutzerdefinierte Typen von Schemas gemeinsam verwendet werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>Ruft eine Reihe von Codeentitäten ab, für die der Kontext gilt.</summary>
      <returns>Eine Instanz von <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, die die Codeentitäten angibt, für die der Kontext gilt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>Ruft eine Auflistung von Warnungen ab, die beim Import der Codeentitätsbeschreibungen generiert werden.</summary>
      <returns>Eine <see cref="T:System.Collections.Specialized.StringCollection" /> mit Warnungen, die beim Import der Codeentitätsbeschreibungen generiert wurden.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>Richtet eine <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" />-Eigenschaft zur Verwendung durch die .NET Framework-Infrastruktur ein.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>Ruft einen Wert ab, der angibt, ob Leerraum- und Attributwerte normalisiert werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Attributwerte für Leerräume normalisiert werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>Ruft einen Wert ab, der angibt, wie Leerräume bei der XML-Analyse behandelt werden, oder legt diesen fest.</summary>
      <returns>Ein Member der <see cref="T:System.Xml.WhitespaceHandling" />-Enumeration, das die Behandlung von Leerräumen bei der XML-Analyse beschreibt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>Beschreibt einen Schemaimporter.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>Gibt an, dass <see cref="T:System.Xml.Serialization.XmlSerializer" /> den Klassenmember als codiertes SOAP-Attribut serialisieren muss.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />-Klasse unter Verwendung des angegebenen Werts als Name des XML-Attributs.</summary>
      <param name="attributeName">Der Name des XML-Attributs.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>Ruft den Namen des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Attributs ab oder legt diesen fest.</summary>
      <returns>Der Name des XML-Attributs. Der Standardwert ist der Memberbezeichner.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>Ruft den XSD (XML Schema Definition)-Datentyp des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten SOAP-Attributs ab oder legt diesen fest.</summary>
      <returns>Ein XML-Schema Datentyp.</returns>
      <exception cref="T:System.Exception">Der angegebene XML-Schemadatentyp kann dem .NET-Datentyp nicht zugeordnet werden.</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>Ruft den XML-Namespace des XML-Attributs ab oder legt diesen fest.</summary>
      <returns>Der XML-Namespace des XML-Attributs.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>Ermöglicht das Überschreiben von Attributen, die auf Eigenschaften, Felder und Klassen beim Serialisieren oder Deserialisieren eines Objekts als codiertes SOAP durch einen <see cref="T:System.Xml.Serialization.XmlSerializer" /> angewendet werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>Fügt der Auflistung von <see cref="T:System.Xml.Serialization.SoapAttributes" />-Objekten, die in <see cref="T:System.Xml.Serialization.SoapAttributes" /> enthalten sind, ein <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> hinzu. Der <paramref name="type" />-Parameter gibt das Objekt an, das von <see cref="T:System.Xml.Serialization.SoapAttributes" /> überschrieben werden soll. Der <paramref name="member" />-Parameter gibt den Namen des zu überschreibenden Members an.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des zu überschreibenden Objekts.</param>
      <param name="member">Der Name des zu überschreibenden Members.</param>
      <param name="attributes">Ein <see cref="T:System.Xml.Serialization.SoapAttributes" />, das die überschreibenden Attribute darstellt.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>Fügt einer Auflistung von <see cref="T:System.Xml.Serialization.SoapAttributes" />-Objekten ein <see cref="T:System.Xml.Serialization.SoapAttributes" /> hinzu. Der <paramref name="type" />-Parameter gibt ein Objekt an, das von <see cref="T:System.Xml.Serialization.SoapAttributes" /> überschrieben werden soll.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des Objekts, das überschrieben wird.</param>
      <param name="attributes">Ein <see cref="T:System.Xml.Serialization.SoapAttributes" />, das die überschreibenden Attribute darstellt.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>Ruft das dem angegebenen (Basisklassen-)Typ zugeordnete Objekt ab.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Basisklasse, die der Auflistung der abzurufenden Attribute zugeordnet ist.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.SoapAttributes" />, das die Auflistung der überschreibenden Attribute darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>Ruft das dem angegebenen (Basisklassen-)Typ zugeordnete Objekt ab. Durch den <paramref name="member" />-Parameter wird der zu überschreibende Member der Basisklasse angegeben.</summary>
      <param name="type">Der <see cref="T:System.Type" /> der Basisklasse, der der Auflistung der zu überschreibenden Attribute zugeordnet ist.</param>
      <param name="member">Der Name des überschriebenen Member, der das zurückzugebende <see cref="T:System.Xml.Serialization.SoapAttributes" /> angibt.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.SoapAttributes" />, das die Auflistung der überschreibenden Attribute darstellt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>Stellt eine Auflistung von Attributobjekten dar, die das Serialisieren und Deserialisieren von SOAP-Methoden durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> steuern.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributes" />-Klasse unter Verwendung des angegebenen benutzerdefinierten Typs.</summary>
      <param name="provider">Ein beliebiges Objekt, das die <see cref="T:System.Reflection.ICustomAttributeProvider" />-Schnittstelle implementiert, z. B. die <see cref="T:System.Type" />-Klasse.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>Ruft das zu überschreibende <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> ab oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />, das das Verhalten des <see cref="T:System.Xml.Serialization.XmlSerializer" /> bei der Serialisierung des Members überschreibt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>Ruft den Standardwert eines XML-Elements oder -Attributs ab oder legt diesen fest.</summary>
      <returns>Ein Objekt, das den Standardwert eines XML-Elements oder -Attributs darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>Ruft das zu überschreibende <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> ab oder legt dieses fest.</summary>
      <returns>Das zu überschreibende <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> eine SOAP-Enumeration serialisiert, oder legt dieses fest.</summary>
      <returns>Ein Objekt, das angibt, wie der <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein Enumerationsmember serialisiert.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine öffentliche Eigenschaft als codiertes SOAP XML serialisiert, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Feld oder die Eigenschaft nicht serialisieren soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>Ruft ein Objekt ab, das den <see cref="T:System.Xml.Serialization.XmlSerializer" /> anweist, wie ein Objekttyp in codiertes SOAP XML serialisiert werden soll, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />, das entweder ein einer Klassendeklaration zugewiesenes <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> überschreibt oder einer Klassendeklaration zugewiesen wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>Gibt an, dass <see cref="T:System.Xml.Serialization.XmlSerializer" /> den öffentlichen Memberwert als codiertes SOAP XML-Element serialisieren soll.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapElementAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapElementAttribute" />-Klasse und gibt den Namen des XML-Elements an.</summary>
      <param name="elementName">Der XML-Elementname des serialisierten Members.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>Ruft den XSD-Datentyp (XML Schema Definition) des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns>Einer der XML-Schemadatentypen.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>Ruft den Namen des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns>Der Name des generierten XML-Elements. Der Standardwert ist der Memberbezeichner.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>Ruft einen Wert ab oder legt diesen fest, der angibt, ob der <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member, dessen <see langword="xsi:null" />-Attribut auf "1" festgelegt ist, serialisieren muss.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:null" />-Attribut generiert, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>Steuert die Art, in der <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Enumerationsmember serialisiert.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />-Klasse mit dem angegebenen Elementnamen.</summary>
      <param name="name">Der von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierte XML-Elementname.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>Ruft den Wert ab, der bei der Serialisierung einer Enumeration durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> in einem XML-Dokument generiert bzw. bei der Deserialisierung des Enumerationsmembers erkannt wurde, oder legt diesen fest.</summary>
      <returns>Der Wert, der bei der Serialisierung der Enumeration durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> in einem XML-Dokument generiert bzw. bei der Deserialisierung des Enumerationsmembers erkannt wurde.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>Weist <see cref="T:System.Xml.Serialization.XmlSerializer" /> an, den Eigenschaftswert des öffentlichen Felds oder den öffentlichen Lese-/Schreibeigenschaftswert nicht zu serialisieren.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>Ermöglicht dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Erkennen eines Typs beim Serialisieren oder Deserialisieren eines Objekts als codiertes SOAP-XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>Initialisiert mithilfe des angegebenen Typs eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />-Klasse.</summary>
      <param name="type">Der Typ des aufzunehmenden Objekts.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>Ruft den Typ des Objekts ab, der bei der Serialisierung oder Deserialisierung eines Objekts verwendet werden soll, oder legt diesen fest.</summary>
      <returns>Der Typ des aufzunehmenden Objekts.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>Generiert Zuordnungen zu SOAP-codierten Nachrichten von .NET Framework-Typen oder Informationen zu Webdienstmethoden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse und gibt einen standardmäßigen XML-Namespace für importierte Typzuordnungen an.</summary>
      <param name="defaultNamespace">Der XML-Standardnamespace, der für importierte Typzuordnungen verwendet wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse und gibt Überschreibungen für die XML-Serialisierung an.</summary>
      <param name="attributeOverrides">Ein <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />-Objekt, das die Serialisierung zugeordneter Typen mit SOAP-Codierung durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse überschreibt.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse und gibt XML-Serialisierungsüberschreibungen und einen standardmäßigen XML-Namespace an.</summary>
      <param name="attributeOverrides">Ein <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />-Objekt, das die Serialisierung zugeordneter Typen mit SOAP-Codierung durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse überschreibt.</param>
      <param name="defaultNamespace">Der XML-Standardnamespace, der für importierte Typzuordnungen verwendet wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>Generiert interne Typzuordnungen für Informationen, die von einer Webdienstmethode erfasst werden.</summary>
      <param name="elementName">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members">Ein Array von .NET Framework-Codeentitäten, die zu einer Webdienstmethode gehören.</param>
      <returns>Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Generiert interne Typzuordnungen für Informationen, die von einer Webdienstmethode erfasst werden.</summary>
      <param name="elementName">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members">Ein Array von .NET Framework-Codeentitäten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement">
        <see langword="true" />, um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Meldung aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" />, um eine Webdienstbindung im RPC-Stil anzugeben, <see langword="false" />, um eine Webdienstbindung im Dokumentstil oder einen SOAP-Header anzugeben.</param>
      <returns>Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Generiert interne Typzuordnungen für Informationen, die von einer Webdienstmethode erfasst werden.</summary>
      <param name="elementName">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members">Ein Array von .NET Framework-Codeentitäten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement">
        <see langword="true" />, um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Meldung aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" />, um eine Webdienstbindung im RPC-Stil anzugeben, <see langword="false" />, um eine Webdienstbindung im Dokumentstil oder einen SOAP-Header anzugeben.</param>
      <param name="validate">
        <see langword="true" />, um anzugeben, dass eine generierte Deserialisierung eine Überprüfung auf den erwarteten qualifizierten Namen des Wrapperelements ausführen soll, andernfalls <see langword="false" />. Der Wert dieses Parameters ist nur relevant, wenn der Wert des <paramref name="hasWrapperElement" />-Parameters <see langword="true" /> ist.</param>
      <returns>Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Generiert interne Typzuordnungen für Informationen, die von einer Webdienstmethode erfasst werden.</summary>
      <param name="elementName">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members">Ein Array von .NET Framework-Codeentitäten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement">
        <see langword="true" />, um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Meldung aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" />, um eine Webdienstbindung im RPC-Stil anzugeben, <see langword="false" />, um eine Webdienstbindung im Dokumentstil oder einen SOAP-Header anzugeben.</param>
      <param name="validate">
        <see langword="true" />, um anzugeben, dass eine generierte Deserialisierung eine Überprüfung auf den erwarteten qualifizierten Namen des Wrapperelements ausführen soll, andernfalls <see langword="false" />. Der Wert dieses Parameters ist nur relevant, wenn der Wert des <paramref name="hasWrapperElement" />-Parameters <see langword="true" /> ist.</param>
      <param name="access">Einer der <see cref="T:System.Xml.Serialization.XmlMappingAccess" />-Werte.</param>
      <returns>Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Generiert für einen .NET Framework-Typ eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <returns>Interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Generiert für einen .NET Framework-Typ eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <param name="defaultNamespace">Der XML-Standardnamespace, der verwendet werden soll.</param>
      <returns>Interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>Platziert Zuordnungen für einen Typ im Kontext der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Instanz zur späteren Verwendung, wenn Importmethoden aufgerufen werden.</summary>
      <param name="type">Der .NET Framework-Typ, für den Zuordnungsinformationen gespeichert werden sollen.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Platziert Zuordnungen für abgeleiteten Typen im Kontext der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Instanz zur späteren Verwendung, wenn Importmethoden aufgerufen werden.</summary>
      <param name="provider">Ein <see cref="T:System.Reflection.ICustomAttributeProvider" />-Reflektionsobjekt, das benutzerdefinierte Attribute enthält, die vom <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />-Attribut abgeleitet sind.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>Stellt bestimmte Attribute eines XSD-&lt;<see langword="part" />&gt;-Elements in einem WSDL-Dokument zum Generieren von Klassen aus dem Dokument dar.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapSchemaMember" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>Ruft einen Wert ab, der dem Namensattribut des WSDL-Teilelements entspricht, oder legt diesen fest.</summary>
      <returns>Der Elementname.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>Ruft einen Wert ab, der dem Typattribut des WSDL-Teilelements entspricht, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlQualifiedName" />, der dem XML-Typ entspricht.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>Steuert das Schema, das von <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz als SOAP-codiertes XML generiert wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse und gibt den Namen des XML-Typs an.</summary>
      <param name="typeName">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse und gibt den Namen und XML-Namespace des Typs an.</summary>
      <param name="typeName">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
      <param name="ns">Der XML-Namespace des Typs.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>Ruft einen Wert ab, der angibt, ob der Typ in SOAP-codierte XML-Schemadokumente aufgenommen werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der Typ in SOAP-codierte XML-Schemadokumente aufgenommen werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>Ruft den Namespace des XML-Typs ab oder legt diesen fest.</summary>
      <returns>Der Namespace des XML-Typs. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>Ruft den Namen des XML-Typs ab oder legt diesen fest.</summary>
      <returns>Der Name des XML-Typs. Der Standardwert ist der Klassenname.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>Stellt Daten für ein in einem codierten SOAP-XML-Stream bei der Deserialisierung gefundenes Objekt bereit, das bekannt ist, auf das aber nicht verwiesen wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />-Klasse.</summary>
      <param name="o">Das Objekt ohne Verweis.</param>
      <param name="id">Eine eindeutige Zeichenfolge zur Identifikation des Objekts ohne Verweis.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>Ruft die ID des Objekts ab.</summary>
      <returns>Die ID des Objekts.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>Ruft das deserialisierte Objekt ab, auf das aber nicht verwiesen wird.</summary>
      <returns>Das deserialisierte Objekt, auf das nicht verwiesen wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />-Ereignis einer <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>Stellt eine Auflistung von<see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Objekten dar.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Fügt der Auflistung ein <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> hinzu.</summary>
      <param name="attribute">Das hinzuzufügende <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns>Der Index des neu hinzugefügten <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Ruft einen Wert ab, der angibt, ob das angegebene <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in der Auflistung vorhanden ist.</summary>
      <param name="attribute">Das gesuchte <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>Kopiert die gesamte Auflistung in ein kompatibles eindimensionales Array von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Objekten, beginnend ab dem angegebenen Index im Zielarray.</summary>
      <param name="array">Das eindimensionale Array von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Objekten, in das die Elemente aus der Auflistung kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Ruft den Index der angegebenen <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> ab.</summary>
      <param name="attribute">Das <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, dessen Index gesucht wird.</param>
      <returns>Der Index des angegebenen <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Fügt einen <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der Index, an dem <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> eingefügt wird.</param>
      <param name="attribute">Der einzufügende <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>Ruft die <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Klasse am angegebenen Index ab oder legt diese fest.</summary>
      <param name="index">Der Index des <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> am angegebenen Index.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Entfernt den angegebenen <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> aus der Auflistung.</summary>
      <param name="attribute">Das zu entfernende <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Element.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>Gibt an, dass <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein spezieller Klassenmember als Array von XML-Elementen serialisieren muss.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />-Klasse und gibt den in der XML-Dokumentinstanz generierten XML-Elementnamen an.</summary>
      <param name="elementName">Der Name des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Elements.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>Ruft den für das serialisierte Array angegebenen XML-Elementnamen ab oder legt diesen fest.</summary>
      <returns>Der XML-Elementname des serialisierten Arrays. Der Standardname ist der Name des Members, dem <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> zugewiesen ist.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>Ruft einen Wert ab, der angibt, ob der von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierte XML-Elementname gekennzeichnet oder nicht gekennzeichnet ist, oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte. Die Standardeinstellung ist <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member als leeres XML-Tag, bei dem das <see langword="xsi:nil" />-Attribut auf <see langword="true" /> festgelegt ist, serialisieren muss, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:nil" />-Attribut generiert, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>Ruft den Namespace des XML-Elements ab oder legt diesen fest.</summary>
      <returns>Der Namespace des XML-Elements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>Ruft die explizite Reihenfolge ab, in der die Elemente serialisiert oder deserialisiert werden, oder legt diese fest.</summary>
      <returns>Die Reihenfolge der Codegenerierung.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>Stellt ein Attribut dar, das die abgeleiteten Typen angibt, welche der <see cref="T:System.Xml.Serialization.XmlSerializer" /> in ein serialisiertes Array einfügen kann.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den Namen des im XML-Dokument generierten XML-Elements an.</summary>
      <param name="elementName">Der Name des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den Namen des im XML-Dokument generierten XML-Elements sowie den <see cref="T:System.Type" /> an, der in das generierte XML-Dokument eingefügt werden kann.</summary>
      <param name="elementName">Der Name des XML-Elements.</param>
      <param name="type">Der <see cref="T:System.Type" /> des zu serialisierenden Objekts.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den <see cref="T:System.Type" /> an, der in das serialisierte Array eingefügt werden kann.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des zu serialisierenden Objekts.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>Ruft den XML-Datentyp des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns>Ein XSD-Datentyp (XML Schema Definition).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>Ruft den Namen des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns>Der Name des generierten XML-Elements. Der Standardwert ist der Memberbezeichner.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>Ruft einen Wert ab, der angibt, ob der Name des generierten XML-Elements gekennzeichnet ist, oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte. Die Standardeinstellung ist <see langword="XmlSchemaForm.None" />.</returns>
      <exception cref="T:System.Exception">Die <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />-Eigenschaft wird auf <see langword="XmlSchemaForm.Unqualified" /> festgelegt, und es wird ein <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />-Wert angegeben.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member als leeres XML-Tag, bei dem das <see langword="xsi:nil" />-Attribut auf <see langword="true" /> festgelegt ist, serialisieren muss, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:nil" />-Attribut generiert, andernfalls <see langword="false" />, und es wird keine Instanz generiert. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>Ruft den Namespace des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns>Der Namespace des generierten XML-Elements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>Ruft die Ebene in einer Hierarchie von XML-Elementen ab, auf die das <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> angewendet wird, oder legt diese fest.</summary>
      <returns>Der nullbasierte Index einer Reihe von Indizes in einem Array von Arrays.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>Ruft den in einem Array zulässigen Typ ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Type" />, der in dem Array zulässig ist.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>Stellt eine Auflistung von<see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Objekten dar.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Fügt der Auflistung ein <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> hinzu.</summary>
      <param name="attribute">Der der Auflistung hinzuzufügende <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</param>
      <returns>Der Index des hinzugefügten Elements.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Gibt an, ob die Auflistung das angegebene <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> enthält.</summary>
      <param name="attribute">Der zu überprüfende <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung die angegebene <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>Kopiert ein <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Array in die Auflistung, beginnend am angegebenen Zielindex.</summary>
      <param name="array">Das Array von <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Objekten, die in die Auflistung kopiert werden sollen.</param>
      <param name="index">Der Index, ab dem mit dem Kopieren der Attribute begonnen wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Gibt einen null-basierten Index des ersten Auftretens der angegebenen <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> in der Auflistung zurück oder -1, wenn das Attribut in der Auflistung nicht gefunden wird.</summary>
      <param name="attribute">Die <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />, die in der Auflistung gesucht werden soll.</param>
      <returns>Der erste Index des <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> in der Auflistung, oder -1, wenn das Attribut in der Auflistung nicht gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Fügt einen <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der Index, an dem das Attribut eingefügt wird.</param>
      <param name="attribute">Der einzufügende <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Auflistungsmembers, der abgerufen oder festgelegt werden soll.</param>
      <returns>Der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> am angegebenen Index.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Entfernt ein <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> aus der Auflistung, sofern vorhanden.</summary>
      <param name="attribute">Das zu entfernende <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Element.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>Ruft ein Objekt ab, das das unbekannte XML-Attribut darstellt.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlAttribute" />, das das unbekannte XML-Attribut darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>Ruft eine durch Trennzeichen getrennte Liste von XML-Attributnamen ab, von denen erwartet wird, dass sie in einer XML-Dokumentinstanz vorhanden sind.</summary>
      <returns>Eine durch Trennzeichen getrennte Liste von XML-Attributnamen. Jeder Name besitzt das folgende Format: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>Ruft die Zeilennummer des unbekannten XML-Attributs ab.</summary>
      <returns>Die Zeilennummer des unbekannten XML-Attributs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>Ruft die Position des unbekannten XML-Attributs in der Zeile ab.</summary>
      <returns>Die Positionsnummer des unbekannten XML-Attributs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>Ruft das Objekt ab, das gerade deserialisiert wird.</summary>
      <returns>Das Objekt, das deserialisiert wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>Stellt die Methode dar, die <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>Ermöglicht das Überschreiben der Attribute von Eigenschaften, Feldern und Klassen beim Serialisieren oder Deserialisieren eines Objekts mit <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>Fügt der Auflistung von <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekten ein <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt hinzu. Der <paramref name="type" />-Parameter gibt ein Objekt an, das überschrieben werden soll. Der <paramref name="member" />-Parameter gibt den Namen des zu überschreibenden Members an.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des zu überschreibenden Objekts.</param>
      <param name="member">Der Name des zu überschreibenden Members.</param>
      <param name="attributes">Ein <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt, das die überschreibenden Attribute darstellt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>Fügt der Auflistung von <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekten ein <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt hinzu. Der <paramref name="type" />-Parameter gibt ein Objekt an, das vom <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt überschrieben werden soll.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des Objekts, das überschrieben wird.</param>
      <param name="attributes">Ein <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt, das die überschreibenden Attribute darstellt.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>Ruft das dem angegebenen Basisklassentyp zugeordnete Objekt ab.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Basisklasse, die der Auflistung der abzurufenden Attribute zugeordnet ist.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlAttributes" />, das die Auflistung der überschreibenden Attribute darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>Ruft das dem angegebenen (Basisklassen-)Typ zugeordnete Objekt ab. Durch den member-Parameter wird der zu überschreibende Member der Basisklasse angegeben.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Basisklasse, die der Auflistung der gewünschten Attribute zugeordnet ist.</param>
      <param name="member">Der Name des überschriebenen Member, der das zurückzugebende <see cref="T:System.Xml.Serialization.XmlAttributes" /> angibt.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlAttributes" />, das die Auflistung der überschreibenden Attribute darstellt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>Stellt eine Auflistung von Attributobjekten dar, die steuern, wie der <see cref="T:System.Xml.Serialization.XmlSerializer" /> Objekte serialisiert und deserialisiert.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributes" />-Klasse und passt die Serialisierung und Deserialisierung durch den <see cref="T:System.Xml.Serialization.XmlSerializer" /> an.</summary>
      <param name="provider">Eine Klasse, die alternative Implementierungen von Attributen zur Steuerung der XML-Serialisierung bereitstellen kann.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>Ruft das zu überschreibende <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> ab oder legt dieses fest.</summary>
      <returns>Das zu überschreibende <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>Ruft die Auflistung der zu überschreibenden <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Objekte ab.</summary>
      <returns>Das <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />, das die Auflistung der <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Objekte darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine Lese-/Schreibeigenschaft serialisiert, die ein Array zurückgibt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine Lese-/Schreibeigenschaft serialisiert, die ein Array zurückgibt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>Ruft eine Auflistung von Objekten ab, die die von <see cref="T:System.Xml.Serialization.XmlSerializer" /> verwendete Serialisierung von Elementen angeben, die in ein von öffentlichen Feldern oder Lese-/Schreibeigenschaften zurückgegebenes Array eingefügt wurden, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />-Objekt, das eine Auflistung von <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Objekten enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine öffentliche Lese-/Schreibeigenschaft als XML-Attribut serialisiert, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, das die Serialisierung eines öffentlichen Felds oder einer Lese-/Schreibeigenschaft als XML-Attribut steuert.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>Ruft ein Objekt ab, mit dem Sie eine Reihe von Auswahlmöglichkeiten unterscheiden können, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />, das auf einen Klassenmember angewendet werden kann, der als <see langword="xsi:choice" />-Element serialisiert wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>Ruft den Standardwert eines XML-Elements oder -Attributs ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Object" />, das den Standardwert eines XML-Elements oder -Attributs darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>Ruft eine Auflistung von Objekten ab, die angeben, wie öffentliche Felder oder Lese-/Schreibeigenschaften von <see cref="T:System.Xml.Serialization.XmlSerializer" /> als XML-Elemente serialisiert werden, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlElementAttributes" />, das eine Auflistung von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Objekten enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Enumerationsmember serialisiert, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />, das angibt, auf welche Weise ein Enumerationsmember von <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisiert wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine öffentliche Lese-/Schreibeigenschaft serialisiert, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Feld oder die Eigenschaft nicht serialisieren soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>Ruft einen Wert ab, der angibt, ob alle Namespacedeklarationen beibehalten werden sollen, wenn ein Objekt überschrieben wird, das einen Member enthält, der ein <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Objekt zurückgibt, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Namespacedeklarationen beibehalten werden sollen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> eine Klasse als XML-Stammelement serialisiert, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das eine Klasse überschreibt, die als XML-Stammelement attributiert ist.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>Ruft ein Objekt ab, mit dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> angewiesen wird, ein öffentliches Feld oder eine öffentliche Lese-/Schreibeigenschaft als XML-Text zu serialisieren, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlTextAttribute" />, das die Standardserialisierung öffentlicher Eigenschaften oder Felder überschreibt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> eine Klasse serialisiert, der das <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> zugewiesen wurde, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, das ein <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> überschreibt, das einer Klassendeklaration zugewiesen wurde.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>Gibt an, dass der Member durch Verwenden einer Enumeration eindeutig bestimmt werden kann.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />-Klasse.</summary>
      <param name="name">Der Membername, der die Enumeration zurückgibt, mit der eine Auswahl bestimmt wird.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>Ruft den Namen des Felds ab, das die Enumeration zurückgibt, mit der Typen bestimmt werden, oder legt diesen fest.</summary>
      <returns>Der Name eines Felds, das eine Enumeration zurückgibt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>Enthält Felder, die zum Übergeben von Ereignisdelegaten an eine threadsichere <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />-Methode des <see cref="T:System.Xml.Serialization.XmlSerializer" /> verwendet werden können.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Ruft ein Objekt ab, das die Methode zum Behandeln des <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />-Ereignisses darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />, der auf den Ereignishandler zeigt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Ruft ein Objekt ab, das die Methode zum Behandeln des <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignisses darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />, der auf den Ereignishandler zeigt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Ruft ein Objekt ab, das die Methode zum Behandeln des <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignisses darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />, der auf den Ereignishandler zeigt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Ruft ein Objekt ab, das die Methode zum Behandeln des <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />-Ereignisses darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />, der auf den Ereignishandler zeigt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>Stellt eine Auflistung von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Objekten dar, die vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> zum Überschreiben des Standardverfahrens für die Serialisierung einer Klasse verwendet wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Fügt der Auflistung ein <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> hinzu.</summary>
      <param name="attribute">Das hinzuzufügende <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
      <returns>Der nullbasierte Index des neu hinzugefügten Elements.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Ermittelt, ob die Auflistung das angegebene Objekt enthält.</summary>
      <param name="attribute">Das zu suchende <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Element.</param>
      <returns>
        <see langword="true" />, wenn das Objekt in der Aufzählung vorhanden ist; sonst <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>Kopiert das <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> oder einen Teil davon in ein eindimensionales Array.</summary>
      <param name="array">Das <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Array, welches die kopierten Elemente enthält.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Ruft den Index der angegebenen <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> ab.</summary>
      <param name="attribute">Die <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> dessen Index abgerufen wird.</param>
      <returns>Der nullbasierte Index von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>Fügt ein <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> in die Auflistung ein.</summary>
      <param name="index">Der null-basierte Index, wo der Member eingefügt wurde.</param>
      <param name="attribute">Der einzufügende <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element am angegebenen Index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index in <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Entfernt das angegebene Objekt aus der Auflistung.</summary>
      <param name="attribute">Die aus der Auflistung zu entfernende <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>Ruft das Objekt ab, das das unbekannte XML-Element darstellt.</summary>
      <returns>Das Objekt ab, das das unbekannte XML-Element darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>Ruft eine durch Trennzeichen getrennte Liste von XML-Elementnamen ab, von denen erwartet wird, dass sie in einer XML-Dokumentinstanz vorhanden sind.</summary>
      <returns>Eine durch Trennzeichen getrennte Liste von XML-Elementnamen. Jeder Name besitzt das folgende Format: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>Ruft die Zeilennummer ab, in der sich das unbekannte Element befindet, wenn der XML-Reader ein <see cref="T:System.Xml.XmlTextReader" /> ist.</summary>
      <returns>Die Zeilennummer, in der sich das unbekannte Element befindet, wenn der XML-Reader ein <see cref="T:System.Xml.XmlTextReader" /> ist, andernfalls -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>Ruft die Stelle in der Zeile ab, in der sich das unbekannte Element befindet, wenn der XML-Reader ein <see cref="T:System.Xml.XmlTextReader" /> ist.</summary>
      <returns>Die Zeilennummer, in der sich das unbekannte Element befindet, wenn der XML-Reader ein <see cref="T:System.Xml.XmlTextReader" /> ist, andernfalls -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>Ruft das von <see cref="T:System.Xml.Serialization.XmlSerializer" /> deserialisierte Objekt ab.</summary>
      <returns>Das Objekt, das durch den <see cref="T:System.Xml.Serialization.XmlSerializer" /> deserialisiert wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignis einer <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>Ermöglicht dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Erkennen eines Typs beim Serialisieren oder Deserialisieren eines Objekts.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />-Klasse.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des aufzunehmenden Objekts.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>Ruft den Typ des aufzunehmenden Objekts ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Type" /> des aufzunehmenden Objekts.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>Unterstützt Zuordnungen zwischen .NET Framework-Typen und XML-Schemadatentypen.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>Ruft den Namen des zugeordneten Elements ab.</summary>
      <returns>Der Name des zugeordneten Elements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>Ruft den Namespace des zugeordneten Elements ab.</summary>
      <returns>Der Namespace des zugeordneten Elements.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>Legt den Schlüssel fest, der zum Ermitteln der Zuordnung verwendet wird.</summary>
      <param name="key">Der Suchschlüssel.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>Ruft den Namen des XSD-Elements der Zuordnung ab.</summary>
      <returns>Der XSD-Elementname.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>Gibt an, ob eine Zuordnung über Lese- oder Schreibzugriff oder über beides verfügt.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>Es werden sowohl Lese- als auch Schreibmethoden generiert.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>Es werden Lesemethoden generiert.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>Es werden Schreibmethoden generiert.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>Ordnet eine Codeentität in einer .NET Framework-Webdienstmethode einem Element in einer WSDL-Meldung (Web Services Description Language) zu.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>Ruft einen Wert ab, der angibt, ob der .NET Framework-Typ einem XML-Element oder -Attribut eines Typs zugeordnet ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der Typ einem XML-Element oder -Attribut zugeordnet ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>Ruft einen Wert ab, der angibt, ob im zugehörigen Feld des .NET Framework-Typs ein Wert angegeben ist.</summary>
      <returns>
        <see langword="true" />, wenn im zugehörigen Feld ein Wert angegeben ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>Ruft den nicht qualifizierten Namen der XML-Elementdeklaration ab, die für diese Zuordnung gilt.</summary>
      <returns>Der nicht qualifizierte Name der XML-Elementdeklaration, die für diese Zuordnung gilt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>Ruft den Namen des Webdienstmethoden-Members ab, der durch diese Zuordnung dargestellt wird.</summary>
      <returns>Der Name des Webdienstmethoden-Members, der durch diese Zuordnung dargestellt wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>Ruft den XML-Namespace ab, der für diese Zuordnung gilt.</summary>
      <returns>Der XML-Namespace, der für diese Zuordnung gilt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>Ruft den vollqualifizierten Typnamen des .NET Framework-Typs für diese Zuordnung ab.</summary>
      <returns>Der vollqualifizierte Typname des .NET Framework-Typs für diese Zuordnung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>Ruft den Typnamen des .NET Framework-Typs für diese Zuordnung ab.</summary>
      <returns>Der Typname des .NET Framework-Typs für diese Zuordnung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>Ruft den Namespace des .NET Framework-Typs für diese Zuordnung ab.</summary>
      <returns>Der Namespace des .NET Framework-Typs für diese Zuordnung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>Ruft den XML-Elementnamen ab, wie er im Dienstbeschreibungsdokument angezeigt wird.</summary>
      <returns>Der XML-Elementname.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>Stellt Zuordnungen zwischen .NET Framework-Webdienstmethoden und WSDL-Meldungen (Web Services Description Language) her, die für SOAP-Webdienste definiert werden.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>Ruft die Anzahl der .NET Framework-Codeentitäten ab, die zu einer Webdienstmethode gehören, der eine SOAP-Nachricht zugeordnet ist.</summary>
      <returns>Die Anzahl der Zuordnungen in der Auflistung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>Ruft ein Element ab, das interne Typzuordnungsinformationen für eine .NET Framework-Codeentität enthält, die zu einer Webdienstmethode gehört, die einer SOAP-Nachricht zugeordnet wird.</summary>
      <param name="index">Der Index der zurückzugebenden Zuordnung.</param>
      <returns>Der angeforderte <see cref="T:System.Xml.Serialization.XmlMemberMapping" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>Ruft den Namen des .NET Framework-Typs ab, der dem Datentyp eines XML-Schemaelements zugeordnet wird, das eine SOAP-Nachricht darstellt.</summary>
      <returns>Der Name des .NET Framework-Typs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>Ruft den Namespace des .NET Framework-Typs ab, der dem Datentyp eines XML-Schemaelements zugeordnet wird, das eine SOAP-Nachricht darstellt.</summary>
      <returns>Der .NET Framework-Namespace der Zuordnung.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>Ruft die Zeilennummer des unbekannten XML-Knotens ab.</summary>
      <returns>Die Zeilennummer des unbekannten XML-Knotens.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>Ruft die Position des unbekannten XML-Knotens in der Zeile ab.</summary>
      <returns>Die Positionsnummer des unbekannten XML-Knotens.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>Ruft den lokalen XML-Namen des gerade deserialisierten XML-Knotens ab.</summary>
      <returns>Der lokale XML-Name des gerade deserialisierten XML-Knotens.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>Ruft den Namen des gerade deserialisierten XML-Knotens ab.</summary>
      <returns>Der Name des gerade deserialisierten Knotens.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>Ruft den Namespace-URI ab, der dem gerade deserialisierten XML-Knoten zugeordnet ist.</summary>
      <returns>Der Namespace-URI, der dem gerade deserialisierten XML-Knoten zugeordnet ist.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>Ruft den Typ des gerade deserialisierten XML-Knotens ab.</summary>
      <returns>Der <see cref="T:System.Xml.XmlNodeType" />, der den gerade deserialisierten XML-Knoten darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>Ruft das Objekt ab, das gerade deserialisiert wird.</summary>
      <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>Ruft den Text des gerade deserialisierten XML-Knotens ab.</summary>
      <returns>Der Text des gerade deserialisierten XML-Knotens.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignis einer <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>Generiert Zuordnungen zu XML-Schemaelementdeklarationen, einschließlich XSD-Nachrichtenteilen (XML-Schema Definition) in einem WDSL-Dokument (Web Services Description Language), für .NET Framework-Typen oder Informationen zu Webdienstmethoden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse mithilfe des angegebenen XML-Standardnamespaces.</summary>
      <param name="defaultNamespace">Der XML-Standardnamespace, der für importierte Typzuordnungen verwendet wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse mithilfe der angegebenen XML-Serialisierungsüberschreibungen.</summary>
      <param name="attributeOverrides">Ein Objekt, das die Serialisierung von zugeordneten Typen durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse überschreibt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse mithilfe der angegebenen XML-Serialisierungsüberschreibungen und des XML-Standardnamespaces.</summary>
      <param name="attributeOverrides">Ein Objekt, das die Serialisierung von zugeordneten Typen durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse überschreibt.</param>
      <param name="defaultNamespace">Der XML-Standardnamespace, der für importierte Typzuordnungen verwendet wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>Generiert interne Typzuordnungen für Informationen von einer Webdienstmethode.</summary>
      <param name="elementName">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Objekten, die .NET Framework-Codeentitäten enthalten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement">
        <see langword="true" />, wenn Elemente, die WSDL-Nachrichtenteilen (Web Services Description Language) entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Nachricht aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> mit Zuordnungen zu den Elementteilen einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Gibt interne Typzuordnungen mithilfe von Informationen aus einer Webdienstmethode zurück und ermöglicht es Ihnen, einen XML-Elementnamen, einen XML-Namespace und andere Optionen anzugeben.</summary>
      <param name="elementName">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Objekten, die .NET Framework-Codeentitäten enthalten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement">
        <see langword="true" />, wenn Elemente, die WSDL-Nachrichtenteilen (Web Services Description Language) entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Nachricht aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" />, wenn die Methode ein Remoteprozeduraufruf ist, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die Zuordnungen enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gibt interne Typzuordnungen mithilfe von Informationen aus einer Webdienstmethode zurück und ermöglicht es Ihnen, einen XML-Elementnamen, einen XML-Namespace und andere Optionen anzugeben.</summary>
      <param name="elementName">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Objekten, die .NET Framework-Codeentitäten enthalten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement">
        <see langword="true" />, wenn Elemente, die WSDL-Nachrichtenteilen (Web Services Description Language) entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Nachricht aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" />, wenn die Methode ein Remoteprozeduraufruf ist, andernfalls <see langword="false" />.</param>
      <param name="openModel">
        <see langword="true" />, um anzugeben, dass der generierte Schematyp mit dem <see langword="&lt;xs:anyAttribute&gt;" />-Element markiert wird, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die Zuordnungen enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Generiert interne Typzuordnungen für Informationen von einer Webdienstmethode.</summary>
      <param name="elementName">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Objekten, die .NET Framework-Codeentitäten enthalten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement">
        <see langword="true" />, wenn Elemente, die WSDL-Nachrichtenteilen (Web Services Description Language) entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Nachricht aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" />, wenn die Methode ein Remoteprozeduraufruf ist, andernfalls <see langword="false" />.</param>
      <param name="openModel">
        <see langword="true" />, um anzugeben, dass der generierte Schematyp mit dem <see langword="&lt;xs:anyAttribute&gt;" />-Element markiert wird, andernfalls <see langword="false" />.</param>
      <param name="access">Einer der <see cref="T:System.Xml.Serialization.XmlMappingAccess" />-Werte. Die Standardeinstellung ist <see langword="None" />.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die Zuordnungen enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Generiert für einen angegebenen .NET Framework-Typ eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <returns>Interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Generiert für einen angegebenen .NET Framework-Typ mithilfe des angegebenen Typs und Namespaces eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <param name="defaultNamespace">Der XML-Standardnamespace, der verwendet werden soll.</param>
      <returns>Interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Generiert für einen angegebenen .NET Framework-Typ mithilfe des angegebenen Typs und Attributs eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />-Attribut, das auf den Typ angewendet wird.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, das eine Zuordnung eines .NET Framework-Typs zu einem XML-Schemaelement darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Generiert für einen angegebenen .NET Framework-Typ mithilfe des angegebenen Typs, Attributs und Namespaces eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />-Attribut, das auf den Typ angewendet wird.</param>
      <param name="defaultNamespace">Der XML-Standardnamespace, der verwendet werden soll.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, das die interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>Schließt Zuordnungen für einen Typ zur späteren Verwendung ein, wenn Importmethoden aufgerufen werden.</summary>
      <param name="type">Der .NET Framework-Typ, für den Zuordnungsinformationen gespeichert werden sollen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Schließt Zuordnungen für abgeleitete Typen zur späteren Verwendung ein, wenn Importmethoden aufgerufen werden.</summary>
      <param name="provider">Eine Instanz der <see cref="T:System.Reflection.ICustomAttributeProvider" />-Klasse, die benutzerdefinierte Attribute enthält, die vom <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />-Attribut abgeleitet sind.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>Stellt Zuordnungen zwischen Codeentitäten in .NET Framework-Webservicemethoden und dem Inhalt der WSDL-Meldungen (Web Services Description Language) her, die für SOAP-Webdienste definiert werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> den Rückgabewert einer Webdienstmethode darstellt und keinen Ausgabeparameter.</summary>
      <returns>
        <see langword="true" />, wenn der Member einen Webdienstrückgabewert darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>Ruft den Namen des Webdienstmethodenmembers für diese Zuordnung ab oder legt diesen Namen fest.</summary>
      <returns>Der Name der Webdienstmethode.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>Ruft den Typ der Codeentität für den Member der Webdienstmethode ab, die von dieser Zuordnung dargestellt wird, oder legt den Typ fest.</summary>
      <returns>Der <see cref="T:System.Type" /> der Codeentität für den Member der Webdienstmethode, die durch diese Zuordnung dargestellt wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>Ruft einen Wert ab, der angibt, dass der Wert des <c>isNullable</c>-Attributs in der Definition des entsprechenden XML-Elements <see langword="false" /> ist, oder legt einen Wert fest.</summary>
      <returns>
        <see langword="true" />, um die <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />-Eigenschaft zu überschreiben, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>Ruft eine <see cref="T:System.Xml.Serialization.SoapAttributes" />-Klasse mit der Auflistung SOAP-bezogener Attribute ab, die auf die Membercodeentität angewendet wurden, oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.Xml.Serialization.SoapAttributes" />-Klasse, die die Objekte enthält, die SOAP-Attribute darstellen, die auf den Member angewendet wurden.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>Ruft eine <see cref="T:System.Xml.Serialization.XmlAttributes" />-Klasse mit der Auflistung <see cref="T:System.Xml.Serialization.XmlSerializer" />-bezogener Attribute auf, die auf die Membercodeenität angewendet wurden, oder legt diese Klasse fest.</summary>
      <returns>Eine <see cref="T:System.Xml.Serialization.XmlAttributes" />-Klasse, die XML-Attribute darstellt, die auf den Membercode angewendet wurden.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>Ermöglicht die Iteration über einer Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />-Klasse.</summary>
      <param name="list">Das <see cref="T:System.Xml.Serialization.XmlSchemas" />-Objekt, über das eine Iteration durchgeführt werden soll.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>Ruft das aktuelle Element in der Auflistung ab.</summary>
      <returns>Das aktuelle <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt in der Auflistung.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>Gibt alle vom <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element in der Auflistung.</summary>
      <returns>
        <see langword="true" />, wenn die Verschiebung ordnungsgemäß ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary>Ruft das aktuelle Element in der Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten ab.</summary>
      <returns>Das aktuelle Element in der Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Legt den Enumerator auf seine anfängliche Position, d. h. vor dem ersten Element in der Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten fest.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>Füllt <see cref="T:System.Xml.Schema.XmlSchema" />-Objekte mit XML-Schemaelement-Deklarationen auf, die in typzuordnenden Objekten gefunden werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />-Klasse.</summary>
      <param name="schemas">Eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten, denen von Typzuordnungen erhaltene Elementdeklarationen hinzugefügt werden.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>Exportiert ein &lt;beliebiges&gt; Element nach dem <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, das durch den angegebenen Namespace identifiziert wird.</summary>
      <param name="ns">Der Namespace des XML-Schemadokuments, dem ein &lt;beliebiges&gt; Element hinzugefügt wird.</param>
      <returns>Ein beliebiger Name, der der Deklaration des &lt;beliebigen&gt; Elements zugewiesen wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Fügt einer SOAP-Nachricht oder einem <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt eine Elementdeklaration für ein Objekt oder einen Typ hinzu.</summary>
      <param name="members">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das zu exportierende Zuordnungen enthält.</param>
      <returns>Die Zeichenfolge "any" mit einer angefügten ganzen Zahl.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Fügt dem entsprechenden <see cref="T:System.Xml.Schema.XmlSchema" /> für jeden der Elementteile einer literalen SOAP-Nachrichtendefinition eine Elementdeklaration hinzu.</summary>
      <param name="xmlMembersMapping">Die internen .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Meldungsdefinition (Web Services Description Language).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>Fügt dem entsprechenden <see cref="T:System.Xml.Schema.XmlSchema" /> für jeden der Elementteile einer literalen SOAP-Nachrichtendefinition eine Elementdeklaration hinzu und gibt an, ob einschließende Elemente einbezogen sind.</summary>
      <param name="xmlMembersMapping">Die interne Zuordnung zwischen einem .NET Framework-Typ und einem XML-Schemaelement.</param>
      <param name="exportEnclosingType">
        <see langword="true" />, wenn die Schemaelemente, die das Schema einschließen, einbezogen werden sollen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Fügt dem entsprechenden <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt für einen einzelnen Elementteil einer literalen SOAP-Nachrichtendefinition eine Elementdeklaration hinzu.</summary>
      <param name="xmlMembersMapping">Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Meldungsdefinition (Web Services Description Language).</param>
      <returns>Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den qualifizierten XML-Namen der exportierten Elementdeklaration darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Fügt dem entsprechenden <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt eine Elementdeklaration für einen .NET Framework-Typ hinzu.</summary>
      <param name="xmlTypeMapping">Die interne Zuordnung zwischen einem .NET Framework-Typ und einem XML-Schemaelement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>Generiert interne Zuordnungen zwischen .NET Framework-Typen und XML-Schema-Elementdeklarationen einschließlich literalen XSD-Meldungsteilen in WSDL-Dokumenten.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />-Klasse, wobei eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten übernommen wird, die von literalen SOAP-Nachrichten verwendete XML-Schemas darstellen, die in einem WSDL-Dokument definiert sind.</summary>
      <param name="schemas">Eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />-Klasse, wobei eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten übernommen wird, die von literalen SOAP-Nachrichten verwendeten XML-Schemas darstellen, sowie Klassen, die für in einem WSDL-Dokument definierte Bindungen generiert werden.</summary>
      <param name="schemas">Ein <see cref="T:System.Xml.Serialization.XmlSchemas" />-Objekt.</param>
      <param name="typeIdentifiers">Ein <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Objekt, das eine Auflistung von Klassen angibt, die für in einem WSDL-Dokument definierte Bindungen generiert werden.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>Generiert interne Typzuordnungsinformationen für einen einzelnes in einem WSDL-Dokument definiertes literales Teilelement (SOAP).</summary>
      <param name="typeName">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen eines Elementtyps angibt, für den ein .NET Framework-Typ generiert wird.</param>
      <param name="elementName">Der Name des Teilelements im WSDL-Dokument.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die .NET Framework-Typzuordnung für ein einzelnes Teilelement einer WSDL-Meldungsdefinition darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="name">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen von einem in einem XML-Schemadokument definierten Element angibt.</param>
      <param name="baseType">Ein Basistyp für den generierten .NET Framework-Typ, der dem Typ eines XSD-Elements entspricht.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, das die .NET Framework-Typzuordnungsinformationen für ein XML-Schemaelement darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument oder als Teil eines WSDL-Dokuments definiertes Element.</summary>
      <param name="name">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen von einem in einem XML-Schemadokument definierten Element angibt.</param>
      <param name="baseType">Ein Basistyp für den generierten .NET Framework-Typ, der dem Typ eines XSD-Elements entspricht.</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" />, um anzugeben, dass der einem XSD-Element entsprechende Typ indirekt vom Basistyp erben kann, andernfalls <see langword="false" />.</param>
      <returns>Die .NET Framework-Typzuordnungsinformationen für ein XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>Generiert interne Typzuordnungsinformationen für die Teilelemente von literal zu verwendenden SOAP-Nachrichten, die in einem WSDL-Dokument definiert sind.</summary>
      <param name="name">Der Name des Elements, für das eine Zuordnung generiert werden soll.</param>
      <param name="ns">Der Namespace des Elements, für das eine Zuordnung generiert werden soll.</param>
      <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.SoapSchemaMember" />-Instanzen, mit dem die Member des Elements angegeben werden, für das eine Zuordnung generiert werden soll.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das Typzuordnungsinformationen enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>Generiert interne Typzuordnungsinformationen für ein einzelnes in einem WSDL-Dokument definiertes literales Teilelement (SOAP).</summary>
      <param name="name">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen des Meldungsteils angibt.</param>
      <returns>Die .NET Framework-Typzuordnung für eine WSDL-Meldungsdefinition, die ein einzelnes Teilelement enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>Generiert interne Typzuordnungsinformationen für die Teilelemente von literal zu verwendenden SOAP-Nachrichten, die in einem WSDL-Dokument definiert sind.</summary>
      <param name="names">Ein Array vom Typ <see cref="T:System.Xml.XmlQualifiedName" />, das die Namen der Meldungsteile angibt.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die .NET Framework-Typzuordnungen für die Teilelemente einer WSDL-Meldungsdefinition darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>Generiert interne Typzuordnungsinformationen für die Teilelemente von literal zu verwendenden SOAP-Nachrichten, die in einem WSDL-Dokument definiert sind.</summary>
      <param name="names">Ein Array vom Typ <see cref="T:System.Xml.XmlQualifiedName" />, das die Namen der Meldungsteile angibt.</param>
      <param name="baseType">Ein Basistyp für alle .NET Framework-Typen, die als Entsprechung von Meldungsteilen generiert werden.</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" />, wenn die Typen, die Meldungsteilen entsprechen, indirekt vom Basistyp erben können, andernfalls <see langword="false" />.</param>
      <returns>Die .NET Framework-Typzuordnungen für die Teilelemente einer WSDL-Meldungsdefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="typeName">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der ein XML-Element angibt.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekt, das eine Typzuordnung beschreibt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="typeName">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der ein XML-Element angibt.</param>
      <param name="baseType">Ein <see cref="T:System.Type" />-Objekt, das einen Basistyp angibt.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekt, das eine Typzuordnung beschreibt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="typeName">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der ein XML-Element angibt.</param>
      <param name="baseType">Ein <see cref="T:System.Type" />-Objekt, das einen Basistyp angibt.</param>
      <param name="baseTypeCanBeIndirect">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob der generierte Typ den <paramref name="baseType" /> indirekt erben kann.</param>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekt, das eine Typzuordnung beschreibt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="name">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen von einem in einem XML-Schemadokument definierten Element angibt.</param>
      <returns>Die .NET Framework-Typzuordnungsinformationen für ein XML-Schemaelement.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>Stellt die Auflistung der XML-Schemas dar.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>Fügt ein Objekt am Ende der Auflistung hinzu.</summary>
      <param name="schema">Das der Auflistung von Objekten hinzuzufügende <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</param>
      <returns>Der Index, an dem das <see cref="T:System.Xml.Schema.XmlSchema" /> hinzugefügt wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>Fügt ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt hinzu, das einen Assemblyverweis auf die Auflistung darstellt.</summary>
      <param name="schema">Das hinzuzufügende <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="baseUri">Der <see cref="T:System.Uri" /> des Schemaobjekts.</param>
      <returns>Der Index, an dem das <see cref="T:System.Xml.Schema.XmlSchema" /> hinzugefügt wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>Fügt am Ende der Auflistung eine Instanz der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Klasse hinzu.</summary>
      <param name="schemas">Das <see cref="T:System.Xml.Serialization.XmlSchemas" />-Objekt, das am Ende der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>Fügt ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt hinzu, das einen Assemblyverweis auf die Auflistung darstellt.</summary>
      <param name="schema">Das hinzuzufügende <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Verarbeitet die Element- und Attributnamen in den XML-Schemas und validiert optional die XML-Schemas.</summary>
      <param name="handler">Ein <see cref="T:System.Xml.Schema.ValidationEventHandler" />, der die Rückrufmethode angibt, die Fehler und Warnungen während der XML-Schemavalidierung behandelt, wenn der Strict-Parameter auf <see langword="true" /> festgelegt ist.</param>
      <param name="fullCompile">
        <see langword="true" />, um die XML-Schemas in der Auflistung mithilfe der <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" />-Methode der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Klasse zu validieren, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob die Auflistung ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt enthält, das zum angegebenen Namespace gehört.</summary>
      <param name="targetNamespace">Der Namespace des gesuchten Elements.</param>
      <returns>
        <see langword="true" />, wenn das Element vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Bestimmt, ob <see cref="T:System.Xml.Serialization.XmlSchemas" /> ein bestimmtes Schema enthält.</summary>
      <param name="schema">Das zu suchende <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung das angegebene Element enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Kopiert das gesamte <see cref="T:System.Xml.Serialization.XmlSchemas" /> in ein kompatibles eindimensionales <see cref="T:System.Array" />, das am angegebenen Index des Zielarrays beginnt.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus <see cref="T:System.Xml.Serialization.XmlSchemas" /> kopierten Schemas ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Eine 32-Bit-Ganzzahl, die den Index im Array angibt, ab dem kopiert werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Sucht ein <see cref="T:System.Xml.Schema.XmlSchemaObject" /> mit dem angegebenen Namen und Typ in einem der XML-Schemas.</summary>
      <param name="name">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der einen voll gekennzeichneten Namen mit einem Namespace für die Suche eines <see cref="T:System.Xml.Schema.XmlSchema" />-Objekts in der Auflistung angibt.</param>
      <param name="type">Der <see cref="T:System.Type" /> des gesuchten Objekts. Mögliche Typen sind: <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> und <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Instanz, z. B. <see cref="T:System.Xml.Schema.XmlSchemaElement" /> oder <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>Ruft eine Auflistung von Schemas ab, die zum gleichen Namespace gehören.</summary>
      <param name="ns">Der Namespace der abzurufenden Schemas.</param>
      <returns>Eine <see cref="T:System.Collections.IList" />-Implementierung, die die Schemas enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>Sucht nach dem angegebenen Schema und gibt den nullbasierten Index des ersten Vorkommens innerhalb dem gesamten <see cref="T:System.Xml.Serialization.XmlSchemas" /> zurück.</summary>
      <param name="schema">Die zu suchende <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <returns>Der nullbasierte Index des ersten Vorkommens des Werts im gesamten <see cref="T:System.Xml.Serialization.XmlSchemas" />, sofern gefunden, andernfalls -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>Fügt ein Schema am angegebenen Index in <see cref="T:System.Xml.Serialization.XmlSchemas" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="schema" /> eingefügt werden soll.</param>
      <param name="schema">Das einzufügende <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>Ruft einen Wert ab, der angibt, ob die Schemas kompiliert wurden.</summary>
      <returns>
        <see langword="true" />, wenn die Schemas kompiliert wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>Eine statische Methode, die bestimmt, ob das angegebene XML-Schema ein benutzerdefiniertes <see langword="IsDataSet" />-Attribut enthält, das auf <see langword="true" /> festgelegt ist, oder ein Äquivalent dazu enthält.</summary>
      <param name="schema">Das XML-Schema, das auf ein <see langword="IsDataSet" />-Attribut mit dem Wert <see langword="true" /> überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Schema vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>Ruft das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der Index des abzurufenden Elements.</param>
      <returns>Das angegebene <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>Ruft ein angegebenes <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt ab, das das XML-Schema darstellt, das dem angegebenen Namespace zugeordnet ist.</summary>
      <param name="ns">Der Namespace des angegebenen Objekts.</param>
      <returns>Das angegebene <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse beim Löschen des Inhalts der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Instanz aus.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse vor dem Einfügen eines neuen Elements in die <see cref="T:System.Xml.Serialization.XmlSchemas" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem der <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Der neue Wert des Elements an <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse beim Entfernen eines Elements aus der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem sich <paramref name="value" /> befindet.</param>
      <param name="value">Der Wert des Elements, das bei <paramref name="index" /> entfernt wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Führt zusätzliche benutzerdefinierte Prozesse vor dem Festlegen eines Werts in der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Instanz aus.</summary>
      <param name="index">Der nullbasierte Index, an dem sich <paramref name="oldValue" /> befindet.</param>
      <param name="oldValue">Der Wert, der durch <paramref name="newValue" /> ersetzt werden soll.</param>
      <param name="newValue">Der neue Wert des Elements an <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Schemas aus <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema">Das zu entfernende <see cref="T:System.Xml.Schema.XmlSchema" />-Element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung der XML-Schemas durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>Ein Delegat, der von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zum Deserialisieren von SOAP-codierten XML-Datentypen verwendet wird, denen Auflistungen oder Enumerationen zugeordnet sind.</summary>
      <param name="collection">Die Auflistung, in die das Array mit den Auflistungselementen kopiert wird.</param>
      <param name="collectionItems">Ein Array von Elementen, das in die <c>object collection</c> kopiert werden soll.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>Der von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse für die Deserialisierung SOAP-codierter XML-Daten verwendete Delegat.</summary>
      <param name="fixup">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />-Klasse, die das zu korrigierende Objekt und ein Array mit Zeichenfolgenbezeichnern für die Elemente enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>Eine abstrakte Klasse, die die Basisklasse für <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> und <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> darstellt und Methoden enthält, die beiden Typen gemeinsam sind.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>Initialisiert eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>Ein von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse verwendeter Delegat, mit dem Typen aus SOAP-codierten XML-Daten, die keine Stammelemente darstellen, deserialisiert werden können.</summary>
      <returns>Das vom Rückruf zurückgegebene Objekt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>Steuert die Deserialisierung durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>Speichert ein Objekt, das eine Rückrufmethode enthält. Diese wird bei Bedarf zum Füllen von .NET Framework-Auflistungen oder -Enumerationen aufgerufen, die SOAP-codierten Arrays oder SOAP-codierten Elementen zugeordnet sind, auf die mehrfach verwiesen wird.</summary>
      <param name="fixup">Ein <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegat und die Eingabedaten der Rückrufmethoden.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>Speichert ein Objekt, das eine Instanz einer Rückrufmethode enthält, die bei Bedarf zum Füllen eines SOAP-codierten Arrays mit Objekten aufgerufen wird.</summary>
      <param name="fixup">Ein <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegat und die Eingabedaten der Rückrufmethoden.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>Speichert eine Implementierung des <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />-Delegaten und seiner Eingabedaten für einen späteren Aufruf.</summary>
      <param name="name">Der Name des .NET Framework-Typs, der deserialisiert wird.</param>
      <param name="ns">Der Namespace des .NET Framework-Typs, der deserialisiert wird.</param>
      <param name="type">Der zu deserialisierende <see cref="T:System.Type" />.</param>
      <param name="read">Ein <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />-Delegat.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>Speichert ein aus einem SOAP-codierten <see langword="multiRef" />-Element deserialisiertes Objekt für späteren Zugriff durch die <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />-Methode.</summary>
      <param name="id">Der Wert des <see langword="id" />-Attributs eines <see langword="multiRef" />-Elements, das das Element identifiziert.</param>
      <param name="o">Das Objekt, das aus dem XML-Element deserialisiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>Überprüft, ob der Deserialisierer auf das nächste Element gesetzt wurde.</summary>
      <param name="whileIterations">Der aktuelle <see langword="count" /> in einer while-Schleife.</param>
      <param name="readerCount">Der aktuelle <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />.</param>
      <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> wurde nicht auf das nächste Element gesetzt.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>Entfernt sämtliche Vorkommen von Leerraumzeichen am Anfang und am Ende der angegebenen Zeichenfolge.</summary>
      <param name="value">Die Zeichenfolge, deren Leerraum abgetrennt wird.</param>
      <returns>Die Zeichenfolge mit abgetrenntem Leerraum.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>Enthält eine Instanz eines <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegaten und die Eingaben der Methoden. Außerdem werden die Parameter der Methode bereitgestellt.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" />-Klasse mit Parametern für eine Rückrufmethode.</summary>
      <param name="collection">Eine Auflistung, in die die Rückrufmethode das Array mit den Auflistungselementen kopiert.</param>
      <param name="callback">Eine Methode, die den <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegaten instanziiert.</param>
      <param name="collectionItems">Ein Array, in das die Rückrufmethode eine Auflistung kopiert.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>Ruft die Rückrufmethode ab, die den <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegaten instanziiert.</summary>
      <returns>Der <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegat, der auf die Rückrufmethode zeigt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>Ruft die <paramref name="object collection" /> für die Rückrufmethode ab.</summary>
      <returns>Die Auflistung, die für das Fixup verwendet wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>Ruft das Array ab, in das die Rückrufmethode eine Auflistung kopiert.</summary>
      <returns>Das Array, in das die Rückrufmethode eine Auflistung kopiert.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass das deserialisierte Objekt abstrakt sein muss.</summary>
      <param name="name">Der Name des abstrakten Typs.</param>
      <param name="ns">Der .NET Framework-Namespace des abstrakten Typs.</param>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Füllt ein Objekt aus seiner XML-Darstellung an der aktuellen Position des <see cref="T:System.Xml.XmlReader" />. Dabei besteht die Option, das innere Element zu lesen.</summary>
      <param name="xsdDerived">Der lokale Name des abgeleiteten XML-Schemadatentyps.</param>
      <param name="nsDerived">Der Namespace des abgeleiteten XML-Schemadatentyps.</param>
      <param name="xsdBase">Der lokale Name des XML-Schema-Basisdatentyps.</param>
      <param name="nsBase">Der Namespace des XML-Schema-Basisdatentyps.</param>
      <param name="clrDerived">Der Namespace des abgeleiteten .NET Framework-Typs.</param>
      <param name="clrBase">Der Namespace des .NET Framework-Basistyps.</param>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass das deserialisierte Objekt nicht instanziiert werden kann, weil der Konstruktor eine Sicherheitsausnahme auslöst.</summary>
      <param name="typeName">Der Name des Typs.</param>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass das deserialisierte Objekt nicht instanziiert werden kann, weil kein Konstruktor verfügbar ist.</summary>
      <param name="typeName">Der Name des Typs.</param>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>Erstellt eine <see cref="T:System.InvalidCastException" />, die angibt, dass eine explizite Konvertierung fehlgeschlagen ist.</summary>
      <param name="type">Der <see cref="T:System.Type" />, in den ein Objekt nicht konvertiert werden kann. Dieser Typ wird in die Ausnahmemeldung integriert.</param>
      <param name="value">Das Objekt, das nicht konvertiert werden kann. Dieses Objekt wird in die Ausnahmemeldung integriert.</param>
      <returns>Eine <see cref="T:System.InvalidCastException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidCastException" />, die angibt, dass eine explizite Konvertierung fehlgeschlagen ist.</summary>
      <param name="type">Der <see cref="T:System.Type" />, in den ein Objekt nicht konvertiert werden kann. Dieser Typ wird in die Ausnahmemeldung integriert.</param>
      <param name="value">Das Objekt, das nicht konvertiert werden kann. Dieses Objekt wird in die Ausnahmemeldung integriert.</param>
      <param name="id">Ein Zeichenfolgenbezeichner.</param>
      <returns>Eine <see cref="T:System.InvalidCastException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass ein abgeleiteter Typ, der einem XML-Schemadatentyp zugeordnet ist, nicht gefunden werden kann.</summary>
      <param name="name">Der lokale Name des XML-Schemadatentyps, der dem nicht verfügbaren abgeleiteten Typ zugeordnet ist.</param>
      <param name="ns">Der Namespace des XML-Schemadatentyps, der dem nicht verfügbaren abgeleiteten Typ zugeordnet ist.</param>
      <param name="clrType">Der vollständige Name des .NET Framework-Basistyps, für den ein abgeleiteter Typ nicht gefunden werden kann.</param>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass ein SOAP-codierter Auflistungstyp nicht geändert und nicht mit Werten gefüllt werden kann.</summary>
      <param name="name">Der vollqualifizierte Name des .NET Framework-Typs für den es eine Zuordnung gibt.</param>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die besagt, dass ein Enumerationswert nicht gültig ist.</summary>
      <param name="value">Der ungültige Enumerationswert.</param>
      <param name="enumType">Ein Enumerationstyp.</param>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass die aktuelle Position von <see cref="T:System.Xml.XmlReader" /> einen unbekannten XML-Knoten darstellt.</summary>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass ein Typ unbekannt ist.</summary>
      <param name="type">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen des unbekannten Typs darstellt.</param>
      <returns>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>Ruft einen Wert ab, der bestimmt, ob XML-Zeichenfolgen in gültige .NET Framework-Typnamen umgewandelt werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn XML-Zeichenfolgen in gültige .NET Framework-Typnamen decodiert werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>Ruft das XML-Dokumentobjekt ab, in das das XML-Dokument deserialisiert wird.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDocument" />, das die deserialisierten <see cref="T:System.Xml.XmlDocument" />-Daten darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>Stellt sicher, dass ein angegebenes Array oder eine Kopie groß genug für einen angegebenen Index ist.</summary>
      <param name="a">Das <see cref="T:System.Array" />, das geprüft wird.</param>
      <param name="index">Der erforderliche Index.</param>
      <param name="elementType">Der <see cref="T:System.Type" /> der Elemente des Arrays.</param>
      <returns>Das ursprüngliche <see cref="T:System.Array" />, wenn es groß genug ist. Andernfalls ein neues größeres Array, das die Elemente des ursprünglichen Arrays enthält.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>Enthält eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten sowie die Eingaben der Methode. Außerdem wird es als Parameter für die Methode verwendet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />-Klasse.</summary>
      <param name="o">Das Objekt, das andere Objekte enthält, deren Werte von der Rückrufimplementierung ausgefüllt werden.</param>
      <param name="callback">Eine Methode, die den <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten instanziiert.</param>
      <param name="count">Die Größe des Zeichenfolgenarrays, das über die <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />-Eigenschaft abgerufen wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />-Klasse.</summary>
      <param name="o">Das Objekt, das andere Objekte enthält, deren Werte von der Rückrufimplementierung ausgefüllt werden.</param>
      <param name="callback">Eine Methode, die den <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten instanziiert.</param>
      <param name="ids">Das über die <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />-Eigenschaft abgerufene Zeichenfolgenarray.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>Ruft die Rückrufmethode ab, die eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten erstellt.</summary>
      <returns>Die Rückrufmethode, die eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten erstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>Ruft ein Array von Schlüsseln für die Objekte ab, die zur <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" />-Eigenschaft gehören und deren Werte durch die Rückrufimplementierung ausgefüllt werden, oder legt dieses fest.</summary>
      <returns>Das Array von Schlüsseln.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>Ruft das Objekt ab, das andere Objekte enthält, deren Werte von der Rückrufimplementierung ausgefüllt werden, oder legt dieses fest.</summary>
      <returns>Die Quelle, die Objekte mit auszufüllenden Werten enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>Füllt ein SOAP-codiertes Array, dessen Datentyp einem .NET Framework-Verweistyp zugeordnet ist, mit Werten.</summary>
      <param name="fixup">Ein Objekt, das das Array enthält, das mit Werten gefüllt wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>Ruft die Länge vom SOAP-codierten Arrays ab, auf dem der <see cref="T:System.Xml.XmlReader" /> gerade positioniert ist.</summary>
      <param name="name">Der lokale Name für das Array.</param>
      <param name="ns">Der Namespace des Arrays.</param>
      <returns>Die Länge des SOAP-Arrays.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>Bestimmt, ob das XML-Element an der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> ein NULL-Attribute mit dem Wert <see langword="true" /> hat.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Xml.XmlReader" /> gerade auf einem NULL-Attribut mit dem Wert <see langword="true" /> positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>Ruft ein Objekt ab, das aus einem SOAP-codierten <see langword="multiRef" />-Element deserialisiert wird und das vorher mit <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" /> gespeichert wurde.</summary>
      <param name="id">Der Wert des <see langword="id" />-Attributs eines <see langword="multiRef" />-Elements, das das Element identifiziert.</param>
      <returns>Ein Objekt, das aus einem SOAP-codierten <see langword="multiRef" />-Element deserialisiert werden soll.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>Ruft den Wert des <see langword="xsi:type" />-Attributs für das XML-Element an der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> ab.</summary>
      <returns>Ein qualifizierter XML-Name, der den Datentyp eines XML-Elements bezeichnet.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>Initialisiert Rückrufmethoden, die Objekte auffüllen, die SOAP-codierten XML-Daten zugeordnet sind.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>Speichert Element- und Attributnamen in einem <see cref="T:System.Xml.NameTable" />-Objekt.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>Ruft einen Wert ab, der für einen SOAP 1.1-Rückgabewert <see langword="true" /> muss, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der Wert ein Rückgabewert ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>Bestimmt, ob ein XML-Attributname einen XML-Namespace angibt.</summary>
      <param name="name">Der Name eines XML-Attributs.</param>
      <returns>
        <see langword="true" />, wenn der XML-Attributname einen XML-Namespace angibt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>Legt den Wert des XML-Attributs fest, wenn dieses den Typ <see langword="arrayType" /> aus dem WSDL-Namespace besitzt (Web Services Description Language).</summary>
      <param name="attr">Ein <see cref="T:System.Xml.XmlAttribute" />, das den Typ <see langword="wsdl:array" /> aufweisen kann.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>Lässt den <see cref="T:System.Xml.XmlReader" /> den vollqualifizierten Namen des Elements lesen, auf dem er gerade positioniert ist.</summary>
      <returns>Der vollqualifizierte Name des aktuellen XML-Elements.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>Lässt den <see cref="T:System.Xml.XmlReader" /> ein XML-Endtag lesen.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>Ruft das <see cref="T:System.Xml.XmlReader" />-Objekt ab, das von <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> verwendet wird.</summary>
      <returns>Der vom <see cref="T:System.Xml.XmlReader" /> verwendete <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>Ruft den aktuellen Zähler des <see cref="T:System.Xml.XmlReader" /> ab.</summary>
      <returns>Der aktuelle Zähler eines <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>Weist den <see cref="T:System.Xml.XmlReader" /> an, das aktuelle XML-Element zu lesen, wenn es ein NULL-Attribut mit dem Wert true hat.</summary>
      <returns>
        <see langword="true" />, wenn das Element einen Attributwert null= "true" hat und gelesen worden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>Weist den <see cref="T:System.Xml.XmlReader" /> an, den vollqualifizierten Namen des Elements lesen, auf dem er gerade positioniert ist.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den vollqualifizierten Namen des aktuellen XML-Elements darstellt, andernfalls <see langword="null" />, wenn ein Attributwert null="true" vorhanden ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>Weist den <see cref="T:System.Xml.XmlReader" /> an, ein einfaches nur aus Text bestehendes XML-Element zu lesen, das <see langword="null" /> sein könnte.</summary>
      <returns>Der Zeichenfolgenwert, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>Liest den Wert des <see langword="href" />-Attributs (<see langword="ref" />-Attribut in SOAP 1.2), das bei der SOAP-Codierung zum Verweis auf ein XML-Element verwendet wird.</summary>
      <param name="fixupReference">Eine Ausgabezeichenfolge, in die der <see langword="href" />-Attributwert eingelesen wird.</param>
      <returns>
        <see langword="true" />, wenn der Wert gelesen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>Deserialisiert ein Objekt aus einem SOAP-codierten <see langword="multiRef" />-XML-Element.</summary>
      <returns>Der Wert des Elements, auf das im Dokument verwiesen wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>Deserialisiert ein Objekt aus einem SOAP-codierten <see langword="multiRef" />-XML-Element.</summary>
      <param name="name">Der lokale Name des XML-Schemadatentyps des Elements.</param>
      <param name="ns">Der Namespace des XML-Schemadatentyps des Elements.</param>
      <returns>Der Wert des Elements, auf das im Dokument verwiesen wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>Deserialisiert Objekte aus den SOAP-codierten <see langword="multiRef" />-Elementen in einer SOAP-Nachricht.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>Deserialisiert ein Objekt aus einem XML-Element in einer SOAP-Nachricht, die einen Verweis auf ein <see langword="multiRef" />-Element enthält.</summary>
      <param name="name">Der lokale Name des XML-Schemadatentyps des Elements.</param>
      <param name="ns">Der Namespace des XML-Schemadatentyps des Elements.</param>
      <param name="elementCanBeType">
        <see langword="true" />, wenn der Elementname auch der XML-Schemadatentypname ist, andernfalls <see langword="false" />.</param>
      <param name="fixupReference">Eine Ausgabezeichenfolge, in die der Wert des <see langword="href" />-Attributs eingelesen wird.</param>
      <returns>Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>Deserialisiert ein Objekt aus einem XML-Element in einer SOAP-Nachricht, die einen Verweis auf ein <see langword="multiRef" />-Element enthält.</summary>
      <param name="name">Der lokale Name des XML-Schemadatentyps des Elements.</param>
      <param name="ns">Der Namespace des XML-Schemadatentyps des Elements.</param>
      <param name="fixupReference">Eine Ausgabezeichenfolge, in die der <see langword="href" />-Attributwert eingelesen wird.</param>
      <returns>Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>Deserialisiert ein Objekt aus einem XML-Element in einer SOAP-Nachricht, die einen Verweis auf ein <see langword="multiRef" />-Element enthält.</summary>
      <param name="fixupReference">Eine Ausgabezeichenfolge, in die der <see langword="href" />-Attributwert eingelesen wird.</param>
      <returns>Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>Erstellt ein Objekt aus seiner XML-Darstellung an der aktuellen Position des <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable">Ein <see cref="T:System.Xml.Serialization.IXmlSerializable" />, das der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> entspricht.</param>
      <returns>Ein Objekt, das die <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Schnittstelle implementiert, wobei die Member von der Position des <see cref="T:System.Xml.XmlReader" /> entnommen werden.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>Diese Methode unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung im Code vorgesehen.</summary>
      <param name="serializable">Ein IXmlSerializable-Objekt, das der aktuellen Position vom XMLReader entspricht.</param>
      <param name="wrappedAny">Gibt an, ob das serialisierbare Objekt umschlossen wird.</param>
      <returns>Ein Objekt, das die IXmlSerializable-Schnittstelle implementiert, wobei die Member von der Position des XmlReader entnommen werden.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>Das Ergebnis eines Aufrufs der <see cref="M:System.Xml.XmlReader.ReadString" />-Methode wird an den Eingabewert angefügt.</summary>
      <param name="value">Eine Zeichenfolge, die dem Ergebnis eines Aufrufs der <see cref="M:System.Xml.XmlReader.ReadString" />-Methode vorangestellt wird.</param>
      <returns>Das Ergebnis eines Aufruf der <see cref="M:System.Xml.XmlReader.ReadString" />-Methode, der an den Eingabewert angefügt wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>Gibt das Ergebnis eines Aufrufs der <see cref="M:System.Xml.XmlReader.ReadString" />-Methode der <see cref="T:System.Xml.XmlReader" />-Klasse zurück, dessen Leerraum gegebenenfalls abgetrennt wurde, und das an den Eingabewert angefügt wurde.</summary>
      <param name="value">Eine Zeichenfolge, die angefügt wird.</param>
      <param name="trim">
        <see langword="true" />, wenn Leerraum vom Ergebnis des Lesevorgangs abgetrennt werden soll, andernfalls <see langword="false" />.</param>
      <returns>Der Eingabewert mit angefügtem Ergebnis des Lesevorgangs.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>Liest ein XML-Element, das NULL-Werte (<see langword="xsi:nil = 'true'" />) zulässt, und gibt einen generischen <see cref="T:System.Nullable`1" />-Wert zurück.</summary>
      <param name="type">Der <see cref="T:System.Xml.XmlQualifiedName" />, der den einfachen Datentyp an der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> darstellt.</param>
      <returns>Ein generisches <see cref="T:System.Nullable`1" />, das einen XML-NULL-Wert darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>Ruft den Wert des XML-Knotens ab, auf dem der <see cref="T:System.Xml.XmlReader" /> gerade positioniert ist.</summary>
      <param name="type">Der <see cref="T:System.Xml.XmlQualifiedName" />, der den einfachen Datentyp an der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> darstellt.</param>
      <returns>Der Wert des Knotens als .NET Framework-Werttyp, wenn der Wert ein einfacher XML-Schemadatentyp ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>Weist den <see cref="T:System.Xml.XmlReader" /> an, an seiner aktuellen Position ein Stammelement eines XML-Dokuments zu lesen.</summary>
      <param name="wrapped">
        <see langword="true" />, wenn die Methode nach dem Lesen des Anfangselements des Elements nur den Inhalt lesen soll, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDocument" />, das das gelesene Stammelement enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>Weist den <see cref="T:System.Xml.XmlReader" /> an, den XML-Knoten an der aktuellen Position zu lesen.</summary>
      <param name="wrapped">
        <see langword="true" />, wenn Inhalt nur nach dem Lesen des Startelements des Elements gelesen werden soll, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.XmlNode" />, der den gelesenen XML-Knoten darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>Speichert ein Objekt, das aus einem SOAP-codierten <see langword="multiRef" />-Element deserialisiert werden soll.</summary>
      <param name="o">Das zu deserialisierende Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>Ruft eine dynamisch generierte Assembly nach ihrem Namen ab.</summary>
      <param name="assemblyFullName">Der vollständige Name der Assembly.</param>
      <returns>Eine dynamisch generierte <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>Stellt sicher, dass ein angegebenes Array oder eine Kopie eine angegebene Länge nicht überschreitet.</summary>
      <param name="a">Das zu prüfende Array.</param>
      <param name="length">Die maximale Länge des Arrays.</param>
      <param name="elementType">Der <see cref="T:System.Type" /> der Elemente des Arrays.</param>
      <param name="isNullable">
        <see langword="true" />, wenn für das Array <see langword="null" /> zurückgegeben werden kann, wenn für das Eingabearray vorhanden; andernfalls ein neues kleineres Array.</param>
      <returns>Das ursprüngliche <see cref="T:System.Array" />, wenn es bereits klein genug ist. Andernfalls ein neues kleineres Array, das die Elemente des ursprünglichen Arrays bis zur Länge <paramref name="length" /> enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>Weist den <see cref="T:System.Xml.XmlReader" /> an, den Zeichenfolgenwert an der aktuellen Position zu lesen und ihn als Base64-Bytearray zurückzugeben.</summary>
      <param name="isNull">
        <see langword="true" />, wenn <see langword="null" /> zurückgegeben werden soll, <see langword="false" />, wenn ein Base64-Bytearray zurückgegeben werden soll.</param>
      <returns>Ein Base64-Bytearray, andernfalls <see langword="null" />, wenn der Wert des <paramref name="isNull" />-Parameters <see langword="true" /> ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>Erzeugt aus einer Eingabezeichenfolge ein Base64-Bytearray.</summary>
      <param name="value">Eine Zeichenfolge, die in ein Base64-Bytearray umgewandelt werden soll.</param>
      <returns>Ein Base64-Bytearray.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>Weist den <see cref="T:System.Xml.XmlReader" /> an, den Zeichenfolgenwert an der aktuellen Position zu lesen und ihn als hexadezimales Bytearray zurückzugeben.</summary>
      <param name="isNull">
        <see langword="true" />, wenn <see langword="null" /> zurückgegeben werden soll, <see langword="false" />, wenn ein hexadezimales Bytearray zurückgegeben werden soll.</param>
      <returns>Ein hexadezimales Bytearray, andernfalls <see langword="null" />, wenn der Wert des <paramref name="isNull" />-Parameters <see langword="true" /> ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>Erzeugt ein hexadezimales Bytearray aus der Eingabezeichenfolge.</summary>
      <param name="value">Eine Zeichenfolge, die in ein hexadezimales Bytearray übersetzt werden soll.</param>
      <returns>Ein hexadezimales Bytearray</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>Erstellt ein <see cref="T:System.Char" />-Objekt aus einer Eingabezeichenfolge.</summary>
      <param name="value">Eine Zeichenfolge, die in ein <see cref="T:System.Char" />-Objekt umgewandelt werden soll.</param>
      <returns>Ein <see cref="T:System.Char" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>Erstellt ein <see cref="T:System.DateTime" />-Objekt aus einer Eingabezeichenfolge.</summary>
      <param name="value">Eine Zeichenfolge, die in ein Objekt der <see cref="T:System.DateTime" />-Klasse umgewandelt werden soll.</param>
      <returns>Ein <see cref="T:System.DateTime" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>Erstellt ein <see cref="T:System.DateTime" />-Objekt aus einer Eingabezeichenfolge.</summary>
      <param name="value">Eine Zeichenfolge, die in ein <see cref="T:System.DateTime" />-Objekt umgewandelt werden soll.</param>
      <returns>Ein <see cref="T:System.DateTime" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>Erzeugt aus einer Zeichenfolge mit voneinander getrennten Bezeichnern, die Konstanten aus der Enumeratorliste darstellen, einen numerischen Enumerationswert.</summary>
      <param name="value">Eine Zeichenfolge, die aus voneinander getrennten Bezeichnern besteht, von denen jeder eine Konstante der festgelegten Enumeratorliste darstellt.</param>
      <param name="h">Eine <see cref="T:System.Collections.Hashtable" /> mit den Bezeichnern als Schlüssel und den Konstanten als ganzen Zahlen.</param>
      <param name="typeName">Der Name des Enumerationstyps.</param>
      <returns>Ein long-Wert mit dem Enumerationswert als Folge von bitweisen <see langword="OR" />-Operationen.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>Erzeugt ein <see cref="T:System.DateTime" /> aus einer Zeichenfolge, die eine Uhrzeit darstellt.</summary>
      <param name="value">Eine Zeichenfolge, die in ein <see cref="T:System.DateTime" />-Objekt umgewandelt werden soll.</param>
      <returns>Ein <see cref="T:System.DateTime" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>Decodiert einen XML-Namen.</summary>
      <param name="value">Ein zu decodierender XML-Name.</param>
      <returns>Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>Decodiert einen XML-Namen.</summary>
      <param name="value">Ein zu decodierender XML-Name.</param>
      <returns>Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>Decodiert einen XML-Namen.</summary>
      <param name="value">Ein zu decodierender XML-Name.</param>
      <returns>Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>Decodiert einen XML-Namen.</summary>
      <param name="value">Ein zu decodierender XML-Name.</param>
      <returns>Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>Erhält einen <see cref="T:System.Xml.XmlQualifiedName" /> von einem Namen, der möglicherweise ein Präfix enthält.</summary>
      <param name="value">Ein Name, der möglicherweise ein Präfix enthält.</param>
      <returns>Ein <see cref="T:System.Xml.XmlQualifiedName" />, der einen Namespace-qualifizierten XML-Namen darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o">Ein Objekt, das der <see cref="T:System.Xml.Serialization.XmlSerializer" /> zu deserialisieren versucht, und auf das anschließend über die <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />-Eigenschaft zugegriffen werden kann.</param>
      <param name="attr">Ein <see cref="T:System.Xml.XmlAttribute" />, das das betreffende Attribut darstellt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o">Ein Objekt, das der <see cref="T:System.Xml.Serialization.XmlSerializer" /> zu deserialisieren versucht, und auf das anschließend über die <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />-Eigenschaft zugegriffen werden kann.</param>
      <param name="attr">Ein <see cref="T:System.Xml.XmlAttribute" />, das das betreffende Attribut darstellt.</param>
      <param name="qnames">Eine durch Kommas getrennte Liste von qualifizierten XML-Namen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o">Das <see cref="T:System.Object" />, das deserialisiert wird.</param>
      <param name="elem">Das <see cref="T:System.Xml.XmlElement" />, für das ein Ereignis ausgelöst wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o">Ein Objekt, das der <see cref="T:System.Xml.Serialization.XmlSerializer" /> zu deserialisieren versucht, und auf das anschließend über die <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />-Eigenschaft zugegriffen werden kann.</param>
      <param name="elem">Das <see cref="T:System.Xml.XmlElement" />, für das ein Ereignis ausgelöst wird.</param>
      <param name="qnames">Eine durch Kommas getrennte Liste von qualifizierten XML-Namen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o">Das Objekt, das deserialisiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o">Das Objekt, das deserialisiert wird.</param>
      <param name="qnames">Eine durch Kommas getrennte Liste von qualifizierten XML-Namen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="id">Eine eindeutige Zeichenfolge zur Identifikation des Objekts ohne Verweis. Auf dieses kann anschließend über die <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />-Eigenschaft zugegriffen werden.</param>
      <param name="o">Ein Objekt, das der <see cref="T:System.Xml.Serialization.XmlSerializer" /> zu deserialisieren versucht, und auf das anschließend über die <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />-Eigenschaft zugegriffen werden kann.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>Ein von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse verwendeter Delegat, mit dem Typen aus SOAP-codierten XML-Daten, die keine Stammelemente darstellen, serialisiert werden können.</summary>
      <param name="o">Das serialisierte Objekt.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>Stellt eine abstrakte Klasse zur Steuerung der Serialisierung durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>Speichert eine Implementierung des <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />-Delegaten sowie den Typ, auf den er angewendet wird, für einen späteren Aufruf.</summary>
      <param name="type">Der <see cref="T:System.Type" /> von Objekten, die serialisiert werden.</param>
      <param name="typeName">Der Name des Typs von Objekten, die serialisiert werden.</param>
      <param name="typeNs">Der Namespace des Typs von Objekten, die serialisiert werden.</param>
      <param name="callback">Eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />-Delegaten.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die einen unerwarteten Namen für ein Element anzeigt, das zu einer <see langword="choice" />-Elementdeklaration eines XML-Schemas gehört.</summary>
      <param name="value">Der ungültige Name.</param>
      <param name="identifier">Die <see langword="choice" />-Elementdeklaration, zu der der Name gehört.</param>
      <param name="name">Der erwartete lokale Name eines Elements.</param>
      <param name="ns">Der erwartete Namespace eines Elements.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> unzulässigerweise auf einen Member angewendet wurde. Es sind nur Member vom Typ <see cref="T:System.Xml.XmlNode" /> oder eines von <see cref="T:System.Xml.XmlNode" /> abgeleiteten Typs zulässig.</summary>
      <param name="o">Das Objekt, das den unzulässigen Member darstellt.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> unzulässigerweise auf einen Member angewendet wurde. Es sind nur Member vom Typ <see cref="T:System.Xml.XmlNode" /> oder eines von <see cref="T:System.Xml.XmlNode" /> abgeleiteten Typs zulässig.</summary>
      <param name="type">Der <see cref="T:System.Type" /> ist ungültig.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die einen Fehler beim Schreiben eines Arrays anzeigt, wobei eine <see langword="choice" />-Elementdeklaration eines XML-Schemas angewendet wird.</summary>
      <param name="type">Der serialisierte Typ.</param>
      <param name="identifier">Ein Name für die <see langword="choice" />-Elementdeklaration.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" /> für einen ungültigen Enumerationswert.</summary>
      <param name="value">Ein Objekt, das die ungültige Enumeration darstellt.</param>
      <param name="typeName">Der Name des XML-Typs.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die anzeigt, dass ein Wert für ein XML-Element keinem Enumerationstyp entspricht.</summary>
      <param name="value">Der ungültige Wert.</param>
      <param name="elementName">Der Name des XML-Elements mit einem ungültigen Wert.</param>
      <param name="enumValue">Der gültige Wert.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die anzeigt, dass ein XML-Element, das zu einer <see langword="any" />-Elementdeklaration des XML-Schemas gehören soll, nicht verarbeitet werden kann.</summary>
      <param name="name">Das XML-Element, das nicht verarbeitet werden kann.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die anzeigt, dass ein zu serialisierender Typ nicht richtig verwendet wird oder dass er an einer unerwarteten Stelle gefunden wurde.</summary>
      <param name="o">Das Objekt, dessen Typ nicht serialisiert werden kann.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>Erstellt eine <see cref="T:System.InvalidOperationException" />, die anzeigt, dass ein zu serialisierender Typ nicht richtig verwendet wird oder dass er an einer unerwarteten Stelle gefunden wurde.</summary>
      <param name="type">Der Typ, der nicht serialisiert werden kann.</param>
      <returns>Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" />-Methode zum Schreiben von gültigen XML-Daten verwendet wird, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" />-Methode einen codierten Namen zurückgibt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>Verarbeitet ein Base64-Bytearray.</summary>
      <param name="value">Ein Base64-<see cref="T:System.Byte" />-Array.</param>
      <returns>Das gleiche Bytearray, das als Argument übergeben wurde.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>Erzeugt aus der Eingabe eines hexadezimalen Bytearrays eine Zeichenfolge.</summary>
      <param name="value">Ein hexadezimales Bytearray, das in eine Zeichenfolge konvertiert werden soll.</param>
      <returns>Der in eine Zeichenfolge konvertiert Bytearraywert.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>Erzeugt aus einem eingegebenen <see cref="T:System.Char" /> eine Zeichenfolge.</summary>
      <param name="value">Eine <see cref="T:System.Char" />, die in eine Zeichenfolge konvertiert werden soll.</param>
      <returns>Der in eine Zeichenfolge konvertierte <see cref="T:System.Char" />-Wert.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>Erzeugt aus einem <see cref="T:System.DateTime" />-Objekt eine Zeichenfolge.</summary>
      <param name="value">Eine <see cref="T:System.DateTime" />, die in eine Zeichenfolge konvertiert werden soll.</param>
      <returns>Eine Zeichenfolgendarstellung von <see cref="T:System.DateTime" />, die nur das Datum und keine Uhrzeit enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>Erzeugt aus einem eingegebenen <see cref="T:System.DateTime" /> eine Zeichenfolge.</summary>
      <param name="value">Eine <see cref="T:System.DateTime" />, die in eine Zeichenfolge konvertiert werden soll.</param>
      <returns>Eine Zeichenfolgendarstellung von <see cref="T:System.DateTime" />, die das Datum und die Uhrzeit anzeigt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>Erzeugt eine Zeichenfolge, die aus voneinander getrennten Bezeichnern besteht, die die festgelegten Enumerationsmember darstellen.</summary>
      <param name="value">Der Enumerationswert als Folge von bitweisen <see langword="OR" />-Operationen.</param>
      <param name="values">Die Namenswerte der Enumeration.</param>
      <param name="ids">Die konstanten Werte der Enumeration.</param>
      <returns>Eine Zeichenfolge, die aus voneinander getrennten Bezeichnern besteht, von denen jeder ein Member der festgelegten Enumeratorliste darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>Übernimmt einen numerischen Enumerationswert und die Namen und Konstanten aus der Enumeratorliste der Enumeration und gibt eine Zeichenfolge mit voneinander getrennten Bezeichnern zurück, die die festgelegten Member der Enumeration darstellen.</summary>
      <param name="value">Der Enumerationswert als Folge von bitweisen <see langword="OR" />-Operationen.</param>
      <param name="values">Die Werte der Enumeration.</param>
      <param name="ids">Die Konstanten der Enumeration.</param>
      <param name="typeName">Der Name des Typs.</param>
      <returns>Eine Zeichenfolge, die aus voneinander getrennten Bezeichnern besteht, wobei jedes Element einen der durch die bitweise Operation festgelegten Werte darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>Erzeugt aus einem <see cref="T:System.DateTime" />-Objekt eine Zeichenfolge.</summary>
      <param name="value">Ein <see cref="T:System.DateTime" />-Objekt, das in eine Zeichenfolge konvertiert wird.</param>
      <returns>Eine Zeichenfolgendarstellung des <see cref="T:System.DateTime" />-Objekts, die die Uhrzeit, aber nicht das Datum enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>Codiert einen gültigen XML-Namen durch Ersetzen von ungültigen Zeichen durch Escapesequenzen.</summary>
      <param name="name">Eine Zeichenfolge, die als XML-Name verwendet werden soll.</param>
      <returns>Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>Codiert einen gültigen lokalen XML-Namen durch Ersetzen von ungültigen Zeichen durch Escapesequenzen.</summary>
      <param name="ncName">Eine Zeichenfolge, die als lokaler (nicht qualifizierter) XML-Name verwendet werden soll.</param>
      <returns>Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>Codiert einen XML-Namen.</summary>
      <param name="nmToken">Ein XML-Name, der codiert werden soll.</param>
      <returns>Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>Codiert eine Folge von durch Leerzeichen getrennten XML-Namen als einen einzelnen XML-Namen.</summary>
      <param name="nmTokens">Eine zu codierende Folge von durch Leerzeichen getrennten XML-Namen.</param>
      <returns>Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>Gibt einen qualifizierten XML-Namen zurück, bei dem ungültige Zeichen durch Escapesequenzen ersetzt wurden.</summary>
      <param name="xmlQualifiedName">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der die zu schreibenden XML-Daten darstellt.</param>
      <returns>Ein qualifizierter XML-Name, bei dem ungültige Zeichen durch Escapesequenzen ersetzt wurden.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>Erstellt eine Zeichenfolge, die als qualifizierter XML-Name geschrieben werden kann und bei der ungültige Zeichen durch Escapesequenzen ersetzt werden.</summary>
      <param name="xmlQualifiedName">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der die zu schreibenden XML-Daten darstellt.</param>
      <param name="ignoreEmpty">
        <see langword="true" />, wenn Leerraum in der Zeichenfolge ignoriert werden soll, andernfalls <see langword="false" />.</param>
      <returns>Ein qualifizierter XML-Name, bei dem ungültige Zeichen durch Escapesequenzen ersetzt wurden.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>Initialisiert eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />-Delegaten zum Serialisieren von SOAP-codierten XML-Daten.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>Ruft eine Liste von qualifizierten XML-Namensobjekten ab, die die zum Erstellen von qualifizierten Namen in XML-Dokumenten erforderlichen Namespaces und Präfixe enthalten, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Collections.ArrayList" />, die die Namespaces und Präfixpaare enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>Ruft eine dynamisch generierte Assembly nach ihrem Namen ab.</summary>
      <param name="assemblyFullName">Der vollständige Name der Assembly.</param>
      <returns>Eine dynamisch generierte Assembly.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>Initialisiert Objektverweise nur beim Serialisieren einer SOAP-codierten SOAP-Nachricht.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>Weist ein <see cref="T:System.Xml.XmlWriter" />-Objekt an, ein XML-Attribut zu schreiben, für dessen Name kein Namespace angegeben ist.</summary>
      <param name="localName">Der lokale Name des XML-Attributs.</param>
      <param name="value">Der Wert des XML-Attributs als Bytearray.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>Weist den <see cref="T:System.Xml.XmlWriter" /> an, ein XML-Attribut zu schreiben, für dessen Namen kein Namespace angegeben ist.</summary>
      <param name="localName">Der lokale Name des XML-Attributs.</param>
      <param name="value">Der Wert des XML-Attributs als Zeichenfolge.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>Weist ein <see cref="T:System.Xml.XmlWriter" />-Objekt an, ein XML-Attribut zu schreiben.</summary>
      <param name="localName">Der lokale Name des XML-Attributs.</param>
      <param name="ns">Der Namespace des XML-Attributs.</param>
      <param name="value">Der Wert des XML-Attributs als Bytearray.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>Schreibt ein XML-Attribut.</summary>
      <param name="localName">Der lokale Name des XML-Attributs.</param>
      <param name="ns">Der Namespace des XML-Attributs.</param>
      <param name="value">Der Wert des XML-Attributs als Zeichenfolge.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>Schreibt ein XML-Attribut, wobei das Namespacepräfix manuell angegeben wird.</summary>
      <param name="prefix">Das zu schreibende Namespacepräfix.</param>
      <param name="localName">Der lokale Name des XML-Attributs.</param>
      <param name="ns">Der durch das Präfix dargestellte Namespace.</param>
      <param name="value">Der Wert des XML-Attributs als Zeichenfolge.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Schreibt ein XML-Knotenobjekt innerhalb des Texts eines benannten XML-Elements.</summary>
      <param name="node">Der zu schreibende XML-Knoten, möglicherweise ein untergeordnetes XML-Element.</param>
      <param name="name">Der lokale Name des zu schreibenden übergeordneten XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden übergeordneten XML-Elements.</param>
      <param name="isNullable">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das zu serialisierende Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
      <param name="any">
        <see langword="true" />, wenn der Knoten, falls er ein XML-Element ist, einer Deklaration eines <see langword="any" />-Elements eines XML-Schemas entspricht, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Weist ein <see cref="T:System.Xml.XmlWriter" />-Objekt an, ein <see cref="T:System.Xml.XmlNode" />-Objekt innerhalb des Texts eines benannten XML-Elements zu schreiben.</summary>
      <param name="node">Der zu schreibende XML-Knoten, möglicherweise ein untergeordnetes XML-Element.</param>
      <param name="name">Der lokale Name des zu schreibenden übergeordneten XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden übergeordneten XML-Elements.</param>
      <param name="isNullable">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das zu serialisierende Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
      <param name="any">
        <see langword="true" />, wenn der Knoten, falls er ein XML-Element ist, einer Deklaration eines <see langword="any" />-Elements eines XML-Schemas entspricht, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <param name="value">Der Name, der im Elementtext geschrieben werden soll (mit dem Präfix, falls er namespace-qualifiziert ist).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <param name="value">Der Name, der im Elementtext geschrieben werden soll (mit dem Präfix, falls er namespace-qualifiziert ist).</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="value">Der Name, der im Elementtext geschrieben werden soll (mit dem Präfix, falls er namespace-qualifiziert ist).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="value">Der Name, der im Elementtext geschrieben werden soll (mit dem Präfix, falls er namespace-qualifiziert ist).</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements, das ohne Namespacequalifikation geschrieben werden soll.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="ns">Der Namespace des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName">Der lokale Name des XML-Elements.</param>
      <param name="value">Der Textwert des XML-Elements.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>Schreibt ein XML-Element, dessen Text leer ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>Schreibt ein XML-Element, dessen Text leer ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>Schreibt ein <see langword="&lt;closing&gt;" />-Elementtag.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>Schreibt ein <see langword="&lt;closing&gt;" />-Elementtag.</summary>
      <param name="o">Das serialisierte Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>Schreibt ein <see langword="id" />-Attribut, das in einem SOAP-codierten <see langword="multiRef" />-Element vorkommt.</summary>
      <param name="o">Das serialisierte Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Schreibt Attribute für Namespacedeklarationen.</summary>
      <param name="xmlns">Die zu deklarierenden XML-Namespaces.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element, dessen Text einen gültigen qualifizierten XML-Namen enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value">Der qualifizierte XML-Name, der im Text des XML-Elements geschrieben werden soll.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element, dessen Text einen gültigen qualifizierten XML-Namen enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value">Der qualifizierte XML-Name, der im Text des XML-Elements geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element, das eine Zeichenfolge als Text enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value">Die Zeichenfolge, die im Text des XML-Elements geschrieben werden soll.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein Bytearray als Text eines XML-Elements. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value">Das Bytearray, das im Text des XML-Elements geschrieben werden soll.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Schreibt ein XML-Element, das eine Zeichenfolge als Text enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value">Die Zeichenfolge, die im Text des XML-Elements geschrieben werden soll.</param>
      <param name="xsiType">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>Schreibt ein XML-Element, das eine Zeichenfolge als Text enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value">Die Zeichenfolge, die im Text des XML-Elements geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>Schreibt ein Bytearray als Text eines XML-Elements. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value">Das Bytearray, das im Text des XML-Elements geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>Schreibt ein XML-Element, das eine Zeichenfolge als Text enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value">Die Zeichenfolge, die im Text des XML-Elements geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>Schreibt ein XML-Element mit einem <see langword="xsi:nil='true'" />-Attribut.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>Schreibt ein XML-Element mit einem <see langword="xsi:nil='true'" />-Attribut.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>Schreibt ein XML-Element mit einem <see langword="xsi:nil='true'" />-Attribut.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>Schreibt ein XML-Element mit einem <see langword="xsi:nil='true'" />-Attribut.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="&lt;multiRef&gt;" />-XML-Element für ein bestimmtes Objekt enthalten kann.</summary>
      <param name="n">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o">Das Objekt, das entweder in das aktuelle XML-Element oder in ein <see langword="multiRef" />-Element serialisiert wird, auf das das aktuelle Element verweist.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="&lt;multiRef&gt;" />-XML-Element für ein bestimmtes Objekt enthalten kann.</summary>
      <param name="n">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o">Das Objekt, das entweder in das aktuelle XML-Element oder in ein <see langword="multiRef" />-Element serialisiert wird, auf das das aktuelle Element verweist.</param>
      <param name="ambientType">Der in der Typzuordnung des Objekts gespeicherte Typ (im Gegensatz zum Objekttyp, der direkt durch die <see langword="typeof" />-Operation ermittelt wird).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="&lt;multiRef&gt;" />-XML-Element für ein bestimmtes Objekt enthalten kann.</summary>
      <param name="n">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o">Das Objekt, das entweder in das aktuelle XML-Element oder in ein <see langword="multiRef" />-Element serialisiert wird, auf das das aktuelle Element verweist.</param>
      <param name="ambientType">Der in der Typzuordnung des Objekts gespeicherte Typ (im Gegensatz zum Objekttyp, der direkt durch die <see langword="typeof" />-Operation ermittelt wird).</param>
      <param name="suppressReference">
        <see langword="true" />, wenn das Element nicht auf ein anderes Element mit Daten verweisen soll, sondern das Objekt direkt in das XML-Element serialisiert werden soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="multiRef" />-XML-Element für ein bestimmtes Objekt enthalten kann.</summary>
      <param name="n">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o">Das Objekt, das entweder in das aktuelle XML-Element oder in ein <see langword="multiRef" />-Element serialisiert wird, auf das das aktuelle Element verweist.</param>
      <param name="ambientType">Der in der Typzuordnung des Objekts gespeicherte Typ (im Gegensatz zum Objekttyp, der direkt durch die <see langword="typeof" />-Operation ermittelt wird).</param>
      <param name="suppressReference">
        <see langword="true" />, wenn das Element nicht auf ein anderes Element mit Daten verweisen soll, sondern das Objekt direkt in das XML-Element serialisiert werden soll, andernfalls <see langword="false" />.</param>
      <param name="isNullable">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das zu serialisierende Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>Übernimmt oder bestimmt den <see cref="T:System.Xml.XmlWriter" />, der von <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> verwendet wird.</summary>
      <returns>Der von der Klasseninstanz verwendete <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>Serialisiert Objekte in SOAP-codierte <see langword="multiRef" />-XML-Elemente in einer SOAP-Nachricht.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="multiRef" />-Element für ein bestimmtes Objekt enthält.</summary>
      <param name="n">Der lokale Name des zu schreibenden verweisenden Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden verweisenden Elements.</param>
      <param name="o">Das serialisierte Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="multiRef" />-Element für ein bestimmtes Objekt enthält.</summary>
      <param name="n">Der lokale Name des zu schreibenden verweisenden Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden verweisenden Elements.</param>
      <param name="o">Das serialisierte Objekt.</param>
      <param name="isNullable">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das zu serialisierende Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>Schreibt ein RPC-Ergebniselement gemäß SOAP 1.2 mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="name">Der lokale Name des Ergebnistexts.</param>
      <param name="ns">Der Namespace des Ergebnistexts.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>Schreibt ein Objekt, das benutzerdefinierte XML-Formatierung als XML-Element verwendet.</summary>
      <param name="serializable">Ein Objekt, das die <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Schnittstelle implementiert, die benutzerdefinierte XML-Formatierung verwendet.</param>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="isNullable">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Klassenobjekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Weist <see cref="T:System.Xml.XmlNode" /> an, ein Objekt zu schreiben, das benutzerdefinierte XML-Formatierung als XML-Element verwendet.</summary>
      <param name="serializable">Ein Objekt, das die <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Schnittstelle implementiert, die benutzerdefinierte XML-Formatierung verwendet.</param>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="isNullable">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
      <param name="wrapped">
        <see langword="true" />, wenn das öffnende Elementtag beim Schreiben übergangen werden soll, <see langword="false" />, wenn das öffnende Elementtag geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>Schreibt die XML-Deklaration, wenn der Writer am Anfang eines XML-Dokuments positioniert ist.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="writePrefixed">
        <see langword="true" />, wenn der Elementname mit einem Präfix geschrieben werden soll, falls ein solches für den angegebenen Namespace nicht verfügbar ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o">Das Objekt, das als XML-Element serialisiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o">Das Objekt, das als XML-Element serialisiert wird.</param>
      <param name="writePrefixed">
        <see langword="true" />, wenn der Elementname mit einem Präfix geschrieben werden soll, falls ein solches für den angegebenen Namespace nicht verfügbar ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o">Das Objekt, das als XML-Element serialisiert wird.</param>
      <param name="writePrefixed">
        <see langword="true" />, wenn der Elementname mit einem Präfix geschrieben werden soll, falls ein solches für den angegebenen Namespace nicht verfügbar ist, andernfalls <see langword="false" />.</param>
      <param name="xmlns">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Klasse, die Paare aus Präfix und Namespace enthält, die im generierten XML-Code verwendet werden sollen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>Schreibt ein XML-Element, dessen Textkörper ein Wert eines einfachen XML-Schemadatentyps ist.</summary>
      <param name="name">Der lokale Name des zu schreibenden Elements.</param>
      <param name="ns">Der Namespace des zu schreibenden Elements.</param>
      <param name="o">Das in den Elementtext zu serialisierende Objekt.</param>
      <param name="xsiType">
        <see langword="true" />, wenn das XML-Element den Typ des Textwerts explizit mit dem <see langword="xsi:type" />-Attribut angibt, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>Schreibt ein Base64-Bytearray.</summary>
      <param name="value">Das zu schreibende Bytearray.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>Schreibt einen angegebenen Zeichenfolgenwert.</summary>
      <param name="value">Der Wert der zu schreibenden Zeichenfolge.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>Schreibt den angegebenen <see cref="T:System.Xml.XmlNode" /> als XML-Attribut.</summary>
      <param name="node">Der zu schreibende XML-Knoten.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>Schreibt den angegebenen <see cref="T:System.Xml.XmlNode" /> als XML-Attribut.</summary>
      <param name="node">Der zu schreibende XML-Knoten.</param>
      <param name="container">Ein <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Objekt (bzw. <see langword="null" />), mit dem ein qualifizierter Namenswert für ein <see langword="arrayType" />-Attribut aus dem WSDL-Namespace („http://schemas.xmlsoap.org/wsdl/“) generiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>Schreibt ein <see langword="xsi:type" />-Attribut für ein XML-Element, das in ein Dokument serialisiert wird.</summary>
      <param name="name">Der lokale Name eines XML-Schemadatentyps.</param>
      <param name="ns">Der Namespace eines XML-Schemadatentyps.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>Serialisiert und deserialisiert Objekte in und aus XML-Dokumenten. Mit <see cref="T:System.Xml.Serialization.XmlSerializer" /> können Sie steuern, wie Objekte in XML codiert werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann.</summary>
      <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann. Gibt den Standardnamespace für alle XML-Elemente an.</summary>
      <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="defaultNamespace">Der für alle XML-Elemente zu verwendende Standardnamespace.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in ein Objekt eines angegebenen Typs deserialisieren kann. Wenn eine Eigenschaft oder ein Feld ein Array zurückgibt, werden durch den <paramref name="extraTypes" />-Parameter die Objekte angegeben, die in das Array eingefügt werden können.</summary>
      <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können.</summary>
      <param name="type">Der Typ des zu serialisierenden Objekts.</param>
      <param name="overrides">Eine <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte vom Typ <see cref="T:System.Object" /> in Instanzen eines XML-Dokuments serialisieren und Instanzen eines XML-Dokuments in Objekte vom Typ <see cref="T:System.Object" /> deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
      <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="overrides">Ein <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, das das Verhalten der im <paramref name="type" />-Parameter festgelegten Klasse erweitert oder überschreibt.</param>
      <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
      <param name="defaultNamespace">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte vom Typ <see cref="T:System.Object" /> in Instanzen eines XML-Dokuments serialisieren und Instanzen eines XML-Dokuments in Objekte vom Typ <see cref="T:System.Object" /> deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
      <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="overrides">Ein <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, das das Verhalten der im <paramref name="type" />-Parameter festgelegten Klasse erweitert oder überschreibt.</param>
      <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
      <param name="defaultNamespace">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
      <param name="location">Der Speicherort der Typen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und ein XML-Dokument in ein Objekt des angegebenen Typs deserialisieren kann. Außerdem wird die als XML-Stammelement zu verwendende Klasse angegeben.</summary>
      <param name="type">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das das XML-Stammelement darstellt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Initialisiert eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse mithilfe eines Objekts, das einen Typ einem anderen zuweist.</summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> zum Zuordnen eines Typs zu einem anderen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein angegebenes XML-Dokument deserialisieren kann.</summary>
      <param name="xmlReader">Ein <see cref="T:System.Xml.XmlReader" />, der auf das zu deserialisierende Dokument zeigt.</param>
      <returns>
        <see langword="true" />, wenn dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Objekt deserialisieren kann, auf das <see cref="T:System.Xml.XmlReader" /> zeigt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>Gibt ein Objekt zurück, das zum Lesen des zu serialisierenden XML-Dokuments verwendet wird.</summary>
      <returns>Ein zum Lesen des XML-Dokuments verwendeter <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
      <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse einen Writer zurück, der zum Serialisieren des Objekts verwendet wird.</summary>
      <returns>Eine Instanz, die die <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />-Klasse implementiert.</returns>
      <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>Deserialisiert das im angegebenen <see cref="T:System.IO.Stream" /> enthaltene XML-Dokument.</summary>
      <param name="stream">Der <see cref="T:System.IO.Stream" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>Deserialisiert das im angegebenen <see cref="T:System.IO.TextReader" /> enthaltene XML-Dokument.</summary>
      <param name="textReader">Der <see cref="T:System.IO.TextReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
      <exception cref="T:System.InvalidOperationException">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>Deserialisiert das im angegebenen <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> enthaltene XML-Dokument.</summary>
      <param name="reader">Der <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <returns>Das deserialisierte Objekt.</returns>
      <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>Deserialisiert das im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltene XML-Dokument.</summary>
      <param name="xmlReader">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
      <exception cref="T:System.InvalidOperationException">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>Deserialisiert das im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltene XML-Dokument anhand des angegebenen Codierungsstils.</summary>
      <param name="xmlReader">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <param name="encodingStyle">Der Codierungsstil des serialisierten XML-Codes.</param>
      <returns>Das deserialisierte Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Deserialisiert das Objekt mit den im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltenen Daten.</summary>
      <param name="xmlReader">Eine Instanz der <see cref="T:System.Xml.XmlReader" />-Klasse zum Lesen des Dokuments.</param>
      <param name="encodingStyle">Die verwendete Codierung.</param>
      <param name="events">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />-Klasse.</param>
      <returns>Das Objekt, das deserialisiert wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Deserialisiert ein im <see cref="T:System.Xml.XmlReader" /> enthaltenes XML-Dokument und ermöglicht das Überschreiben der Ereignisse, die während der Deserialisierung eintreten.</summary>
      <param name="xmlReader">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden Dokument.</param>
      <param name="events">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />-Klasse.</param>
      <returns>Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>Gibt ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten zurück, das aus einem Array von <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekten erstellt wurde.</summary>
      <param name="mappings">Ein Array von <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> zum Zuordnen eines Typs zu einem anderen.</param>
      <returns>Ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>Gibt eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse aus den angegebenen Zuordnungen zurück.</summary>
      <param name="mappings">Ein Array von <see cref="T:System.Xml.Serialization.XmlMapping" />-Objekten.</param>
      <param name="type">Der <see cref="T:System.Type" /> des deserialisierten Objekts.</param>
      <returns>Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>Gibt ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten zurück, das aus einem Array von Typen erstellt wurde.</summary>
      <param name="types">Ein Array von <see cref="T:System.Type" />-Objekten.</param>
      <returns>Ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>Gibt den Namen der Assembly zurück, die eine oder mehrere Versionen des <see cref="T:System.Xml.Serialization.XmlSerializer" /> enthält, die für das Serialisieren oder Deserialisieren des angegebenen Typs erstellt wurden.</summary>
      <param name="type">Der <see cref="T:System.Type" />, der deserialisiert wird.</param>
      <returns>Der Name der Assembly, die einen <see cref="T:System.Xml.Serialization.XmlSerializer" /> für den Typ enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>Gibt den Namen der Assembly zurück, die das Serialisierungsprogramm für den angegebenen Typ im angegebenen Namespace enthält.</summary>
      <param name="type">Das gesuchte <see cref="T:System.Type" />.</param>
      <param name="defaultNamespace">Der Namespace des Typs.</param>
      <returns>Der Name der Assembly, die für spezielle Zwecke erstellte Serialisierungsprogramme enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.IO.Stream" /> in eine Datei.</summary>
      <param name="stream">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.Stream" />.</param>
      <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.IO.Stream" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
      <param name="stream">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.Stream" />.</param>
      <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <param name="namespaces">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
      <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.IO.TextWriter" /> in eine Datei.</summary>
      <param name="textWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
      <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
      <param name="textWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
      <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <param name="namespaces">Das <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, das die Namespaces für das generierte XML-Dokument enthält.</param>
      <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> in eine Datei.</summary>
      <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <param name="writer">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</param>
      <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei.</summary>
      <param name="xmlWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
      <param name="xmlWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="o">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <param name="namespaces">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
      <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>Serialisiert das angegebene Objekt und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei, wobei auf die angegebenen Namespaces und den Codierungsstil verwiesen wird.</summary>
      <param name="xmlWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="o">Das zu serialisierende Objekt.</param>
      <param name="namespaces">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
      <param name="encodingStyle">Der Codierungsstil des serialisierten XML-Codes.</param>
      <exception cref="T:System.InvalidOperationException">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />, des angegebenen XML-Namespaces und der angegebenen Codierung in eine Datei.</summary>
      <param name="xmlWriter">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="o">Das zu serialisierende Objekt.</param>
      <param name="namespaces">Eine Instanz von <see langword="XmlSerializerNamespaces" />, die die zu verwendenden Namespaces und Präfixe enthält.</param>
      <param name="encodingStyle">Die im Dokument verwendete Codierung.</param>
      <param name="id">Bei SOAP-codierten Meldungen die Basis für das Generieren von ID-Attributen.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf ein XML-Attribut von unbekanntem Typ stößt.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf ein XML-Element von unbekanntem Typ stößt.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf einen XML-Knoten von unbekanntem Typ stößt.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>Tritt während der Deserialisierung eines SOAP-codierten XML-Streams ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> auf einen bekannten Typ stößt, der nicht verwendet wird oder auf den nicht verwiesen wird.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>Wird auf einen Clientproxy für Webdienste angewendet. Ermöglicht das Angeben einer Assembly mit benutzerdefinierten Serialisierungsprogrammen.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />-Klasse mit dem angegebenen Assemblynamen.</summary>
      <param name="assemblyName">Der einfache nicht verschlüsselte Name der Assembly.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />-Klasse mit dem angegebenen Namen und Speicherort der Assembly.</summary>
      <param name="assemblyName">Der einfache nicht verschlüsselte Name der Assembly.</param>
      <param name="codeBase">Eine Zeichenfolge, die den Speicherort der Assembly als URL darstellt.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>Ruft den Namen der Assembly ab, die Serialisierungsprogramme für eine bestimmte Gruppe von Typen enthält, oder legt diesen fest.</summary>
      <returns>Der einfache nicht verschlüsselte Name der Assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>Ruft den Speichort der Assembly ab, die die Serialisierungsprogramme enthält.</summary>
      <returns>Ein Speicherort, z. B. ein Pfad oder ein URI, der auf die Assembly zeigt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>Erstellt typisierte Versionen von <see cref="T:System.Xml.Serialization.XmlSerializer" /> für eine effizientere Serialisierung.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die zum Serialisieren des angegebenen Typs verwendet wird.</summary>
      <param name="type">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <returns>Eine zum Serialisieren des angegebenen Typs bestimmte Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>Gibt eine zum Serialisieren des angegebenen Typs und des angegebenen Namespaces verwendete Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück.</summary>
      <param name="type">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="defaultNamespace">Der für alle XML-Elemente zu verwendende Standardnamespace.</param>
      <returns>Eine zum Serialisieren des angegebenen Typs bestimmte Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die zum Serialisieren des angegebenen Typs verwendet wird. Wenn eine Eigenschaft oder ein Feld ein Array zurückgibt, werden durch den <paramref name="extraTypes" />-Parameter die Objekte angegeben, die in das Array eingefügt werden können.</summary>
      <param name="type">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <returns>Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die Objekte vom angegebenen Typ in XML-Dokumente serialisieren kann, und umgekehrt. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können.</summary>
      <param name="type">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="overrides">Eine Instanz von <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> mit Feldern, die das Standardserialisierungsverhalten überschreiben.</param>
      <returns>Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die Objekte vom angegebenen Typ in XML-Dokumentinstanzen serialisieren kann, und umgekehrt. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
      <param name="type">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="overrides">Eine Instanz von <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> mit Feldern, die das Standardserialisierungsverhalten überschreiben.</param>
      <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das das XML-Stammelement darstellt.</param>
      <param name="defaultNamespace">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
      <returns>Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die Objekte vom angegebenen Typ in XML-Dokumentinstanzen serialisieren kann, und umgekehrt. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des Objekts, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="overrides">Eine Instanz von <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, die das Verhalten der im Parameter angegebenen Klasse erweitert oder überschreibt.</param>
      <param name="extraTypes">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
      <param name="defaultNamespace">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
      <param name="location">Der Pfad, der den Speicherort der Typen angibt.</param>
      <returns>Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die Objekte vom angegebenen Typ in XML-Dokumente serialisieren kann, und umgekehrt. Gibt das Objekt an, das das XML-Stammelement darstellt.</summary>
      <param name="type">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das das XML-Stammelement darstellt.</param>
      <returns>Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Gibt mithilfe eines Objekts, das einen Typ einem anderen zuordnet, eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück.</summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> zum Zuordnen eines Typs zu einem anderen.</param>
      <returns>Eine zum Serialisieren des zugeordneten Typs bestimmte Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>Definiert Reader, Writer und Methoden für zuvor generierte Serialisierungsprogramme.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>Ruft einen Wert ab, der bestimmt, ob ein Typ serialisiert werden kann.</summary>
      <param name="type">Der zu serialisierende Typ.</param>
      <returns>
        <see langword="true" />, wenn der Typ serialisiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>Gibt ein Serialisierungsprogramm für den angegebenen Typ zurück.</summary>
      <param name="type">Der zu serialisierende Typ.</param>
      <returns>Eine Instanz eines von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse abgeleiteten Typs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>Ruft das XML-Reader-Objekt ab, das vom Serialisierungsprogramm verwendet wird.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlSerializationReader" />, mit dem ein XML-Dokument oder -Datenstream gelesen wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>Ruft die Auflistung der Methoden ab, die zum Lesen eines Datenstreams verwendet werden.</summary>
      <returns>Eine <see cref="T:System.Collections.Hashtable" />, die die Methoden enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>Ruft die Auflistung der typisierten Serialisierungsprogramme ab, die in der Assembly gefunden wurden.</summary>
      <returns>Eine <see cref="T:System.Collections.Hashtable" />, die die typisierten Serialisierungsprogramme enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>Ruft die Auflistung der Methoden ab, die zum Schreiben in einen Datenstream verwendet werden.</summary>
      <returns>Eine <see cref="T:System.Collections.Hashtable" />, die die Methoden enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>Ruft das XML-Writer-Objekt für das Serialisierungsprogramm ab.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, der zum Schreiben eines XML-Datenstreams oder -Dokuments verwendet wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>Wenn dieses Attribut auf eine Assembly angewendet wird, bedeutet dies, dass der Code von der Serialisierungsinfrastruktur generiert wurde und zum Zweck der Leistungssteigerung wiederverwendet werden kann.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />-Klasse für den angegebenen Typ.</summary>
      <param name="type">Der Typ, der serialisiert wird.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>Ruft den CLR-Namespace (Common Language Runtime) der Assembly ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.String" /> mit dem CLR (Common Language Runtime)-Namespace der Assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>Ruft die Identität der übergeordneten Assembly ab oder legt diese fest.</summary>
      <returns>Die Version der übergeordneten Assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>Ruft den Typ ab, für den das Serialisierungsprogramm bestimmt ist, oder legt diesen fest.</summary>
      <returns>Der zu serialisierende <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>Ruft die Versionsnummer der Assembly ab oder legt diese fest.</summary>
      <returns>Die Version der Assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>Steuert das XML-Schema, das generiert wird, wenn das Attributziel vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisiert wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />-Klasse und gibt den Namen des XML-Typs an.</summary>
      <param name="typeName">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>Ruft einen Wert ab, der bestimmt, ob der resultierende Schematyp ein anonymer XSD-Typ ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der resultierende Schematyp ein anonymer XSD-Typ ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>Ruft einen Wert ab, der angibt, ob der Typ in XML-Schemadokumente aufgenommen werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der Typ in XML-Schemadokumente aufgenommen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>Ruft den Namespace des XML-Typs ab oder legt diesen fest.</summary>
      <returns>Der Namespace des XML-Typs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>Ruft den Namen des XML-Typs ab oder legt diesen fest.</summary>
      <returns>Der Name des XML-Typs.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>Enthält eine Zuordnung eines Typs zu einem anderen.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>Der vollqualifizierte Typname, einschließlich des bzw. der Namespaces und des Typs.</summary>
      <returns>Der voll gekennzeichnete Typname.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>Ruft den Typnamen des zugeordneten Objekts ab.</summary>
      <returns>Der Typname des zugeordneten Objekts.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>Ruft den XML-Elementnamen des zugeordneten Objekts ab.</summary>
      <returns>Der XML-Elementname des zugeordneten Objekts. Der Standardwert ist der Klassenname des Objekts.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>Ruft den XML-Namespace des zugeordneten Objekts ab.</summary>
      <returns>Der XML-Namespace des zugeordneten Objekts. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
  </members>
</doc>