<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.EventBasedAsync</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.AsyncCompletedEventArgs">
      <summary vsli:raw="Provides data for the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event.">Stellt Daten für das MethodName<see langword="Completed" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.AsyncCompletedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />-Klasse.</summary>
      <param name="error" vsli:raw="Any error that occurred during the asynchronous operation.">Ein während des asynchronen Vorgangs aufgetretener Fehler.</param>
      <param name="cancelled" vsli:raw="A value indicating whether the asynchronous operation was canceled.">Ein Wert, der angibt, ob der asynchrone Vorgang abgebrochen wurde.</param>
      <param name="userState" vsli:raw="The optional user-supplied state object passed to the &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)&quot; /&gt; method.">Das an die <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />-Methode übergebene, optionale benutzerdefinierte Zustandsobjekt.</param>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">
      <summary vsli:raw="Gets a value indicating whether an asynchronous operation has been canceled.">Ruft einen Wert ab, der angibt, ob ein asynchroner Vorgang abgebrochen wurde.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the background operation has been canceled; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Hintergrundvorgang abgebrochen wurde, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Error">
      <summary vsli:raw="Gets a value indicating which error occurred during an asynchronous operation.">Ruft einen Wert ab, der angibt, welcher Fehler während eines asynchronen Vorgangs aufgetreten ist.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; instance, if an error occurred during an asynchronous operation; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Eine <see cref="T:System.Exception" />-Instanz, wenn während eines asynchronen Vorgangs ein Fehler aufgetreten ist, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary">
      <summary vsli:raw="Raises a user-supplied exception if an asynchronous operation failed.">Löst eine benutzerdefinierte Ausnahme aus, wenn bei einem asynchronen Vorgang ein Fehler aufgetreten ist.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Die <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />-Eigenschaft ist <see langword="true" />.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt; property has been set by the asynchronous operation. The &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property holds a reference to &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt;.">Die <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />-Eigenschaft wurde durch den asynchronen Vorgang festgelegt. Die <see cref="P:System.Exception.InnerException" />-Eigenschaft enthält einen Verweis auf <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">
      <summary vsli:raw="Gets the unique identifier for the asynchronous task.">Ruft den eindeutigen Bezeichner der asynchronen Aufgabe ab.</summary>
      <returns vsli:raw="An object reference that uniquely identifies the asynchronous task; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value has been set.">Ein Objektverweis, der die asynchrone Aufgabe eindeutig bezeichnet, andernfalls <see langword="null" />, wenn kein Wert festgelegt wurde.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncCompletedEventHandler">
      <summary vsli:raw="Represents the method that will handle the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event of an asynchronous operation.">Stellt die Methode dar, die das MethodName<see langword="Completed" />-Ereignis eines asynchronen Vorgangs behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AsyncCompletedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.AsyncOperation">
      <summary vsli:raw="Tracks the lifetime of an asynchronous operation.">Verfolgt die Lebensdauer eines asynchronen Vorgangs.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.Finalize">
      <summary vsli:raw="Finalizes the asynchronous operation.">Beendet den asynchronen Vorgang.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.OperationCompleted">
      <summary vsli:raw="Ends the lifetime of an asynchronous operation.">Beendet die Lebensdauer eines asynchronen Vorgangs.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.OperationCompleted&quot; /&gt; has been called previously for this task.">
        <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> wurde vorher für diese Aufgabe aufgerufen.</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes a delegate on the thread or context appropriate for the application model.">Ruft einen Delegaten auf dem Thread oder Kontext auf, der für das Anwendungsmodell geeignet ist.</summary>
      <param name="d" vsli:raw="A &lt;see cref=&quot;T:System.Threading.SendOrPostCallback&quot; /&gt; object that wraps the delegate to be called when the operation ends.">Ein <see cref="T:System.Threading.SendOrPostCallback" />-Objekt, das den am Ende des Vorgangs aufzurufenden Delegaten umschließt.</param>
      <param name="arg" vsli:raw="An argument for the delegate contained in the &lt;paramref name=&quot;d&quot; /&gt; parameter.">Ein Argument für den Delegaten, der im <paramref name="d" />-Parameter enthalten ist.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method has been called previously for this task.">Die <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" />-Methode wurde zuvor für diese Aufgabe aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Ends the lifetime of an asynchronous operation.">Beendet die Lebensdauer eines asynchronen Vorgangs.</summary>
      <param name="d" vsli:raw="A &lt;see cref=&quot;T:System.Threading.SendOrPostCallback&quot; /&gt; object that wraps the delegate to be called when the operation ends.">Ein <see cref="T:System.Threading.SendOrPostCallback" />-Objekt, das den am Ende des Vorgangs aufzurufenden Delegaten umschließt.</param>
      <param name="arg" vsli:raw="An argument for the delegate contained in the &lt;paramref name=&quot;d&quot; /&gt; parameter.">Ein Argument für den Delegaten, der im <paramref name="d" />-Parameter enthalten ist.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.OperationCompleted&quot; /&gt; has been called previously for this task.">
        <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" /> wurde vorher für diese Aufgabe aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.SynchronizationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Threading.SynchronizationContext&quot; /&gt; object that was passed to the constructor.">Ruft das <see cref="T:System.Threading.SynchronizationContext" />-Objekt ab, das an den Konstruktor übergeben wurde.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Threading.SynchronizationContext&quot; /&gt; object that was passed to the constructor.">Das <see cref="T:System.Threading.SynchronizationContext" />-Objekt, das an den Konstruktor übergeben wurde.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.UserSuppliedState">
      <summary vsli:raw="Gets or sets an object used to uniquely identify an asynchronous operation.">Ruft ein Objekt ab, das für die eindeutige Identifikation eines asynchronen Vorgangs verwendet wird, und legt dieses fest.</summary>
      <returns vsli:raw="The state object passed to the asynchronous method invocation.">Das Zustandsobjekt, das an den asynchronen Methodenaufruf übergeben wurde.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncOperationManager">
      <summary vsli:raw="Provides concurrency management for classes that support asynchronous method calls. This class cannot be inherited.">Stellt Parallelitätsverwaltung für Klassen bereit, die asynchrone Methodenaufrufe unterstützen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.ComponentModel.AsyncOperation&quot; /&gt; for tracking the duration of a particular asynchronous operation.">Gibt für die Überwachung der Dauer eines bestimmten asynchronen Vorgangs eine <see cref="T:System.ComponentModel.AsyncOperation" /> zurück.</summary>
      <param name="userSuppliedState" vsli:raw="An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.">Ein Objekt, das dazu verwendet wird, einem bestimmten asynchronen Vorgang einen Bestandteil des Clientzustands, z. B. eine Aufgaben-ID, zuzuordnen.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AsyncOperation&quot; /&gt; that you can use to track the duration of an asynchronous method invocation.">Eine <see cref="T:System.ComponentModel.AsyncOperation" />, die Sie verwenden können, um die Dauer eines asynchronen Methodenaufrufs zu verfolgen.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext">
      <summary vsli:raw="Gets or sets the synchronization context for the asynchronous operation.">Ruft den Synchronisierungskontext für den asynchronen Vorgang ab oder legt diesen fest.</summary>
      <returns vsli:raw="The synchronization context for the asynchronous operation.">Der Synchronisierungskontext für den asynchronen Vorgang.</returns>
    </member>
    <member name="T:System.ComponentModel.BackgroundWorker">
      <summary vsli:raw="Executes an operation on a separate thread.">Führt einen Vorgang für einen getrennten Thread aus.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BackgroundWorker" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.CancelAsync">
      <summary vsli:raw="Requests cancellation of a pending background operation.">Fordert das Abbrechen eines anstehenden Hintergrundvorgangs an.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" /> ist <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.CancellationPending">
      <summary vsli:raw="Gets a value indicating whether the application has requested cancellation of a background operation.">Ruft einen Wert ab, der angibt, ob die Anwendung den Abbruch eines Hintergrundvorgangs angefordert hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the application has requested cancellation of a background operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Anwendung den Abbruch eines Hintergrundvorgangs angefordert hat, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)">
      <param name="disposing" vsli:raw="This method does not do anything." />
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.DoWork">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.RunWorkerAsync&quot; /&gt; is called.">Tritt ein, wenn <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" /> aufgerufen wird.</summary>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.IsBusy">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; is running an asynchronous operation.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.ComponentModel.BackgroundWorker" /> einen asynchronen Vorgang ausführt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; is running an asynchronous operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> einen asynchronen Vorgang ausführt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> -Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />-Ereignis aus.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.ProgressChanged">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)&quot; /&gt; is called.">Tritt ein, wenn <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" /> aufgerufen wird.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</summary>
      <param name="percentProgress" vsli:raw="The percentage, from 0 to 100, of the background operation that is complete.">Bereits abgeschlossener Teil des Hintergrundvorgangs in Prozent (1-100).</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.">Die <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">Löst das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis aus.</summary>
      <param name="percentProgress" vsli:raw="The percentage, from 0 to 100, of the background operation that is complete.">Bereits abgeschlossener Teil des Hintergrundvorgangs in Prozent (1-100).</param>
      <param name="userState" vsli:raw="A unique &lt;see cref=&quot;T:System.Object&quot; /&gt; indicating the user state. Returned as the &lt;see cref=&quot;P:System.ComponentModel.ProgressChangedEventArgs.UserState&quot; /&gt; property of the &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt;.">Das an <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" /> übergebene Zustandsobjekt.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.">Die <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
      <summary vsli:raw="Starts execution of a background operation.">Startet die Ausführung eines Hintergrundvorgangs.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.IsBusy&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> ist <see langword="true" />.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)">
      <summary vsli:raw="Starts execution of a background operation.">Startet die Ausführung eines Hintergrundvorgangs.</summary>
      <param name="argument" vsli:raw="A parameter for use by the background operation to be executed in the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event handler.">Ein Parameter, der von dem Hintergrundvorgang verwendet wird, der im <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignishandler ausgeführt wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.IsBusy&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" /> ist <see langword="true" />.</exception>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted">
      <summary vsli:raw="Occurs when the background operation has completed, has been canceled, or has raised an exception.">Tritt ein, wenn der Hintergrundvorgang entweder abgeschlossen ist, abgebrochen wurde oder eine Ausnahme ausgelöst hat.</summary>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; can report progress updates.">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> Fortschrittsaktualisierungen melden kann, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports progress updates; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see cref="T:System.ComponentModel.BackgroundWorker" /> Fortschrittsaktualisierungen unterstützt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports asynchronous cancellation.">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.ComponentModel.BackgroundWorker" /> asynchrone Abbrüche unterstützt, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports cancellation; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.ComponentModel.BackgroundWorker" /> Abbrüche unterstützt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DoWorkEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event handler.">Stellt Daten für den <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignishandler bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DoWorkEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DoWorkEventArgs" />-Klasse.</summary>
      <param name="argument" vsli:raw="Specifies an argument for an asynchronous operation.">Gibt ein Argument für einen asynchronen Vorgang an.</param>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Argument">
      <summary vsli:raw="Gets a value that represents the argument of an asynchronous operation.">Ruft einen Wert ab, der das Argument eines asynchronen Vorgangs darstellt.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the argument of an asynchronous operation.">Ein <see cref="T:System.Object" />, das das Argument eines asynchronen Vorgangs darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Result">
      <summary vsli:raw="Gets or sets a value that represents the result of an asynchronous operation.">Ruft einen Wert ab, der das Ergebnis eines asynchronen Vorgangs darstellt, oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the result of an asynchronous operation.">Ein <see cref="T:System.Object" />, das das Ergebnis eines asynchronen Vorgangs darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.DoWorkEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event. This class cannot be inherited.">Stellt die Methode zur Behandlung des <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" />-Ereignisses dar. Diese Klasse kann nicht vererbt werden.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DoWorkEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.DoWorkEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">Stellt Daten für das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.ProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />-Klasse.</summary>
      <param name="progressPercentage" vsli:raw="The percentage of an asynchronous task that has been completed.">Gibt an, wieviel Prozent einer asynchronen Aufgabe ausgeführt wurden.</param>
      <param name="userState" vsli:raw="A unique user state.">Ein eindeutiger Benutzerzustand.</param>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage">
      <summary vsli:raw="Gets the asynchronous task progress percentage.">Ruft den Fortschrittsprozentsatz einer asynchronen Aufgabe ab.</summary>
      <returns vsli:raw="A percentage value indicating the asynchronous task progress.">Ein Prozentwert, der den Fortschritt der asynchronen Aufgabe angibt.</returns>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.UserState">
      <summary vsli:raw="Gets a unique user state.">Ruft einen eindeutigen Benutzerzustand ab.</summary>
      <returns vsli:raw="A unique &lt;see cref=&quot;T:System.Object&quot; /&gt; indicating the user state.">Ein eindeutiges <see cref="T:System.Object" />, das den Benutzerzustand angibt.</returns>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class. This class cannot be inherited.">Stellt die Methode dar, die das <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" />-Ereignis der <see cref="T:System.ComponentModel.BackgroundWorker" />-Klasse behandelt. Diese Klasse kann nicht vererbt werden.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventArgs">
      <summary vsli:raw="Provides data for the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event.">Stellt Daten für das MethodName<see langword="Completed" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.RunWorkerCompletedEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />-Klasse.</summary>
      <param name="result" vsli:raw="The result of an asynchronous operation.">Das Ergebnis eines asynchronen Vorgangs.</param>
      <param name="error" vsli:raw="Any error that occurred during the asynchronous operation.">Ein während des asynchronen Vorgangs aufgetretener Fehler.</param>
      <param name="cancelled" vsli:raw="A value indicating whether the asynchronous operation was canceled.">Ein Wert, der angibt, ob der asynchrone Vorgang abgebrochen wurde.</param>
    </member>
    <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
      <summary vsli:raw="Gets a value that represents the result of an asynchronous operation.">Ruft einen Wert ab, der das Ergebnis eines asynchronen Vorgangs darstellt.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the result of an asynchronous operation.">Ein <see cref="T:System.Object" />, das das Ergebnis eines asynchronen Vorgangs darstellt.</returns>
      <exception cref="T:System.Reflection.TargetInvocationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;. The &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property holds a reference to &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt;.">
        <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> ist nicht <see langword="null" />. Die <see cref="P:System.Exception.InnerException" />-Eigenschaft enthält einen Verweis auf <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> ist <see langword="true" />.</exception>
    </member>
    <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.UserState">
      <summary vsli:raw="Gets a value that represents the user state.">Ruft einen Wert ab, der den Benutzerzustand darstellt.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the user state.">Ein <see cref="T:System.Object" />, das den Benutzerzustand darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class.">Stellt die Methode dar, die das <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" />-Ereignis einer <see cref="T:System.ComponentModel.BackgroundWorker" />-Klasse behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RunWorkerCompletedEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
  </members>
</doc>