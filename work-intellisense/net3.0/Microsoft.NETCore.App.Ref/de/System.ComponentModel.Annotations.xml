<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Annotations</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider">
      <summary vsli:raw="Extends the metadata information for a class by adding attributes and property information that is defined in an associated class.">Erweitert die Metadateninformationen für eine Klasse, indem in einer zugeordneten Klasse definierte Attribute und Eigenschafteninformationen hinzugefügt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified type.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" />-Klasse unter Verwendung des angegebenen Typs.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">Der Typ, für den der Metadatenanbieter erstellt wird.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified metadata provider type and associated type.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" />-Klasse unter Verwendung des angegebenen Metadatenanbietertyps und des zugeordneten Typs.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">Der Typ, für den der Metadatenanbieter erstellt wird.</param>
      <param name="associatedMetadataType" vsli:raw="The associated type that contains the metadata.">Der zugeordnete Typ, der die Metadaten enthält.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;associatedMetadataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Der Wert von <paramref name="associatedMetadataType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary vsli:raw="Gets a type descriptor for the specified type and object.">Ruft einen Typdeskriptor für den angegebenen Typ und das angegebene Objekt ab.</summary>
      <param name="objectType" vsli:raw="The type of object to retrieve the type descriptor for.">Der Objekttyp, für den der Typdeskriptor abgerufen werden soll.</param>
      <param name="instance" vsli:raw="An instance of the type.">Eine Instanz des Typs.</param>
      <returns vsli:raw="The descriptor that provides metadata for the type.">Der Deskriptor, der Metadaten für den Typ bereitstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
      <summary vsli:raw="Specifies that an entity member represents a data relationship, such as a foreign key relationship.">Gibt an, dass ein Entitätsmember eine Datenbeziehung darstellt, z. B. eine Fremdschlüsselbeziehung.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociationAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The name of the association.">Der Name der Zuordnung.</param>
      <param name="thisKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;thisKey&quot; /&gt; side of the association.">Eine durch Trennzeichen getrennte Liste der Eigenschaftennamen der Schlüsselwerte auf der <paramref name="thisKey" />-Seite der Zuordnung.</param>
      <param name="otherKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;otherKey&quot; /&gt; side of the association.">Eine durch Trennzeichen getrennte Liste der Eigenschaftennamen der Schlüsselwerte auf der <paramref name="otherKey" />-Seite der Zuordnung.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
      <summary vsli:raw="Gets or sets a value that indicates whether the association member represents a foreign key.">Ruft einen Wert ab, der angibt, ob der Zuordnungsmember einen Fremdschlüssel darstellt, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the association represents a foreign key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Zuordnung einen Fremdschlüssel darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
      <summary vsli:raw="Gets the name of the association.">Ruft den Namen der Zuordnung ab.</summary>
      <returns vsli:raw="The name of the association.">Der Name der Zuordnung.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
      <summary vsli:raw="Gets the property names of the key values on the OtherKey side of the association.">Ruft die Eigenschaftennamen der Schlüsselwerte auf der OtherKey-Seite der Zuordnung ab.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the OtherKey side of the association.">Eine durch Trennzeichen getrennte Liste der Eigenschaftennamen, die die Schlüsselwerte auf der OtherKey-Seite der Zuordnung darstellen.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">Ruft eine Auflistung von einzelnen Schlüsselmembern ab, die in der <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />-Eigenschaft angegeben werden.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">Eine Auflistung von einzelnen Schlüsselmembern, die in der <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />-Eigenschaft angegeben werden.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
      <summary vsli:raw="Gets the property names of the key values on the ThisKey side of the association.">Ruft die Eigenschaftennamen der Schlüsselwerte auf der ThisKey-Seite der Zuordnung ab.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the ThisKey side of the association.">Eine durch Trennzeichen getrennte Liste der Eigenschaftennamen, die die Schlüsselwerte auf der ThisKey-Seite der Zuordnung darstellen.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">Ruft eine Auflistung von einzelnen Schlüsselmembern ab, die in der <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />-Eigenschaft angegeben werden.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">Eine Auflistung von einzelnen Schlüsselmembern, die in der <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />-Eigenschaft angegeben werden.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CompareAttribute">
      <summary vsli:raw="Provides an attribute that compares two properties.">Stellt ein Attribut bereit, das zwei Eigenschaften vergleicht.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CompareAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.CompareAttribute" />-Klasse.</summary>
      <param name="otherProperty" vsli:raw="The property to compare with the current property.">Das Eigenschaft, die mit der aktuellen Eigenschaft verglichen werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Wendet eine Formatierung auf eine Fehlermeldung auf Grundlage des Datenfelds an, in dem der Fehler aufgetreten ist.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Der Name des Felds, das den Validierungsfehler verursacht hat.</param>
      <returns vsli:raw="The formatted error message.">Die formatierte Fehlermeldung.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether a specified object is valid.">Bestimmt, ob ein angegebenes Objekt gültig ist.</summary>
      <param name="value" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <param name="validationContext" vsli:raw="An object that contains information about the validation request.">Ein Objekt, das Informationen zur Validierungsanforderung enthält.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="value" /> gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherProperty">
      <summary vsli:raw="Gets the property to compare with the current property.">Ruft die Eigenschaft ab, die mit der aktuellen Eigenschaft verglichen werden soll.</summary>
      <returns vsli:raw="The other property.">Die andere Eigenschaft.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherPropertyDisplayName">
      <summary vsli:raw="Gets the display name of the other property.">Ruft den Anzeigenamen der anderen Eigenschaft ab.</summary>
      <returns vsli:raw="The display name of the other property.">Der Anzeigename der anderen Eigenschaft.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">Ruft einen Wert ab, der angibt, ob das Attribut Validierungskontext erfordert.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Attribut Validierungskontext erfordert; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
      <summary vsli:raw="Specifies that a property participates in optimistic concurrency checks.">Gibt an, dass eine Eigenschaft an Überprüfungen auf optimistische Nebenläufigkeit beteiligt ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CreditCardAttribute">
      <summary vsli:raw="Specifies that a data field value is a credit card number.">Gibt an, dass ein Datenfeldwert eine Kreditkartennummer ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CreditCardAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.CreditCardAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified credit card number is valid.">Bestimmt, ob die angegebene Kreditkartennummer gültig ist.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the credit card number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Kreditkartennummer gültig ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
      <summary vsli:raw="Specifies a custom validation method that is used to validate a property or class instance.">Gibt eine benutzerdefinierte Validierungsmethode zum Validieren einer Eigenschaft oder Klasseninstanz an.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CustomValidationAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute" />-Klasse.</summary>
      <param name="validatorType" vsli:raw="The type that contains the method that performs custom validation.">Der Typ mit der Methode, die die benutzerdefinierte Validierung ausführt.</param>
      <param name="method" vsli:raw="The method that performs custom validation.">Die Methode, die die benutzerdefinierte Validierung ausführt.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats a validation error message.">Formatiert eine Validierungsfehlermeldung.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">Der Name, der in die formatierte Meldung eingeschlossen werden soll.</param>
      <returns vsli:raw="An instance of the formatted error message.">Eine Instanz der formatierten Fehlermeldung.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
      <summary vsli:raw="Gets the validation method.">Ruft die Validierungsmethode ab.</summary>
      <returns vsli:raw="The name of the validation method.">Der Name der Validierungsmethode.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
      <summary vsli:raw="Gets the type that performs custom validation.">Ruft den Typ ab, der die benutzerdefinierte Validierung ausführt.</summary>
      <returns vsli:raw="The type that performs custom validation.">Der Typ, der die benutzerdefinierte Validierung ausführt.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataType">
      <summary vsli:raw="Represents an enumeration of the data types associated with data fields and parameters.">Stellt eine Enumeration der Datenfeldern und Parametern zugeordneten Datentypen dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.CreditCard">
      <summary vsli:raw="Represents a credit card number.">Stellt eine Kreditkartennummer dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
      <summary vsli:raw="Represents a currency value.">Stellt einen Währungswert dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
      <summary vsli:raw="Represents a custom data type.">Stellt einen benutzerdefinierten Datentyp dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
      <summary vsli:raw="Represents a date value.">Stellt einen Datumswert dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
      <summary vsli:raw="Represents an instant in time, expressed as a date and time of day.">Stellt einen Zeitpunkt dar, der durch Datum und Uhrzeit dargestellt wird.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
      <summary vsli:raw="Represents a continuous time during which an object exists.">Stellt einen fortlaufenden Zeitraum dar, während dessen ein Objekt vorhanden ist.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
      <summary vsli:raw="Represents an email address.">Stellt eine E-Mail-Adresse dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
      <summary vsli:raw="Represents an HTML file.">Stellt eine HTML-Datei dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
      <summary vsli:raw="Represents a URL to an image.">Stellt eine URL eines Image dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
      <summary vsli:raw="Represents multi-line text.">Stellt mehrzeiligen Text dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
      <summary vsli:raw="Represent a password value.">Stellt einen Kennwortwert dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
      <summary vsli:raw="Represents a phone number value.">Stellt einen Telefonnummernwert dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PostalCode">
      <summary vsli:raw="Represents a postal code.">Stellt eine Postleitzahl dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
      <summary vsli:raw="Represents text that is displayed.">Stellt Text dar, der angezeigt wird.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
      <summary vsli:raw="Represents a time value.">Stellt einen Zeitwert dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Upload">
      <summary vsli:raw="Represents file upload data type.">Stellt Dateiupload-Datentyp dar.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
      <summary vsli:raw="Represents a URL value.">Stellt einen URL-Wert dar.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
      <summary vsli:raw="Specifies the name of an additional type to associate with a data field.">Gibt den Namen eines zusätzlichen Typs an, der einem Datenfeld zugeordnet werden soll.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified type name.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />-Klasse mit dem angegebenen Typnamen.</summary>
      <param name="dataType" vsli:raw="The name of the type to associate with the data field.">Der Name des Typs, der mit dem Datenfeld verknüpft werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified field template name.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />-Klasse unter Verwendung des angegebenen Feldvorlagennamens.</summary>
      <param name="customDataType" vsli:raw="The name of the custom field template to associate with the data field.">Der Name der benutzerdefinierten Feldvorlage, die dem Datenfeld zugeordnet werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;customDataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">
        <paramref name="customDataType" /> ist <see langword="null" /> oder eine leere Zeichenfolge ("").</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
      <summary vsli:raw="Gets the name of custom field template that is associated with the data field.">Ruft den Namen der benutzerdefinierten Feldvorlage ab, die dem Datenfeld zugeordnet ist.</summary>
      <returns vsli:raw="The name of the custom field template that is associated with the data field.">Der Name der benutzerdefinierten Feldvorlage, die dem Datenfeld zugeordnet ist.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
      <summary vsli:raw="Gets the type that is associated with the data field.">Ruft den Typ ab, der dem Datenfeld zugeordnet ist.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataType&quot; /&gt; values.">Einer der <see cref="T:System.ComponentModel.DataAnnotations.DataType" />-Werte.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
      <summary vsli:raw="Gets a data-field display format.">Ruft ein Datenfeldanzeigeformat ab.</summary>
      <returns vsli:raw="The data-field display format.">Das Datenfeldanzeigeformat.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
      <summary vsli:raw="Returns the name of the type that is associated with the data field.">Gibt den Namen des Typs zurück, der dem Datenfeld zugeordnet ist.</summary>
      <returns vsli:raw="The name of the type associated with the data field.">Der Name des dem Datenfeld zugeordneten Typs.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">Überprüft, ob der Wert des Datenfelds gültig ist.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Der zu überprüfende Datenfeldwert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">Immer <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
      <summary vsli:raw="Provides a general-purpose attribute that lets you specify localizable strings for types and members of entity partial classes.">Stellt ein allgemeines Attribut zum Angeben von lokalisierbaren Zeichenfolgen für Typen und Member von partiellen Entitätsklassen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
      <summary vsli:raw="Gets or sets a value that indicates whether UI should be generated automatically in order to display this field.">Ruft einen Wert ab, der angibt, ob die Benutzeroberfläche zum Anzeigen dieses Felds automatisch generiert werden soll, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Benutzeroberfläche automatisch zum Anzeigen dieses Felds generiert werden soll, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">Es wurde versucht, den Eigenschaftenwert vor dem Festlegen abzurufen.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering UI is automatically displayed for this field.">Ruft einen Wert ab, der angibt, ob die Filterungs-UI für dieses Feld automatisch angezeigt wird, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display filtering for this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Benutzeroberfläche automatisch zum Anzeigen von Filtern für dieses Feld generiert werden soll, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">Es wurde versucht, den Eigenschaftenwert vor dem Festlegen abzurufen.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
      <summary vsli:raw="Gets or sets a value that is used to display a description in the UI.">Ruft einen Wert ab, mit dem eine Beschreibung in der Benutzeroberfläche angezeigt wird, oder legt ihn fest.</summary>
      <returns vsli:raw="The value that is used to display a description in the UI.">Der Wert, mit dem eine Beschreibung in der Benutzeroberfläche angezeigt wird.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; property.">Gibt den Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" />-Eigenschaft zurück.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Der Wert von <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" />, wenn die Eigenschaft initialisiert wurde, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
      <summary vsli:raw="Returns a value that indicates whether UI should be generated automatically in order to display filtering for this field.">Gibt einen Wert zurück, der angibt, ob die Benutzeroberfläche zum Anzeigen von Filtern für dieses Feld automatisch generiert werden soll.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Der Wert von <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" />, wenn die Eigenschaft initialisiert wurde, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">Gibt den Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />-Eigenschaft zurück.</summary>
      <returns vsli:raw="The localized description, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">Die lokalisierte Beschreibung, wenn der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> angegeben wurde und die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />-Eigenschaft einen Ressourcenschlüssel darstellt, andernfalls der nicht lokalisierte Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />-Eigenschaft.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">Die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft und die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />-Eigenschaft werden initialisiert, aber eine öffentliche statische Eigenschaft, die über einen Namen verfügt, der mit dem <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />-Wert übereinstimmt, konnte für die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft nicht gefunden werden.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property.">Gibt den Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />-Eigenschaft zurück.</summary>
      <returns vsli:raw="A value that will be used for grouping fields in the UI, if &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;. If the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property represents a resource key, a localized string is returned; otherwise, a non-localized string is returned.">Ein Wert, der zum Gruppieren von Feldern in der Benutzeroberfläche verwendet wird, wenn <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> initialisiert wurde, andernfalls <see langword="null" />. Wenn die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft angegeben wurde und die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />-Eigenschaft einen Ressourcenschlüssel darstellt, wird eine lokalisierte Zeichenfolge zurückgegeben, andernfalls wird eine nicht lokalisierte Zeichenfolge zurückgegeben.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">Sowohl die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft als auch die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />-Eigenschaften wurden festgelegt, aber eine öffentliche statische Eigenschaft mit einem Namen, der mit dem <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />-Wert übereinstimmt, konnte in <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> nicht gefunden werden.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
      <summary vsli:raw="Returns a value that is used for field display in the UI.">Gibt einen Wert zurück, der für die Feldanzeige in der Benutzeroberfläche verwendet wird.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property.">Die lokalisierte Zeichenfolge für die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />-Eigenschaft, wenn die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft angegeben wurde und die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />-Eigenschaft einen Ressourcenschlüssel darstellt, andernfalls der nicht lokalisierte Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />-Eigenschaft.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">Die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft und die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />-Eigenschaft werden initialisiert, aber eine öffentliche statische Eigenschaft, die über einen Namen verfügt, der mit dem <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />-Wert übereinstimmt, konnte für die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft nicht gefunden werden.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property.">Gibt den Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" />-Eigenschaft zurück.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property, if it has been set; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Der Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" />-Eigenschaft, sofern er festgelegt wurde, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">Gibt den Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />-Eigenschaft zurück.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">Die lokalisierte Zeichenfolge für die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />-Eigenschaft, wenn die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft angegeben wurde und die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />-Eigenschaft einen Ressourcenschlüssel darstellt, andernfalls der nicht lokalisierte Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />-Eigenschaft.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">Sowohl die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft als auch die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />-Eigenschaften wurden festgelegt, aber eine öffentliche statische Eigenschaft mit einem Namen, der mit dem <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />-Wert übereinstimmt, konnte in <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> nicht gefunden werden.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property.">Gibt den Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />-Eigenschaft zurück.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value property.">Die lokalisierte Zeichenfolge für die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />-Eigenschaft, wenn die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft angegeben wurde und die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />-Eigenschaft einen Ressourcenschlüssel darstellt, andernfalls der nicht lokalisierte Wert der <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />-Werteigenschaft.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; properties were set, &#xA;but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">Sowohl die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />-Eigenschaft als auch die <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />-Eigenschaften wurden festgelegt, aber eine öffentliche statische Eigenschaft mit einem Namen, der mit dem <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />-Wert übereinstimmt, konnte in <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> nicht gefunden werden.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
      <summary vsli:raw="Gets or sets a value that is used to group fields in the UI.">Ruft einen Wert ab, mit dem Felder in der Benutzeroberfläche gruppiert werden, oder legt ihn fest.</summary>
      <returns vsli:raw="A value that is used to group fields in the UI.">Ein Wert, mit dem Felder in der Benutzeroberfläche gruppiert werden.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
      <summary vsli:raw="Gets or sets a value that is used for display in the UI.">Ruft einen Wert ab, der für die Anzeige in der Benutzeroberfläche verwendet wird, oder legt ihn fest.</summary>
      <returns vsli:raw="A value that is used for display in the UI.">Ein Wert, der für die Anzeige in der Benutzeroberfläche verwendet wird.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
      <summary vsli:raw="Gets or sets the order weight of the column.">Ruft die Sortiergewichtung der Spalte ab oder legt diese fest.</summary>
      <returns vsli:raw="The order weight of the column.">Die Sortiergewichtung der Spalte.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The getter of this property has been invoked but its value has not been explicitly set using the setter.">Der Getter für diese Eigenschaft wurde aufgerufen, aber der Wert wurde nicht explizit mit dem Setter festgelegt.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
      <summary vsli:raw="Gets or sets a value that will be used to set the watermark for prompts in the UI.">Ruft einen Wert ab, mit dem das Wasserzeichen für Eingabeaufforderungen in der Benutzeroberfläche festgelegt wird, oder legt ihn fest.</summary>
      <returns vsli:raw="A value that will be used to display a watermark in the UI.">Ein Wert, mit dem ein Wasserzeichen in der Benutzeroberfläche angezeigt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
      <summary vsli:raw="Gets or sets the type that contains the resources for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">Ruft den Typ ab, der die Ressourcen für die Eigenschaften <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> und <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> enthält, oder legt ihn fest.</summary>
      <returns vsli:raw="The type of the resource that contains the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">Der Typ der Ressource, die die Eigenschaften <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> und <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
      <summary vsli:raw="Gets or sets a value that is used for the grid column label.">Ruft einen Wert ab, der für die Bezeichnung der Datenblattspalte verwendet wird, oder legt ihn fest.</summary>
      <returns vsli:raw="A value that is for the grid column label.">Ein Wert für die Bezeichnung der Datenblattspalte.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
      <summary vsli:raw="Specifies the column that is displayed in the referred table as a foreign-key column.">Gibt die Spalte an, die in der Tabelle, auf die verwiesen wird, als Fremdschlüsselspalte angezeigt wird.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified column.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" />-Klasse unter Verwendung der angegebenen Spalte.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Der Name der Spalte, die als Anzeigespalte verwendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display and sort columns.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" />-Klasse unter Verwendung der angegebenen Anzeige- und Sortierspalten.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Der Name der Spalte, die als Anzeigespalte verwendet werden soll.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">Der Name der Spalte, die für die Sortierung verwendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display column, and the specified sort column and sort order.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" />-Klasse mithilfe der angegebenen Anzeigespalte und der angegebenen Sortierspalte und Sortierreihenfolge.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Der Name der Spalte, die als Anzeigespalte verwendet werden soll.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">Der Name der Spalte, die für die Sortierung verwendet werden soll.</param>
      <param name="sortDescending" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to sort in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um in absteigender Reihenfolge zu sortieren, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn">
      <summary vsli:raw="Gets the name of the column to use as the display field.">Ruft den Namen der Spalte ab, die als Anzeigefeld verwendet werden soll.</summary>
      <returns vsli:raw="The name of the display column.">Der Name der Anzeigespalte.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn">
      <summary vsli:raw="Gets the name of the column to use for sorting.">Ruft den Namen der Spalte ab, die für die Sortierung verwendet werden soll.</summary>
      <returns vsli:raw="The name of the sort column.">Der Name der Sortierspalte.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending">
      <summary vsli:raw="Gets a value that indicates whether to sort in descending or ascending order.">Ruft einen Wert ab, der angibt, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgen soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column will be sorted in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Spalte in absteigender Reihenfolge sortiert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
      <summary vsli:raw="Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.">Gibt an, wie Datenfelder von ASP.NET Dynamic Data angezeigt und formatiert werden.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
      <summary vsli:raw="Gets or sets a value that indicates whether the formatting string that is specified by the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString&quot; /&gt; property is applied to the field value when the data field is in edit mode.">Ruft einen Wert ab, der angibt, ob die von der <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />-Eigenschaft angegebene Formatierungszeichenfolge auf den Feldwert angewendet wird, wenn sich das Datenfeld im Bearbeitungsmodus befindet, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting string applies to the field value in edit mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Formatierungszeichenfolge für den Feldwert im Bearbeitungsmodus gilt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
      <summary vsli:raw="Gets or sets a value that indicates whether empty string values (&quot;&quot;) are automatically converted to &lt;see langword=&quot;null&quot; /&gt; when the data field is updated in the data source.">Ruft einen Wert ab, der angibt, ob bei der Aktualisierung des Datenfelds in der Datenquelle Werte, die leere Zeichenfolgen ("") darstellen, in <see langword="null" /> konvertiert werden, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if empty string values are automatically converted to &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn leere Zeichenfolgenwerte automatisch in <see langword="null" /> konvertiert werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
      <summary vsli:raw="Gets or sets the display format for the field value.">Ruft das Anzeigeformat für den Feldwert ab oder legt ihn fest.</summary>
      <returns vsli:raw="A formatting string that specifies the display format for the value of the data field. The default is an empty string (&quot;&quot;), which indicates that no special formatting is applied to the field value.">Eine Formatierungszeichenfolge, die das Anzeigeformat für den Wert des Datenfelds angibt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass keine besondere Formatierung auf den Feldwert angewendet wird.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText">
      <summary vsli:raw="Returns the UI display string for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.">Gibt die Zeichenfolge zur Anzeige in der Benutzeroberfläche für <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> zurück.</summary>
      <returns vsli:raw="&lt;para&gt;The UI display string.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has not been specified, the value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has been specified and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; represents a resource key within that resource type, the localized value is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; have not been set, returns &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">Die Zeichenfolge zur Anzeige in der Benutzeroberfläche.
          Wenn <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> nicht angegeben wurde, wird der Wert von <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> zurückgegeben.
          Wenn <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> angegeben wurde und <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> einen Ressourcenschlüssel in diesem Ressourcentyp darstellt, wird der lokalisierte Wert zurückgegeben.
          Wenn <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> und <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> nicht festgelegt wurden, wird <see langword="null" /> zurückgegeben.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; properties are set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; value cannot be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt;.">Sowohl die <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />- als auch die <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />-Eigenschaft ist festgelegt, aber eine öffentliche statische Eigenschaft mit einem Namen, der mit dem <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />-Wert übereinstimmt, kann in <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> nicht gefunden werden.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode">
      <summary vsli:raw="Gets or sets a value that indicates whether the field should be HTML-encoded.">Ruft einen Wert ab, der angibt, ob das Feld HTML-codiert sein muss, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field should be HTML-encoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Feld HTML-codiert sein muss, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
      <summary vsli:raw="Gets or sets the text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;.">Ruft den Text ab, der für ein Feld angezeigt wird, wenn der Wert des Felds <see langword="null" /> ist, oder legt diesen fest.</summary>
      <returns vsli:raw="The text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;. The default is an empty string (&quot;&quot;), which indicates that this property is not set.">Der Text, die für ein Feld angezeigt wird, wenn der Wert des Felds <see langword="null" /> ist. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the resources for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.&#xA;        &#xA;Using &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; along with &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;, allows the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText&quot; /&gt; method to return localized values.">Ruft den <see cref="T:System.Type" /> ab, der die Ressourcen für <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> enthält, oder legt diesen fest.
Die Verwendung von <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> zusammen mit <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> ermöglicht der <see cref="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" />-Methode, lokalisierte Werte zurückzugeben.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
      <summary vsli:raw="Indicates whether a data field is editable.">Gibt an, ob ein Datenfeld bearbeitbar ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EditableAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute" />-Klasse.</summary>
      <param name="allowEdit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass das Feld bearbeitbar ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
      <summary vsli:raw="Gets a value that indicates whether a field is editable.">Ruft einen Wert ab, der angibt, ob das Feld bearbeitbar ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Feld bearbeitbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
      <summary vsli:raw="Gets or sets a value that indicates whether an initial value is enabled.">Ruft einen Wert ab, der angibt, ob ein Anfangswert aktiviert ist, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an initial value is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Anfangswert aktiviert ist. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute">
      <summary vsli:raw="Validates an email address.">Überprüft eine E-Mail-Adresse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EmailAddressAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value matches the pattern of a valid email address.">Bestimmt, ob der angegebene Wert mit dem Muster einer gültigen E-Mail-Adresse übereinstimmt.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Wert gültig oder <see langword="null" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
      <summary vsli:raw="Enables a .NET enumeration to be mapped to a data column.">Ermöglicht die Zuordnung einer .NET Framework-Enumeration zu einer Datenspalte.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" />-Klasse.</summary>
      <param name="enumType" vsli:raw="The type of the enumeration.">Der Typ der Enumeration.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType">
      <summary vsli:raw="Gets or sets the enumeration type.">Ruft den Enumerationstyp ab oder legt diesen fest.</summary>
      <returns vsli:raw="The enumeration type.">Ein Enumerationstyp.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">Überprüft, ob der Wert des Datenfelds gültig ist.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Der zu überprüfende Datenfeldwert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data field value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert im Datenfeld gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute">
      <summary vsli:raw="Validates file name extensions.">Überprüft die Projektdateierweiterungen.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.Extensions">
      <summary vsli:raw="Gets or sets the file name extensions.">Ruft die Dateinamenerweiterungen ab oder legt diese fest.</summary>
      <returns vsli:raw="The file name extensions, or the default file extensions (&quot;.png&quot;, &quot;.jpg&quot;, &quot;.jpeg&quot;, and &quot;.gif&quot;) if the property is not set.">Die Dateinamenerweiterungen oder die Standarderweiterungen (".png", ".jpg", ".jpeg" und ".gif"), wenn die Eigenschaft nicht festgelegt ist.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Wendet eine Formatierung auf eine Fehlermeldung auf Grundlage des Datenfelds an, in dem der Fehler aufgetreten ist.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Der Name des Felds, das den Validierungsfehler verursacht hat.</param>
      <returns vsli:raw="The formatted error message.">Die formatierte Fehlermeldung.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the specified file name extension or extensions is valid.">Überprüft, ob die angegebene Dateinamenerweiterung oder die Erweiterungen gültig sind.</summary>
      <param name="value" vsli:raw="A comma delimited list of valid file extensions.">Eine durch Trennzeichen getrennte Liste der gültigen Dateierweiterungen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the file name extension is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Dateinamenerweiterung gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
      <summary vsli:raw="Represents an attribute that is used to specify the filtering behavior for a column.">Stellt ein Attribut dar, mit dem das Filterverhalten für eine Spalte angegeben wird.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" />-Klasse mithilfe der Filter-Benutzeroberfläche für Hinweise.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Der Name des Steuerelements, das für die Filterung verwendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint and presentation layer name.">Initialisiert mit der Filter-Benutzeroberfläche für Hinweise und den Darstellungsschichtnamen eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" />-Klasse.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Der Name des Steuerelements, das für die Filterung verwendet werden soll.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">Der Name der Darstellungsschicht, die dieses Steuerelement unterstützt.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint, presentation layer name, and control parameters.">Initialisiert mit der Filter-Benutzeroberfläche für Hinweise, dem Darstellungsschichtnamen und den Steuerelementparametern eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" />-Klasse.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Der Name des Steuerelements, das für die Filterung verwendet werden soll.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">Der Name der Darstellungsschicht, die dieses Steuerelement unterstützt.</param>
      <param name="controlParameters" vsli:raw="The list of parameters for the control.">Die Liste der Parameter für das Steuerelement.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets the name/value pairs that are used as parameters in the control's constructor.">Ruft die Name-Wert-Paare ab, die als Parameter im Konstruktor des Steuerelements verwendet werden.</summary>
      <returns vsli:raw="The name/value pairs that are used as parameters in the control's constructor.">Die Name-Wert-Paare, die als Parameter im Konstruktor des Steuerelements verwendet werden.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this attribute instance is equal to a specified object.">Gibt einen Wert zurück, der angibt, ob dieses Attribut gleich einem angegebenen Objekt ist.</summary>
      <param name="obj" vsli:raw="The object to compare with this attribute instance.">Das mit dieser Attributinstanz zu vergleichende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed object is equal to this attribute instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das übergebene Objekt gleich dieser Attributinstanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
      <summary vsli:raw="Gets the name of the control to use for filtering.">Ruft den Namen des Steuerelements ab, das für die Filterung verwendet werden soll.</summary>
      <returns vsli:raw="The name of the control to use for filtering.">Der Name des Steuerelements, das für die Filterung verwendet werden soll.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute instance.">Gibt den Hash für diese Attributinstanz zurück.</summary>
      <returns vsli:raw="This attribute instance hash code.">Dieser Hash der Attributinstanz.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets the name of the presentation layer that supports this control.">Ruft den Namen der Darstellungsschicht ab, die dieses Steuerelement unterstützt.</summary>
      <returns vsli:raw="The name of the presentation layer that supports this control.">Der Name der Darstellungsschicht, die dieses Steuerelement unterstützt.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.IValidatableObject">
      <summary vsli:raw="Provides a way for an object to be validated.">Bietet die Möglichkeit, ein Objekt ungültig zu machen.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid.">Bestimmt, ob das angegebene Objekt gültig ist.</summary>
      <param name="validationContext" vsli:raw="The validation context.">Der Validierungskontext.</param>
      <returns vsli:raw="A collection that holds failed-validation information.">Eine Auflistung von Informationen über fehlgeschlagene Validierungen.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
      <summary vsli:raw="Denotes one or more properties that uniquely identify an entity.">Kennzeichnet eine oder mehrere Eigenschaften, die eine Entität eindeutig identifizieren.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.KeyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute">
      <summary vsli:raw="Specifies the maximum length of array or string data allowed in a property.">Gibt die maximale zulässige Länge von Array- oder Zeichenfolgendaten in einer Eigenschaft an.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class based on the &lt;paramref name=&quot;length&quot; /&gt; parameter.">Initialisiert auf der Grundlage des <paramref name="length" />-Parameters eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" />-Klasse.</summary>
      <param name="length" vsli:raw="The maximum allowable length of array or string data.">Die maximale zulässige Länge von Array- oder Zeichenfolgendaten.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Wendet Formatierungen auf eine angegebene Fehlermeldung an.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">Der Name, der in der formatierten Zeichenfolge verwendet werden soll.</param>
      <returns vsli:raw="A localized string to describe the maximum acceptable length.">Eine lokalisierte Zeichenfolge zum Beschreiben der maximalen zulässigen Länge.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Bestimmt, ob ein angegebenes Objekt gültig ist.</summary>
      <param name="value" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is null, or if the value is less than or equal to the specified maximum length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert NULL oder kleiner oder gleich der angegebenen maximalen Länge ist; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is zero or less than negative one.">Länge ist 0 (null) oder kleiner als minus eins.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MaxLengthAttribute.Length">
      <summary vsli:raw="Gets the maximum allowable length of the array or string data.">Ruft die maximale zulässige Länge der Array- oder Zeichenfolgendaten ab.</summary>
      <returns vsli:raw="The maximum allowable length of the array or string data.">Die maximale zulässige Länge der Array- oder Zeichenfolgendaten.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute">
      <summary vsli:raw="Specifies the metadata class to associate with a data model class.">Gibt die Metadatenklasse an, die einer Datenmodellklasse zugeordnet werden soll.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" />-Klasse.</summary>
      <param name="metadataClassType" vsli:raw="The metadata class to reference.">Die Metadatenklasse für den Verweis.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;metadataClassType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="metadataClassType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.MetadataClassType">
      <summary vsli:raw="Gets the metadata class that is associated with a data-model partial class.">Ruft die Metadatenklasse ab, die einer partiellen Datenmodellklasse zugeordnet ist.</summary>
      <returns vsli:raw="The type value that represents the metadata class.">Der Typwert, der die Metadatenklasse darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MinLengthAttribute">
      <summary vsli:raw="Specifies the minimum length of array or string data allowed in a property.">Gibt die minimale zulässige Länge von Array- oder Zeichenfolgendaten in einer Eigenschaft an.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MinLengthAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.MinLengthAttribute" />-Klasse.</summary>
      <param name="length" vsli:raw="The length of the array or string data.">Die Länge des Arrays oder der Datenzeichenfolge.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Wendet Formatierungen auf eine angegebene Fehlermeldung an.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">Der Name, der in die formatierte Zeichenfolge eingeschlossen werden soll.</param>
      <returns vsli:raw="A localized string to describe the minimum acceptable length.">Eine lokalisierte Zeichenfolge zum Beschreiben der minimalen zulässigen Länge.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Bestimmt, ob ein angegebenes Objekt gültig ist.</summary>
      <param name="value" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Objekt gültig ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is less than zero.">Länge ist kleiner als 0 (null).</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MinLengthAttribute.Length">
      <summary vsli:raw="Gets or sets the minimum allowable length of the array or string data.">Ruft die minimale zulässige Länge der Array- oder Zeichenfolgendaten ab oder legt diese fest.</summary>
      <returns vsli:raw="The minimum allowable length of the array or string data.">Die minimal zulässige Länge der Array- oder Zeichenfolgendaten.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.PhoneAttribute">
      <summary vsli:raw="Specifies that a data field value is a well-formed phone number.">Gibt an, dass ein Datenfeldwert eine wohlgeformte Telefonnummer ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.PhoneAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.PhoneAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified phone number is in a valid phone number format.">Bestimmt, ob die angegebene Telefonnummer ein gültiges Telefonnummernformat besitzt.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the phone number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Telefonnummer gültig ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
      <summary vsli:raw="Specifies the numeric range constraints for the value of a data field.">Gibt die Einschränkungen des numerischen Bereichs für den Wert eines Datenfelds an.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />-Klasse unter Verwendung der angegebenen Mindest- und Höchstwerte.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Gibt den zulässigen Mindestwert für den Datenfeldwert an.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Gibt den zulässigen Höchstwert für den Datenfeldwert an.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />-Klasse unter Verwendung der angegebenen Mindest- und Höchstwerte.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Gibt den zulässigen Mindestwert für den Datenfeldwert an.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Gibt den zulässigen Höchstwert für den Datenfeldwert an.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values and the specific type.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />-Klasse unter Verwendung der angegebenen Mindest- und Höchstwerte und des angegebenen Typs.</summary>
      <param name="type" vsli:raw="Specifies the type of the object to test.">Gibt den Typ des zu testenden Objekts an.</param>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Gibt den zulässigen Mindestwert für den Datenfeldwert an.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Gibt den zulässigen Höchstwert für den Datenfeldwert an.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ConvertValueInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether any conversions of the value being validated to &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType&quot; /&gt; as set by the &lt;c&gt;type&lt;/c&gt; parameter of the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)&quot; /&gt; constructor use the invariant culture or the current culture.">Ruft einen Wert ab, der bestimmt, ob Konvertierungen des Werts, der nach <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType" /> überprüft wird, entsprechend der Festlegung durch den <c>Typ</c>parameter des <see cref="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)" />-Konstruktors die invariante oder die aktuelle Kultur verwenden, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the invariant culture for any conversions; &lt;see langword=&quot;false&quot; /&gt; to use the culture that is current at the time of the validation.">
        <see langword="true" />, wenn die invariante Kultur für beliebige Konvertierungen verwendet werden soll. <see langword="false" /> , wenn die Kultur verwendet werden soll, die zum Zeitpunkt der Validierung aktuell ist.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message that is displayed when range validation fails.">Formatiert die Fehlermeldung, die angezeigt wird, wenn die Bereichsvalidierung fehlschlägt.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Der Name des Felds, das den Validierungsfehler verursacht hat.</param>
      <returns vsli:raw="The formatted error message.">Die formatierte Fehlermeldung.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is in the specified range.">Überprüft, dass der Wert des Datenfelds im angegebenen Bereich liegt.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Der zu überprüfende Datenfeldwert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is in the range; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich der angegebene Wert im Bereich befindet, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was outside the allowed range.">Der Datenfeldwert lag außerhalb des zulässigen Bereichs.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
      <summary vsli:raw="Gets the maximum allowed field value.">Ruft den zulässigen Höchstwert für das Feld ab.</summary>
      <returns vsli:raw="The maximum value that is allowed for the data field.">Der zulässige Höchstwert für das Datenfeld.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
      <summary vsli:raw="Gets the minimum allowed field value.">Ruft den zulässigen Mindestwert für das Feld ab.</summary>
      <returns vsli:raw="The minimum value that is allowed for the data field.">Der Minimalwert, der für das Datenfeld zulässig ist.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
      <summary vsli:raw="Gets the type of the data field whose value must be validated.">Ruft den Typ des Datenfelds ab, dessen Wert überprüft werden soll.</summary>
      <returns vsli:raw="The type of the data field whose value must be validated.">Der Typ des Datenfelds, dessen Wert überprüft werden soll.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ParseLimitsInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether string values for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum&quot; /&gt; are parsed using the invariant culture rather than the current culture.">Ruft einen Wert ab, der bestimmt, ob Zeichenfolgenwerte für <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> und <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> statt mit der aktuellen Kultur mit der invarianten Kultur analysiert werden, oder legt ihn fest.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
      <summary vsli:raw="Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.">Gibt an, dass ein Datenfeldwert in ASP.NET Dynamic Data mit dem angegebenen regulären Ausdruck übereinstimmen muss.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />-Klasse.</summary>
      <param name="pattern" vsli:raw="The regular expression that is used to validate the data field value.">Der reguläre Ausdruck, mit dem der Datenfeldwert überprüft wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message to display if the regular expression validation fails.">Formatiert die anzuzeigende Fehlermeldung, wenn die Validierung des regulären Ausdrucks fehlschlägt.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Der Name des Felds, das den Validierungsfehler verursacht hat.</param>
      <returns vsli:raw="The formatted error message.">Die formatierte Fehlermeldung.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> ist kein gültiger regulärer Ausdruck.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks whether the value entered by the user matches the regular expression pattern.">Überprüft, ob der vom Benutzer eingegebene Wert mit dem Muster des regulären Ausdrucks übereinstimmt.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Der zu überprüfende Datenfeldwert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn die Validierung erfolgreich ist; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value did not match the regular expression pattern.">Der Datenfeldwert hat nicht mit dem Muster des regulären Ausdrucks übereingestimmt.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> ist kein gültiger regulärer Ausdruck.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
      <summary vsli:raw="Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.">Dient zum Abrufen oder Festlegen des Zeitraums in Millisekunden zum Ausführen eines einzelnen Übereinstimmungsvorgangs, ehe das Zeitlimit des Vorgangs überschritten wird.</summary>
      <returns vsli:raw="The amount of time in milliseconds to execute a single matching operation.">Der Zeitraum in Millisekunden, um einen einzelnen übereinstimmenden Vorgang auszuführen.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
      <summary vsli:raw="Gets the regular expression pattern.">Ruft das Muster des regulären Ausdrucks ab.</summary>
      <returns vsli:raw="The pattern to match.">Das Muster für die Übereinstimmung.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
      <summary vsli:raw="Specifies that a data field value is required.">Gibt an, dass ein Datenfeldwert erforderlich ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RequiredAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
      <summary vsli:raw="Gets or sets a value that indicates whether an empty string is allowed.">Ruft einen Wert ab, der angibt, ob eine leere Zeichenfolge zulässig ist, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an empty string is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn eine leere Zeichenfolge zulässig ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the required data field is not empty.">Überprüft, dass der Wert des erforderlichen Datenfelds nicht leer ist.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Der zu überprüfende Datenfeldwert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> wenn die Validierung erfolgreich ist; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was &lt;see langword=&quot;null&quot; /&gt;.">Der Datenfeldwert lautete <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute">
      <summary vsli:raw="Specifies whether a class or data column uses scaffolding.">Gibt an, ob eine Klasse oder eine Datenspalte Gerüstbau verwendet.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&quot; /&gt; using the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold&quot; /&gt; property.">Initialisiert eine neue Instanz von <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" /> mit der <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />-Eigenschaft.</summary>
      <param name="scaffold" vsli:raw="The value that specifies whether scaffolding is enabled.">Der Wert, der angibt, ob der Gerüstbau aktiviert ist.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold">
      <summary vsli:raw="Gets or sets the value that specifies whether scaffolding is enabled.">Ruft den Wert ab, der angibt, ob der Gerüstbau aktiviert ist, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if scaffolding is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Gerüstbau aktiviert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute">
      <summary vsli:raw="Represents the database column that a property is mapped to.">Stellt die Datenbankspalte dar, der eine Eigenschaft zugeordnet ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The name of the column the property is mapped to.">Der Name der Spalte, der die Eigenschaft zugeordnet ist.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Name">
      <summary vsli:raw="Gets the name of the column the property is mapped to.">Ruft den Namen der Spalte ab, der die Eigenschaft zugeordnet ist.</summary>
      <returns vsli:raw="The name of the column the property is mapped to.">Der Name der Spalte, der die Eigenschaft zugeordnet ist.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Order">
      <summary vsli:raw="Gets or sets the zero-based order of the column the property is mapped to.">Ruft die nullbasierte Reihenfolge der Spalte ab, der die Eigenschaft zugeordnet ist, oder legt diese fest.</summary>
      <returns vsli:raw="The order of the column.">Die Reihenfolge der Spalte.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.TypeName">
      <summary vsli:raw="Gets or sets the database provider specific data type of the column the property is mapped to.">Ruft den für den Datenbankanbieter spezifischen Datentyp der Spalte ab, der die Eigenschaft zugeordnet ist, oder legt diesen fest.</summary>
      <returns vsli:raw="The database provider specific data type of the column the property is mapped to.">Der für den Datenbankanbieter spezifische Datentyp der Spalte, der die Eigenschaft zugeordnet ist.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute">
      <summary vsli:raw="Denotes that the class is a complex type. Complex types are non-scalar properties of entity types that enable scalar properties to be organized within entities. Complex types do not have keys and cannot be managed by the Entity Framework apart from the parent object.">Gibt an, dass es sich bei der Klasse um einen komplexen Typ handelt. Komplexe Typen sind nicht skalare Eigenschaften von Entitätstypen, mit deren Hilfe skalare Eigenschaften in Entitäten organisiert werden können. Komplexe Typen verfügen über keine Schlüssel und können vom Entity Framework nicht getrennt vom übergeordneten Objekt verwaltet werden.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute">
      <summary vsli:raw="Specifies how the database generates values for a property.">Gibt an, wie die Datenbank Werte für eine Eigenschaft generiert.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" />-Klasse.</summary>
      <param name="databaseGeneratedOption" vsli:raw="The database generated option.">Die von der Datenbank generierte Option.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.DatabaseGeneratedOption">
      <summary vsli:raw="Gets or sets the pattern used to generate values for the property in the database.">Ruft das Muster ab, mit dem Werte für die Eigenschaft in der Datenbank generiert wurden, oder legt dieses fest.</summary>
      <returns vsli:raw="The database generated option.">Die von der Datenbank generierte Option.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption">
      <summary vsli:raw="Represents the pattern used to generate values for a property in the database.">Stellt das Muster dar, mit dem Werte für eine Eigenschaft in der Datenbank generiert wurden.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed">
      <summary vsli:raw="The database generates a value when a row is inserted or updated.">Die Datenbank generiert einen Wert, wenn eine Zeile eingefügt oder aktualisiert wird.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity">
      <summary vsli:raw="The database generates a value when a row is inserted.">Die Datenbank generiert einen Wert, wenn eine Zeile eingefügt wird.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None">
      <summary vsli:raw="The database does not generate values.">Die Datenbank generiert keine Werte.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute">
      <summary vsli:raw="Denotes a property used as a foreign key in a relationship.">Bezeichnet eine Eigenschaft, die in einer Beziehung als Fremdschlüssel verwendet wird.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The name of the associated navigation property, or the name of one or more associated foreign keys.">Der Name der zugeordneten Navigationseigenschaft oder eines oder mehrerer zugeordneter Fremdschlüssel.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.Name">
      <summary vsli:raw="Gets the name of the associated navigation property or of the associated foreign keys.">Ruft den Namen der zugeordneten Navigationseigenschaft oder der zugeordneten Fremdschlüssel ab.</summary>
      <returns vsli:raw="The name of the associated navigation property or of the associated foreign keys.">Der Name der zugeordneten Navigations Eigenschaft oder der zugeordneten Fremdschlüssel.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute">
      <summary vsli:raw="Specifies the inverse of a navigation property that represents the other end of the same relationship.">Gibt die Umkehrung einer Navigationseigenschaft an, die das andere Ende der gleichen Beziehung darstellt.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&quot; /&gt; class using the specified property.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />-Klasse mit der angegebenen -Eigenschaft.</summary>
      <param name="property" vsli:raw="The navigation property representing the other end of the same relationship.">Die Navigationseigenschaft, die das andere Ende der gleichen Beziehung darstellt.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.Property">
      <summary vsli:raw="Gets the navigation property representing the other end of the same relationship.">Ruft die Navigationseigenschaft ab, die das andere Ende der gleichen Beziehung darstellt.</summary>
      <returns vsli:raw="The property of the attribute.">Die Eigenschaft des Attributes.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute">
      <summary vsli:raw="Denotes that a property or class should be excluded from database mapping.">Gibt an, dass eine Eigenschaft oder Klasse aus der Datenbankzuordnung ausgeschlossen werden soll.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute">
      <summary vsli:raw="Specifies the database table that a class is mapped to.">Gibt die Datenbanktabelle an, der eine Klasse zugeordnet ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.TableAttribute&quot; /&gt; class using the specified name of the table.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute" />-Klasse unter Verwendung des angegebenen Tabellennamens.</summary>
      <param name="name" vsli:raw="The name of the table the class is mapped to.">Der Name der Tabelle, der die Klasse zugeordnet ist.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Name">
      <summary vsli:raw="Gets the name of the table the class is mapped to.">Ruft den Namen der Tabelle ab, der die Klasse zugeordnet ist.</summary>
      <returns vsli:raw="The name of the table the class is mapped to.">Der Name der Tabelle, der die Klasse zugeordnet ist.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Schema">
      <summary vsli:raw="Gets or sets the schema of the table the class is mapped to.">Übernimmt oder bestimmt das Schema der Tabelle, der die Klasse zugeordnet ist.</summary>
      <returns vsli:raw="The schema of the table the class is mapped to.">Das Schema der Tabelle, der die Klasse zugeordnet ist.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
      <summary vsli:raw="Specifies the minimum and maximum length of characters that are allowed in a data field.">Gibt die minimale und maximale Länge von Zeichen an, die in einem Datenfeld zulässig ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.StringLengthAttribute&quot; /&gt; class by using a specified maximum length.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />-Klasse mit einer angegebenen maximalen Länge.</summary>
      <param name="maximumLength" vsli:raw="The maximum length of a string.">Die maximale Länge einer Zeichenfolge.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Wendet Formatierungen auf eine angegebene Fehlermeldung an.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Der Name des Felds, das den Validierungsfehler verursacht hat.</param>
      <returns vsli:raw="The formatted error message.">Die formatierte Fehlermeldung.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;paramref name=&quot;minimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> ist ein negativer Wert.  

oder - 
<paramref name="maximumLength" /> ist kleiner als <paramref name="minimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Bestimmt, ob ein angegebenes Objekt gültig ist.</summary>
      <param name="value" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Objekt gültig ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> ist ein negativer Wert.  

oder - 
<paramref name="maximumLength" /> ist kleiner als <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
      <summary vsli:raw="Gets or sets the maximum length of a string.">Ruft die maximale Länge einer Zeichenfolge ab oder legt sie fest.</summary>
      <returns vsli:raw="The maximum length a string.">Die maximale Länge einer Zeichenfolge.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
      <summary vsli:raw="Gets or sets the minimum length of a string.">Ruft die minimale Länge einer Zeichenfolge ab oder legt sie fest.</summary>
      <returns vsli:raw="The minimum length of a string.">Die minimale Länge einer Zeichenfolge.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
      <summary vsli:raw="Specifies the data type of the column as a row version.">Gibt den Datentyp der Spalte als Zeilenversion an.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.TimestampAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
      <summary vsli:raw="Specifies the template or user control that Dynamic Data uses to display a data field.">Gibt die Vorlage oder das Benutzersteuerelement an, mit der bzw. dem Dynamic Data ein Datenfeld anzeigt.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using a specified user control.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />-Klasse mithilfe eines angegebenen Benutzersteuerelements.</summary>
      <param name="uiHint" vsli:raw="The user control to use to display the data field.">Das Benutzersteuerelement, mit dem das Datenfeld angezeigt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class using the specified user control and specified presentation layer.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />-Klasse mit dem angegebenen Benutzersteuerelement und der angegebenen Darstellungsschicht.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">Das Benutzersteuerelement (Feldvorlage), mit dem das Datenfeld angezeigt werden soll.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">Die Präsentationsschicht, die die Klasse verwendet. Kann auf "HTML", "Silverlight", "WPF" oder "WinForms" festgelegt werden.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using the specified user control, presentation layer, and control parameters.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />-Klasse mit dem angegebenen Benutzersteuerelement, der angegebenen Darstellungsschicht und den angegebenen Steuerelementparametern.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">Das Benutzersteuerelement (Feldvorlage), mit dem das Datenfeld angezeigt werden soll.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">Die Präsentationsschicht, die die Klasse verwendet. Kann auf "HTML", "Silverlight", "WPF" oder "WinForms" festgelegt werden.</param>
      <param name="controlParameters" vsli:raw="The object to use to retrieve values from any data sources.">Das Objekt, mit dem Werte aus beliebigen Datenquellen abgerufen werden sollen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or it is a constraint key.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is not a string.">
        <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> ist <see langword="null" /> oder eine Schlüsseleinschränkung.  

oder - 
Der Wert von <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> ist keine Zeichenfolge.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Web.DynamicData.DynamicControlParameter&quot; /&gt; object to use to retrieve values from any data source.">Ruft das <see cref="T:System.Web.DynamicData.DynamicControlParameter" />-Objekt ab, mit dem Werte aus einer beliebigen Datenquelle abgerufen werden sollen, oder legt dieses fest.</summary>
      <returns vsli:raw="A collection of key/value pairs.">Eine Auflistung von Schlüssel-Wert-Paaren.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether this instance is equal to the specified object.">Ruft einen Wert ab, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance, or a &lt;see langword=&quot;null&quot; /&gt; reference.">Das Objekt, das mit dieser Instanz verglichen werden soll, oder ein <see langword="null" />-Verweis.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Objekt gleich dieser Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current instance of the attribute.">Ruft den Hash für die aktuelle Instanz des Attributs ab.</summary>
      <returns vsli:raw="The attribute instance hash code.">Der Hash der Attributinstanz.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets or sets the presentation layer that uses the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class.">Ruft die Präsentationsschicht ab, die die <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />-Klasse verwendet.</summary>
      <returns vsli:raw="The presentation layer that is used by this class.">Die Präsentationsschicht, die diese Klasse verwendet hat.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
      <summary vsli:raw="Gets or sets the name of the field template to use to display the data field.">Ruft den Namen der Feldvorlage ab, die zum Anzeigen des Datenfelds verwendet werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the field template that displays the data field.">Der Name der Feldvorlage, mit der das Datenfeld angezeigt wird.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UrlAttribute">
      <summary vsli:raw="Provides URL validation.">Stellt URL-Validierung bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UrlAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.IsValid(System.Object)">
      <summary vsli:raw="Validates the format of the specified URL.">Überprüft das Format des angegebenen URL.</summary>
      <param name="value" vsli:raw="The URL to validate.">Die zu validierende URL.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the URL format is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das URL-Format gültig oder <see langword="null" /> ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
      <summary vsli:raw="Serves as the base class for all validation attributes.">Dient als Basisklasse für alle Validierungsattribute.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the function that enables access to validation resources.">Initialisiert durch Verwenden der Funktion, die Zugriff auf Überprüfungsressourcen ermöglicht, eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Klasse.</summary>
      <param name="errorMessageAccessor" vsli:raw="The function that enables access to validation resources.">Die Funktion, die Zugriff auf Überprüfungsressourcen ermöglicht.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;errorMessageAccessor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="errorMessageAccessor" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the error message to associate with a validation control.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Klasse mithilfe der Fehlermeldung, die einem Validierungssteuerelement zugeordnet werden soll.</summary>
      <param name="errorMessage" vsli:raw="The error message to associate with a validation control.">Die einem Validierungssteuerelement zuzuordnende Fehlermeldung.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
      <summary vsli:raw="Gets or sets an error message to associate with a validation control if validation fails.">Ruft eine Fehlermeldung ab, die beim Fehlschlagen der Validierung einem Validierungssteuerelement zugeordnet wird, oder legt diese fest.</summary>
      <returns vsli:raw="The error message that is associated with the validation control.">Die dem Validierungssteuerelement zugeordnete Fehlermeldung.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
      <summary vsli:raw="Gets or sets the error message resource name to use in order to look up the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType&quot; /&gt; property value if validation fails.">Ruft den Fehlermeldungsressourcennamen ab, mithilfe dessen der <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType" />-Eigenschaftswert nachgeschlagen werden soll, wenn die Validierung fehlschlägt, oder legt diesen fest.</summary>
      <returns vsli:raw="The error message resource that is associated with a validation control.">Die einem Validierungssteuerelement zugeordnete Fehlermeldungsressource.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
      <summary vsli:raw="Gets or sets the resource type to use for error-message lookup if validation fails.">Ruft den Ressourcentyp ab, der für die Fehlermeldungssuche verwendet werden soll, wenn die Validierung fehlschlägt, oder legt ihn fest.</summary>
      <returns vsli:raw="The type of error message that is associated with a validation control.">Der einem Validierungssteuerelement zugeordnete Fehlermeldungstyp.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
      <summary vsli:raw="Gets the localized validation error message.">Ruft die lokalisierte Validierungsfehlermeldung ab.</summary>
      <returns vsli:raw="The localized validation error message.">Die lokalisierte Validierungsfehlermeldung.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Wendet eine Formatierung auf eine Fehlermeldung auf Grundlage des Datenfelds an, in dem der Fehler aufgetreten ist.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">Der Name, der in die formatierte Meldung eingeschlossen werden soll.</param>
      <returns vsli:raw="An instance of the formatted error message.">Eine Instanz der formatierten Fehlermeldung.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Checks whether the specified value is valid with respect to the current validation attribute.">Überprüft, ob der angegebene Wert in Bezug auf das aktuelle Validierungsattribut gültig ist.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">Die Kontextinformationen zum Validierungsvorgang.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">Eine Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />-Klasse.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">Das aktuelle Attribut ist falsch formatiert.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationContext" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> wurde nicht durch eine abgeleitete Klasse implementiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value of the object is valid.">Bestimmt, ob der angegebene Wert des Objekts gültig ist.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">Der Wert des zu überprüfenden Objekts.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Wert gültig ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">Das aktuelle Attribut ist falsch formatiert.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="Neither overload of &lt;see langword=&quot;IsValid&quot; /&gt; has been implemented by a derived class.">Keine Überladung von <see langword="IsValid" /> wurde durch eine abgeleitete Klasse implementiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified value with respect to the current validation attribute.">Überprüft den angegebenen Wert in Bezug auf das aktuelle Validierungsattribut.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">Die Kontextinformationen zum Validierungsvorgang.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">Eine Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />-Klasse.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">Das aktuelle Attribut ist falsch formatiert.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> wurde nicht durch eine abgeleitete Klasse implementiert.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">Ruft einen Wert ab, der angibt, ob das Attribut Validierungskontext erfordert.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Attribut Validierungskontext erfordert; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified object.">Validiert das angegebene Objekt.</summary>
      <param name="value" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <param name="validationContext" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; object that describes the context where the validation checks are performed. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Das <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" />-Objekt, das den Kontext beschreibt, in dem die Validierungen ausgeführt werden. Dieser Parameter darf nicht <see langword="null" /> sein.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="Validation failed.">Validierung fehlgeschlagen.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">Das aktuelle Attribut ist falsch formatiert.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> wurde nicht durch eine abgeleitete Klasse implementiert.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
      <summary vsli:raw="Validates the specified object.">Validiert das angegebene Objekt.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">Der Wert des zu überprüfenden Objekts.</param>
      <param name="name" vsli:raw="The name to include in the error message.">Der Name, der in die Fehlermeldung eingeschlossen werden soll.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not valid.">
        <paramref name="value" /> ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">Das aktuelle Attribut ist falsch formatiert.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
      <summary vsli:raw="Describes the context in which a validation check is performed.">Beschreibt den Kontext, in dem eine Validierungsüberprüfung ausgeführt wird.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object instance.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" />-Klasse unter Verwendung des angegebenen Objektinstanz.</summary>
      <param name="instance" vsli:raw="The object instance to validate. It cannot be &lt;see langword=&quot;null&quot; /&gt;.">Die Objektinstanz, das validiert werden soll. Dieser darf nicht <see langword="null" /> sein.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object and an optional property bag.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" />-Klasse unter Verwendung des angegebenen Objekts und eines optionalen Eigenschaftsbehälters.</summary>
      <param name="instance" vsli:raw="The object instance to validate.  It cannot be &lt;see langword=&quot;null&quot; /&gt;.">Die Objektinstanz, das validiert werden soll.  Dieser darf nicht <see langword="null" /> sein</param>
      <param name="items" vsli:raw="An optional set of key/value pairs to make available to consumers.">Ein optionaler Satz von Schlüssel-Wert-Paaren, die Consumern verfügbar gemacht werden sollen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the service provider and dictionary of service consumers.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" />-Klasse unter Verwendung des angegebenen Wörterbuchs der Dienstconsumers.</summary>
      <param name="instance" vsli:raw="The object to validate. This parameter is required.">Das Objekt, dessen Gültigkeit überprüft werden soll. Dieser Parameter ist erforderlich.</param>
      <param name="serviceProvider" vsli:raw="The object that implements the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface. This parameter is optional.">Das Objekt, das die <see cref="T:System.IServiceProvider" />-Schnittstelle implementiert. Dieser Parameter ist optional.</param>
      <param name="items" vsli:raw="A dictionary of key/value pairs to make available to the service consumers. This parameter is optional.">Ein Wörterbuch von Schlüssel-Wert-Paaren, das für Dienstconsumer verfügbar gemacht werden soll. Dieser Parameter ist optional.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">Ruft den Namen des zu überprüfenden Members ab oder legt ihn fest.</summary>
      <returns vsli:raw="The name of the member to validate.">Der Name des zu überprüfenden Members.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
      <summary vsli:raw="Returns the service that provides custom validation.">Gibt den Dienst zurück, der eine benutzerdefinierte Validierung bereitstellt.</summary>
      <param name="serviceType" vsli:raw="The type of the service to use for validation.">Der Typ des für die Validierung zu verwendenden Dienstes.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service is not available.">Eine Instanz des Diensts oder <see langword="null" />, wenn der Dienst nicht verfügbar ist.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; using a service provider that can return service instances by type when &lt;see cref=&quot;M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)&quot; /&gt; is called.">Initialisiert <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> unter Verwendung eines Dienstanbieters, der Dienstinstanzen nach Typ zurückgeben kann, wenn GetService aufgerufen wird.</summary>
      <param name="serviceProvider" vsli:raw="The service provider.">Der Dienstanbieter.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
      <summary vsli:raw="Gets the dictionary of key/value pairs that is associated with this context.">Ruft das Wörterbuch der Schlüssel-Wert-Paare ab, das diesem Kontext zugeordnet ist.</summary>
      <returns vsli:raw="The dictionary of the key/value pairs for this context.">Das Wörterbuch der Schlüssel-Wert-Paare für diesen Kontext.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">Ruft den Namen des zu überprüfenden Members ab oder legt ihn fest.</summary>
      <returns vsli:raw="The name of the member to validate.">Der Name des zu überprüfenden Members.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
      <summary vsli:raw="Gets the object to validate.">Ruft das Objekt ab, das validiert werden soll.</summary>
      <returns vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
      <summary vsli:raw="Gets the type of the object to validate.">Ruft den Typ des zu validierenden Objekts ab.</summary>
      <returns vsli:raw="The type of the object to validate.">Der Typ des zu validierenden Objekts.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
      <summary vsli:raw="Represents the exception that occurs during validation of a data field when the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class is used.">Stellt die Ausnahme dar, die während der Validierung eines Datenfelds auftritt, wenn die <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Klasse verwendet wird.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using an error message generated by the system.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" />-Klasse mit einer vom System generierten Fehlermeldung.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class by using a validation result, a validation attribute, and the value of the current exception.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" />-Klasse mit einem Validierungsergebnis, einem Validierungsattribut und dem Wert der aktuellen Ausnahme.</summary>
      <param name="validationResult" vsli:raw="The list of validation results.">Die Liste der Validierungsergebnisse.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">Das Attribut, das die aktuelle Ausnahme verursacht hat.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger the validation error.">Der Wert des Objekts, das dazu geführt hat, dass das Attribut den Validierungsfehler ausgelöst hat.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" />-Klasse mit den serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Das Objekt, das die serialisierten Daten enthält.</param>
      <param name="context" vsli:raw="Context information about the source or destination of the serialized object.">Kontextinformationen über die Quelle oder das Ziel des serialisierten Objekts.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message" vsli:raw="A specified message that states the error.">Eine angegebene Meldung, in der der Fehler angegeben wird.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message, a validation attribute, and the value of the current exception.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" />-Klasse mit einer angegebenen Fehlermeldung, einem Validierungsattribut und dem Wert der aktuellen Ausnahme.</summary>
      <param name="errorMessage" vsli:raw="The message that states the error.">Die Meldung, die den Fehler angibt.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">Das Attribut, das die aktuelle Ausnahme verursacht hat.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger validation error.">Der Wert des Objekts, das dazu geführt hat, dass das Attribut den Validierungsfehler ausgelöst hat.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message and a collection of inner exception instances.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" />-Klasse mit einer angegebenen Fehlermeldung und einer Auflistung von Instanzen der inneren Ausnahme.</summary>
      <param name="message" vsli:raw="The error message.">Die Fehlermeldung.</param>
      <param name="innerException" vsli:raw="The collection of validation exceptions.">Die Auflistung von Validierungsausnahmen dar.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
      <summary vsli:raw="Gets the instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class that triggered this exception.">Ruft die Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Klasse ab, die diese Ausnahme ausgelöst hat.</summary>
      <returns vsli:raw="An instance of the validation attribute type that triggered this exception.">Eine Instanz des Validierungsattributtyps, der diese Ausnahme ausgelöst hat.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">Ruft die <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" />-Instanz ab, die den Validierungsfehler beschreibt.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">Die <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" />-Instanz, die den Validierungsfehler beschreibt.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
      <summary vsli:raw="Gets the value of the object that causes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger this exception.">Ruft den Wert des Objekts ab, das dazu führt, dass die <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Klasse diese Ausnahme auslöst.</summary>
      <returns vsli:raw="The value of the object that caused the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger the validation error.">Der Wert des Objekts, das dazu geführt hat, dass die <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Klasse den Validierungsfehler auslöst.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
      <summary vsli:raw="Represents a container for the results of a validation request.">Stellt einen Container für die Ergebnisse einer Validierungsanforderung dar.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using a &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; object.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />-Klasse mit einem <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />-Objekt.</summary>
      <param name="validationResult" vsli:raw="The validation result object.">Das Validierungsergebnisobjekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationResult" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />-Klasse unter Verwendung einer Fehlermeldung.</summary>
      <param name="errorMessage" vsli:raw="The error message.">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message and a list of members that have validation errors.">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />-Klasse mit einer Fehlermeldung und einer Liste von Membern, die Validierungsfehler aufweisen.</summary>
      <param name="errorMessage" vsli:raw="The error message.">Die Fehlermeldung.</param>
      <param name="memberNames" vsli:raw="The list of member names that have validation errors.">Die Liste der Membernamen mit Validierungsfehlern.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
      <summary vsli:raw="Gets the error message for the validation.">Ruft die Fehlermeldung für die Validierung ab.</summary>
      <returns vsli:raw="The error message for the validation.">Die Fehlermeldung für die Validierung.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
      <summary vsli:raw="Gets the collection of member names that indicate which fields have validation errors.">Ruft die Auflistung von Membernamen ab, die angeben, welche Felder Validierungsfehler aufweisen.</summary>
      <returns vsli:raw="The collection of member names that indicate which fields have validation errors.">Die Auflistung von Membernamen, die angeben, welche Felder Validierungsfehler aufweisen.</returns>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
      <summary vsli:raw="Represents the success of the validation (&lt;see langword=&quot;true&quot; /&gt; if validation was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;).">Stellt den Erfolg der Validierung dar (<see langword="true" />, wenn die Validierung erfolgreich war; andernfalls <see langword="false" />).</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.ToString">
      <summary vsli:raw="Returns a string representation of the current validation result.">Gibt eine Darstellung Zeichenfolgenwert des aktuellen Validierungsergebnisses zurück.</summary>
      <returns vsli:raw="The current validation result.">Das aktuelle Prüfergebnis.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Validator">
      <summary vsli:raw="Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; attributes.">Definiert eine Hilfsklasse, die zum Überprüfen von Objekten, Eigenschaften und Methoden verwendet werden kann, indem sie in die zugehörigen <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Attribute eingeschlossen wird.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context and validation results collection.">Bestimmt anhand des Validierungskontexts und der Validierungsergebnisauflistung, ob das angegebene Objekt gültig ist.</summary>
      <param name="instance" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Eine Auflistung aller Validierungen, bei denen ein Fehler aufgetreten ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt erfolgreich überprüft wird, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> entspricht nicht der <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> in <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.">Bestimmt anhand des Validierungskontexts, der Validierungsergebnisauflistung und eines Werts, der angibt, ob alle Eigenschaften überprüft werden sollen, ob das angegebene Objekt gültig ist.</summary>
      <param name="instance" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Eine Auflistung aller Validierungen, bei denen ein Fehler aufgetreten ist.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; if &lt;see langword=&quot;false&quot; /&gt;, only required attributes are validated.">
        <see langword="true" /> um alle Eigenschaften zu überprüfen; wenn <see langword="false" />, werden nur die erforderlichen Attribute überprüft.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt erfolgreich überprüft wird, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> entspricht nicht der <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> in <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Validates the property.">Überprüft die Eigenschaft.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">Der Kontext, der die zu überprüfende Eigenschaft beschreibt.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Eine Auflistung aller Validierungen, bei denen ein Fehler aufgetreten ist.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Eigenschaft erfolgreich überprüft wird, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> kann der Eigenschaft nicht zugewiesen werden.  

oder - 
<paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName&quot; /&gt; property of &lt;paramref name=&quot;validationContext&quot; /&gt; is not a valid property.">Die <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" />-Eigenschaft von <paramref name="validationContext" /> ist keine gültige Eigenschaft.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Returns a value that indicates whether the specified value is valid with the specified attributes.">Gibt einen Wert zurück, der angibt, ob der angegebene Wert in Bezug auf die angegebenen Attribute gültig ist.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
      <param name="validationResults" vsli:raw="A collection to hold failed validations.">Eine Auflistung für Validierungen, bei denen ein Fehler aufgetreten ist.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">Die Validierungsattribute.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt erfolgreich überprüft wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context.">Bestimmt anhand des Validierungskontexts, ob das angegebene Objekt gültig ist.</summary>
      <param name="instance" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The object is not valid.">Das Objekt ist nicht gültig.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> entspricht nicht der <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> in <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.">Bestimmt anhand des Validierungskontexts und eines Werts, der angibt, ob alle Eigenschaften überprüft werden sollen, ob das angegebene Objekt gültig ist.</summary>
      <param name="instance" vsli:raw="The object to validate.">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um alle Eigenschaften zu überprüfen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is not valid.">
        <paramref name="instance" /> ist nicht gültig.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> entspricht nicht der <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> in <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the property.">Überprüft die Eigenschaft.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">Der Kontext, der die zu überprüfende Eigenschaft beschreibt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.">
        <paramref name="value" /> kann der Eigenschaft nicht zugewiesen werden.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is not valid.">Der <paramref name="value" />-Parameter ist ungültig.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Validates the specified attributes.">Überprüft die angegebenen Attribute.</summary>
      <param name="value" vsli:raw="The value to validate.">Der zu überprüfende Wert.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">Die Validierungsattribute.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;validationContext&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="validationContext" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter does not validate with the &lt;paramref name=&quot;validationAttributes&quot; /&gt; parameter.">Der <paramref name="value" />-Parameter wird nicht zusammen mit dem <paramref name="validationAttributes" />-Parameter validiert.</exception>
    </member>
  </members>
</doc>