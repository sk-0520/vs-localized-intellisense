<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.Compression.Brotli</name>
  </assembly>
  <members>
    <member name="T:System.IO.Compression.BrotliDecoder" />
    <member name="M:System.IO.Compression.BrotliDecoder.Decompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@)">
      <param name="source" vsli:raw="A buffer containing the compressed data." />
      <param name="destination" vsli:raw="When this method returns, a byte span containing the decompressed data." />
      <param name="bytesConsumed" vsli:raw="The total number of bytes that were read from &lt;paramref name=&quot;source&quot; /&gt;." />
      <param name="bytesWritten" vsli:raw="The total number of bytes that were written in the &lt;paramref name=&quot;destination&quot; /&gt;." />
    </member>
    <member name="M:System.IO.Compression.BrotliDecoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliDecoder.TryDecompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" vsli:raw="A buffer containing the compressed data." />
      <param name="destination" vsli:raw="When this method returns, a byte span containing the decompressed data." />
      <param name="bytesWritten" vsli:raw="The total number of bytes that were written in the &lt;paramref name=&quot;destination&quot; /&gt;." />
    </member>
    <member name="T:System.IO.Compression.BrotliEncoder" />
    <member name="M:System.IO.Compression.BrotliEncoder.#ctor(System.Int32,System.Int32)">
      <param name="quality" vsli:raw="A number representing quality of the Brotli compression. 0 is the minimum (no compression), 11 is the maximum." />
      <param name="window" vsli:raw="A number representing the encoder window bits. The minimum value is 10, and the maximum value is 24." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Compress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)">
      <param name="source" vsli:raw="A read-only span of bytes containing the source data to compress." />
      <param name="destination" vsli:raw="When this method returns, a byte span where the compressed is stored." />
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes that were read from &lt;paramref name=&quot;source&quot; /&gt;." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes that were written to &lt;paramref name=&quot;destination&quot; /&gt;." />
      <param name="isFinalBlock" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to finalize the internal stream, which prevents adding more input data when this method returns; &lt;see langword=&quot;false&quot; /&gt; to allow the encoder to postpone the production of output until it has processed enough input." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.Dispose" />
    <member name="M:System.IO.Compression.BrotliEncoder.Flush(System.Span{System.Byte},System.Int32@)">
      <param name="destination" vsli:raw="When this method returns, a span of bytes where the compressed data will be stored." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes that were written to &lt;paramref name=&quot;destination&quot; /&gt;." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.GetMaxCompressedLength(System.Int32)">
      <param name="inputSize" vsli:raw="The input size to get the maximum expected compressed length from. Must be greater or equal than 0 and less or equal than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; - 515." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <param name="source" vsli:raw="A read-only span of bytes containing the source data to compress." />
      <param name="destination" vsli:raw="When this method returns, a span of bytes where the compressed data is stored." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes that were written to &lt;paramref name=&quot;destination&quot; /&gt;." />
    </member>
    <member name="M:System.IO.Compression.BrotliEncoder.TryCompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32,System.Int32)">
      <param name="source" vsli:raw="A read-only span of bytes containing the source data to compress." />
      <param name="destination" vsli:raw="When this method returns, a span of bytes where the compressed data is stored." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes that were written to &lt;paramref name=&quot;destination&quot; /&gt;." />
      <param name="quality" vsli:raw="A number representing quality of the Brotli compression. 0 is the minimum (no compression), 11 is the maximum." />
      <param name="window" vsli:raw="A number representing the encoder window bits. The minimum value is 10, and the maximum value is 24." />
    </member>
    <member name="T:System.IO.Compression.BrotliStream">
      <summary vsli:raw="Provides methods and properties used to compress and decompress streams by using the Brotli data format specification.">Stellt Methoden und Eigenschaften bereit, die zum Komprimieren und Dekomprimieren von Streams über die Brotli-Datenformatspezifikation verwendet werden.</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; class by using the specified stream and compression level.">Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.BrotliStream" />-Klasse mithilfe des angegebenen Stream- und Komprimierungsgrads.</summary>
      <param name="stream" vsli:raw="The stream to which compressed data is written.">Der zu komprimierende Stream.</param>
      <param name="compressionLevel" vsli:raw="One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing data to the stream.">Einer der Enumerationswerte, der angibt, ob die Geschwindigkeit oder Komprimierungsleistungsfähigkeit priorisiert wird, wenn der Stream komprimiert wird.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; class by using the specified stream and compression level, and optionally leaves the stream open.">Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.BrotliStream" />-Klasse unter Verwendung des angegebenen Streams und der Komprimierungsebene und lässt den Stream optional geöffnet.</summary>
      <param name="stream" vsli:raw="The stream to which compressed data is written.">Der zu komprimierende Stream.</param>
      <param name="compressionLevel" vsli:raw="One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing data to the stream.">Einer der Enumerationswerte, der angibt, ob die Geschwindigkeit oder Komprimierungsleistungsfähigkeit priorisiert wird, wenn der Stream komprimiert wird.</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to leave the stream open after disposing the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um den Stream offen zu lassen, nachdem das <see cref="T:System.IO.Compression.BrotliStream" />-Objekt freigegeben wurde, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; class by using the specified stream and compression mode.">Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.BrotliStream" />-Klasse mithilfe des angegebenen Stream- und Komprimierungsmodus.</summary>
      <param name="stream" vsli:raw="The stream to which compressed data is written or from which data to decompress is read.">Der zu komprimierende Stream.</param>
      <param name="mode" vsli:raw="One of the enumeration values that indicates whether to compress data to the stream or decompress data from the stream.">Einer der Enumerationswerte, der angibt, ob der Stream gelesen oder geschrieben wird.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; class by using the specified stream and compression mode, and optionally leaves the stream open.">Initialisiert eine neue Instanz der <see cref="T:System.IO.Compression.BrotliStream" />-Klasse unter Verwendung des angegebenen Streams und des Komprimierungsmodus und lässt den Stream optional geöffnet.</summary>
      <param name="stream" vsli:raw="The stream to which compressed data is written or from which data to decompress is read.">Der zu komprimierende Stream.</param>
      <param name="mode" vsli:raw="One of the enumeration values that indicates whether to compress data to the stream or decompress data from the stream.">Einer der Enumerationswerte, der angibt, ob der Stream gelesen oder geschrieben wird.</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to leave the stream open after the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; object is disposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;." />
    </member>
    <member name="P:System.IO.Compression.BrotliStream.BaseStream">
      <summary vsli:raw="Gets a reference to the underlying stream.">Ruft einen Verweis auf den zugrunde liegenden Stream ab.</summary>
      <returns vsli:raw="A stream object that represents the underlying stream.">Ein Streamobjekt, das den zugrunde liegenden Stream darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying stream is closed.">Der zugrunde liegende Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read operation. (Consider using the &lt;see cref=&quot;M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)&quot; /&gt; method instead.)">Beginnt einen asynchronen Lesevorgang. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="buffer" vsli:raw="The buffer from which data will be read.">Der Puffer, aus dem Daten gelesen werden.</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading data from the stream.">Der Byteoffset im <paramref name="array" />, ab dem aus dem Stream gelesene Daten gelesen werden.</param>
      <param name="count" vsli:raw="To maximum number of bytes to read.">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="asyncCallback" vsli:raw="An optional asynchronous callback, to be called when the read operation is complete.">Ein optionaler asynchroner Rückruf, der nach Abschluss des Lesevorgangs aufgerufen werden soll.</param>
      <param name="asyncState" vsli:raw="A user-provided object that distinguishes this particular asynchronous read request from other requests.">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Leseanforderung von anderen Anforderungen unterscheidet.</param>
      <returns vsli:raw="An object that represents the asynchronous read operation, which could still be pending.">Ein Objekt, das den asynchronen Lesevorgang darstellt, der möglicherweise noch aussteht.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="The method tried to read asynchronously past the end of the stream, or a disk error occurred.">Die Methode hat versucht, asynchron über das Ende des Streams hinaus zu lesen, oder ein Plattenfehler ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="One or more of the arguments is invalid.">Mindestens eines der Argumente ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Methods were called after the stream was closed.">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The current &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; implementation does not support the read operation.">Die aktuelle <see cref="T:System.IO.Compression.BrotliStream" />-Implementierung unterstützt den Lesevorgang nicht.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This call cannot be completed.">Dieser Aufruf kann nicht abgeschlossen werden.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write operation. (Consider using the &lt;see cref=&quot;M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)&quot; /&gt; method instead.)">Beginnt einen asynchronen Schreibvorgang. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="buffer" vsli:raw="The buffer from which data will be written.">Der Puffer, aus dem Daten geschrieben werden.</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin writing data from the stream.">Der Byteoffset im <paramref name="array" />, ab dem Daten aus dem Stream geschrieben werden.</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="asyncCallback" vsli:raw="An optional asynchronous callback, to be called when the write operation is complete.">Ein optionaler asynchroner Rückruf, der nach Abschluss des Schreibvorgangs aufgerufen wird.</param>
      <param name="asyncState" vsli:raw="A user-provided object that distinguishes this particular asynchronous write request from other requests.">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Schreibanforderung von anderen Anforderungen unterscheidet.</param>
      <returns vsli:raw="An object that represents the asynchronous write operation, which could still be pending.">Ein Objekt, das den asynchronen Schreibvorgang darstellt, der möglicherweise noch aussteht.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="The method tried to write asynchronously past the end of the stream, or a disk error occurred.">Die Methode hat versucht, asynchron über das Ende des Streams hinaus zu schreiben, oder ein Plattenfehler ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="One or more of the arguments is invalid.">Mindestens eines der Argumente ist ungültig.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Methods were called after the stream was closed.">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The current &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; implementation does not support the write operation.">Die aktuelle <see cref="T:System.IO.Compression.BrotliStream" />-Implementierung unterstützt den Schreibvorgang nicht.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The write operation cannot be performed because the stream is closed.">Der Schreibvorgang kann nicht ausgeführt werden, da der Stream geschlossen ist.</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanRead">
      <summary vsli:raw="Gets a value indicating whether the stream supports reading while decompressing a file.">Ruft einen Wert ab, der angibt, ob der Stream Lesevorgänge unterstützt, während eine Datei dekomprimiert wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Compression.CompressionMode&quot; /&gt; value is &lt;see langword=&quot;Decompress,&quot; /&gt; and the underlying stream supports reading and is not closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see cref="T:System.IO.Compression.CompressionMode" />-Wert gleich <see langword="Decompress," /> ist und der zugrunde liegende Stream Lesevorgänge unterstützt und nicht geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanSeek">
      <summary vsli:raw="Gets a value indicating whether the stream supports seeking.">Ruft einen Wert, der angibt, ob der Stream Suchvorgänge unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.CanWrite">
      <summary vsli:raw="Gets a value indicating whether the stream supports writing.">Ruft einen Wert, der angibt, ob der Stream Schreibvorgänge unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Compression.CompressionMode&quot; /&gt; value is &lt;see langword=&quot;Compress&quot; /&gt;, and the underlying stream supports writing and is not closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see cref="T:System.IO.Compression.CompressionMode" />-Wert gleich <see langword="Compress" /> ist und der zugrunde liegende Stream Schreibvorgänge unterstützt und nicht geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.DisposeAsync">
      <summary vsli:raw="Asynchronously releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt;.">Gibt die nicht verwalteten Ressourcen, die von der <see cref="T:System.IO.Compression.BrotliStream" /> verwendet werden, asynchron frei.</summary>
      <returns vsli:raw="A task that represents the asynchronous dispose operation.">Eine Aufgabe, die den asynchronen Löschvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Waits for the pending asynchronous read to complete. (Consider using the &lt;see cref=&quot;M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)&quot; /&gt; method instead.)">Wartet, bis der ausstehende asynchrone Lesevorgang abgeschlossen ist. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="asyncResult" vsli:raw="The reference to the pending asynchronous request to finish.">Der Verweis auf die ausstehende asynchrone Anforderung, die beendet werden soll.</param>
      <returns vsli:raw="The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. &lt;see cref=&quot;T:System.IO.Compression.BrotliStream&quot; /&gt; returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.">Die Anzahl der aus dem Stream gelesenen Bytes. Diese Anzahl kann zwischen 0 und der Anzahl der angeforderten Bytes liegen. <see cref="T:System.IO.Compression.BrotliStream" /> gibt null (0) nur am Ende des Streams zurück, andernfalls wird er blockiert, bis mindestens ein Byte verfügbar ist.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; did not originate from a &lt;see cref=&quot;M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; method on the current stream.">
        <paramref name="asyncResult" /> basiert nicht auf einer <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode im aktuellen Stream.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The end operation cannot be performed because the stream is closed.">Der Abschlussvorgang kann nicht ausgeführt werden, da der Stream geschlossen ist.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Handles the end of an asynchronous write operation. (Consider using the &lt;see cref=&quot;M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)&quot; /&gt; method instead.)">Behandelt das Ende eines asynchronen Schreibvorgangs. (Verwenden Sie stattdessen die <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />-Methode.)</summary>
      <param name="asyncResult" vsli:raw="The object that represents the asynchronous call.">Das -Objekt, das den asynchronen Aufruf darstellt.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying stream is closed or &lt;see langword=&quot;null&quot; /&gt;.">Der zugrunde liegende Stream ist geschlossen oder <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Flush">
      <summary vsli:raw="If the stream is not disposed, and the compression mode is set to compress, writes all the remaining encoder's data into this stream.">Die aktuelle Implementierung dieser Methode hat keine Funktion.</summary>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.FlushAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously clears all buffers for this Brotli stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.">Löscht alle Puffer für diesen Brotli-Datenstrom asynchron, veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät und überwacht Abbruchanforderungen.</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns vsli:raw="A task that represents the asynchronous flush operation.">Eine Aufgabe, die die asynchrone Leerung darstellt.</returns>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Length">
      <summary vsli:raw="This property is not supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns vsli:raw="A long value.">Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property is not supported on this stream.">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="P:System.IO.Compression.BrotliStream.Position">
      <summary vsli:raw="This property is not supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns vsli:raw="A long value.">Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property is not supported on this stream.">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a number of decompressed bytes into the specified byte array.">Liest eine Anzahl von dekomprimierten Bytes in das angegebene Bytearray.</summary>
      <param name="buffer" vsli:raw="The array used to store decompressed bytes.">Das Array, das zum Speichern von dekomprimierten Bytes verwendet wird.</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which the read bytes will be placed.">Das Byteoffset in <paramref name="buffer" />, an dem die gelesenen Bytes platziert werden.</param>
      <param name="count" vsli:raw="The maximum number of decompressed bytes to read.">Die maximale Anzahl der zu lesenden dekomprimierten Bytes.</param>
      <returns vsli:raw="The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.">Die Anzahl der Bytes, die im Bytearray dekomprimiert wurden. Wenn das Ende des Streams erreicht worden ist, wird 0 oder die Anzahl der gelesenen Bytes zurückgegeben.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.IO.Compression.CompressionMode&quot; /&gt; value was &lt;see langword=&quot;Compress&quot; /&gt; when the object was created, or there is already an active asynchronous operation on this stream.">Die <see cref="T:System.IO.Compression.CompressionMode" />-Wert lautete <see langword="Compress" />, als das Objekt erstellt wurde, oder es gibt bereits einen aktiven asynchronen Vorgang für diesen Stream.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="offset" /> oder <paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; length minus the index starting point is less than &lt;paramref name=&quot;count&quot; /&gt;.">Die Länge von <paramref name="buffer" /> abzüglich des Indexausgangspunkts ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.IO.InvalidDataException" vsli:raw="The data is in an invalid format.">Die Daten haben ein ungültiges Format.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying stream is null or closed.">Der zugrunde liegende Stream ist NULL oder geschlossen.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Read(System.Span{System.Byte})">
      <summary vsli:raw="Reads a sequence of bytes from the current Brotli stream to a byte span and advances the position within the Brotli stream by the number of bytes read.">Liest eine Bytesequenz aus dem aktuellen Brotli-Datenstrom in eine Bytespanne und erhöht die Position innerhalb des Brotli-Datenstroms um die Anzahl der gelesen Bytes.</summary>
      <param name="buffer" vsli:raw="A region of memory. When this method returns, the contents of this region are replaced by the bytes read from the current source.">Ein Bereich im Arbeitsspeicher. Bei der Rückgabe dieser Methode werden die Inhalte dieses Bereichs durch die aus der aktuellen Quelle gelesenen Bytes ersetzt.</param>
      <returns vsli:raw="The total number of bytes read into the buffer. This can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.">Die Gesamtanzahl der in den Puffer gelesenen Bytes. Dies kann weniger als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0 (null), wenn das Ende des Streams erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current Brotli stream, writes them to a byte array starting at a specified index, advances the position within the Brotli stream by the number of bytes read, and monitors cancellation requests.">Liest eine Folge von Bytes asynchron aus dem aktuellen Brotli-Datenstrom, schreibt diese beim angegebenen Index beginnend in ein Bytearray, erhöht die Position im Brotli-Datenstrom um die Anzahl der gelesenen Bytes und überwacht Abbruchsanforderungen.</summary>
      <param name="buffer" vsli:raw="The buffer to write the data into.">Der Puffer, in den die Daten geschrieben werden sollen.</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin writing data from the Brotli stream.">Der Byteoffset in <paramref name="buffer" />, ab dem Daten aus dem Brotli-Datenstrom geschrieben werden.</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns vsli:raw="A task that represents the asynchronous read operation, which wraps the total number of bytes read into the &lt;paramref name=&quot;buffer&quot; /&gt;. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the Brotli stream has been reached.">Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der die Gesamtanzahl der in <paramref name="buffer" /> gelesenen Bytes umschließt. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Ende des Brotli-Datenstroms erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current Brotli stream, writes them to a byte memory range, advances the position within the Brotli stream by the number of bytes read, and monitors cancellation requests.">Liest eine Folge von Bytes asynchron aus dem aktuellen Brotli-Datenstrom, schreibt diese in einen Bytespeicherbereich, erhöht die Position im Brotli-Datenstrom um die Anzahl der gelesenen Bytes und überwacht Abbruchsanforderungen.</summary>
      <param name="buffer" vsli:raw="The region of memory to write the data into.">Der Bereich im Arbeitsspeicher, in den die Daten geschrieben werden sollen.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns vsli:raw="A task that represents the asynchronous read operation, which wraps the total number of bytes read into the buffer. The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the Brotli stream has been reached.">Eine Aufgabe, die den asynchronen Lesevorgang darstellt, der die Gesamtanzahl der in den Puffer gelesenen Bytes umschließt. Der Ergebniswert kann geringer als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder er kann 0 (null) sein, wenn das Ende des Brotli-Datenstroms erreicht ist.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="This property is not supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="offset" vsli:raw="The location in the stream.">Die Position im Stream.</param>
      <param name="origin" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.SeekOrigin&quot; /&gt; values.">Einer der <see cref="T:System.IO.SeekOrigin" />-Werte.</param>
      <returns vsli:raw="A long value.">Ein Long-Wert.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property is not supported on this stream.">Diese Eigenschaft wird für diesen Stream nicht unterstützt.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.SetLength(System.Int64)">
      <summary vsli:raw="This property is not supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Diese Eigenschaft wird nicht unterstützt und löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="value" vsli:raw="The length of the stream.">Die Länge des Streams.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes compressed bytes to the underlying stream from the specified byte array.">Schreibt komprimierte Bytes aus dem angegebenen Bytearray in den zugrunde liegenden Stream.</summary>
      <param name="buffer" vsli:raw="The buffer containing the data to compress.">Der Puffer, der die zu komprimierenden Daten enthält.</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; from which the bytes will be read.">Das Byteoffset in <paramref name="array" />, aus dem die Bytes gelesen werden.</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The write operation cannot be performed because the stream is closed.">Der Schreibvorgang kann nicht ausgeführt werden, da der Stream geschlossen ist.</exception>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Writes a sequence of bytes to the current Brotli stream from a read-only byte span and advances the current position within this Brotli stream by the number of bytes written.">Schreibt eine Bytesequenz aus einer schreibgeschützten Bytespanne in den aktuellen Brotli-Datenstrom und erhöht die aktuelle Position in diesem Brotli-Datenstrom um die Anzahl der geschriebenen Bytes.</summary>
      <param name="buffer" vsli:raw="A region of memory. This method copies the contents of this region to the current Brotli stream.">Ein Bereich im Arbeitsspeicher. Diese Methode kopiert den Inhalt dieses Bereichs in den aktuellen Brotli-Datenstrom.</param>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes compressed bytes to the underlying Brotli stream from the specified byte array.">Schreibt komprimierte Bytes aus dem angegebenen Bytearray asynchron in den zugrunde liegenden Brotli-Datenstrom.</summary>
      <param name="buffer" vsli:raw="The buffer that contains the data to compress.">Der Puffer, der die zu komprimierenden Daten enthält.</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; from which to begin copying bytes to the Brotli stream.">Der nullbasierte Byteoffset in <paramref name="buffer" />, ab dem Bytes in den Brotli-Datenstrom kopiert werden.</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.Compression.BrotliStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes compressed bytes to the underlying Brotli stream from the specified byte memory range.">Schreibt komprimierte Bytes aus dem angegebenen Bytespeicherbereich asynchron in den zugrunde liegenden Brotli-Datenstrom.</summary>
      <param name="buffer" vsli:raw="The memory region to write data from.">Der Speicherbereich, aus dem Daten geschrieben werden sollen.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
  </members>
</doc>