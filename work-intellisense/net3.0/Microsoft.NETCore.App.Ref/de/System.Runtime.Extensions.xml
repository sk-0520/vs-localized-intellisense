<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.AppDomain">
      <summary>Stellt eine Anwendungsdomäne dar. Dies ist eine isolierte Umgebung, in der Programme ausgeführt werden. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.AppDomain.AppendPrivatePath(System.String)">
      <summary>Fügt den angegebenen Verzeichnisnamen an die Liste der privaten Pfade an.</summary>
      <param name="path">Der Name des Verzeichnisses, das an den privaten Pfad angefügt werden soll.</param>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.ApplyPolicy(System.String)">
      <summary>Gibt den Assemblyanzeigenamen nach dem Anwenden der Richtlinien zurück.</summary>
      <param name="assemblyName">Der Assemblyanzeigename in der von der <see cref="P:System.Reflection.Assembly.FullName" />-Eigenschaft bereitgestellten Form.</param>
      <returns>Eine Zeichenfolge, die den Assemblyanzeigenamen nach dem Anwenden der Richtlinien enthält.</returns>
    </member>
    <member name="E:System.AppDomain.AssemblyLoad">
      <summary>Tritt beim Laden einer Assembly ein.</summary>
    </member>
    <member name="E:System.AppDomain.AssemblyResolve">
      <summary>Tritt ein, wenn die Auflösung einer Assembly fehlschlägt.</summary>
    </member>
    <member name="P:System.AppDomain.BaseDirectory">
      <summary>Ruft das Basisverzeichnis ab, das der Assemblyresolver für die Suche nach Assemblys verwendet.</summary>
      <returns>Das Basisverzeichnis, das der Assemblyresolver für die Suche nach Assemblys verwendet.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.ClearPrivatePath">
      <summary>Setzt den Pfad, der den Speicherort von privaten Assemblys angibt, auf die leere Zeichenfolge ("") zurück.</summary>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.ClearShadowCopyPath">
      <summary>Setzt die Liste der Verzeichnisse mit gespiegelten Assemblys auf die leere Zeichenfolge ("") zurück.</summary>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String)">
      <summary>Erstellt eine neue Anwendungsdomäne mit dem angegebenen Namen.</summary>
      <param name="friendlyName">Der angezeigte Name der Domäne.</param>
      <returns>Die neu erstellte Anwendungsdomäne.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Diese Methode wird auf .NET Core nicht unterstützt.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String)">
      <summary>Erstellt eine neue Instanz des angegebenen Typs, der in der angegebenen Assembly definiert ist.</summary>
      <param name="assemblyName">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <returns>Ein Objekt, das ein Wrapper für die neue Instanz ist, die durch <paramref name="typeName" /> angegeben wird. Der Rückgabewert muss für den Zugriff auf das eigentliche Objekt entwrappt werden.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> oder <paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyName" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.NullReferenceException">Diese Instanz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Erstellt eine neue Instanz des angegebenen Typs, der in der angegebenen Assembly definiert ist. Parameter geben einen Binder, Bindungsflags, Konstruktorargumente, kulturspezifische Informationen zum Interpretieren von Argumenten und optionale Aktivierungsattribute an.</summary>
      <param name="assemblyName">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <param name="ignoreCase">Ein boolescher Wert, der angibt, ob bei der Suche die Groß-/Kleinschreibung beachtet werden soll.</param>
      <param name="bindingAttr">Eine Kombination von 0 oder mehr Bitflags, die die Suche nach dem <paramref name="typeName" />-Konstruktor beeinflussen. Wenn <paramref name="bindingAttr" /> 0 ist, wird eine Suche nach öffentlichen Konstruktoren mit Beachtung der Groß-/Kleinschreibung durchgeführt.</param>
      <param name="binder">Ein Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von <see cref="T:System.Reflection.MemberInfo" />-Objekten über Reflektion ermöglicht. Wenn <paramref name="binder" /> den Wert null aufweist, wird der Standardbinder verwendet.</param>
      <param name="args">Die an den Konstruktor zu übergebenden Argumente. Dieses Array von Argumenten muss hinsichtlich Anzahl, Reihenfolge und Typ mit den Parametern des aufzurufenden Konstruktors übereinstimmen. Wenn der parameterlose Konstruktor bevorzugt wird, muss <paramref name="args" /> ein leeres Array oder NULL sein.</param>
      <param name="culture">Kulturabhängige Informationen, die die Umwandlung von <paramref name="args" /> in die für den <paramref name="typeName" />-Konstruktor deklarierten formalen Typen bestimmen. Wenn <paramref name="culture" /> den Wert <see langword="null" /> hat, wird die <see cref="T:System.Globalization.CultureInfo" /> des aktuellen Threads verwendet.</param>
      <param name="activationAttributes">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können. Üblicherweise ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält, das die zum Aktivieren eines Remoteobjekts erforderliche URL angibt.  
Der Parameter ist vom Client aktivierten Objekten zugeordnet. Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird. Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</param>
      <returns>Ein Objekt, das ein Wrapper für die neue Instanz ist, die durch <paramref name="typeName" /> angegeben wird. Der Rückgabewert muss für den Zugriff auf das eigentliche Objekt entwrappt werden.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> oder <paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
<paramref name="assemblyName" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender Konstruktor gefunden.</exception>
      <exception cref="T:System.NotSupportedException">Der Aufrufer kann keine Aktivierungsattribute für ein Objekt bereitstellen, das nicht von <see cref="T:System.MarshalByRefObject" /> erbt.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.NullReferenceException">Diese Instanz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])">
      <summary>Erstellt eine neue Instanz des angegebenen Typs, der in der angegebenen Assembly definiert ist. Ein Parameter gibt ein Array von Aktivierungsattributen an.</summary>
      <param name="assemblyName">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <param name="activationAttributes">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können. Üblicherweise ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält, das die zum Aktivieren eines Remoteobjekts erforderliche URL angibt.  
Der Parameter ist vom Client aktivierten Objekten zugeordnet. Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird. Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</param>
      <returns>Ein Objekt, das ein Wrapper für die neue Instanz ist, die durch <paramref name="typeName" /> angegeben wird. Der Rückgabewert muss für den Zugriff auf das eigentliche Objekt entwrappt werden.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> oder <paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyName" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.NotSupportedException">Der Aufrufer kann keine Aktivierungsattribute für ein Objekt bereitstellen, das nicht von <see cref="T:System.MarshalByRefObject" /> erbt.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.NullReferenceException">Diese Instanz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)">
      <summary>Erstellt eine neue Instanz des angegebenen Typs. Parameter geben die Assembly, in der der Typ definiert ist, und den Namen des Typs an.</summary>
      <param name="assemblyName">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <returns>Eine Instanz des durch <paramref name="typeName" /> angegebenen Objekts.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> oder <paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyName" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Erstellt eine neue Instanz des angegebenen, in der angegebenen Assembly definierten Typs, die angibt, ob die Groß-/Kleinschreibung des Typnamens ignoriert wird, außerdem die Bindungsattribute und den Binder, mit denen der zu erstellende Typ ausgewählt wird, die Argumente des Konstruktors, die Kultur und die Aktivierungsattribute.</summary>
      <param name="assemblyName">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <param name="ignoreCase">Ein boolescher Wert, der angibt, ob bei der Suche die Groß-/Kleinschreibung beachtet werden soll.</param>
      <param name="bindingAttr">Eine Kombination von 0 oder mehr Bitflags, die die Suche nach dem <paramref name="typeName" />-Konstruktor beeinflussen. Wenn <paramref name="bindingAttr" /> 0 ist, wird eine Suche nach öffentlichen Konstruktoren mit Beachtung der Groß-/Kleinschreibung durchgeführt.</param>
      <param name="binder">Ein Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von <see cref="T:System.Reflection.MemberInfo" />-Objekten über Reflektion ermöglicht. Wenn <paramref name="binder" /> den Wert null aufweist, wird der Standardbinder verwendet.</param>
      <param name="args">Die an den Konstruktor zu übergebenden Argumente. Dieses Array von Argumenten muss hinsichtlich Anzahl, Reihenfolge und Typ mit den Parametern des aufzurufenden Konstruktors übereinstimmen. Wenn der parameterlose Konstruktor bevorzugt wird, muss <paramref name="args" /> ein leeres Array oder NULL sein.</param>
      <param name="culture">Ein kulturspezifisches Objekt, mit dem die Umwandlung von Typen geregelt wird. Wenn <paramref name="culture" /> den Wert <see langword="null" /> hat, wird die <see langword="CultureInfo" /> des aktuellen Threads verwendet.</param>
      <param name="activationAttributes">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können. In der Regel ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält. Dies gibt die zum Aktivieren eines Remoteobjekts erforderliche URL an.  
Der Parameter ist vom Client aktivierten Objekten zugeordnet. Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird. Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</param>
      <returns>Eine Instanz des durch <paramref name="typeName" /> angegebenen Objekts.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> oder <paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender Konstruktor gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.NotSupportedException">Der Aufrufer kann keine Aktivierungsattribute für ein Objekt bereitstellen, das nicht von <see cref="T:System.MarshalByRefObject" /> erbt.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
<paramref name="assemblyName" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Erstellt eine neue Instanz des angegebenen Typs. Parameter geben die Assembly an, in der der Typ definiert ist, und den Namen des Typs und ein Array von Aktivierungsattributen.</summary>
      <param name="assemblyName">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <param name="activationAttributes">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können. Üblicherweise ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält, das die zum Aktivieren eines Remoteobjekts erforderliche URL angibt.  
Der Parameter ist vom Client aktivierten Objekten zugeordnet. Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird. Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</param>
      <returns>Eine Instanz des durch <paramref name="typeName" /> angegebenen Objekts.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> oder <paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.NotSupportedException">Der Aufrufer kann keine Aktivierungsattribute für ein Objekt bereitstellen, das nicht von <see cref="T:System.MarshalByRefObject" /> erbt.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyName" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)">
      <summary>Erstellt eine neue Instanz des angegebenen Typs, der in der angegebenen Assemblydatei definiert ist.</summary>
      <param name="assemblyFile">Der Name einschließlich des Pfads einer Datei, die eine Assembly enthält, in der der angeforderte Typ definiert ist. Die Assembly wird mit der <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />-Methode geladen.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <returns>Ein Objekt, das ein Wrapper für die neue Instanz ist, oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wurde. Der Rückgabewert muss für den Zugriff auf das eigentliche Objekt entwrappt werden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> ist <see langword="null" />.  

oder - 
<paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> wurde in <paramref name="assemblyFile" /> nicht gefunden.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein parameterloser öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine ausreichende Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyFile" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.NullReferenceException">Diese Instanz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Erstellt eine neue Instanz des angegebenen Typs, der in der angegebenen Assemblydatei definiert ist.</summary>
      <param name="assemblyFile">Der Name einschließlich des Pfads einer Datei, die eine Assembly enthält, in der der angeforderte Typ definiert ist. Die Assembly wird mit der <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />-Methode geladen.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" /> -Eigenschaft zurückgegeben wird.</param>
      <param name="ignoreCase">Ein boolescher Wert, der angibt, ob bei der Suche die Groß-/Kleinschreibung beachtet werden soll.</param>
      <param name="bindingAttr">Eine Kombination von 0 oder mehr Bitflags, die die Suche nach dem <paramref name="typeName" />-Konstruktor beeinflussen. Wenn <paramref name="bindingAttr" /> 0 ist, wird eine Suche nach öffentlichen Konstruktoren mit Beachtung der Groß-/Kleinschreibung durchgeführt.</param>
      <param name="binder">Ein Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von <see cref="T:System.Reflection.MemberInfo" />-Objekten über Reflektion ermöglicht. Wenn <paramref name="binder" /> den Wert null aufweist, wird der Standardbinder verwendet.</param>
      <param name="args">Die an den Konstruktor zu übergebenden Argumente. Dieses Array von Argumenten muss hinsichtlich Anzahl, Reihenfolge und Typ mit den Parametern des aufzurufenden Konstruktors übereinstimmen. Wenn der parameterlose Konstruktor bevorzugt wird, muss <paramref name="args" /> ein leeres Array oder NULL sein.</param>
      <param name="culture">Kulturabhängige Informationen, die die Umwandlung von <paramref name="args" /> in die für den <paramref name="typeName" />-Konstruktor deklarierten formalen Typen bestimmen. Wenn <paramref name="culture" /> den Wert <see langword="null" /> hat, wird die <see cref="T:System.Globalization.CultureInfo" /> des aktuellen Threads verwendet.</param>
      <param name="activationAttributes">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können. Üblicherweise ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält, das die zum Aktivieren eines Remoteobjekts erforderliche URL angibt.  
Der Parameter ist vom Client aktivierten Objekten zugeordnet. Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird. Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</param>
      <returns>Ein Objekt, das ein Wrapper für die neue Instanz ist, oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wurde. Der Rückgabewert muss für den Zugriff auf das eigentliche Objekt entwrappt werden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> ist <see langword="null" />.  

oder - 
<paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Der Aufrufer kann keine Aktivierungsattribute für ein Objekt bereitstellen, das nicht von <see cref="T:System.MarshalByRefObject" />erbt.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> wurde in <paramref name="assemblyFile" /> nicht gefunden.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine ausreichende Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> ist keine gültige Assembly.  

oder - 
<paramref name="assemblyFile" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.NullReferenceException">Diese Instanz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])">
      <summary>Erstellt eine neue Instanz des angegebenen Typs, der in der angegebenen Assemblydatei definiert ist.</summary>
      <param name="assemblyFile">Der Name einschließlich des Pfads einer Datei, die eine Assembly enthält, in der der angeforderte Typ definiert ist. Die Assembly wird mit der <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />-Methode geladen.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <param name="activationAttributes">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können. Üblicherweise ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält, das die zum Aktivieren eines Remoteobjekts erforderliche URL angibt.  
Der Parameter ist vom Client aktivierten Objekten zugeordnet. Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird. Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</param>
      <returns>Ein Objekt, das ein Wrapper für die neue Instanz ist, oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wurde. Der Rückgabewert muss für den Zugriff auf das eigentliche Objekt entwrappt werden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> wurde in <paramref name="assemblyFile" /> nicht gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine ausreichende Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.NotSupportedException">Der Aufrufer kann keine Aktivierungsattribute für ein Objekt bereitstellen, das nicht von <see cref="T:System.MarshalByRefObject" /> erbt.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyFile" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.NullReferenceException">Diese Instanz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)">
      <summary>Erstellt eine neue Instanz des angegebenen Typs, der in der angegebenen Assemblydatei definiert ist.</summary>
      <param name="assemblyName">Der Dateiname und der Pfad der Assembly, in der der angeforderte Typ definiert ist.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <returns>Das angeforderte Objekt oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wurde.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ist <see langword="null" />.  

oder - 
<paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein parameterloser öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine ausreichende Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyName" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Erstellt eine neue Instanz des angegebenen, in der angegebenen Assemblydatei definierten Typs, die angibt, ob die Groß-/Kleinschreibung des Typnamens ignoriert wird, außerdem die Bindungsattribute und den Binder, mit denen der zu erstellende Typ ausgewählt wird, die Argumente des Konstruktors, die Kultur und die Aktivierungsattribute.</summary>
      <param name="assemblyFile">Der Dateiname und der Pfad der Assembly, in der der angeforderte Typ definiert ist.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly, wie er von der <see cref="P:System.Type.FullName" />-Eigenschaft zurückgegeben wird.</param>
      <param name="ignoreCase">Ein boolescher Wert, der angibt, ob bei der Suche die Groß-/Kleinschreibung beachtet werden soll.</param>
      <param name="bindingAttr">Eine Kombination von 0 oder mehr Bitflags, die die Suche nach dem <paramref name="typeName" />-Konstruktor beeinflussen. Wenn <paramref name="bindingAttr" /> 0 ist, wird eine Suche nach öffentlichen Konstruktoren mit Beachtung der Groß-/Kleinschreibung durchgeführt.</param>
      <param name="binder">Ein Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von <see cref="T:System.Reflection.MemberInfo" />-Objekten über Reflektion ermöglicht. Wenn <paramref name="binder" /> den Wert null aufweist, wird der Standardbinder verwendet.</param>
      <param name="args">Die an den Konstruktor zu übergebenden Argumente. Dieses Array von Argumenten muss hinsichtlich Anzahl, Reihenfolge und Typ mit den Parametern des aufzurufenden Konstruktors übereinstimmen. Wenn der parameterlose Konstruktor bevorzugt wird, muss <paramref name="args" /> ein leeres Array oder NULL sein.</param>
      <param name="culture">Kulturabhängige Informationen, die die Umwandlung von <paramref name="args" /> in die für den <paramref name="typeName" />-Konstruktor deklarierten formalen Typen bestimmen. Wenn <paramref name="culture" /> den Wert <see langword="null" /> hat, wird die <see cref="T:System.Globalization.CultureInfo" /> des aktuellen Threads verwendet.</param>
      <param name="activationAttributes">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können. Üblicherweise ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält, das die zum Aktivieren eines Remoteobjekts erforderliche URL angibt.  
Der Parameter ist vom Client aktivierten Objekten zugeordnet. Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird. Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</param>
      <returns>Das angeforderte Objekt oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wurde.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ist <see langword="null" />.  

oder - 
<paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Der Aufrufer kann keine Aktivierungsattribute für ein Objekt bereitstellen, das nicht von <see cref="T:System.MarshalByRefObject" />erbt.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein übereinstimmender öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine ausreichende Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
<paramref name="assemblyName" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Erstellt eine neue Instanz des angegebenen Typs, der in der angegebenen Assemblydatei definiert ist.</summary>
      <param name="assemblyName">Der Dateiname und der Pfad der Assembly, in der der angeforderte Typ definiert ist.</param>
      <param name="typeName">Der vollqualifizierte Name des angeforderten Typs einschließlich des Namespace, jedoch ohne die Assembly (siehe <see cref="P:System.Type.FullName" />-Eigenschaft).</param>
      <param name="activationAttributes">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können. Üblicherweise ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält, das die zum Aktivieren eines Remoteobjekts erforderliche URL angibt.  
Der Parameter ist vom Client aktivierten Objekten zugeordnet. Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird. Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</param>
      <returns>Das angeforderte Objekt oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wurde.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ist <see langword="null" />.  

oder - 
<paramref name="typeName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Der Aufrufer kann keine Aktivierungsattribute für ein Objekt bereitstellen, das nicht von <see cref="T:System.MarshalByRefObject" />erbt.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> wurde in <paramref name="assemblyName" /> nicht gefunden.</exception>
      <exception cref="T:System.MissingMethodException">Es wurde kein parameterloser öffentlicher Konstruktor gefunden.</exception>
      <exception cref="T:System.MethodAccessException">Der Aufrufer hat keine ausreichende Berechtigung zum Aufrufen dieses Konstruktors.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyName" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="P:System.AppDomain.CurrentDomain">
      <summary>Ruft die aktuelle Anwendungsdomäne für den aktuellen <see cref="T:System.Threading.Thread" /> ab.</summary>
      <returns>Die aktuelle Anwendungsdomäne.</returns>
    </member>
    <member name="E:System.AppDomain.DomainUnload">
      <summary>Tritt ein, wenn eine <see cref="T:System.AppDomain" /> gerade entladen werden soll.</summary>
    </member>
    <member name="P:System.AppDomain.DynamicDirectory">
      <summary>Ruft das Verzeichnis ab, das der Assemblyresolver für die Suche nach dynamisch erstellten Assemblys verwendet.</summary>
      <returns>Das Verzeichnis, das der Assemblyresolver für die Suche nach dynamisch erstellten Assemblys verwendet.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String)">
      <summary>Führt die Assembly in der angegebenen Datei aus.</summary>
      <param name="assemblyFile">Der Name der Datei mit der auszuführenden Assembly.</param>
      <returns>Der vom Einstiegspunkt der Assembly zurückgegebene Wert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyFile" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.MissingMethodException">Die angegebene Assembly verfügt über keinen Einstiegspunkt.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[])">
      <summary>Führt die Assembly in der angegebenen Datei unter Verwendung der angegebenen Argumente aus.</summary>
      <param name="assemblyFile">Der Name der Datei mit der auszuführenden Assembly.</param>
      <param name="args">Die Argumente für den Einstiegspunkt der Assembly.</param>
      <returns>Der vom Einstiegspunkt der Assembly zurückgegebene Wert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> ist keine gültige Assembly.  

oder - 
<paramref name="assemblyFile" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.MissingMethodException">Die angegebene Assembly verfügt über keinen Einstiegspunkt.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
      <summary>Führt die Assembly in der angegebenen Datei unter Verwendung der angegebenen Argumente, des Hashwerts und Hashalgorithmus aus.</summary>
      <param name="assemblyFile">Der Name der Datei mit der auszuführenden Assembly.</param>
      <param name="args">Die Argumente für den Einstiegspunkt der Assembly.</param>
      <param name="hashValue">Stellt den Wert des errechneten Hashcodes dar.</param>
      <param name="hashAlgorithm">Stellt den vom Assemblymanifest verwendeten Hashalgorithmus dar.</param>
      <returns>Der vom Einstiegspunkt der Assembly zurückgegebene Wert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> ist keine gültige Assembly.  

oder - 
<paramref name="assemblyFile" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
      <exception cref="T:System.MissingMethodException">Die angegebene Assembly verfügt über keinen Einstiegspunkt.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])">
      <summary>Führt bei Angabe eines <see cref="T:System.Reflection.AssemblyName" /> die Assembly mit den angegebenen Argumenten aus.</summary>
      <param name="assemblyName">Ein <see cref="T:System.Reflection.AssemblyName" />-Objekt, das den Namen der Assembly darstellt.</param>
      <param name="args">Befehlszeilenargumente, die beim Starten des Prozesses übergeben werden sollen.</param>
      <returns>Der vom Einstiegspunkt der Assembly zurückgegebene Wert.</returns>
      <exception cref="T:System.IO.FileNotFoundException">Die durch <paramref name="assemblyName" /> angegebene Assembly wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.FileLoadException">Die durch <paramref name="assemblyName" /> angegebene Assembly wurde gefunden, konnte aber nicht geladen werden.</exception>
      <exception cref="T:System.BadImageFormatException">Die durch <paramref name="assemblyName" /> angegebene Assembly ist keine gültige Assembly.  

oder - 
<paramref name="assemblyName" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.MissingMethodException">Die angegebene Assembly verfügt über keinen Einstiegspunkt.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String)">
      <summary>Führt eine Assembly unter Angabe ihres Anzeigenamens aus.</summary>
      <param name="assemblyName">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Der vom Einstiegspunkt der Assembly zurückgegebene Wert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch <paramref name="assemblyName" /> angegebene Assembly wurde nicht gefunden.</exception>
      <exception cref="T:System.BadImageFormatException">Die durch <paramref name="assemblyName" /> angegebene Assembly ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyName" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileLoadException">Die durch <paramref name="assemblyName" /> angegebene Assembly wurde gefunden, konnte aber nicht geladen werden.</exception>
      <exception cref="T:System.MissingMethodException">Die angegebene Assembly verfügt über keinen Einstiegspunkt.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])">
      <summary>Führt die Assembly unter Angabe ihres Anzeigenamens mit den angegebenen Argumenten aus.</summary>
      <param name="assemblyName">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="args">Befehlszeilenargumente, die beim Starten des Prozesses übergeben werden sollen.</param>
      <returns>Der vom Einstiegspunkt der Assembly zurückgegebene Wert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch <paramref name="assemblyName" /> angegebene Assembly wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.FileLoadException">Die durch <paramref name="assemblyName" /> angegebene Assembly wurde gefunden, konnte aber nicht geladen werden.</exception>
      <exception cref="T:System.BadImageFormatException">Die durch <paramref name="assemblyName" /> angegebene Assembly ist keine gültige Assembly.  

oder - 
<paramref name="assemblyName" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.MissingMethodException">Die angegebene Assembly verfügt über keinen Einstiegspunkt.</exception>
    </member>
    <member name="E:System.AppDomain.FirstChanceException">
      <summary>Tritt auf, wenn eine Ausnahme in verwaltetem Code ausgelöst wird, bevor die Laufzeit in der Aufrufliste nach einem Ausnahmehandler in der Anwendungsdomäne sucht.</summary>
    </member>
    <member name="P:System.AppDomain.FriendlyName">
      <summary>Ruft den angezeigten Namen dieser Anwendungsdomäne ab.</summary>
      <returns>Der angezeigte Name dieser Anwendungsdomäne.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.GetAssemblies">
      <summary>Ruft die Assemblys ab, die in den Ausführungskontext dieser Anwendungsdomäne geladen wurden.</summary>
      <returns>Ein Array von Assemblys in dieser Anwendungsdomäne.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.GetCurrentThreadId">
      <summary>Ruft den aktuellen Threadbezeichner ab.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die als Bezeichner das aktuellen Threads verwendet wird.</returns>
    </member>
    <member name="M:System.AppDomain.GetData(System.String)">
      <summary>Ruft den in der aktuellen Anwendungsdomäne gespeicherten Wert für den angegebenen Namen ab.</summary>
      <param name="name">Der Name einer vordefinierten Anwendungsdomäneneigenschaft oder der Name einer von Ihnen definierten Anwendungsdomäneneigenschaft.</param>
      <returns>Der Wert der <paramref name="name" />-Eigenschaft oder <see langword="null" />, wenn die Eigenschaft nicht vorhanden ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="P:System.AppDomain.Id">
      <summary>Ruft eine Ganzzahl ab, die die Anwendungsdomäne innerhalb des Prozesses eindeutig identifiziert.</summary>
      <returns>Eine Ganzzahl, die die Anwendungsdomäne identifiziert.</returns>
    </member>
    <member name="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)">
      <summary>Ruft einen booleschen Wert, der NULL-Werte zulässt, ab, der angibt, ob alle Kompatibilitätsschalter festgelegt werden und ob in diesem Fall der angegebene Kompatibilitätsschalter festgelegt wird.</summary>
      <param name="value">Der zu überprüfende Kompatibilitätsschalter.</param>
      <returns>Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn keine Kompatibilitätsschalter festgelegt werden, andernfalls ein boolescher Wert, der angibt, ob der durch <paramref name="value" /> angegebene Kompatibilitätsschalter festgelegt wird.</returns>
    </member>
    <member name="M:System.AppDomain.IsDefaultAppDomain">
      <summary>Gibt einen Wert zurück, der angibt, ob die Anwendungsdomäne die Standardanwendungsdomäne für den Prozess ist.</summary>
      <returns>
        <see langword="true" />, wenn das aktuelle <see cref="T:System.AppDomain" />-Objekt die Standardanwendungsdomäne für den Prozess darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.AppDomain.IsFinalizingForUnload">
      <summary>Gibt an, ob diese Anwendungsdomäne entladen wird und ob die darin enthaltenen Objekte durch die Common Language Runtime finalisiert werden.</summary>
      <returns>
        <see langword="true" />, wenn die Anwendungsdomäne entladen wird und die Common Language Runtime mit dem Aufrufen von Finalizers begonnen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.AppDomain.IsFullyTrusted">
      <summary>Ruft einen Wert ab, der angibt, ob in die aktuelle Anwendungsdomäne geladene Assemblys mit vollständiger Vertrauenswürdigkeit ausgeführt werden.</summary>
      <returns>
        <see langword="true" />, wenn in die aktuelle Anwendungsdomäne geladene Assemblys mit voller Vertrauenswürdigkeit ausgeführt werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.AppDomain.IsHomogenous">
      <summary>Ruft einen Wert ab, der angibt, ob die aktuelle Anwendungsdomäne einen Satz von Berechtigungen aufweist, der allen in die Anwendungsdomäne geladenen Assemblys gewährt wird.</summary>
      <returns>
        <see langword="true" />, wenn die aktuelle Anwendungsdomäne einen homogenen Satz von Berechtigungen aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[])">
      <summary>Lädt die <see cref="T:System.Reflection.Assembly" /> mit einem COFF-Image (Common Object File Format), das eine angegebene <see cref="T:System.Reflection.Assembly" /> enthält.</summary>
      <param name="rawAssembly">Ein Array vom Typ <see langword="byte" />, das ein COFF-Image mit einer ausgegebenen Assembly ist.</param>
      <returns>Die geladene Assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="rawAssembly" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[],System.Byte[])">
      <summary>Lädt die <see cref="T:System.Reflection.Assembly" /> mit einem COFF-Image (Common Object File Format), das eine angegebene <see cref="T:System.Reflection.Assembly" /> enthält. Die Rohdatenbytes, die die Symbole für die <see cref="T:System.Reflection.Assembly" /> darstellen, werden ebenfalls geladen.</summary>
      <param name="rawAssembly">Ein Array vom Typ <see langword="byte" />, das ein COFF-Image mit einer ausgegebenen Assembly ist.</param>
      <param name="rawSymbolStore">Ein Array vom Typ <see langword="byte" />, das die Rohdatenbytes enthält, die die Symbole für die Assembly darstellen.</param>
      <returns>Die geladene Assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="rawAssembly" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.Reflection.AssemblyName)">
      <summary>Lädt eine <see cref="T:System.Reflection.Assembly" /> bei Angabe ihres <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyRef">Ein Objekt, das die zu ladende Assembly beschreibt.</param>
      <returns>Die geladene Assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyRef" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyRef" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyRef" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyRef" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.String)">
      <summary>Lädt eine <see cref="T:System.Reflection.Assembly" /> bei Angabe ihres Anzeigenamens.</summary>
      <param name="assemblyString">Der Anzeigename der Assembly. Siehe <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Die geladene Assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyString" /> ist gleich <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyString" /> nicht gefunden wurde.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyString" /> ist keine gültige Assembly.  

oder - 
Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyString" /> wurde mit einer höheren Version kompiliert.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringIsEnabled">
      <summary>Ruft einen Wert ab, der angibt, ob CPU- und Speicherüberwachung von Anwendungsdomänen für den aktuellen Prozess aktiviert ist, oder legt ihn fest. Wenn die Überwachung für einen Prozess aktiviert wurde, kann sie nicht deaktiviert werden.</summary>
      <returns>
        <see langword="true" />, wenn die Überwachung aktiviert ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Der aktuelle Prozess hat versucht, dieser Eigenschaft den Wert <see langword="false" /> zuzuweisen.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedMemorySize">
      <summary>Ruft die Anzahl von Bytes ab, die nach der letzten Auflistung noch vorhanden sind und auf die bekanntermaßen von der aktuellen Anwendungsdomäne verwiesen wird.</summary>
      <returns>Die Anzahl der noch vorhandenen Bytes.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedProcessMemorySize">
      <summary>Ruft die gesamten Bytes ab, die nach der letzten Auflistung für alle Anwendungsdomänen im Prozess noch vorhanden sind.</summary>
      <returns>Die Gesamtzahl der noch vorhandenen Bytes für den Prozess.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalAllocatedMemorySize">
      <summary>Ruft die Gesamtgröße in Bytes aller Speicherbelegungen ab, die von der Anwendungsdomäne seit der Erstellung vorgenommen wurden, ohne Subtraktion des freigegebenen Speichers.</summary>
      <returns>Die Gesamtgröße aller Speicherbelegungen.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalProcessorTime">
      <summary>Ruft die gesamte Prozessorzeit ab, die von allen Threads bei der Ausführung in der aktuellen Anwendungsdomäne seit Prozessstart genutzt wurde.</summary>
      <returns>Gesamte Prozessorzeit für die aktuelle Anwendungsdomäne.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see langword="static" /> (<see langword="Shared" /> in Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" />-Eigenschaft ist auf <see langword="false" /> festgelegt.</exception>
    </member>
    <member name="P:System.AppDomain.PermissionSet">
      <summary>Ruft den Berechtigungssatz einer Sandbox-Anwendungsdomäne ab.</summary>
      <returns>Der Berechtigungssatz der Sandbox-Anwendungsdomäne.</returns>
    </member>
    <member name="E:System.AppDomain.ProcessExit">
      <summary>Tritt ein, wenn der übergeordnete Prozess der Standardanwendungsdomäne beendet wird.</summary>
    </member>
    <member name="E:System.AppDomain.ReflectionOnlyAssemblyResolve">
      <summary>Tritt ein, wenn die Auflösung einer Assembly in dem auf Reflektion beschränkten Kontext fehlschlägt.</summary>
    </member>
    <member name="M:System.AppDomain.ReflectionOnlyGetAssemblies">
      <summary>Gibt die Assemblys zurück, die in den auf Reflektion beschränkten Kontext der Anwendungsdomäne geladen wurden.</summary>
      <returns>Ein Array von <see cref="T:System.Reflection.Assembly" />-Objekten, die Assemblys darstellen, die in den auf Reflektion beschränkten Kontext geladen wurden.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Es wurde versucht, eine Operation für eine entladene Anwendungsdomäne auszuführen.</exception>
    </member>
    <member name="P:System.AppDomain.RelativeSearchPath">
      <summary>Ruft den Pfad unterhalb des Basisverzeichnisses ab, in dem der Assemblyresolver nach privaten Assemblys suchen soll.</summary>
      <returns>Der Pfad unterhalb des Basisverzeichnisses, in dem der Assemblyresolver nach privaten Assemblys suchen soll.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="E:System.AppDomain.ResourceResolve">
      <summary>Tritt ein, wenn die Auflösung einer Ressource fehlschlägt, weil die Ressource keine gültige verknüpfte oder eingebettete Ressource in der Assembly ist.</summary>
    </member>
    <member name="M:System.AppDomain.SetCachePath(System.String)">
      <summary>Legt den angegebenen Verzeichnispfad als Speicherort für gespiegelte Assemblys fest.</summary>
      <param name="path">Der vollqualifizierte Pfad des Speicherortes der Schattenkopie.</param>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.SetData(System.String,System.Object)">
      <summary>Weist der angegebenen Anwendungsdomäneneigenschaft den angegebenen Wert zu.</summary>
      <param name="name">Der Name einer zu erstellenden oder zu ändernden benutzerdefinierten Anwendungsdomäneneigenschaft.</param>
      <param name="data">Der Wert der Eigenschaft.</param>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.SetDynamicBase(System.String)">
      <summary>Legt den angegebenen Verzeichnispfad als das Basisverzeichnis fest, in dem Unterverzeichnisse für die Speicherung und den Zugriff auf dynamisch generierte Dateien erstellt werden.</summary>
      <param name="path">Der vollqualifizierte Pfad des Basisverzeichnisses, in dem Unterverzeichnisse für die Speicherung dynamischer Assemblys erstellt werden.</param>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)">
      <summary>Gibt an, wie Haupt- und Identitätsobjekte an einen Thread angefügt werden sollen, wenn während der Ausführung in dieser Anwendungsdomäne versucht wird, den Thread an einen Prinzipal zu binden.</summary>
      <param name="policy">Einer der <see cref="T:System.Security.Principal.PrincipalPolicy" />-Werte, die den Typ des Prinzipalobjekts angeben, das an Threads angefügt werden soll.</param>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyFiles">
      <summary>Aktiviert die Schattenkopiefunktion.</summary>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyPath(System.String)">
      <summary>Legt den angegebenen Verzeichnispfad als Speicherort für zu spiegelnde Assemblys fest.</summary>
      <param name="path">Eine Liste von Verzeichnisnamen, die durch ein Semikolon voneinander getrennt sind.</param>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)">
      <summary>Legt das Standardprinzipalobjekt fest, das an Threads angefügt wird, wenn bei der Ausführung in dieser Anwendungsdomäne versucht wird, diese an einen Prinzipal zu binden.</summary>
      <param name="principal">Das Prinzipalobjekt, das an Threads angefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="principal" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">Der Principal des Threads wurde bereits festgelegt.</exception>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="P:System.AppDomain.SetupInformation">
      <summary>Ruft die Konfigurationsinformationen der Anwendungsdomäne für diese Instanz ab.</summary>
      <returns>Die Initialisierungsinformationen für die Anwendungsdomäne.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="P:System.AppDomain.ShadowCopyFiles">
      <summary>Gibt an, ob die Anwendungsdomäne für das Erstellen von Dateischattenkopien konfiguriert ist.</summary>
      <returns>
        <see langword="true" />, wenn in der Anwendungsdomäne Dateischattenkopien erstellt werden, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Der Vorgang wird für eine entladene Anwendungsdomäne ausgeführt.</exception>
    </member>
    <member name="M:System.AppDomain.ToString">
      <summary>Ruft eine Zeichenfolgendarstellung ab, die den angezeigten Namen der Anwendungsdomäne und aller Kontextrichtlinien einschließt.</summary>
      <returns>Eine durch Verketten der literalen Zeichenfolge "Name:", dem angezeigten Namen der Anwendungsdomäne und entweder Zeichenfolgendarstellungen der Kontextrichtlinien oder der Zeichenfolge "Keine Kontextrichtlinien vorhanden" gebildete Zeichenfolge.</returns>
      <exception cref="T:System.AppDomainUnloadedException">Die durch die aktuelle <see cref="T:System.AppDomain" /> dargestellte Anwendungsdomäne wurde entladen.</exception>
    </member>
    <member name="E:System.AppDomain.TypeResolve">
      <summary>Tritt ein, wenn die Auflösung eines Typs fehlschlägt.</summary>
    </member>
    <member name="E:System.AppDomain.UnhandledException">
      <summary>Tritt auf, wenn eine Ausnahme nicht abgefangen wird.</summary>
    </member>
    <member name="M:System.AppDomain.Unload(System.AppDomain)">
      <summary>Entlädt die angegebene Anwendungsdomäne.</summary>
      <param name="domain">Eine zu entladende Anwendungsdomäne.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.CannotUnloadAppDomainException">
        <paramref name="domain" /> konnte nicht entladen werden.</exception>
      <exception cref="T:System.Exception">Während des Entladeprozesses ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="T:System.AppDomainSetup">
      <summary>Stellt Assembly-Bindungsinformationen dar, die einer Instanz von <see cref="T:System.AppDomain" /> hinzugefügt werden können.</summary>
    </member>
    <member name="P:System.AppDomainSetup.ApplicationBase">
      <summary>Ruft den Namen des Verzeichnisses ab, das die Anwendung enthält, oder legt diesen fest.</summary>
      <returns>Der Name des Basisverzeichnisses der Anwendung.</returns>
    </member>
    <member name="P:System.AppDomainSetup.TargetFrameworkName">
      <summary>Ruft eine Zeichenfolge ab oder legt diese fest, die die Zielversion und das Profil von .NET Framework für die Anwendungsdomäne festlegt, in einem Format, das vom <see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" />-Konstruktor analysiert werden kann.</summary>
      <returns>Die Zielversion und das Profil des .NET Framework.</returns>
    </member>
    <member name="T:System.AppDomainUnloadedException">
      <summary>Die Ausnahme, die beim Zugriff auf eine entladene Anwendungsdomäne ausgelöst wird.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.AppDomainUnloadedException" />-Klasse.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.AppDomainUnloadedException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.AppDomainUnloadedException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.AppDomainUnloadedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.ApplicationId">
      <summary>Stellt Informationen bereit, mit denen eine manifestbasierte Anwendung eindeutig identifiziert werden kann. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ApplicationId" />-Klasse.</summary>
      <param name="publicKeyToken">Das Bytearray, die die unformatierten Daten des öffentlichen Schlüssels darstellen.</param>
      <param name="name">Der Name der Anwendung.</param>
      <param name="version">Ein <see cref="T:System.Version" />-Objekt, das die Version der Anwendung angibt.</param>
      <param name="processorArchitecture">Die Prozessorarchitektur der Anwendung.</param>
      <param name="culture">Die Kultur der Anwendung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.  

oder - 
<paramref name="version" /> ist <see langword="null" />.  

oder - 
<paramref name="publicKeyToken" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="M:System.ApplicationId.Copy">
      <summary>Erstellt eine identische Kopie der aktuellen Anwendungsidentität und gibt die Kopie zurück.</summary>
      <returns>Ein <see cref="T:System.ApplicationId" />-Objekt, das eine genaue Kopie des Originals darstellt.</returns>
    </member>
    <member name="P:System.ApplicationId.Culture">
      <summary>Ruft eine Zeichenfolge ab, die die Kulturinformationen für die Anwendung darstellen.</summary>
      <returns>Die Kulturinformationen für die Anwendung.</returns>
    </member>
    <member name="M:System.ApplicationId.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.ApplicationId" />-Objekt dem aktuellen <see cref="T:System.ApplicationId" />-Objekt entspricht.</summary>
      <param name="o">Das <see cref="T:System.ApplicationId" />-Objekt, das mit den aktuellen <see cref="T:System.ApplicationId" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.ApplicationId" />-Objekt der aktuellen <see cref="T:System.ApplicationId" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ApplicationId.GetHashCode">
      <summary>Ruft den Hashcode für die aktuelle Anwendungsidentität ab.</summary>
      <returns>Der Hashcode für die aktuelle Anwendungsidentität.</returns>
    </member>
    <member name="P:System.ApplicationId.Name">
      <summary>Ruft den Namen der Anwendung ab.</summary>
      <returns>Der Name der Anwendung.</returns>
    </member>
    <member name="P:System.ApplicationId.ProcessorArchitecture">
      <summary>Ruft die Zielprozessorarchitektur für die Anwendung ab.</summary>
      <returns>Die Prozessorarchitektur der Anwendung.</returns>
    </member>
    <member name="P:System.ApplicationId.PublicKeyToken">
      <summary>Ruft das öffentliche Schlüsseltoken für die Anwendung ab.</summary>
      <returns>Ein Bytearray mit dem Token des öffentlichen Schlüssels für die Assembly.</returns>
    </member>
    <member name="M:System.ApplicationId.ToString">
      <summary>Erstellt eine Zeichenfolgenentsprechung der Anwendungsidentität und gibt diese zurück.</summary>
      <returns>Eine Zeichenfolgenentsprechung der Anwendungsidentität.</returns>
    </member>
    <member name="P:System.ApplicationId.Version">
      <summary>Ruft die Version der Anwendung ab.</summary>
      <returns>Eine <see cref="T:System.Version" />, die die Version der Anwendung angibt.</returns>
    </member>
    <member name="T:System.AssemblyLoadEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.AppDomain.AssemblyLoad" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.AssemblyLoadEventArgs.#ctor(System.Reflection.Assembly)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.AssemblyLoadEventArgs" />-Klasse mit dem angegebenen <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="loadedAssembly">Eine Instanz, die die gerade geladene Assembly darstellt.</param>
    </member>
    <member name="P:System.AssemblyLoadEventArgs.LoadedAssembly">
      <summary>Ruft eine <see cref="T:System.Reflection.Assembly" /> ab, die die momentan geladene Assembly darstellt.</summary>
      <returns>Eine Instanz von <see cref="T:System.Reflection.Assembly" />, die die momentan geladene Assembly darstellt.</returns>
    </member>
    <member name="T:System.AssemblyLoadEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.AppDomain.AssemblyLoad" />-Ereignis einer <see cref="T:System.AppDomain" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="args">Ein <see cref="T:System.AssemblyLoadEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Base64FormattingOptions">
      <summary>Gibt an, ob die relevante <see cref="Overload:System.Convert.ToBase64CharArray" />-Methode und die relevante <see cref="Overload:System.Convert.ToBase64String" />-Methode Zeilenumbrüche in die Ausgabe einfügen.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.InsertLineBreaks">
      <summary>Fügt in der Zeichenfolgendarstellung nach je 76 Zeichen einen Zeilenumbruch ein.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.None">
      <summary>Fügt in der Zeichenfolgendarstellung nach je 76 Zeichen keinen Zeilenumbruch ein.</summary>
    </member>
    <member name="T:System.BitConverter">
      <summary>Konvertiert Basisdatentypen in ein Bytearray und ein Bytearray in Basisdatentypen.</summary>
    </member>
    <member name="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
      <summary>Konvertiert die angegebene Gleitkommazahl mit doppelter Genauigkeit in eine 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, deren Wert <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Boolean)">
      <summary>Gibt den angegebenen booleschen Wert als Bytearray zurück</summary>
      <param name="value">Ein boolescher Wert.</param>
      <returns>Ein Bytearray mit der Länge 1</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Char)">
      <summary>Gibt den Wert des angegebenen Unicode-Zeichens als Bytearray zurück.</summary>
      <param name="value">Ein zu konvertierendes Zeichen.</param>
      <returns>Ein Bytearray mit der Länge 2</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Double)">
      <summary>Gibt den angegebenen Gleitkommawert mit doppelter Genauigkeit als Bytearray zurück.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Ein Bytearray mit der Länge 8.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int16)">
      <summary>Gibt den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen als Bytearray zurück.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Ein Bytearray mit der Länge 2</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int32)">
      <summary>Gibt den angegebenen ganzzahligen 32-Bit-Wert mit Vorzeichen als Bytearray zurück</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Ein Bytearray mit der Länge 4</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int64)">
      <summary>Gibt den angegebenen ganzzahligen 64-Bit-Wert mit Vorzeichen als Bytearray zurück.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Ein Bytearray mit der Länge 8.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Single)">
      <summary>Gibt den angegebenen Gleitkommawert mit einfacher Genauigkeit als Bytearray zurück.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Ein Bytearray mit der Länge 4</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt16)">
      <summary>Gibt den Wert der angegebenen vorzeichenlosen 16-Bit-Ganzzahl als Bytearray zurück.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Ein Bytearray mit der Länge 2</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt32)">
      <summary>Gibt den Wert der angegebenen vorzeichenlosen 32-Bit-Ganzzahl als Bytearray zurück</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Ein Bytearray mit der Länge 4</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt64)">
      <summary>Gibt den Wert der angegebenen vorzeichenlosen 64-Bit-Ganzzahl als Bytearray zurück</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Ein Bytearray mit der Länge 8.</returns>
    </member>
    <member name="M:System.BitConverter.Int32BitsToSingle(System.Int32)">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
      <summary>Konvertiert die angegebene 64-Bit-Ganzzahl mit Vorzeichen in eine Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, deren Wert <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="F:System.BitConverter.IsLittleEndian">
      <summary>Gibt die Bytereihenfolge (Endianwert) an, in der Daten in dieser Computerarchitektur gespeichert werden.</summary>
    </member>
    <member name="M:System.BitConverter.SingleToInt32Bits(System.Single)">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
      <summary>Gibt einen booleschen Wert zurück, der aus dem Byte an der angegebenen Position eines Bytearrays konvertiert wurde</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Der Index des Byte innerhalb von <paramref name="value" />.</param>
      <returns>
        <see langword="true" />, wenn das Byte an der Position <paramref name="startIndex" /> in <paramref name="value" /> ungleich null ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
      <summary>Gibt ein Unicode-Zeichen zurück, das aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Ein Array.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Ein Zeichen, das beginnend bei <paramref name="startIndex" /> aus zwei Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> entspricht der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToChar(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
      <summary>Gibt eine Gleitkommazahl mit doppelter Genauigkeit zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die beginnend bei <paramref name="startIndex" /> aus acht Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 7 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToDouble(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
      <summary>Gibt eine 16-Bit-Ganzzahl mit Vorzeichen zurück, die aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die beginnend bei <paramref name="startIndex" /> aus zwei Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> entspricht der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt16(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
      <summary>Gibt eine 32-Bit-Ganzzahl mit Vorzeichen zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die beginnend bei <paramref name="startIndex" /> aus vier Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 3 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt32(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
      <summary>Gibt eine 64-Bit-Ganzzahl mit Vorzeichen zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die beginnend bei <paramref name="startIndex" /> aus acht Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 7 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt64(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
      <summary>Gibt eine Gleitkommazahl mit einfacher Genauigkeit zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die beginnend bei <paramref name="startIndex" /> aus vier Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 3 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToSingle(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[])">
      <summary>Konvertiert den numerischen Wert jedes Elements im angegebenen Bytearray in die entsprechende hexadezimale Zeichenfolgendarstellung.</summary>
      <param name="value">Ein Bytearray.</param>
      <returns>Eine Zeichenfolge aus hexadezimalen Paaren, die durch einen Bindestrich getrennt sind. Jedes Paar stellt das entsprechende Element in <paramref name="value" /> dar, z. B. "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
      <summary>Konvertiert den numerischen Wert jedes Elements in einem Teil des angegebenen Bytearrays in die entsprechende hexadezimale Zeichenfolgendarstellung.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine Zeichenfolge aus hexadezimalen Paaren, die durch einen Bindestrich getrennt sind. Jedes Paar stellt ein Element aus der Teilmenge von <paramref name="value" /> dar (z. B. "7F-2C-4A-00").</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
      <summary>Konvertiert den numerischen Wert jedes Elements in einem Teil des angegebenen Bytearrays in die entsprechende hexadezimale Zeichenfolgendarstellung.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <param name="length">Die Anzahl der zu konvertierenden Elemente in <paramref name="value" />.</param>
      <returns>Eine Zeichenfolge aus hexadezimalen Paaren, die durch einen Bindestrich getrennt sind. Jedes Paar stellt ein Element aus der Teilmenge von <paramref name="value" /> dar (z. B. "7F-2C-4A-00").</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0.  

oder - 
<paramref name="startIndex" /> ist größer als 0 (null) und größer als oder gleich der Länge von <paramref name="value" />.</exception>
      <exception cref="T:System.ArgumentException">Die Kombination von <paramref name="startIndex" /> und <paramref name="length" /> gibt keine Position in <paramref name="value" /> an. Das heißt, der <paramref name="startIndex" />-Parameter ist größer als die Länge von <paramref name="value" /> abzüglich des <paramref name="length" />-Parameters.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
      <summary>Gibt eine vorzeichenlose 16-Bit-Ganzzahl zurück, die aus zwei Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Das Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine vorzeichenlose 16-Bit-Ganzzahl, die beginnend bei <paramref name="startIndex" /> aus zwei Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> entspricht der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
      <summary>Gibt eine vorzeichenlose 32-Bit-Ganzzahl zurück, die aus vier Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine vorzeichenlose 32-Bit-Ganzzahl, die beginnend bei <paramref name="startIndex" /> aus vier Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 3 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
      <summary>Gibt eine vorzeichenlose 64-Bit-Ganzzahl zurück, die aus acht Bytes an der angegebenen Position in einem Bytearray konvertiert wurde.</summary>
      <param name="value">Ein Bytearray.</param>
      <param name="startIndex">Die Anfangsposition in <paramref name="value" />.</param>
      <returns>Eine vorzeichenlose 64-Bit-Ganzzahl, die beginnend bei <paramref name="startIndex" /> aus acht Bytes gebildet wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> ist größer oder gleich der Länge von <paramref name="value" /> minus 7 und ist kleiner oder gleich der Länge von <paramref name="value" /> minus 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="value" /> minus 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.ReadOnlySpan{System.Byte})">
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Boolean)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Char)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Double)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int16)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int32)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int64)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Single)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt16)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt32)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt64)">
      <param name="destination" />
      <param name="value" />
    </member>
    <member name="T:System.CannotUnloadAppDomainException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Versuch zum Entladen einer Anwendungsdomäne nicht erfolgreich ist.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.CannotUnloadAppDomainException" />-Klasse.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.CannotUnloadAppDomainException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.CannotUnloadAppDomainException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Ein <see cref="T:System.String" />, der den Fehler beschreibt.</param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.CannotUnloadAppDomainException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter kein NULL-Verweis ist (<see langword="Nothing" /> in Visual Basic), wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.CodeDom.Compiler.IndentedTextWriter">
      <summary>Stellt einen Textwriter bereit, der für den Einzug neuer Zeilen ein Token für eine Tabstoppzeichenfolge verwendet.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" />-Klasse mit dem angegebenen Textwriter und der angegebenen Standardzeichenfolge für Tabstopps.</summary>
      <param name="writer">Die für die Ausgabe zu verwendende <see cref="T:System.IO.TextWriter" />-Klasse.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" />-Klasse mit dem angegebenen Textwriter und der angegebenen Tabstoppzeichenfolge.</summary>
      <param name="writer">Die für die Ausgabe zu verwendende <see cref="T:System.IO.TextWriter" />-Klasse.</param>
      <param name="tabString">Die für Einzüge zu verwendende Tabstoppzeichenfolge.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Close">
      <summary>Schließt das Dokument, in das geschrieben wird.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
      <summary>Gibt die Standardtabstoppzeichenfolge an. Dieses Feld ist konstant.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Encoding">
      <summary>Ruft die Codierung für den zu verwendenden Textwriter ab.</summary>
      <returns>Eine <see cref="T:System.Text.Encoding" />-Klasse, die die Codierung für den zu verwendenden Textwriter angibt.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Flush">
      <summary>Entleert den Stream.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
      <summary>Ruft die Anzahl der Leerzeichen für den Einzug ab oder legt diese fest.</summary>
      <returns>Die Anzahl der Leerzeichen für den Einzug.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.InnerWriter">
      <summary>Ruft die zu verwendende <see cref="T:System.IO.TextWriter" />-Klasse ab.</summary>
      <returns>Der zu verwendende <see cref="T:System.IO.TextWriter" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.NewLine">
      <summary>Ruft die zu verwendende Zeilenendemarke ab oder legt diese fest.</summary>
      <returns>Die zu verwendende Zeilenendemarke.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.OutputTabs">
      <summary>Gibt die Tabstoppzeichenfolge entsprechend der <see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" />-Eigenschaft für jede Einzugsebene einmal aus.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Boolean)">
      <summary>Schreibt die Textdarstellung eines booleschen Werts in den Textstream.</summary>
      <param name="value">Der zu schreibende boolesche Wert.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char)">
      <summary>Schreibt ein Zeichen in den Textstream.</summary>
      <param name="value">Das zu schreibende Zeichen.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[])">
      <summary>Schreibt ein Zeichenarray in den Textstream.</summary>
      <param name="buffer">Das zu schreibende Zeichenarray.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Teilarray von Zeichen in den Textstream.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Anfangsindex im Puffer.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Double)">
      <summary>Schreibt die Textdarstellung eines Double-Werts in den Textstream.</summary>
      <param name="value">Das zu schreibende <see langword="double" />.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int32)">
      <summary>Schreibt die Textdarstellung einer ganzen Zahl in den Textstream.</summary>
      <param name="value">Die zu schreibende ganze Zahl.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int64)">
      <summary>Schreibt die Textdarstellung einer 8-Byte-Ganzzahl in den Textstream.</summary>
      <param name="value">Die zu schreibende 8-Byte-Ganzzahl.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Object)">
      <summary>Schreibt die Textdarstellung eines Objekts in den Textstream.</summary>
      <param name="value">Das zu schreibende Objekt.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Single)">
      <summary>Schreibt die Textdarstellung eines Single-Werts in den Textstream.</summary>
      <param name="value">Das zu schreibende <see langword="single" />.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String)">
      <summary>Schreibt die angegebene Zeichenfolge in den Textstream.</summary>
      <param name="s">Die zu schreibende Zeichenfolge.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object)">
      <summary>Schreibt eine Formatzeichenfolge mit der angegebenen Semantik.</summary>
      <param name="format">Die Formatzeichenfolge.</param>
      <param name="arg0">Das Objekt, das in die Formatzeichenfolge geschrieben werden soll.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Schreibt eine Formatzeichenfolge mit der angegebenen Semantik.</summary>
      <param name="format">Die zu verwendende Formatzeichenfolge.</param>
      <param name="arg0">Das erste Objekt, das in die Formatzeichenfolge geschrieben werden soll.</param>
      <param name="arg1">Das zweite Objekt, das in die Formatzeichenfolge geschrieben werden soll.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object[])">
      <summary>Schreibt eine Formatzeichenfolge mit der angegebenen Semantik.</summary>
      <param name="format">Die zu verwendende Formatzeichenfolge.</param>
      <param name="arg">Das auszugebende Argumentarray.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine">
      <summary>Schreibt ein Zeichen für den Zeilenabschluss.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Boolean)">
      <summary>Schreibt die Textdarstellung eines booleschen Werts, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Der zu schreibende boolesche Wert.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char)">
      <summary>Schreibt ein Zeichen, auf das ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Das zu schreibende Zeichen.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[])">
      <summary>Schreibt ein Zeichenarray, auf das ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="buffer">Das zu schreibende Zeichenarray.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Unterarray von Zeichen, auf das ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Anfangsindex im Puffer.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Double)">
      <summary>Schreibt die Textdarstellung eines Double-Werts, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Das zu schreibende <see langword="double" />.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int32)">
      <summary>Schreibt die Textdarstellung einer ganzen Zahl, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Die zu schreibende ganze Zahl.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int64)">
      <summary>Schreibt die Textdarstellung einer 8-Byte-Ganzzahl, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Die zu schreibende 8-Byte-Ganzzahl.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Object)">
      <summary>Schreibt die Textdarstellung eines Objekts, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Das zu schreibende Objekt.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Single)">
      <summary>Schreibt die Textdarstellung eines Single-Werts, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Das zu schreibende <see langword="single" />.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String)">
      <summary>Schreibt die angegebene Zeichenfolge, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="s">Die zu schreibende Zeichenfolge.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object)">
      <summary>Schreibt eine Formatzeichenfolge, auf die ein Zeichen für den Zeilenabschluss folgt, mit der angegebenen Semantik.</summary>
      <param name="format">Die Formatzeichenfolge.</param>
      <param name="arg0">Das Objekt, das in die Formatzeichenfolge geschrieben werden soll.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Schreibt eine Formatzeichenfolge, auf die ein Zeichen für den Zeilenabschluss folgt, mit der angegebenen Semantik.</summary>
      <param name="format">Die zu verwendende Formatzeichenfolge.</param>
      <param name="arg0">Das erste Objekt, das in die Formatzeichenfolge geschrieben werden soll.</param>
      <param name="arg1">Das zweite Objekt, das in die Formatzeichenfolge geschrieben werden soll.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object[])">
      <summary>Schreibt eine Formatzeichenfolge, auf die ein Zeichen für den Zeilenabschluss folgt, mit der angegebenen Semantik.</summary>
      <param name="format">Die zu verwendende Formatzeichenfolge.</param>
      <param name="arg">Das auszugebende Argumentarray.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.UInt32)">
      <summary>Schreibt die Textdarstellung eines UInt32, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Ein auszugebender UInt32.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
      <summary>Schreibt die angegebene Zeichenfolge ohne Tabstopps in eine Zeile.</summary>
      <param name="s">Die zu schreibende Zeichenfolge.</param>
    </member>
    <member name="T:System.Collections.ArrayList">
      <summary>Implementiert die <see cref="T:System.Collections.IList" />-Schnittstelle. Dabei wird ein Array verwendet, dessen Größe je nach Bedarf dynamisch erhöht wird.</summary>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.ArrayList" />-Klasse, die die Standardanfangskapazität aufweist.</summary>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.ArrayList" />-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und deren anfängliche Kapazität der Anzahl der kopierten Elemente entspricht.</summary>
      <param name="c">Die <see cref="T:System.Collections.ICollection" />, deren Elemente in die neue Liste kopiert werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor(System.Int32)">
      <summary>Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.ArrayList" />-Klasse, die die angegebene Anfangskapazität aufweist.</summary>
      <param name="capacity">Die Anzahl von Elementen, die anfänglich in der neuen Liste gespeichert werden können.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
      <summary>Erstellt einen <see cref="T:System.Collections.ArrayList" />-Wrapper für eine angegebene <see cref="T:System.Collections.IList" />.</summary>
      <param name="list">Die zu umschließende <see cref="T:System.Collections.IList" />.</param>
      <returns>Der die <see cref="T:System.Collections.IList" /> umgebende <see cref="T:System.Collections.ArrayList" />-Wrapper.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Add(System.Object)">
      <summary>Fügt am Ende der <see cref="T:System.Collections.ArrayList" /> ein Objekt hinzu.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das am Ende der <see cref="T:System.Collections.ArrayList" />-Auflistung hinzugefügt werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <returns>Der <see cref="T:System.Collections.ArrayList" />-Index, an dem der <paramref name="value" /> hinzugefügt wurde.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
      <summary>Fügt die Elemente einer <see cref="T:System.Collections.ICollection" /> am Ende der <see cref="T:System.Collections.ArrayList" /> hinzu.</summary>
      <param name="c">Die <see cref="T:System.Collections.ICollection" />, deren Elemente am Ende der <see cref="T:System.Collections.ArrayList" /> hinzugefügt werden sollen. Die Auflistung selbst kann nicht <see langword="null" /> sein, aber sie kann Elemente enthalten, die <see langword="null" /> sind.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Durchsucht mithilfe des angegebenen Vergleichs einen Bereich von Elementen in der sortierten <see cref="T:System.Collections.ArrayList" /> nach einem Element und gibt den nullbasierten Index des Elements zurück.</summary>
      <param name="index">Der nullbasierte Startindex des zu durchsuchenden Bereichs.</param>
      <param name="count">Die Länge des zu durchsuchenden Bereichs.</param>
      <param name="value">Die zu suchende <see cref="T:System.Object" />. Der Wert kann <see langword="null" /> sein.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.  

oder - 
<see langword="null" />, wenn der Standardvergleich verwendet werden soll. Dies ist die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Elements.</param>
      <returns>Der nullbasierte Index von <paramref name="value" /> in der sortierten <see cref="T:System.Collections.ArrayList" />, sofern <paramref name="value" /> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn es kein größeres Element gibt, das bitweise Komplement von <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in der <see cref="T:System.Collections.ArrayList" /> an.  

oder - 
<paramref name="comparer" /> ist <see langword="null" />, und weder <paramref name="value" /> noch die Elemente von <see cref="T:System.Collections.ArrayList" /> implementieren die <see cref="T:System.IComparable" />-Schnittstelle.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist <see langword="null" />, und <paramref name="value" /> ist nicht vom gleichen Typ wie die Elemente von <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="count" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Object)">
      <summary>Durchsucht mithilfe des Standardcomparers die gesamte sortierte <see cref="T:System.Collections.ArrayList" /> nach einem Element und gibt den nullbasierten Index des Elements zurück.</summary>
      <param name="value">Die zu suchende <see cref="T:System.Object" />. Der Wert kann <see langword="null" /> sein.</param>
      <returns>Der nullbasierte Index von <paramref name="value" /> in der sortierten <see cref="T:System.Collections.ArrayList" />, sofern <paramref name="value" /> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn es kein größeres Element gibt, das bitweise Komplement von <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">Weder <paramref name="value" /> noch die Elemente von <see cref="T:System.Collections.ArrayList" /> implementieren die <see cref="T:System.IComparable" />-Schnittstelle.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> ist nicht vom gleichen Typ wie die Elemente der <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
      <summary>Durchsucht mithilfe des angegebenen Comparers die gesamte sortierte <see cref="T:System.Collections.ArrayList" /> nach einem Element und gibt den nullbasierten Index des Elements zurück.</summary>
      <param name="value">Die zu suchende <see cref="T:System.Object" />. Der Wert kann <see langword="null" /> sein.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.  

oder - 
<see langword="null" />, wenn der Standardvergleich verwendet werden soll. Dies ist die <see cref="T:System.IComparable" />-Implementierung des jeweiligen Elements.</param>
      <returns>Der nullbasierte Index von <paramref name="value" /> in der sortierten <see cref="T:System.Collections.ArrayList" />, sofern <paramref name="value" /> gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn es kein größeres Element gibt, das bitweise Komplement von <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> ist <see langword="null" />, und weder <paramref name="value" /> noch die Elemente von <see cref="T:System.Collections.ArrayList" /> implementieren die <see cref="T:System.IComparable" />-Schnittstelle.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> ist <see langword="null" />, und <paramref name="value" /> ist nicht vom gleichen Typ wie die Elemente von <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.Capacity">
      <summary>Ruft die Anzahl der Elemente ab, die die <see cref="T:System.Collections.ArrayList" /> enthalten kann, oder legt diese fest.</summary>
      <returns>Die anfängliche Anzahl von Elementen, die die <see cref="T:System.Collections.ArrayList" /> enthalten kann.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Collections.ArrayList.Capacity" /> ist auf einen Wert festgelegt, der kleiner als <see cref="P:System.Collections.ArrayList.Count" /> ist.</exception>
      <exception cref="T:System.OutOfMemoryException">Im System ist nicht genügend Arbeitsspeicher verfügbar.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Clear">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Clone">
      <summary>Erstellt eine flache Kopie von <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Eine flache Kopie von <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.Contains(System.Object)">
      <summary>Bestimmt, ob sich ein Element in <see cref="T:System.Collections.ArrayList" /> befindet.</summary>
      <param name="item">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.ArrayList" /> gesucht werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <returns>
        <see langword="true" />, wenn das <paramref name="item" /> in der <see cref="T:System.Collections.ArrayList" /> gefunden wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Array)">
      <summary>Kopiert die gesamte <see cref="T:System.Collections.ArrayList" /> in ein kompatibles eindimensionales <see cref="T:System.Array" />, wobei am Anfang des Zielarrays begonnen wird.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ArrayList" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.  

oder - 
Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ArrayList" /> ist größer als die Anzahl von Elementen, die das Ziel-<paramref name="array" /> enthalten kann.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ der Quell-<see cref="T:System.Collections.ArrayList" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die gesamte <see cref="T:System.Collections.ArrayList" />-Instanz in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ArrayList" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.  

oder - 
Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ArrayList" /> ist größer als der verfügbare Platz vom <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />s.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ der Quell-<see cref="T:System.Collections.ArrayList" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Kopiert einen Bereich von Elementen aus der <see cref="T:System.Collections.ArrayList" /> in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend ab dem angegebenen Index im Zielarray.</summary>
      <param name="index">Der nullbasierte Index in der Quell-<see cref="T:System.Collections.ArrayList" />, ab dem mit dem Kopieren begonnen wird.</param>
      <param name="array">Das eindimensionale <see cref="T:System.Array" /> , das das Ziel der aus der <see cref="T:System.Collections.ArrayList" />kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <param name="count">Die Anzahl der zu kopierenden Elemente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="arrayIndex" /> ist kleiner als Null.  

oder - 
<paramref name="count" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.  

oder - 
<paramref name="index" /> ist gleich oder größer als die <see cref="P:System.Collections.ArrayList.Count" /> der Quell- <see cref="T:System.Collections.ArrayList" />.  

oder - 
Die Anzahl der Elemente vom <paramref name="index" /> bis zum Ende der Quell-<see cref="T:System.Collections.ArrayList" /> ist größer als der verfügbare Platz vom <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ der Quell-<see cref="T:System.Collections.ArrayList" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.Count">
      <summary>Ruft die Anzahl der Elemente ab, die tatsächlich in <see cref="T:System.Collections.ArrayList" /> enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die tatsächlich in <see cref="T:System.Collections.ArrayList" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
      <summary>Gibt einen <see cref="T:System.Collections.ArrayList" />-Wrapper mit fester Größe zurück.</summary>
      <param name="list">Die zu umschließende <see cref="T:System.Collections.ArrayList" />.</param>
      <returns>Ein <see cref="T:System.Collections.ArrayList" />-Wrapper mit fester Größe.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
      <summary>Gibt einen <see cref="T:System.Collections.IList" />-Wrapper mit fester Größe zurück.</summary>
      <param name="list">Die zu umschließende <see cref="T:System.Collections.IList" />.</param>
      <returns>Ein <see cref="T:System.Collections.IList" />-Wrapper mit fester Größe.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.GetEnumerator">
      <summary>Gibt einen Enumerator für die gesamte  <see cref="T:System.Collections.ArrayList" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für die gesamte <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
      <summary>Gibt einen Enumerator für einen Bereich von Elementen in der <see cref="T:System.Collections.ArrayList" /> zurück.</summary>
      <param name="index">Der nullbasierte Startindex des Abschnitts der <see cref="T:System.Collections.ArrayList" />, auf den der Enumerator verweisen soll.</param>
      <param name="count">Die Anzahl der Elemente in dem Abschnitt der <see cref="T:System.Collections.ArrayList" />, auf den der Enumerator verweisen soll.</param>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für den angegebenen Bereich von Elementen in der <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="count" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich in der <see cref="T:System.Collections.ArrayList" /> an.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
      <summary>Gibt eine <see cref="T:System.Collections.ArrayList" /> zurück, die eine Teilgruppe der Elemente aus der Quell-<see cref="T:System.Collections.ArrayList" /> darstellt.</summary>
      <param name="index">Der nullbasierte <see cref="T:System.Collections.ArrayList" />-Index, an dem der Bereich beginnt.</param>
      <param name="count">Die Anzahl der Elemente im Bereich.</param>
      <returns>Eine <see cref="T:System.Collections.ArrayList" />, die eine Teilgruppe der Elemente aus der Quell-<see cref="T:System.Collections.ArrayList" /> darstellt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="count" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich von Elementen in der <see cref="T:System.Collections.ArrayList" /> an.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object)">
      <summary>Sucht nach dem angegebenen <see cref="T:System.Object" /> und gibt den nullbasierten Index des ersten Vorkommens innerhalb der gesamten <see cref="T:System.Collections.ArrayList" /> zurück.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.ArrayList" /> gesucht werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <returns>Der nullbasierte Index des ggf. ersten Vorkommens von <paramref name="value" /> in der gesamten <see cref="T:System.Collections.ArrayList" />, andernfalls -1.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
      <summary>Sucht nach dem angegebenen <see cref="T:System.Object" /> und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.ArrayList" /> zurück, der sich vom angegebenen Index bis zum letzten Element erstreckt.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.ArrayList" /> gesucht werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Suche. 0 (null) ist in einer leeren Liste gültig.</param>
      <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in <see cref="T:System.Collections.ArrayList" />, der sich von <paramref name="startIndex" /> bis zum letzten Element erstreckt, sofern gefunden; andernfalls –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für das <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
      <summary>Sucht nach dem angegebenen <see cref="T:System.Object" /> und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.ArrayList" /> zurück, der am angegebenen Index beginnt und die angegebene Anzahl von Elementen enthält.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.ArrayList" /> gesucht werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Suche. 0 (null) ist in einer leeren Liste gültig.</param>
      <param name="count">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</param>
      <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in <see cref="T:System.Collections.ArrayList" />, der am <paramref name="startIndex" /> beginnt und eine Anzahl von Elementen <paramref name="count" /> enthält, sofern gefunden; andernfalls –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für das <see cref="T:System.Collections.ArrayList" />.  

oder - 
<paramref name="count" /> ist kleiner als Null.  

oder - 
<paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in der <see cref="T:System.Collections.ArrayList" /> an.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.ArrayList" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Der einzufügende <see cref="T:System.Object" />. Der Wert kann <see langword="null" /> sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="index" /> ist größer als <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
      <summary>Fügt die Elemente einer Auflistung am angegebenen Index in die <see cref="T:System.Collections.ArrayList" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem neue Elemente eingefügt werden sollen.</param>
      <param name="c">Die <see cref="T:System.Collections.ICollection" />, deren Elemente in die <see cref="T:System.Collections.ArrayList" /> eingefügt werden sollen. Die Auflistung selbst kann nicht <see langword="null" /> sein, aber sie kann Elemente enthalten, die <see langword="null" /> sind.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="index" /> ist größer als <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.ArrayList" /> eine feste Größe aufweist.</summary>
      <returns>
        <see langword="true" /> , wenn das <see cref="T:System.Collections.ArrayList" /> eine feste Größe aufweist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.ArrayList" /> schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.ArrayList" /> schreibgeschützt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ArrayList" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" /> , wenn der Zugriff auf das <see cref="T:System.Collections.ArrayList" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element am angegebenen Index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.ArrayList.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
      <summary>Sucht nach dem angegebenen <see cref="T:System.Object" /> und gibt den nullbasierten Index des letzten Vorkommens innerhalb der gesamten <see cref="T:System.Collections.ArrayList" /> zurück.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.ArrayList" /> gesucht werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <returns>Der nullbasierte Index des letzten Vorkommens von <paramref name="value" /> in der gesamten <see cref="T:System.Collections.ArrayList" />; andernfalls –1.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
      <summary>Sucht nach dem angegebenen <see cref="T:System.Object" /> und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.ArrayList" /> zurück, der sich vom ersten Element bis zum angegebenen Index erstreckt.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.ArrayList" /> gesucht werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Rückwärtssuche.</param>
      <returns>Der nullbasierte Index des letzten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.ArrayList" />, der sich vom ersten Element bis <paramref name="startIndex" /> erstreckt, sofern gefunden; andernfalls –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für das <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
      <summary>Sucht nach dem angegebenen <see cref="T:System.Object" /> und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.ArrayList" /> zurück, der die angegebene Anzahl von Elementen enthält und am angegebenen Index endet.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.ArrayList" /> gesucht werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <param name="startIndex">Der nullbasierte Startindex für die Rückwärtssuche.</param>
      <param name="count">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</param>
      <returns>Der nullbasierte Index des letzten Vorkommens von <paramref name="value" /> innerhalb des Bereichs von Elementen in der <see cref="T:System.Collections.ArrayList" />, der <paramref name="count" /> Anzahl von Elementen enthält und am <paramref name="startIndex" /> endet, sofern gefunden; andernfalls –1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> liegt außerhalb des Bereichs der gültigen Indizes für das <see cref="T:System.Collections.ArrayList" />.  

oder - 
<paramref name="count" /> ist kleiner als Null.  

oder - 
<paramref name="startIndex" /> und <paramref name="count" /> geben keinen gültigen Abschnitt in der <see cref="T:System.Collections.ArrayList" /> an.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
      <summary>Gibt einen schreibgeschützten <see cref="T:System.Collections.ArrayList" />-Wrapper zurück.</summary>
      <param name="list">Die zu umschließende <see cref="T:System.Collections.ArrayList" />.</param>
      <returns>Ein schreibgeschützter <see cref="T:System.Collections.ArrayList" />-Wrapper um <paramref name="list" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
      <summary>Gibt einen schreibgeschützten <see cref="T:System.Collections.IList" />-Wrapper zurück.</summary>
      <param name="list">Die zu umschließende <see cref="T:System.Collections.IList" />.</param>
      <returns>Ein schreibgeschützter <see cref="T:System.Collections.IList" />-Wrapper um <paramref name="list" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="obj">Der <see cref="T:System.Object" />, der aus der <see cref="T:System.Collections.ArrayList" /> entfernt werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index aus der <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="index" /> ist größer oder gleich <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
      <summary>Entfernt einen Bereich von Elementen aus der <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Der nullbasierte Startindex des zu entfernenden Bereichs von Elementen.</param>
      <param name="count">Die Anzahl der zu entfernenden Elemente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="count" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich von Elementen in der <see cref="T:System.Collections.ArrayList" />an.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
      <summary>Gibt eine <see cref="T:System.Collections.ArrayList" /> zurück, deren Elemente Kopien des angegebenen Werts sind.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das mehrmals in die neue <see cref="T:System.Collections.ArrayList" /> kopiert werden soll. Der Wert kann <see langword="null" /> sein.</param>
      <param name="count">Wie oft <paramref name="value" /> kopiert werden soll.</param>
      <returns>Eine <see cref="T:System.Collections.ArrayList" /> mit einer <paramref name="count" /> Anzahl der Elemente, die alle Kopien von <paramref name="value" /> sind.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Reverse">
      <summary>Kehrt die Reihenfolge der Elemente in der gesamten <see cref="T:System.Collections.ArrayList" /> um.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
      <summary>Kehrt die Reihenfolge der Elemente im angegebenen Bereich um.</summary>
      <param name="index">Der nullbasierte Startindex des Bereichs, in dem die Reihenfolge umgekehrt werden soll.</param>
      <param name="count">Die Anzahl der Elemente im Bereich, in dem die Reihenfolge umgekehrt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="count" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich von Elementen in der <see cref="T:System.Collections.ArrayList" />an.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
      <summary>Kopiert die Elemente einer Auflistung über einen Bereich von Elementen in der <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">Der nullbasierte <see cref="T:System.Collections.ArrayList" />-Index, an dem mit dem Kopieren der Elemente von <paramref name="c" /> begonnen werden soll.</param>
      <param name="c">Die <see cref="T:System.Collections.ICollection" />, deren Elemente in die <see cref="T:System.Collections.ArrayList" /> kopiert werden sollen. Die Auflistung selbst kann nicht <see langword="null" /> sein, aber sie kann Elemente enthalten, die <see langword="null" /> sind.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="index" /> plus die Anzahl von Elementen in <paramref name="c" /> ist größer als <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort">
      <summary>Sortiert die Elemente in der gesamten <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
      <summary>Sortiert die Elemente in der gesamten <see cref="T:System.Collections.ArrayList" /> mithilfe des angegebenen Comparers.</summary>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.  

oder - 
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn die <see cref="T:System.IComparable" />-Implementierung der einzelnen Elemente verwendet werden soll.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.</exception>
      <exception cref="T:System.InvalidOperationException">Fehler beim Vergleichen von zwei Elementen.</exception>
      <exception cref="T:System.ArgumentException">
        <see langword="null" /> wird für <paramref name="comparer" /> übergeben, und die Elemente in der Liste implementieren <see cref="T:System.IComparable" /> nicht.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Sortiert die Elemente in einem Bereich von Elementen in der <see cref="T:System.Collections.ArrayList" /> mithilfe des angegebenen Vergleichs.</summary>
      <param name="index">Der nullbasierte Startindex des zu sortierenden Bereichs.</param>
      <param name="count">Die Länge des zu sortierenden Bereichs.</param>
      <param name="comparer">Die <see cref="T:System.Collections.IComparer" />-Implementierung, die beim Vergleich von Elementen verwendet werden soll.  

oder - 
Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn die <see cref="T:System.IComparable" />-Implementierung der einzelnen Elemente verwendet werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  

oder - 
<paramref name="count" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> und <paramref name="count" /> geben keinen gültigen Bereich im <see cref="T:System.Collections.ArrayList" />an.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.</exception>
      <exception cref="T:System.InvalidOperationException">Fehler beim Vergleichen von zwei Elementen.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
      <summary>Gibt einen synchronisierten (threadsicheren) <see cref="T:System.Collections.ArrayList" />-Wrapper zurück.</summary>
      <param name="list">Die <see cref="T:System.Collections.ArrayList" />, die synchronisiert werden soll.</param>
      <returns>Ein <see cref="T:System.Collections.ArrayList" />-Wrapper, der synchronisiert (threadsicher) ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
      <summary>Gibt einen synchronisierten (threadsicheren) <see cref="T:System.Collections.IList" />-Wrapper zurück.</summary>
      <param name="list">Die <see cref="T:System.Collections.IList" />, die synchronisiert werden soll.</param>
      <returns>Ein <see cref="T:System.Collections.IList" />-Wrapper, der synchronisiert (threadsicher) ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ArrayList" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ArrayList" /> synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.ToArray">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ArrayList" /> in ein neues <see cref="T:System.Object" />-Array.</summary>
      <returns>Ein <see cref="T:System.Object" />-Array, das Kopien der Elemente aus der <see cref="T:System.Collections.ArrayList" /> enthält.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.ToArray(System.Type)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ArrayList" /> in ein neues Array vom angegebenen Elementtyp.</summary>
      <param name="type">Der Element-<see cref="T:System.Type" /> des Zielarrays, das erstellt und in das Elemente kopiert werden sollen.</param>
      <returns>Ein Array vom angegebenen Elementtyp, das Kopien der Elemente aus <see cref="T:System.Collections.ArrayList" /> enthält.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ des Quell-<see cref="T:System.Collections.ArrayList" />s kann nicht automatisch in den angegebenen Typ umgewandelt werden.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.TrimToSize">
      <summary>Legt die Kapazität auf die Anzahl der tatsächlich in der <see cref="T:System.Collections.ArrayList" /> enthaltenen Elemente fest.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.ArrayList" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.ArrayList" /> hat eine feste Größe.</exception>
    </member>
    <member name="T:System.Collections.Comparer">
      <summary>Vergleicht zwei Objekte auf Äquivalenz, wobei die Groß- und Kleinschreibung bei Zeichenfolgenvergleichen berücksichtigt wird.</summary>
    </member>
    <member name="M:System.Collections.Comparer.#ctor(System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Comparer" />-Klasse mit dem angegebenen <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die für den neuen <see cref="T:System.Collections.Comparer" /> verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Comparer.Compare(System.Object,System.Object)">
      <summary>Führt einen Vergleich zweier Objekte gleichen Typs unter Berücksichtigung der Groß- und Kleinschreibung durch und gibt über den zurückgegebenen Wert an, ob das eine Objekt kleiner, größer oder gleich dem anderen Objekt ist.</summary>
      <param name="a">Das erste zu vergleichende Objekt.</param>
      <param name="b">Das zweite zu vergleichende Objekt.</param>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="a" /> und <paramref name="b" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Wert 
  Bedeutung 
  Kleiner als 0 (null) 
 <paramref name="a" /> ist kleiner als <paramref name="b" />.  

  Zero 
 <paramref name="a" /> ist gleich <paramref name="b" />.  

  Größer als 0 (null) 
 <paramref name="a" /> ist größer als <paramref name="b" />.</returns>
      <exception cref="T:System.ArgumentException">Weder <paramref name="a" /> noch <paramref name="b" /> implementieren die <see cref="T:System.IComparable" />-Schnittstelle.  

oder - 
<paramref name="a" /> und <paramref name="b" /> sind nicht vom gleichen Typ. Keines der beiden kann einen Vergleich mit dem jeweils anderen Objekt behandeln.</exception>
    </member>
    <member name="F:System.Collections.Comparer.Default">
      <summary>Stellt eine Instanz von <see cref="T:System.Collections.Comparer" /> dar, die der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads zugeordnet ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Collections.Comparer.DefaultInvariant">
      <summary>Stellt eine Instanz von <see cref="T:System.Collections.Comparer" /> dar, die der <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> zugeordnet ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Collections.Comparer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den für die Serialisierung erforderlichen Daten auf.</summary>
      <param name="info">Das mit Daten zu füllende Objekt.</param>
      <param name="context">Die Kontextinformationen über die Quelle oder das Ziel der Serialisierung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Hashtable">
      <summary>Stellt eine Auflistung von Schlüssel-Wert-Paaren dar, die auf Grundlage des Hashcodes des Schlüssels geordnet sind.</summary>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der anfänglichen Standardkapazität, des Standardlastfaktors, Hashcode-Standardanbieters und des Standardcomparers.</summary>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse durch Kopieren der Elemente aus dem angegebenen Wörterbuch in das neue <see cref="T:System.Collections.Hashtable" />-Objekt. Das neue <see cref="T:System.Collections.Hashtable" />-Objekt besitzt eine Anfangskapazität, die mit der Anzahl der kopierten Elemente identisch ist, und verwendet den Standardlastfaktor, den Hashcode-Standardanbieter und den Standardcomparer.</summary>
      <param name="d">Das <see cref="T:System.Collections.IDictionary" />-Objekt, das in ein neues <see cref="T:System.Collections.Hashtable" />-Objekt kopiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse durch Kopieren der Elemente aus dem angegebenen Wörterbuch in ein neues <see cref="T:System.Collections.Hashtable" />-Objekt. Das neue <see cref="T:System.Collections.Hashtable" />-Objekt besitzt eine Anfangskapazität, die mit der Anzahl der kopierten Elemente identisch ist, und verwendet den Standardlastfaktor sowie das angegebene <see cref="T:System.Collections.IEqualityComparer" />-Objekt.</summary>
      <param name="d">Das <see cref="T:System.Collections.IDictionary" />-Objekt, das in ein neues <see cref="T:System.Collections.Hashtable" />-Objekt kopiert werden soll.</param>
      <param name="equalityComparer">Der <see cref="T:System.Collections.IEqualityComparer" />, der sowohl den Hashcodeanbieter als auch den Comparer zur Verwendung mit der <see cref="T:System.Collections.Hashtable" /> definiert.  

oder - 
<see langword="null" />, um den Hashcode-Standardanbieter und den Standardcomparer zu verwenden. Der Hashcode-Standardanbieter ist die Implementierung von <see cref="M:System.Object.GetHashCode" /> jedes Schlüssels, und der Standardcomparer ist die Implementierung von <see cref="M:System.Object.Equals(System.Object)" /> jedes Schlüssels.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse durch Kopieren der Elemente aus dem angegebenen Wörterbuch in das neue <see cref="T:System.Collections.Hashtable" />-Objekt. Das neue <see cref="T:System.Collections.Hashtable" />-Objekt besitzt eine Anfangskapazität, die mit der Anzahl der kopierten Elemente identisch ist, und verwendet den Standardlastfaktor sowie den angegebenen Hashcodeanbieter und den angegebenen Comparer. Diese API ist veraltet. Eine Alternative finden Sie unter <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</summary>
      <param name="d">Das <see cref="T:System.Collections.IDictionary" />-Objekt, das in ein neues <see cref="T:System.Collections.Hashtable" />-Objekt kopiert werden soll.</param>
      <param name="hcp">Das <see cref="T:System.Collections.IHashCodeProvider" />-Objekt, das die Hashcodes für alle Schlüssel in der <see cref="T:System.Collections.Hashtable" /> bereitstellt.  

oder - 
<see langword="null" />, wenn der Hashcode-Standardanbieter verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.GetHashCode" />-Implementierung eines Schlüssels.</param>
      <param name="comparer">Das <see cref="T:System.Collections.IComparer" />-Objekt, mit dem ermittelt wird, ob zwei Schlüssel gleich sind.  

oder - 
<see langword="null" />, wenn der Standardcomparer verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.Equals(System.Object)" />-Implementierung eines Schlüssels.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse durch Kopieren der Elemente aus dem angegebenen Wörterbuch in das neue <see cref="T:System.Collections.Hashtable" />-Objekt. Das neue <see cref="T:System.Collections.Hashtable" />-Objekt besitzt eine Anfangskapazität, die mit der Anzahl der kopierten Elemente identisch ist, und verwendet den angegebenen Lastfaktor sowie den Hashcode-Standardanbieter und den Standardcomparer.</summary>
      <param name="d">Das <see cref="T:System.Collections.IDictionary" />-Objekt, das in ein neues <see cref="T:System.Collections.Hashtable" />-Objekt kopiert werden soll.</param>
      <param name="loadFactor">Eine Zahl im Bereich 0.1 bis 1.0, die mit dem Standardwert für die optimale Leistung multipliziert wird. Das Ergebnis ist das maximale Verhältnis von Elementen zu Buckets.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> ist kleiner als 0,1.  

oder - 
<paramref name="loadFactor" /> ist größer als 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse durch Kopieren der Elemente aus dem angegebenen Wörterbuch in das neue <see cref="T:System.Collections.Hashtable" />-Objekt. Das neue <see cref="T:System.Collections.Hashtable" />-Objekt besitzt eine Anfangskapazität, die mit der Anzahl der kopierten Elemente identisch ist, und verwendet den angegebenen Lastfaktor und das angegebene <see cref="T:System.Collections.IEqualityComparer" />-Objekt.</summary>
      <param name="d">Das <see cref="T:System.Collections.IDictionary" />-Objekt, das in ein neues <see cref="T:System.Collections.Hashtable" />-Objekt kopiert werden soll.</param>
      <param name="loadFactor">Eine Zahl im Bereich 0.1 bis 1.0, die mit dem Standardwert für die optimale Leistung multipliziert wird. Das Ergebnis ist das maximale Verhältnis von Elementen zu Buckets.</param>
      <param name="equalityComparer">Der <see cref="T:System.Collections.IEqualityComparer" />, der sowohl den Hashcodeanbieter als auch den Comparer zur Verwendung mit der <see cref="T:System.Collections.Hashtable" /> definiert.  

oder - 
<see langword="null" />, um den Hashcode-Standardanbieter und den Standardcomparer zu verwenden. Der Hashcode-Standardanbieter ist die Implementierung von <see cref="M:System.Object.GetHashCode" /> jedes Schlüssels, und der Standardcomparer ist die Implementierung von <see cref="M:System.Object.Equals(System.Object)" /> jedes Schlüssels.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> ist kleiner als 0,1.  

oder - 
<paramref name="loadFactor" /> ist größer als 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse durch Kopieren der Elemente aus dem angegebenen Wörterbuch in das neue <see cref="T:System.Collections.Hashtable" />-Objekt. Das neue <see cref="T:System.Collections.Hashtable" />-Objekt besitzt eine Anfangskapazität, die mit der Anzahl der kopierten Elemente identisch ist, und verwendet den angegebenen Lastfaktor, den angegebenen Hashcodeanbieter und den angegebenen Comparer.</summary>
      <param name="d">Das <see cref="T:System.Collections.IDictionary" />-Objekt, das in ein neues <see cref="T:System.Collections.Hashtable" />-Objekt kopiert werden soll.</param>
      <param name="loadFactor">Eine Zahl im Bereich 0.1 bis 1.0, die mit dem Standardwert für die optimale Leistung multipliziert wird. Das Ergebnis ist das maximale Verhältnis von Elementen zu Buckets.</param>
      <param name="hcp">Das <see cref="T:System.Collections.IHashCodeProvider" />-Objekt, das die Hashcodes für alle Schlüssel in der <see cref="T:System.Collections.Hashtable" /> bereitstellt.  

oder - 
<see langword="null" />, wenn der Hashcode-Standardanbieter verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.GetHashCode" />-Implementierung eines Schlüssels.</param>
      <param name="comparer">Das <see cref="T:System.Collections.IComparer" />-Objekt, mit dem ermittelt wird, ob zwei Schlüssel gleich sind.  

oder - 
<see langword="null" />, wenn der Standardcomparer verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.Equals(System.Object)" />-Implementierung eines Schlüssels.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> ist kleiner als 0,1.  

oder - 
<paramref name="loadFactor" /> ist größer als 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der anfänglichen Standardkapazität, des Standardlastfaktors und des angegebenen <see cref="T:System.Collections.IEqualityComparer" />-Objekts.</summary>
      <param name="equalityComparer">Das <see cref="T:System.Collections.IEqualityComparer" />-Objekt, das sowohl den Hashcodeanbieter als auch den Comparer zur Verwendung mit der <see cref="T:System.Collections.Hashtable" /> definiert.  

oder - 
<see langword="null" />, um den Hashcode-Standardanbieter und den Standardcomparer zu verwenden. Der Hashcode-Standardanbieter ist die Implementierung von <see cref="M:System.Object.GetHashCode" /> jedes Schlüssels, und der Standardcomparer ist die Implementierung von <see cref="M:System.Object.Equals(System.Object)" /> jedes Schlüssels.</param>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der anfänglichen Standardkapazität, des Standardlastfaktors, des angegebenen Hashcodeanbieters und des angegebenen Comparers.</summary>
      <param name="hcp">Das <see cref="T:System.Collections.IHashCodeProvider" />-Objekt, das die Hashcodes für alle Schlüssel im <see cref="T:System.Collections.Hashtable" />-Objekt bereitstellt.  

oder - 
<see langword="null" />, wenn der Hashcode-Standardanbieter verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.GetHashCode" />-Implementierung eines Schlüssels.</param>
      <param name="comparer">Das <see cref="T:System.Collections.IComparer" />-Objekt, mit dem ermittelt wird, ob zwei Schlüssel gleich sind.  

oder - 
<see langword="null" />, wenn der Standardcomparer verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.Equals(System.Object)" />-Implementierung eines Schlüssels.</param>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der angegebenen Anfangskapazität, des Standardlastfaktors, des Hashcode-Standardanbieters und des Standardcomparers.</summary>
      <param name="capacity">Die ungefähre Anzahl von Elementen, die die <see cref="T:System.Collections.Hashtable" /> anfänglich enthalten kann.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der angegebenen Anfangskapazität und des angegebenen <see cref="T:System.Collections.IEqualityComparer" /> sowie des Standardlastfaktors.</summary>
      <param name="capacity">Die ungefähre Anzahl von Elementen, die die <see cref="T:System.Collections.Hashtable" /> anfänglich enthalten kann.</param>
      <param name="equalityComparer">Der <see cref="T:System.Collections.IEqualityComparer" />, der sowohl den Hashcodeanbieter als auch den Comparer zur Verwendung mit der <see cref="T:System.Collections.Hashtable" /> definiert.  

oder - 
<see langword="null" />, um den Hashcode-Standardanbieter und den Standardcomparer zu verwenden. Der Hashcode-Standardanbieter ist die Implementierung von <see cref="M:System.Object.GetHashCode" /> jedes Schlüssels, und der Standardcomparer ist die Implementierung von <see cref="M:System.Object.Equals(System.Object)" /> jedes Schlüssels.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der angegebenen Anfangskapazität, des angegebenen Hashcodeanbieters, des angegebenen Comparers und des Standardlastfaktors.</summary>
      <param name="capacity">Die ungefähre Anzahl von Elementen, die die <see cref="T:System.Collections.Hashtable" /> anfänglich enthalten kann.</param>
      <param name="hcp">Das <see cref="T:System.Collections.IHashCodeProvider" />-Objekt, das die Hashcodes für alle Schlüssel in der <see cref="T:System.Collections.Hashtable" /> bereitstellt.  

oder - 
<see langword="null" />, wenn der Hashcode-Standardanbieter verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.GetHashCode" />-Implementierung eines Schlüssels.</param>
      <param name="comparer">Das <see cref="T:System.Collections.IComparer" />-Objekt, mit dem ermittelt wird, ob zwei Schlüssel gleich sind.  

oder - 
<see langword="null" />, wenn der Standardcomparer verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.Equals(System.Object)" />-Implementierung eines Schlüssels.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der angegebenen Anfangskapazität und des Lastfaktors sowie des Hashcode-Standardanbieter und des angegebenen Comparers.</summary>
      <param name="capacity">Die ungefähre Anzahl von Elementen, die die <see cref="T:System.Collections.Hashtable" /> anfänglich enthalten kann.</param>
      <param name="loadFactor">Eine Zahl im Bereich 0,1 bis 1,0, die mit dem Standardwert für die optimale Leistung multipliziert wird. Das Ergebnis ist das maximale Verhältnis von Elementen zu Buckets.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.  

oder - 
<paramref name="loadFactor" /> ist kleiner als 0,1.  

oder - 
<paramref name="loadFactor" /> ist größer als 1,0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="capacity" /> verursacht einen Überlauf.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der angegebenen Anfangskapazität, des angegebenen Lastfaktors und des angegebenen <see cref="T:System.Collections.IEqualityComparer" />-Objekts.</summary>
      <param name="capacity">Die ungefähre Anzahl von Elementen, die die <see cref="T:System.Collections.Hashtable" /> anfänglich enthalten kann.</param>
      <param name="loadFactor">Eine Zahl im Bereich 0,1 bis 1,0, die mit dem Standardwert für die optimale Leistung multipliziert wird. Das Ergebnis ist das maximale Verhältnis von Elementen zu Buckets.</param>
      <param name="equalityComparer">Der <see cref="T:System.Collections.IEqualityComparer" />, der sowohl den Hashcodeanbieter als auch den Comparer zur Verwendung mit der <see cref="T:System.Collections.Hashtable" /> definiert.  

oder - 
<see langword="null" />, um den Hashcode-Standardanbieter und den Standardcomparer zu verwenden. Der Hashcode-Standardanbieter ist die Implementierung von <see cref="M:System.Object.GetHashCode" /> jedes Schlüssels, und der Standardcomparer ist die Implementierung von <see cref="M:System.Object.Equals(System.Object)" /> jedes Schlüssels.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.  

oder - 
<paramref name="loadFactor" /> ist kleiner als 0,1.  

oder - 
<paramref name="loadFactor" /> ist größer als 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse unter Verwendung der angegebenen Anfangskapazität, des angegebenen Lastfaktors, des angegebenen Hashcode-Anbieters und des angegebenen Comparers.</summary>
      <param name="capacity">Die ungefähre Anzahl von Elementen, die die <see cref="T:System.Collections.Hashtable" /> anfänglich enthalten kann.</param>
      <param name="loadFactor">Eine Zahl im Bereich 0,1 bis 1,0, die mit dem Standardwert für die optimale Leistung multipliziert wird. Das Ergebnis ist das maximale Verhältnis von Elementen zu Buckets.</param>
      <param name="hcp">Das <see cref="T:System.Collections.IHashCodeProvider" />-Objekt, das die Hashcodes für alle Schlüssel in der <see cref="T:System.Collections.Hashtable" /> bereitstellt.  

oder - 
<see langword="null" />, wenn der Hashcode-Standardanbieter verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.GetHashCode" />-Implementierung eines Schlüssels.</param>
      <param name="comparer">Das <see cref="T:System.Collections.IComparer" />-Objekt, mit dem ermittelt wird, ob zwei Schlüssel gleich sind.  

oder - 
<see langword="null" />, wenn der Standardcomparer verwendet werden soll. Dies ist die jeweilige <see cref="M:System.Object.Equals(System.Object)" />-Implementierung eines Schlüssels.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist kleiner als Null.  

oder - 
<paramref name="loadFactor" /> ist kleiner als 0,1.  

oder - 
<paramref name="loadFactor" /> ist größer als 1,0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue leere Instanz der <see cref="T:System.Collections.Hashtable" />-Klasse, die serialisierbar ist, wobei die angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekte und die angegebenen <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekte verwendet werden.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den zum Serialisieren des <see cref="T:System.Collections.Hashtable" />-Objekts erforderlichen Informationen.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt mit der Quelle und dem Ziel des entsprechenden serialisierten Streams für <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Add(System.Object,System.Object)">
      <summary>Fügt dem <see cref="T:System.Collections.Hashtable" /> ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements. Der Wert kann <see langword="null" /> sein.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">In <see cref="T:System.Collections.Hashtable" /> ist bereits ein Element mit demselben Schlüssel enthalten.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Hashtable" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.Hashtable" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Clear">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.Collections.Hashtable" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Hashtable" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Clone">
      <summary>Erstellt eine flache Kopie von <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Eine flache Kopie von <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.comparer">
      <summary>Ruft den für die <see cref="T:System.Collections.IComparer" /> zu verwendenden <see cref="T:System.Collections.Hashtable" /> ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Collections.IComparer" />, der für die <see cref="T:System.Collections.Hashtable" /> verwendet werden soll.</returns>
      <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf einen Wert festgelegt, aber die Hashtabelle wurde mit einem <see cref="T:System.Collections.IEqualityComparer" /> erstellt.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Contains(System.Object)">
      <summary>Stellt fest, ob der <see cref="T:System.Collections.Hashtable" /> einen bestimmten Schlüssel enthält.</summary>
      <param name="key">Der im <see cref="T:System.Collections.Hashtable" /> zu suchende Schlüssel.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.Hashtable" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.ContainsKey(System.Object)">
      <summary>Stellt fest, ob der <see cref="T:System.Collections.Hashtable" /> einen bestimmten Schlüssel enthält.</summary>
      <param name="key">Der im <see cref="T:System.Collections.Hashtable" /> zu suchende Schlüssel.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.Hashtable" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.ContainsValue(System.Object)">
      <summary>Ermittelt, ob die <see cref="T:System.Collections.Hashtable" /> einen bestimmten Wert enthält.</summary>
      <param name="value">Der im <see cref="T:System.Collections.Hashtable" /> zu suchende Wert. Der Wert kann <see langword="null" /> sein.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Collections.Hashtable" /> ein Element mit dem angegebenen <paramref name="value" /> enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die <see cref="T:System.Collections.Hashtable" />-Elemente an den angegebenen Index in einer eindimensionalen <see cref="T:System.Array" />-Instanz.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus <see cref="T:System.Collections.DictionaryEntry" /> kopierten <see cref="T:System.Collections.Hashtable" />-Objekte ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.  

oder - 
Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Hashtable" /> ist größer als der verfügbare Platz vom <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />s.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ der Quell-<see cref="T:System.Collections.Hashtable" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.Count">
      <summary>Ruft die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Hashtable" /> ab.</summary>
      <returns>Die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.EqualityComparer">
      <summary>Ruft den für die <see cref="T:System.Collections.IEqualityComparer" /> zu verwendenden <see cref="T:System.Collections.Hashtable" /> ab.</summary>
      <returns>Der <see cref="T:System.Collections.IEqualityComparer" />, der für die <see cref="T:System.Collections.Hashtable" /> verwendet werden soll.</returns>
      <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf einen Wert festgelegt, aber die Hashtabelle wurde mit einem <see cref="T:System.Collections.IHashCodeProvider" /> und einem <see cref="T:System.Collections.IComparer" /> erstellt.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IDictionaryEnumerator" /> zurück, der das <see cref="T:System.Collections.Hashtable" /> durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IDictionaryEnumerator" /> für das <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.GetHash(System.Object)">
      <summary>Gibt den Hashcode für den angegebenen Schlüssel zurück.</summary>
      <param name="key">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
      <returns>Der Hashcode für <paramref name="key" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und gibt die zum Serialisieren der <see cref="T:System.Collections.Hashtable" /> erforderlichen Daten zurück.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den zum Serialisieren der <see cref="T:System.Collections.Hashtable" /> erforderlichen Informationen.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt mit der Quelle und dem Ziel des entsprechenden serialisierten Streams für <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Auflistung wurde geändert.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.hcp">
      <summary>Ruft das Objekt ab, das Hashcodes verteilen kann, oder legt dieses fest.</summary>
      <returns>Das Objekt, das Hashcodes verteilen kann.</returns>
      <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf einen Wert festgelegt, aber die Hashtabelle wurde mit einem <see cref="T:System.Collections.IEqualityComparer" /> erstellt.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Hashtable" /> eine feste Größe aufweist.</summary>
      <returns>
        <see langword="true" /> , wenn das <see cref="T:System.Collections.Hashtable" /> eine feste Größe aufweist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Hashtable" /> schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.Hashtable" /> schreibgeschützt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.Hashtable" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" /> , wenn der Zugriff auf das <see cref="T:System.Collections.Hashtable" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.Item(System.Object)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</summary>
      <param name="key">Der Schlüssel, dessen Wert abgerufen oder festgelegt werden soll.</param>
      <returns>Der dem angegebenen Schlüssel zugeordnete Wert. Wenn der angegebene Schlüssel nicht gefunden werden kann, wird beim Abrufen dieses Schlüssels <see langword="null" /> zurückgegeben. Beim Festlegen wird ein neues Element mit dem angegebenen Schlüssel erstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und <see cref="T:System.Collections.Hashtable" /> ist schreibgeschützt.  

oder - 
Die Eigenschaft wird festgelegt, <paramref name="key" /> ist in der Auflistung nicht vorhanden, und <see cref="T:System.Collections.Hashtable" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)">
      <summary>Vergleicht ein bestimmtes <see cref="T:System.Object" /> mit einem bestimmten Schlüssel in <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="item">Das <see cref="T:System.Object" />, das mit <paramref name="key" /> verglichen werden soll.</param>
      <param name="key">Der Schlüssel in der <see cref="T:System.Collections.Hashtable" />, der mit <paramref name="item" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="item" /> und <paramref name="key" /> gleich sind, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist <see langword="null" />.  

oder - 
<paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.Keys">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel im <see cref="T:System.Collections.Hashtable" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel in der <see cref="T:System.Collections.Hashtable" /> enthält.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.OnDeserialization(System.Object)">
      <summary>Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und löst das Deserialisierungsereignis aus, sobald die Deserialisierung abgeschlossen ist.</summary>
      <param name="sender">Die Quelle des Deserialisierungsereignisses.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Das der aktuellen <see cref="T:System.Runtime.Serialization.SerializationInfo" /> zugeordnete <see cref="T:System.Collections.Hashtable" />-Objekt ist ungültig.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Remove(System.Object)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Hashtable" /> ist schreibgeschützt.  

oder - 
<see cref="T:System.Collections.Hashtable" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)">
      <summary>Gibt einen synchronisierten (threadsicheren) Wrapper für die <see cref="T:System.Collections.Hashtable" /> zurück.</summary>
      <param name="table">Die <see cref="T:System.Collections.Hashtable" />, die synchronisiert werden soll.</param>
      <returns>Ein synchronisierter (threadsicherer) Wrapper für die <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="table" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.Hashtable" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.Hashtable" /> synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.Values">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Werte im <see cref="T:System.Collections.Hashtable" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Werte im <see cref="T:System.Collections.Hashtable" /> enthält.</returns>
    </member>
    <member name="T:System.Collections.IHashCodeProvider">
      <summary>Stellt unter Verwendung einer benutzerdefinierten Hashfunktion einen Hashcode für ein Objekt bereit.</summary>
    </member>
    <member name="M:System.Collections.IHashCodeProvider.GetHashCode(System.Object)">
      <summary>Gibt einen Hashcode für das angegebene Objekt zurück.</summary>
      <param name="obj">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
      <returns>Ein Hashcode für das angegebene Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der Typ von <paramref name="obj" /> ist ein Referenztyp, und <paramref name="obj" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.ContextBoundObject">
      <summary>Definiert die Basisklasse für alle kontextgebundenen Klassen.</summary>
    </member>
    <member name="M:System.ContextBoundObject.#ctor">
      <summary>Initialisiert eine Instanz der <see cref="T:System.ContextBoundObject" />-Klasse.</summary>
    </member>
    <member name="T:System.ContextMarshalException">
      <summary>Die Ausnahme, die bei einem nicht erfolgreichen Versuch ausgelöst wird, ein Objekt über eine Kontextgrenze hinweg zu marshallen.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ContextMarshalException" />-Klasse mit Standardeigenschaften.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ContextMarshalException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Kontextinformationen über die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ContextMarshalException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ContextMarshalException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="inner">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="inner" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.ContextStaticAttribute">
      <summary>Gibt an, dass der Wert eines statischen Felds für einen bestimmten Kontext eindeutig ist.</summary>
    </member>
    <member name="M:System.ContextStaticAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ContextStaticAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Convert">
      <summary>Konvertiert einen Basisdatentyp in einen anderen Basisdatentyp.</summary>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type)">
      <summary>Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="conversionType">Der Typ des zurückzugebenden Objekts.</param>
      <returns>Ein Objekt, dessen Typ <paramref name="conversionType" /> ist und dessen Wert <paramref name="value" /> entspricht.  

oder - 
Ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn <paramref name="value" /><see langword="null" /> ist und <paramref name="conversionType" /> kein Werttyp.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.  

oder - 
<paramref name="value" /> ist <see langword="null" />, und <paramref name="conversionType" /> ist ein Werttyp.  

oder - 
Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> hat ein Format, das von <paramref name="conversionType" /> nicht erkannt wird.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl außerhalb des Bereichs von <paramref name="conversionType" /> dar.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conversionType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
      <summary>Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht. Ein Parameter liefert kulturspezifische Formatierungsinformationen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="conversionType">Der Typ des zurückzugebenden Objekts.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Ein Objekt, dessen Typ <paramref name="conversionType" /> ist und dessen Wert <paramref name="value" /> entspricht.  

oder - 
<paramref name="value" />, wenn der <see cref="T:System.Type" /> von <paramref name="value" /> und <paramref name="conversionType" /> gleich sind.  

oder - 
Ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn <paramref name="value" /><see langword="null" /> ist und <paramref name="conversionType" /> kein Werttyp.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.  

oder - 
<paramref name="value" /> ist <see langword="null" />, und <paramref name="conversionType" /> ist ein Werttyp.  

oder - 
Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> hat ein Format für <paramref name="conversionType" />, das von <paramref name="provider" /> nicht erkannt wird.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl außerhalb des Bereichs von <paramref name="conversionType" />dar.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conversionType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
      <summary>Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="typeCode">Der Typ des zurückzugebenden Objekts.</param>
      <returns>Ein Objekt, dem <paramref name="typeCode" /> als Typ zugrunde liegt und dessen Wert <paramref name="value" /> entspricht.  

oder - 
Ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn <paramref name="value" /><see langword="null" /> ist und <paramref name="typeCode" /><see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> oder <see cref="F:System.TypeCode.Object" /> ist.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.  

oder - 
<paramref name="value" /> ist <see langword="null" />, und <paramref name="typeCode" /> gibt einen Werttyp an.  

oder - 
Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> hat ein Format, das vom <paramref name="typeCode" />-Typ nicht erkannt wird.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl außerhalb des Bereichs des <paramref name="typeCode" />-Typs dar.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> ist ungültig.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
      <summary>Gibt ein Objekt vom angegebenen Typ zurück, dessen Wert dem angegebenen Objekt entspricht. Ein Parameter liefert kulturspezifische Formatierungsinformationen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="typeCode">Der Typ des zurückzugebenden Objekts.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Ein Objekt, dem <paramref name="typeCode" /> als Typ zugrunde liegt und dessen Wert <paramref name="value" /> entspricht.  

oder - 
Ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn <paramref name="value" /><see langword="null" /> ist und <paramref name="typeCode" /><see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> oder <see cref="F:System.TypeCode.Object" /> ist.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.  

oder - 
<paramref name="value" /> ist <see langword="null" />, und <paramref name="typeCode" /> gibt einen Werttyp an.  

oder - 
Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein Format für den <paramref name="typeCode" />-Typ auf, der von <paramref name="provider" /> erkannt wird.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl außerhalb des Bereichs des <paramref name="typeCode" /> -Typs dar.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> ist ungültig.</exception>
    </member>
    <member name="F:System.Convert.DBNull">
      <summary>Eine Konstante, die eine Datenbankspalte ohne Daten darstellt, d. h. Datenbank-NULL.</summary>
    </member>
    <member name="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
      <summary>Konvertiert eine Teilmenge eines Unicode-Zeichenarrays, das Binärdaten als Base-64-Ziffern codiert, in ein entsprechendes Array von 8-Bit-Ganzzahlen ohne Vorzeichen. Parameter geben die Teilmenge im Eingabearray und die Anzahl der zu konvertierenden Elemente an.</summary>
      <param name="inArray">Ein Array von Unicode-Zeichen.</param>
      <param name="offset">Eine Position in <paramref name="inArray" />.</param>
      <param name="length">Die Anzahl der zu konvertierenden Elemente in <paramref name="inArray" />.</param>
      <returns>Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen, das <paramref name="length" />-Elementen an der Position <paramref name="offset" /> in <paramref name="inArray" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="length" /> ist kleiner als 0 (null).  

oder - 
<paramref name="offset" /> plus <paramref name="length" /> gibt eine Position außerhalb von <paramref name="inArray" /> an.</exception>
      <exception cref="T:System.FormatException">Die Länge der <paramref name="inArray" /> bei ignorierten Leerzeichen ist nicht 0 (null) oder ein Vielfaches von 4.  

oder - 
Das Format von <paramref name="inArray" /> ist ungültig. <paramref name="inArray" /> enthält ein Nicht-Base-64-Zeichen, mehr als zwei Füllzeichen oder in den Füllzeichen ein Zeichen, das kein Leerzeichen ist.</exception>
    </member>
    <member name="M:System.Convert.FromBase64String(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolge, die Binärdaten als Base-64-Ziffern codiert, in ein entsprechendes Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen, das <paramref name="s" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Die Länge der <paramref name="s" /> bei ignorierten Leerzeichen ist nicht 0 (null) oder ein Vielfaches von 4.  

oder - 
Das Format von <paramref name="s" /> ist ungültig. <paramref name="s" /> enthält ein Nicht-Base-64-Zeichen, mehr als zwei Füllzeichen oder in den Füllzeichen ein Zeichen, das kein Leerzeichen ist.</exception>
    </member>
    <member name="M:System.Convert.GetTypeCode(System.Object)">
      <summary>Gibt den <see cref="T:System.TypeCode" /> für das angegebene Objekt zurück.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <returns>Der <see cref="T:System.TypeCode" /> für <paramref name="value" /> oder<see cref="F:System.TypeCode.Empty" /> wenn <paramref name="value" /><see langword="null" /> ist.</returns>
    </member>
    <member name="M:System.Convert.IsDBNull(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Objekt vom Typ <see cref="T:System.DBNull" /> ist.</summary>
      <param name="value">Ein Objekt.</param>
      <returns>
        <see langword="true" /> wenn <paramref name="value" /> vom Typ <see cref="T:System.DBNull" />, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in eine entsprechende Teilmenge eines Arrays von Unicode-Zeichen, das mit Base-64-Ziffern codiert wurde. Parameter geben die Teilmengen als Offsets des Eingabe- und Ausgabearrays und die Anzahl der Elemente im zu konvertierenden Eingabearray an.</summary>
      <param name="inArray">Ein Eingabearray von 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="offsetIn">Eine Position in <paramref name="inArray" />.</param>
      <param name="length">Die Anzahl der zu konvertierenden Elemente aus <paramref name="inArray" />.</param>
      <param name="outArray">Ein Ausgabearray von Unicode-Zeichen.</param>
      <param name="offsetOut">Eine Position in <paramref name="outArray" />.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen mit der Anzahl von Bytes in <paramref name="outArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> oder <paramref name="outArray" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" /> oder <paramref name="length" /> ist ein negativer Wert.  

oder - 
<paramref name="offsetIn" /> plus <paramref name="length" /> ist größer als die Länge von <paramref name="inArray" />.  

oder - 
<paramref name="offsetOut" /> plus die Anzahl der zurückzugebenden Elemente ist größer als die Länge von <paramref name="outArray" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
      <summary>Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in eine entsprechende Teilmenge eines Arrays von Unicode-Zeichen, das mit Base-64-Ziffern codiert wurde. Parameter geben die Teilmengen als Offsets des Eingabe- und Ausgabearrays, die Anzahl der Elemente im zu konvertierenden Eingabearray sowie ggf. einzufügende Zeilenumbrüche im Ausgabearray an.</summary>
      <param name="inArray">Ein Eingabearray von 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="offsetIn">Eine Position in <paramref name="inArray" />.</param>
      <param name="length">Die Anzahl der zu konvertierenden Elemente aus <paramref name="inArray" />.</param>
      <param name="outArray">Ein Ausgabearray von Unicode-Zeichen.</param>
      <param name="offsetOut">Eine Position in <paramref name="outArray" />.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" />, wenn nach je 76 Zeichen ein Zeilenumbruch eingefügt werden soll, oder <see cref="F:System.Base64FormattingOptions.None" />, wenn keine Zeilenumbrüche eingefügt werden sollen.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen mit der Anzahl von Bytes in <paramref name="outArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> oder <paramref name="outArray" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" /> oder <paramref name="length" /> ist ein negativer Wert.  

oder - 
<paramref name="offsetIn" /> plus <paramref name="length" /> ist größer als die Länge von <paramref name="inArray" />.  

oder - 
<paramref name="offsetOut" /> plus die Anzahl der zurückzugebenden Elemente ist größer als die Länge von <paramref name="outArray" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Base64FormattingOptions" />-Wert.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[])">
      <summary>Konvertiert ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung.</summary>
      <param name="inArray">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Die Zeichenfolgendarstellung des Inhalts von <paramref name="inArray" /> als Base-64.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
      <summary>Konvertiert ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung. Ein Parameter gibt an, ob im Rückgabewert Zeilenumbrüche eingefügt werden sollen.</summary>
      <param name="inArray">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" />, wenn nach je 76 Zeichen ein Zeilenumbruch eingefügt werden soll, oder <see cref="F:System.Base64FormattingOptions.None" />, wenn keine Zeilenumbrüche eingefügt werden sollen.</param>
      <returns>Die Zeichenfolgendarstellung der Elemente in <paramref name="inArray" /> als Base-64.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Base64FormattingOptions" />-Wert.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
      <summary>Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung. Parameter geben die Teilmenge als Offset im Eingabearray und die Anzahl der Elemente im zu konvertierenden Array an.</summary>
      <param name="inArray">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="offset">Ein Offset in <paramref name="inArray" />.</param>
      <param name="length">Die Anzahl der zu konvertierenden Elemente aus <paramref name="inArray" />.</param>
      <returns>Die Zeichenfolgendarstellung von <paramref name="length" /> Elementen von <paramref name="inArray" /> ab Position <paramref name="offset" /> als Base-64.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="length" /> ist ein negativer Wert.  

oder - 
<paramref name="offset" /> plus <paramref name="length" /> ist größer als die Länge von <paramref name="inArray" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
      <summary>Konvertiert eine Teilmenge eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in die entsprechende mit Base-64-Ziffern codierte Zeichenfolgendarstellung. Parameter geben die Teilmenge als Offset im Eingabearray, die Anzahl der Elemente im zu konvertierenden Array sowie ggf. im Rückgabewert einzufügende Zeilenumbrüche an.</summary>
      <param name="inArray">Ein Array von 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="offset">Ein Offset in <paramref name="inArray" />.</param>
      <param name="length">Die Anzahl der zu konvertierenden Elemente aus <paramref name="inArray" />.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" />, wenn nach je 76 Zeichen ein Zeilenumbruch eingefügt werden soll, oder <see cref="F:System.Base64FormattingOptions.None" />, wenn keine Zeilenumbrüche eingefügt werden sollen.</param>
      <returns>Die Zeichenfolgendarstellung von <paramref name="length" /> Elementen von <paramref name="inArray" /> ab Position <paramref name="offset" /> als Base-64.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="length" /> ist ein negativer Wert.  

oder - 
<paramref name="offset" /> plus <paramref name="length" /> ist größer als die Länge von <paramref name="inArray" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Base64FormattingOptions" />-Wert.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)">
      <param name="bytes" />
      <param name="options" />
    </member>
    <member name="M:System.Convert.ToBoolean(System.Boolean)">
      <summary>Gibt den angegebenen booleschen Wert zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Der zurückzugebende boolesche Wert.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Char)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object)">
      <summary>Konvertiert den Wert eines angegebenen Objekts in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>
        <see langword="true" /> oder <see langword="false" />. Damit wird der Wert wiedergegeben, der beim Aufrufen der <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />-Methode für den zugrunde liegenden Typ von <paramref name="value" /> zurückgegeben wird. Wenn <paramref name="value" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist eine Zeichenfolge, die nicht gleich <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> ist.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung von <paramref name="value" /> in <see cref="T:System.Boolean" /> wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>
        <see langword="true" /> oder <see langword="false" />. Damit wird der Wert wiedergegeben, der beim Aufrufen der <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />-Methode für den zugrunde liegenden Typ von <paramref name="value" /> zurückgegeben wird. Wenn <paramref name="value" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist eine Zeichenfolge, die nicht gleich <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> ist.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung von <paramref name="value" /> in <see cref="T:System.Boolean" /> wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung eines logischen Werts in seine boolesche Entsprechung.</summary>
      <param name="value">Eine Zeichenfolge, die den Wert <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> enthält.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.TrueString" /> ist, oder <see langword="false" />, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.FalseString" /> oder <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist ungleich <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung eines logischen Werts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in seine boolesche Entsprechung.</summary>
      <param name="value">Eine Zeichenfolge, die den Wert <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" /> enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.TrueString" /> ist, oder <see langword="false" />, wenn <paramref name="value" /> gleich <see cref="F:System.Boolean.FalseString" /> oder <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist ungleich <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in einen entsprechenden booleschen Wert.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> nicht 0 (null) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Byte)">
      <summary>Gibt die angegebene 8-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die größer als <see cref="F:System.Byte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>
        <paramref name="value" />, auf die nächste 8-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" /> oder kleiner als <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 8-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" /> oder kleiner als <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist nicht das Eigenschaftenformat für einen <see cref="T:System.Byte" />-Wert auf.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.  

oder - 
Die Konvertierung von <paramref name="value" /> in den <see cref="T:System.Byte" />-Typ wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist nicht das Eigenschaftenformat für einen <see cref="T:System.Byte" />-Wert auf.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.  

oder - 
Die Konvertierung von <paramref name="value" /> in den <see cref="T:System.Byte" />-Typ wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 8-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" /> oder kleiner als <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.Int32)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="fromBase">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.  

oder - 
<paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist. Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, der eine Zahl ohne Vorzeichen angibt, die die Basis 10 hat, hat ein negatives Vorzeichen als Präfix.  

oder - 
<paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Boolean)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.Char)">
      <summary>Gibt das angegebene Unicode-Zeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Das zurückzugebende Unicode-Zeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Decimal)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Double)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" /> oder größer als <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" /> oder größer als <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in ein Unicode-Zeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <returns>Ein Unicode-Zeichen, das dem Wert entspricht, oder <see cref="F:System.Char.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist eine NULL-Zeichenfolge.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung von <paramref name="value" /> in <see cref="T:System.Char" /> wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" /> oder größer als <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Ein Unicode-Zeichen, das dem <paramref name="value" /> entspricht, oder <see cref="F:System.Char.MinValue" /> wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist eine NULL-Zeichenfolge.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung von <paramref name="value" /> in <see cref="T:System.Char" /> wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" /> oder größer als <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als <see cref="F:System.Char.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Single)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.String)">
      <summary>Konvertiert das erste Zeichen einer angegebenen Zeichenfolge in ein Unicode-Zeichen.</summary>
      <param name="value">Eine Zeichenfolge mit der Länge 1.</param>
      <returns>Ein Unicode-Zeichen, das dem einzigen Zeichen in <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Die Länge von <paramref name="value" /> ist nicht 1.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
      <summary>Konvertiert das erste Zeichen einer angegebenen Zeichenfolge unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein Unicode-Zeichen.</summary>
      <param name="value">Eine Zeichenfolge mit der Länge 1, oder <see langword="null" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das dem einzigen Zeichen in <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Die Länge von <paramref name="value" /> ist nicht 1.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in das entsprechende Unicode-Zeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Ein Unicode-Zeichen, das <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Boolean)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Byte)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Char)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.DateTime)">
      <summary>Gibt das angegebene <see cref="T:System.DateTime" /> Objekt zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Ein Datums- und Uhrzeitwert.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Decimal)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende Zahl.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Double)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der zu konvertierende Gleitkommawert mit doppelter Genauigkeit.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int16)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int32)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int64)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in ein <see cref="T:System.DateTime" />-Objekt.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Die Datums- und Uhrzeitentsprechung des Werts von <paramref name="value" /> oder eine Datums- und Uhrzeitentsprechung von <see cref="F:System.DateTime.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist kein gültiger Datums- und Uhrzeitwert.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein <see cref="T:System.DateTime" />-Objekt.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Die Datums- und Uhrzeitentsprechung des Werts von <paramref name="value" /> oder die Datums- und Uhrzeitentsprechung von <see cref="F:System.DateTime.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist kein gültiger Datums- und Uhrzeitwert.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.SByte)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Single)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der zu konvertierende Gleitkommawert mit einfacher Genauigkeit.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung eines Datums und einer Uhrzeit in einen entsprechenden Datums- und Uhrzeitwert.</summary>
      <param name="value">Die Zeichenfolgendarstellung eines Datums- und Uhrzeitwerts.</param>
      <returns>Die Datums- und Uhrzeitentsprechung des Werts von <paramref name="value" /> oder die Datums- und Uhrzeitentsprechung von <see cref="F:System.DateTime.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist keine ordnungsgemäß formatierte Datums- und Zeitzeichenfolge.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in ein entsprechendes Datum und eine entsprechende Uhrzeit.</summary>
      <param name="value">Eine Zeichenfolge, die eine zu konvertierende Datums- und Zeitangabe enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Die Datums- und Uhrzeitentsprechung des Werts von <paramref name="value" /> oder die Datums- und Uhrzeitentsprechung von <see cref="F:System.DateTime.MinValue" />, wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist keine ordnungsgemäß formatierte Datums- und Zeitzeichenfolge.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt16)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt32)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt64)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende Dezimalzahl.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Die Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Char)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Decimal)">
      <summary>Gibt die angegebene Dezimalzahl zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Eine Dezimalzahl.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Decimal.MaxValue" /> oder kleiner als <see cref="F:System.Decimal.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Decimal" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Decimal" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Decimal.MaxValue" /> oder kleiner als <see cref="F:System.Decimal.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</param>
      <returns>Eine Dezimalzahl, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Dezimalzahl, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Die Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Dezimalzahl.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Dezimalzahl, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Die Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Char)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Double)">
      <summary>Gibt die angegebene Gleitkommazahl mit doppelter Genauigkeit zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Double" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Double" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Die 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>
        <paramref name="value" />, auf die nächste 16-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 16-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int16)">
      <summary>Gibt die angegebene 16-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Die 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Int16" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format für einen <see cref="T:System.Int16" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 16-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.Int32)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="fromBase">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.  

oder - 
<paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist. Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.  

oder - 
<paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>
        <paramref name="value" />, auf die nächste 32-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" /> oder kleiner als <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 32-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" /> oder kleiner als <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int32)">
      <summary>Gibt die angegebene 32-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" /> oder kleiner als <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 32-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" /> oder kleiner als <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.Int32)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="fromBase">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.  

oder - 
<paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist. Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.  

oder - 
<paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>
        <paramref name="value" />, auf die nächste 64-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" /> oder kleiner als <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 64-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" /> oder kleiner als <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int64)">
      <summary>Gibt die angegebene 64-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Eine 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 64-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" /> oder kleiner als <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.Int32)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="fromBase">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.  

oder - 
<paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist. Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.  

oder - 
<paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToSByte(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>
        <paramref name="value" />, auf die nächste 8-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 8-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.SByte)">
      <summary>Gibt die angegebene 8-Bit-Ganzzahl mit Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToSByte(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 8-Bit-Ganzzahl mit Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn der Wert gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.Int32)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="fromBase">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.  

oder - 
<paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist. Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl mit Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.  

oder - 
<paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 8-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Char)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.  
 <paramref name="value" /> wird auf den nächsten Wert gerundet. Der Wert 2,345 wird z. B. bei einer Rundung auf zwei Dezimalziffern zu 2,34, und der Wert 2,355 wird zu 2,36.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.  
 <paramref name="value" /> wird auf den nächsten Wert gerundet. Der Wert 2,345 wird z. B. bei einer Rundung auf zwei Dezimalziffern zu 2,34, und der Wert 2,355 wird zu 2,36.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> implementiert nicht <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 8-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Single)">
      <summary>Gibt die angegebene Gleitkommazahl mit einfacher Genauigkeit zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> stellt keine Zahl in einem gültigen Format dar.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Gleitkommazahl mit einfacher Genauigkeit, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <param name="provider">Eine Instanz eines Objekts. Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.Int32)">
      <summary>Konvertiert den Wert einer 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <param name="toBase">Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> ist nicht 2, 8, 10 oder 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime)">
      <summary>Konvertiert den Wert der angegebenen <see cref="T:System.DateTime" /> in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen <see cref="T:System.DateTime" /> unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.Int32)">
      <summary>Konvertiert den Wert einer 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <param name="toBase">Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> ist nicht 2, 8, 10 oder 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.Int32)">
      <summary>Konvertiert den Wert einer 32-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <param name="toBase">Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> ist nicht 2, 8, 10 oder 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.Int32)">
      <summary>Konvertiert den Wert einer 64-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung in einer angegebenen Basis.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <param name="toBase">Die Basis des Rückgabewerts, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Die Zeichenfolgendarstellung von <paramref name="value" /> zur Basis <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> ist nicht 2, 8, 10 oder 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Ein Objekt, das den zu konvertierenden Wert angibt, oder <see langword="null" />.</param>
      <returns>Die Zeichenfolgendarstellung von <paramref name="value" />, oder <see cref="F:System.String.Empty" />, wenn <paramref name="value" /><see langword="null" /> ist.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Ein Objekt, das den zu konvertierenden Wert angibt, oder <see langword="null" />.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Die Zeichenfolgendarstellung von <paramref name="value" /> oder <see cref="F:System.String.Empty" />, wenn <paramref name="value" /> ein Objekt ist, dessen Wert <see langword="null" /> beträgt. Wenn <paramref name="value" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.String)">
      <summary>Gibt die angegebene Zeichenfolgeninstanz zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende Zeichenfolge.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.String,System.IFormatProvider)">
      <summary>Gibt die angegebene Zeichenfolgeninstanz zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende Zeichenfolge.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt. Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine Zeichenfolgendarstellung von <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Die 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>
        <paramref name="value" />, auf die nächste 16-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 16-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 16-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in die entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.Int32)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="fromBase">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.  

oder - 
<paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist. Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.  

oder - 
<paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt16)">
      <summary>Gibt die angegebene 16-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 16-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 16-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>
        <paramref name="value" />, auf die nächste 32-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 32-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 32-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.Int32)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="fromBase">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.  

oder - 
<paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist. Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.  

oder - 
<paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt32)">
      <summary>Gibt die angegebene 32-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 32-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 32-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist größer als <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Boolean)">
      <summary>Konvertiert den angegebenen booleschen Wert in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Der zu konvertierende boolesche Wert.</param>
      <returns>Die Zahl 1, wenn <paramref name="value" /><see langword="true" /> ist, andernfalls 0 (null).</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Byte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Char)">
      <summary>Konvertiert den Wert des angegebenen Unicode-Zeichens in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Das zu konvertierende Unicode-Zeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.DateTime)">
      <summary>Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.InvalidCastException" /> ausgelöst.</summary>
      <param name="value">Der Datums- und Uhrzeitwert, der konvertiert werden soll.</param>
      <returns>Diese Konvertierung wird nicht unterstützt. Es wird kein Wert zurückgegeben.</returns>
      <exception cref="T:System.InvalidCastException">Diese Konvertierung wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Decimal)">
      <summary>Konvertiert den Wert der angegebenen Dezimalzahl in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Dezimalzahl.</param>
      <returns>
        <paramref name="value" />, auf die nächste 64-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Double)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit doppelter Genauigkeit in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 64-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl mit Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int64)">
      <summary>Konvertiert den Wert der angegebenen 64-Bit-Ganzzahl mit Vorzeichen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 64-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert, oder <see langword="null" />.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
      <summary>Konvertiert den Wert des angegebenen Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Ein Objekt, das die <see cref="T:System.IConvertible" />-Schnittstelle implementiert.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> weist kein geeignetes Format auf.</exception>
      <exception cref="T:System.InvalidCastException">Die <see cref="T:System.IConvertible" />-Schnittstelle wird von <paramref name="value" /> nicht implementiert.  

oder - 
Die Konvertierung wird nicht unterstützt.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.SByte)">
      <summary>Konvertiert den Wert der angegebenen 8-Bit-Ganzzahl mit Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 8-Bit-Ganzzahl mit Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als Null.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Single)">
      <summary>Konvertiert den Wert der angegebenen Gleitkommazahl mit einfacher Genauigkeit in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>
        <paramref name="value" />, auf die nächste 64-Bit-Ganzzahl ohne Vorzeichen gerundet. Wenn <paramref name="value" /> genau zwischen zwei ganzen Zahlen liegt, wird die gerade Zahl zurückgegeben (d. h. 4,5 wird in 4 und 5,5 in 6 konvertiert).</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist kleiner als 0 (null) oder größer als <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
      <summary>Konvertiert die angegebene Zeichenfolgendarstellung einer Zahl unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="provider">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> besteht nicht aus einem optionalen Vorzeichen und einer Folge von Ziffern (0 bis 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.Int32)">
      <summary>Konvertiert die Zeichenfolgendarstellung einer Zahl in einer angegebenen Basis in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</param>
      <param name="fromBase">Die Basis der Zahl in <paramref name="value" />, die 2, 8, 10 oder 16 sein muss.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die der Zahl in <paramref name="value" /> entspricht, oder 0 (null), wenn <paramref name="value" /> gleich <see langword="null" /> ist.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> ist nicht 2, 8, 10 oder 16.  

oder - 
<paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> enthält ein Zeichen, das in der von <paramref name="fromBase" /> angegebenen Basis keine gültige Ziffer ist. Die Ausnahmemeldung gibt an, dass keine zu konvertierenden Ziffern vorhanden sind, wenn das erste Zeichen in <paramref name="value" /> ungültig ist. Andernfalls gibt die Meldung an, dass <paramref name="value" /> ungültige nachfolgende Zeichen enthält.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, der eine nicht zur Basis 10 gehörende Zahl ohne Vorzeichen darstellt, weist ein negatives Vorzeichen als Präfix auf.  

oder - 
<paramref name="value" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt16)">
      <summary>Konvertiert den Wert der angegebenen 16-Bit-Ganzzahl ohne Vorzeichen in die entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 16-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt32)">
      <summary>Konvertiert den Wert der angegebenen 32-Bit-Ganzzahl ohne Vorzeichen in eine entsprechende 64-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="value">Die zu konvertierende 32-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>Eine 64-Bit-Ganzzahl ohne Vorzeichen, die <paramref name="value" /> entspricht.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt64)">
      <summary>Gibt die angegebene 64-Bit-Ganzzahl ohne Vorzeichen zurück. Es wird keine wirkliche Konvertierung durchgeführt.</summary>
      <param name="value">Die zurückzugebende 64-Bit-Ganzzahl ohne Vorzeichen.</param>
      <returns>
        <paramref name="value" /> wird unverändert zurückgegeben.</returns>
    </member>
    <member name="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)">
      <param name="chars" />
      <param name="bytes" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)">
      <param name="s" />
      <param name="bytes" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)">
      <param name="bytes" />
      <param name="chars" />
      <param name="charsWritten" />
      <param name="options" />
    </member>
    <member name="T:System.Diagnostics.Stopwatch">
      <summary>Stellt eine Gruppe von Methoden und Eigenschaften bereit, mit denen die verstrichene Zeit exakt gemessen werden kann.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.Stopwatch" />-Klasse.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.Elapsed">
      <summary>Ruft die gesamte verstrichene Zeit ab, die von der aktuellen Instanz gemessen wurde.</summary>
      <returns>Eine schreibgeschützte <see cref="T:System.TimeSpan" />, die die gesamte, von der aktuellen Instanz gemessene verstrichene Zeit darstellt.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
      <summary>Ruft die gesamte verstrichene Zeit in Millisekunden ab, die von der aktuellen Instanz gemessen wurde.</summary>
      <returns>Eine schreibgeschützte Long-Integer-Zahl, die die Gesamtanzahl der von der aktuellen Instanz gemessenen Millisekunden angibt.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedTicks">
      <summary>Ruft die gesamte verstrichene Zeit, die von der aktuellen Instanz gemessen wurde, in Zeitgeberintervallen (Ticks) ab.</summary>
      <returns>Eine schreibgeschützte Long-Integer-Zahl, die die Gesamtanzahl der von der aktuellen Instanz gemessenen Zeitgeberintervalle angibt.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.Frequency">
      <summary>Ruft die Frequenz des Zeitgebers als Anzahl der Ticks pro Sekunde ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetTimestamp">
      <summary>Ruft die aktuelle Anzahl der Ticks im Zeitgebermechanismus ab.</summary>
      <returns>Eine Long-Integer-Zahl, die den Tickzählerwert des zugrunde liegenden Zeitgebermechanismus angibt.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.IsHighResolution">
      <summary>Gibt an, ob der Zeitgeber auf einem hochauflösenden Leistungsindikator basiert. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.IsRunning">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Diagnostics.Stopwatch" />-Zeitgeber ausgeführt wird.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Diagnostics.Stopwatch" />-Instanz derzeit ausgeführt wird und die verstrichene Zeit für ein Intervall misst, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Reset">
      <summary>Beendet die Zeitintervallmessung und setzt die verstrichene Zeit auf 0 (null) zurück.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Restart">
      <summary>Beendet die Zeitintervallmessung, setzt die verstrichene Zeit auf 0 (null) zurück, und startet die Messung der verstrichenen Zeit.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Start">
      <summary>Startet den Messvorgang der verstrichenen Zeit für ein Intervall oder nimmt diesen wieder auf.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.StartNew">
      <summary>Initialisiert eine neue <see cref="T:System.Diagnostics.Stopwatch" />-Instanz, legt die Eigenschaft der verstrichenen Zeit auf 0 (null) fest und beginnt mit dem Messen der verstrichenen Zeit.</summary>
      <returns>Eine <see cref="T:System.Diagnostics.Stopwatch" />, die gerade mit dem Messen der verstrichenen Zeit begonnen hat.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Stop">
      <summary>Beendet das Messen der verstrichenen Zeit für ein Intervall.</summary>
    </member>
    <member name="T:System.Environment">
      <summary>Stellt Informationen und Veränderungsmöglichkeiten für die aktuelle Umgebung und Plattform zur Verfügung. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="P:System.Environment.CommandLine">
      <summary>Ruft die Befehlszeile für diesen Prozess ab.</summary>
      <returns>Eine Zeichenfolge mit den Befehlszeilenargumenten.</returns>
    </member>
    <member name="P:System.Environment.CurrentDirectory">
      <summary>Ruft den vollqualifizierten Pfad des aktuellen Arbeitsverzeichnisses ab oder legt diesen fest.</summary>
      <returns>Eine Zeichenfolge mit einem Verzeichnispfad.</returns>
      <exception cref="T:System.ArgumentException">Es wurde versucht, auf eine leere Zeichenfolge ("") festzulegen.</exception>
      <exception cref="T:System.ArgumentNullException">Es wurde versucht, auf <see langword="null." /> fetszulegen.</exception>
      <exception cref="T:System.IO.IOException">E/A-Fehler</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Es wurde versucht, auf einen lokalen Pfad festzulegen, der nicht gefunden werden kann.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer hat nicht die entsprechende Berechtigung.</exception>
    </member>
    <member name="P:System.Environment.CurrentManagedThreadId">
      <summary>Ruft einen eindeutigen Bezeichner für den aktuellen verwalteten Thread ab.</summary>
      <returns>Eine Ganzzahl, die einen eindeutigen Bezeichner für diesen verwalteten Thread darstellt.</returns>
    </member>
    <member name="M:System.Environment.Exit(System.Int32)">
      <summary>Beendet den Prozess und gibt einen Exitcode an das Betriebssystem zurück.</summary>
      <param name="exitCode">Der an das Betriebssystem zurückzugebende Exitcode. Verwenden Sie 0 (null), um anzugeben, dass der Prozess erfolgreich abgeschlossen wurde.</param>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über ausreichende Sicherheitsberechtigungen zum Ausführen dieser Funktion.</exception>
    </member>
    <member name="P:System.Environment.ExitCode">
      <summary>Ruft den Exitcode des Prozesses ab oder legt diesen fest.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die den Exitcode enthält. Der Standardwert ist 0 (null), was angibt, dass der Prozess erfolgreich abgeschlossen wurde.</returns>
    </member>
    <member name="M:System.Environment.ExpandEnvironmentVariables(System.String)">
      <summary>Ersetzt den Namen aller Umgebungsvariablen, die in die angegebene Zeichenfolge eingebettet sind, durch die Zeichenfolgenentsprechung für den Wert der Variablen und gibt anschließend das Ergebnis als Zeichenfolge zurück.</summary>
      <param name="name">Eine Zeichenfolge, die die Namen von 0 (null) oder mehr Umgebungsvariablen enthält. Jede Umgebungsvariable wird mit dem Prozentzeichen (%) angegeben.</param>
      <returns>Eine Zeichenfolge, bei der alle Umgebungsvariablen durch ihren Wert ersetzt wurden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Environment.FailFast(System.String)">
      <summary>Beendet einen Prozess sofort, nachdem eine Meldung in das Windows-Anwendungsereignisprotokoll geschrieben wurde, und schließt dann die Meldung in Fehlerberichte an Microsoft ein.</summary>
      <param name="message">Eine Meldung, die erklärt, warum der Prozess beendet wurde, oder <see langword="null" />, wenn keine Erklärung gegeben wird.</param>
    </member>
    <member name="M:System.Environment.FailFast(System.String,System.Exception)">
      <summary>Beendet einen Prozess sofort, nachdem eine Meldung in das Windows-Anwendungsereignisprotokoll geschrieben wurde, und schließt dann die Meldung und Ausnahmeinformationen in Fehlerberichte an Microsoft ein.</summary>
      <param name="message">Eine Meldung, die erklärt, warum der Prozess beendet wurde, oder <see langword="null" />, wenn keine Erklärung gegeben wird.</param>
      <param name="exception">Eine Ausnahme, die den Fehler darstellt, der die Beendigung verursacht hat. Dies ist in der Regel die Ausnahme in einem <see langword="catch" />-Block.</param>
    </member>
    <member name="M:System.Environment.GetCommandLineArgs">
      <summary>Gibt ein Zeichenfolgenarray mit den Befehlszeilenargumenten für den aktuellen Prozess zurück.</summary>
      <returns>Ein Array von Zeichenfolgen, in dem jedes Element ein Befehlszeilenargument enthält. Das erste Element ist der Name der ausführbaren Datei. Falls nachfolgende Elemente vorhanden sind, enthalten sie die restlichen Befehlszeilenargumente.</returns>
      <exception cref="T:System.NotSupportedException">Das System unterstützt keine Befehlszeilenargumente.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String)">
      <summary>Ruft den Wert einer Umgebungsvariablen vom aktuellen Prozess ab.</summary>
      <param name="variable">Der Name der Umgebungsvariablen.</param>
      <returns>Der Wert der von <paramref name="variable" /> angegebenen Umgebungsvariablen oder <see langword="null" />, wenn die Umgebungsvariable nicht gefunden wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer hat nicht die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
      <summary>Ruft den Wert einer Umgebungsvariablen vom aktuellen Prozess oder aus dem Registrierungsschlüssel des Windows-Betriebssystems für den aktuellen Benutzer oder den lokalen Computer ab.</summary>
      <param name="variable">Der Name einer Umgebungsvariablen.</param>
      <param name="target">Einer der <see cref="T:System.EnvironmentVariableTarget" />-Werte. Nur <see cref="F:System.EnvironmentVariableTarget.Process" /> wird in .NET Core bei der Ausführung auf Unix-basierten Systemen unterstützt.</param>
      <returns>Der Wert der von den Parametern <paramref name="variable" /> und <paramref name="target" /> angegebenen Umgebungsvariablen oder <see langword="null" />, wenn die Umgebungsvariable nicht gefunden wird.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> ist kein gültiger <see cref="T:System.EnvironmentVariableTarget" /> -Wert.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer hat nicht die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables">
      <summary>Ruft alle Namen und Werte der Umgebungsvariablen vom aktuellen Prozess ab.</summary>
      <returns>Ein Wörterbuch, das die Namen und Werte aller Umgebungsvariablen enthält, andernfalls ein leeres Wörterbuch, wenn keine Umgebungsvariablen gefunden werden.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer hat nicht die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      <exception cref="T:System.OutOfMemoryException">Im Puffer ist nicht genügend Arbeitsspeicher.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
      <summary>Ruft die Namen und Werte aller Umgebungsvariablen vom aktuellen Prozess oder aus dem Registrierungsschlüssel des Windows-Betriebssystems für den aktuellen Benutzer oder den lokalen Computer ab.</summary>
      <param name="target">Einer der <see cref="T:System.EnvironmentVariableTarget" />-Werte. Nur  wird in .NET Core bei der Ausführung auf Unix-basierten Systemen unterstützt.</param>
      <returns>Ein Wörterbuch, das die Namen und Werte aller Umgebungsvariablen aus der durch den <paramref name="target" />-Parameter angegebenen Quelle enthält, andernfalls ein leeres Wörterbuch, wenn keine Umgebungsvariablen gefunden werden.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer hat für den angegebenen Wert von <paramref name="target" /> nicht die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> enthält einen unzulässigen Wert.</exception>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
      <summary>Ruft den Pfad des durch die angegebene Enumeration bezeichneten besonderen Systemordners ab.</summary>
      <param name="folder">Einer der Enumerationswerte, die eine besonderen Systemordner bezeichnen.</param>
      <returns>Der Pfad zum angegebenen besonderen Systemordner, sofern dieser auf dem Computer physisch vorhanden ist, andernfalls eine leere Zeichenfolge ("").  
 Ein Ordner ist physisch nicht vorhanden, wenn er nicht vom Betriebssystem erstellt wurde, wenn der vorhandene Ordner gelöscht wurde oder wenn der Ordner ein virtuelles Verzeichnis ist, z. B. Arbeitsplatz, das keinem physischen Pfad entspricht.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> ist kein Member von <see cref="T:System.Environment.SpecialFolder" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Die aktuelle Plattform wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
      <summary>Ruft den Pfad zum besonderen Systemordner ab, der von der angegebenen Enumeration bezeichnet wird, und verwendet eine angegebene Option zum Zugreifen auf besondere Ordner.</summary>
      <param name="folder">Einer der Enumerationswerte, die einen besonderen Systemordner bezeichnen.</param>
      <param name="option">Einer der Enumerationswerte, die Optionen zum Zugreifen auf einen besonderen Ordner angeben.</param>
      <returns>Der Pfad zum angegebenen besonderen Systemordner, sofern dieser auf dem Computer physisch vorhanden ist, andernfalls eine leere Zeichenfolge ("").  
 Ein Ordner ist physisch nicht vorhanden, wenn er nicht vom Betriebssystem erstellt wurde, wenn der vorhandene Ordner gelöscht wurde oder wenn der Ordner ein virtuelles Verzeichnis ist, z. B. Arbeitsplatz, das keinem physischen Pfad entspricht.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> ist kein Member von <see cref="T:System.Environment.SpecialFolder" />.

oder -

<paramref name="options" /> ist kein Member von <see cref="T:System.Environment.SpecialFolderOption" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Die aktuelle Plattform wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Environment.GetLogicalDrives">
      <summary>Gibt ein Zeichenfolgenarray mit den Namen der logischen Laufwerke des aktuellen Computers zurück.</summary>
      <returns>Ein Array von Zeichenfolgen, in dem jedes Element den Namen eines logischen Laufwerks enthält. Wenn z.B. die Festplatte das erste logische Laufwerk eines Computers ist, lautet das erste zurückgegebene Element "C:\".</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="P:System.Environment.HasShutdownStarted">
      <summary>Ruft einen Wert ab, der angibt, ob die derzeitige Anwendungsdomäne entladen wird oder die Common Language Runtime (CLR) heruntergefahren wird.</summary>
      <returns>
        <see langword="true" />, wenn die aktuelle Anwendungsdomäne entladen oder die CLR heruntergefahren wird. <see langword="false" />andernfalls.</returns>
    </member>
    <member name="P:System.Environment.Is64BitOperatingSystem">
      <summary>Bestimmt, ob das aktuelle Betriebssystem ein 64-Bit-Betriebssystem ist.</summary>
      <returns>
        <see langword="true" /> , wenn das aktuelle Betriebssystem ein 64-Bit-Betriebssystem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.Is64BitProcess">
      <summary>Bestimmt, ob der aktuelle Prozess ein 64-Bit-Prozess ist.</summary>
      <returns>
        <see langword="true" /> , wenn der aktuelle Prozess ein 64-Bit-Prozess ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.MachineName">
      <summary>Ruft den NetBIOS-Namen dieses lokalen Computers ab.</summary>
      <returns>Eine Zeichenfolge mit dem Namen dieses Computers.</returns>
      <exception cref="T:System.InvalidOperationException">Der Name dieses Computers kann nicht abgerufen werden.</exception>
    </member>
    <member name="P:System.Environment.NewLine">
      <summary>Ruft die für diese Umgebung definierte Zeichenfolge für einen Zeilenumbruch ab.</summary>
      <returns>Eine Zeichenfolge für Nicht-Unix-Plattformen, die "\r\n" enthält, oder eine Zeichenfolge für Unix-Plattformen, die "\n" enthält.</returns>
    </member>
    <member name="P:System.Environment.OSVersion">
      <summary>Ruft ein <see cref="T:System.OperatingSystem" />-Objekt ab, das den Bezeichner und die Versionsnummer der aktuellen Plattform enthält.</summary>
      <returns>Ein Objekt, das den Bezeichner und die Versionsnummer der Plattform enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft war nicht in der Lage, die Systemversion abzurufen.  

oder - 
Der abgerufene Plattformbezeichner ist kein Mitglied von <see cref="T:System.PlatformID" />.</exception>
    </member>
    <member name="P:System.Environment.ProcessorCount">
      <summary>Ruft die Anzahl von Prozessoren im aktuellen Computer ab.</summary>
      <returns>Die 32-Bit-Ganzzahl mit Vorzeichen, die die Anzahl von Prozessoren im aktuellen Computer angibt. Es ist kein Standardwert vorhanden. Wenn der aktuelle Computer mehrere Prozessorgruppen enthält, gibt diese Eigenschaft die Anzahl logischer Prozessoren zurück, die für die Common Language Runtime (CLR) verfügbar sind.</returns>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
      <summary>Erstellt, ändert oder löscht eine im aktuellen Prozess gespeicherte Umgebungsvariable.</summary>
      <param name="variable">Der Name einer Umgebungsvariablen.</param>
      <param name="value">Ein Wert, der <paramref name="variable" /> zugewiesen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> enthält eine leere Zeichenfolge („“), ein anfängliches Hexadezimalzeichen 0 (0x00) oder ein Gleichheitszeichen ("=").  

oder - 
Die Länge von <paramref name="variable" /> oder <paramref name="value" /> ist größer gleich 32.767 Zeichen.  

oder - 
Während der Ausführung dieses Vorgangs ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer hat nicht die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
      <summary>Erstellt, ändert oder löscht eine Umgebungsvariable, die im aktuellen Prozess oder im Registrierungsschlüssel des für den aktuellen Benutzer oder den lokalen Computer reservierten Windows-Betriebssystems gespeichert ist.</summary>
      <param name="variable">Der Name einer Umgebungsvariablen.</param>
      <param name="value">Ein Wert, der <paramref name="variable" /> zugewiesen werden soll.</param>
      <param name="target">Einer der Enumerationswerte, der den Standort der Umgebungsvariablen angibt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> enthält eine leere Zeichenfolge („“), ein anfängliches Hexadezimalzeichen 0 (0x00) oder ein Gleichheitszeichen ("=").  

oder - 
Die Länge von <paramref name="variable" /> ist größer gleich 32.767 Zeichen.  

oder - 
<paramref name="target" /> ist kein Member der <see cref="T:System.EnvironmentVariableTarget" /> -Enumeration.  

oder - 
<paramref name="target" /> ist gleich <see cref="F:System.EnvironmentVariableTarget.Machine" /> oder gleich <see cref="F:System.EnvironmentVariableTarget.User" />, und die Länge von <paramref name="variable" /> ist größer gleich 255.  

oder - 
<paramref name="target" /> ist gleich <see cref="F:System.EnvironmentVariableTarget.Process" /> , und die Länge von <paramref name="value" /> ist größer gleich 32,767.  

oder - 
Während der Ausführung dieses Vorgangs ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer hat nicht die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
    </member>
    <member name="T:System.Environment.SpecialFolder">
      <summary>Gibt Enumerationskonstanten an, mit denen Verzeichnispfade für besondere Systemordner abgerufen werden.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.AdminTools">
      <summary>Das Dateisystemverzeichnis, das zum Speichern von Verwaltungstools für einen einzelnen Benutzer verwendet wird. Die Microsoft Management Console (MMC) speichert angepasste Konsolen in diesem Verzeichnis, das für den Benutzern von überall aus zugänglich ist. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ApplicationData">
      <summary>Das Verzeichnis, das als allgemeines Repository für programmspezifische Daten des aktuellen Roamingbenutzers verwendet wird. Ein Roamingbenutzer arbeitet auf mehreren Computern in einem Netzwerk. Das Profil eines Roamingbenutzers wird auf einem Server im Netzwerk gespeichert und bei Anmeldung des Benutzers auf ein System geladen.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CDBurning">
      <summary>Das Dateisystemverzeichnis, das als Stagingbereich für Dateien fungiert, die auf eine CD geschrieben werden sollen. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonAdminTools">
      <summary>Das Dateisystemverzeichnis, das Verwaltungstools für alle Benutzer des Computers enthält. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonApplicationData">
      <summary>Das Verzeichnis, das als allgemeines Repository für programmspezifische Daten verwendet wird, die von allen Benutzern verwendet werden.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDesktopDirectory">
      <summary>Das Dateisystemverzeichnis, das Dateien und Ordner enthält, die auf dem Desktop für alle Benutzer angezeigt werden. Dieser besondere Ordner ist nur für Windows NT-Systeme gültig. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDocuments">
      <summary>Das Dateisystemverzeichnis, das Dokumente enthält, die von allen Benutzern gemeinsam genutzt werden. Dieser besondere Ordner ist für Windows NT-Systeme, Windows 95- und Windows 98-Systeme mit installierter "Shfolder.dll" gültig. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonMusic">
      <summary>Das Dateisystemverzeichnis, das als Repository für Musikdateien dient, die von allen Benutzern gemeinsam genutzt werden. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonOemLinks">
      <summary>Dieser Wert wird in Windows Vista für die Abwärtskompatibilität erkannt, aber der besondere Ordner selbst wird nicht mehr verwendet. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPictures">
      <summary>Das Dateisystemverzeichnis, das als Repository für Bilddateien dient, die von allen Benutzern gemeinsam genutzt werden. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFiles">
      <summary>Das Verzeichnis für Komponenten, die von mehreren Anwendungen gemeinsam genutzt werden.  
Um das allgemeine Dateiverzeichnis für x86-Programme auf einem nicht x86-System abzurufen, verwenden Sie den <see cref="F:System.Environment.SpecialFolder.ProgramFilesX86" />-Member.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFilesX86">
      <summary>Der Ordner Programme. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPrograms">
      <summary>Ein Ordner für Komponenten, die von mehreren Anwendungen gemeinsam verwendet werden. Dieser besondere Ordner nur für Windows NT-, Windows 2000- und Windows XP-Systeme gültig. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartMenu">
      <summary>Das Dateisystemverzeichnis, das die Programme und Ordner enthält, die im Menü Start für alle Benutzer angezeigt werden. Dieser besondere Ordner ist nur für Windows NT-Systeme gültig. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartup">
      <summary>Das Dateisystemverzeichnis, das die Programme enthält, die im Ordner Startup für alle Benutzer angezeigt werden. Dieser besondere Ordner ist nur für Windows NT-Systeme gültig. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonTemplates">
      <summary>Das Dateisystemverzeichnis, das die für alle Benutzer verfügbaren Vorlagen enthält. Dieser besondere Ordner ist nur für Windows NT-Systeme gültig.  Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonVideos">
      <summary>Das Dateisystemverzeichnis, das als Repository für Musikdateien dient, die von allen Benutzern gemeinsam genutzt werden. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Cookies">
      <summary>Das Verzeichnis, das als allgemeines Repository für Internetcookies verwendet wird.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Desktop">
      <summary>Der logische Desktop und nicht der physische Speicherort im Dateisystem.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.DesktopDirectory">
      <summary>Das Verzeichnis, das für das physische Speichern von Dateiobjekten auf dem Desktop verwendet wird. Verwechseln Sie dieses Verzeichnis nicht mit dem Desktopordner selbst, bei dem es sich um einen virtuellen Ordner handelt.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Favorites">
      <summary>Das Verzeichnis, das als allgemeines Repository für die Favoriten des Benutzers verwendet wird.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Fonts">
      <summary>Ein virtueller Ordner, der Schriftarten enthält. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.History">
      <summary>Das Verzeichnis, das als allgemeines Repository für die Internetverlaufselemente verwendet wird.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.InternetCache">
      <summary>Das Verzeichnis, das als allgemeines Repository für temporäre Internetdateien verwendet wird.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalApplicationData">
      <summary>Das Verzeichnis, das als allgemeines Repository für programmspezifische Daten verwendet wird, die von einem aktuellen Benutzer verwendet werden, der kein Roamingbenutzer ist.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalizedResources">
      <summary>Das Dateisystemverzeichnis, das lokalisierte Ressourcendaten enthält. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyComputer">
      <summary>Der Ordner Arbeitsplatz. Bei Übergabe an die <see langword="Environment.GetFolderPath" />-Methode ergibt der <see langword="MyComputer" />-Enumerationsmember immer die leere Zeichenfolge (""), weil für den Ordner „Arbeitsplatz“ kein Pfad definiert ist.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyDocuments">
      <summary>Der Ordner Eigene Dateien. Dieser Member entspricht <see cref="F:System.Environment.SpecialFolder.Personal" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyMusic">
      <summary>Der Ordner Eigene Musik.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyPictures">
      <summary>Der Ordner Eigene Bilder.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyVideos">
      <summary>Das Dateisystemverzeichnis, das als Repository für Videos dient, die zu einem Benutzer gehören.  Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.NetworkShortcuts">
      <summary>Ein Dateisystemverzeichnis, das die Linkobjekte enthält, die im virtuellen Ordner Netzwerkumgebung vorhanden sein können. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Personal">
      <summary>Das Verzeichnis, das als allgemeines Repository für Dokumente verwendet wird.  Dieser Member entspricht <see cref="F:System.Environment.SpecialFolder.MyDocuments" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.PrinterShortcuts">
      <summary>Das Dateisystemverzeichnis, das die Linkobjekte enthält, die im virtuellen Ordner Drucker vorhanden sein können. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFiles">
      <summary>Das Verzeichnis für Programmdateien.  
Auf einem nicht x86-System gibt die Übergabe von <see cref="F:System.Environment.SpecialFolder.ProgramFiles" /> an die <see cref="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)" />-Methode den Pfad für nicht x86-Programme zurück. Um das Dateiverzeichnis für x86 Programme auf einem nicht x86-System abzurufen, verwenden Sie den <see cref="F:System.Environment.SpecialFolder.ProgramFilesX86" />-Member.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFilesX86">
      <summary>Der x86-Ordner Programme. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Programs">
      <summary>Das Verzeichnis, das die Programmgruppen des Benutzers enthält.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Recent">
      <summary>Das Verzeichnis, das die vom Benutzer zuletzt verwendeten Dokumente enthält.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Resources">
      <summary>Das Dateisystemverzeichnis, das Ressourcendaten enthält. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SendTo">
      <summary>Das Verzeichnis, das die Elemente für das Menü "Senden an" enthält.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.StartMenu">
      <summary>Das Verzeichnis, das die Elemente für das Menü "Start" enthält.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Startup">
      <summary>Das Verzeichnis, das der Programmgruppe "Autostart" des Benutzers entspricht. Das System startet diese Programme, sobald ein Benutzer sich anmeldet oder Windows startet.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.System">
      <summary>Das Verzeichnis "System".</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SystemX86">
      <summary>Der Windows-Ordner System. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Templates">
      <summary>Das Verzeichnis, das als allgemeines Repository für Dokumentvorlagen verwendet wird.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.UserProfile">
      <summary>Der Profilordner des Benutzers. Anwendungen sollten keine Dateien oder Ordner auf dieser Ebene erstellen, sie sollten ihre Daten unter den Speicherorten ablegen, auf die von <see cref="F:System.Environment.SpecialFolder.ApplicationData" /> verwiesen wird. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Windows">
      <summary>Das Windows-Verzeichnis oder SYSROOT. Dies entspricht den Umgebungsvariablen %windir% oder %SYSTEMROOT%. Hinzugefügt in .NET Framework 4.</summary>
    </member>
    <member name="T:System.Environment.SpecialFolderOption">
      <summary>Gibt Optionen an, die zum Abrufen des Pfads zu einem besonderen Ordner verwendet werden sollen.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.Create">
      <summary>Der Pfad zum Ordner wird erstellt, wenn er nicht bereits vorhanden ist.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.DoNotVerify">
      <summary>Der Pfad zum Ordner wird zurückgegeben, ohne dass überprüft wird, ob der Pfad vorhanden ist. Wenn sich der Ordner in einem Netzwerk befindet, kann durch Angabe dieser Option die Verzögerung reduziert werden.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.None">
      <summary>Der Pfad zum Ordner wird überprüft. Wenn der Ordner vorhanden ist, wird der Pfad zurückgegeben. Wenn der Ordner nicht vorhanden ist, wird eine leere Zeichenfolge zurückgegeben. Dies ist das Standardverhalten.</summary>
    </member>
    <member name="P:System.Environment.StackTrace">
      <summary>Ruft die aktuellen Stapelüberwachungsinformationen ab.</summary>
      <returns>Eine Zeichenfolge, die Stapelüberwachungsinformationen enthält. Dieser Wert kann <see cref="F:System.String.Empty" /> sein.</returns>
    </member>
    <member name="P:System.Environment.SystemDirectory">
      <summary>Ruft den voll gekennzeichneten Pfad des Systemverzeichnisses ab.</summary>
      <returns>Eine Zeichenfolge mit einem Verzeichnispfad.</returns>
    </member>
    <member name="P:System.Environment.SystemPageSize">
      <summary>Ruft die Anzahl der Bytes in der Speicherseite des Betriebssystems ab.</summary>
      <returns>Die Anzahl der Bytes in einer Arbeitsspeicherauslagerung des Betriebssystems.</returns>
    </member>
    <member name="P:System.Environment.TickCount">
      <summary>Ruft die Anzahl der Millisekunden ab, die seit dem Systemstart verstrichen sind.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die die seit dem letzten Start des Computers vergangene Zeit in Millisekunden enthält.</returns>
    </member>
    <member name="P:System.Environment.TickCount64">
      <summary>Ruft die Anzahl der Millisekunden ab, die seit dem Systemstart verstrichen sind.</summary>
      <returns>Die seit dem Systemstart verstrichenen Millisekunden.</returns>
    </member>
    <member name="P:System.Environment.UserDomainName">
      <summary>Ruft den Netzwerkdomänennamen ab, der dem aktuellen Benutzer zugeordnet ist.</summary>
      <returns>Der Netzwerkdomänenname, der dem aktuellen Benutzer zugeordnet ist.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Das Betriebssystem unterstützt nicht das Abrufen des Netzwerkdomänennamens.</exception>
      <exception cref="T:System.InvalidOperationException">Der Netzwerkdomänenname kann nicht abgerufen werden.</exception>
    </member>
    <member name="P:System.Environment.UserInteractive">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Prozess im interaktiven Modus ausgeführt wird.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Prozess im interaktiven Modus ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.UserName">
      <summary>Ruft den Benutzernamen der Person ab, die derzeit beim Betriebssystem angemeldet ist.</summary>
      <returns>Der Benutzername der Person, die beim Betriebssystem angemeldet ist.</returns>
    </member>
    <member name="P:System.Environment.Version">
      <summary>Ruft ein <see cref="T:System.Version" />-Objekt ab, das die Nummern für Haupt- und Nebenversion, Build und Revision der Common Language Runtime beschreibt.</summary>
      <returns>Ein Objekt, das die Version der Common Language Runtime anzeigt.</returns>
    </member>
    <member name="P:System.Environment.WorkingSet">
      <summary>Ruft die Größe des physischen Speichers ab, der dem Prozesskontext zugeordnet ist.</summary>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die die Größe des dem Prozesskontext zugeordneten physischen Speichers in Bytes angibt.</returns>
    </member>
    <member name="T:System.EnvironmentVariableTarget">
      <summary>Gibt den Speicherort an, an dem eine Umgebungsvariable in einer Set- oder Get-Operation gespeichert bzw. abgerufen wird.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Machine">
      <summary>Die Umgebungsvariable wird im <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" />-Schlüssel in der Registrierung des Windows-Betriebssystems gespeichert bzw. daraus abgerufen. Dieser Wert sollte nur in .NET-Implementierungen verwendet werden, die auf Windows-Systemen ausgeführt werden.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Process">
      <summary>Die Umgebungsvariable wird in dem Umgebungsblock gespeichert, der dem aktuellen Prozess zugeordnet ist, bzw. daraus abgerufen.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.User">
      <summary>Die Umgebungsvariable wird im <see langword="HKEY_CURRENT_USER\Environment" />-Schlüssel in der Registrierung des Windows-Betriebssystems gespeichert bzw. daraus abgerufen. Dieser Wert sollte nur in .NET-Implementierungen verwendet werden, die auf Windows-Systemen ausgeführt werden.</summary>
    </member>
    <member name="T:System.Globalization.GlobalizationExtensions">
      <summary>Stellt globalisierungsbezogene Erweiterungsmethoden bereit.</summary>
    </member>
    <member name="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
      <summary>Gibt ein <see cref="T:System.StringComparer" />-Objekt zurück, das auf kulturabhängigen Regeln für Zeichenfolgenvergleiche eines angegebenen <see cref="T:System.Globalization.CompareInfo" />-Objekts basiert.</summary>
      <param name="compareInfo">Ein Objekt, dass kulturabhängige Zeichenfolgenvergleiche unterstützt.</param>
      <param name="options">Ein Wert, der definiert, wie die Zeichenfolgen verglichen werden sollen. <paramref name="options" /> ist entweder der Enumerationswert <see cref="F:System.Globalization.CompareOptions.Ordinal" />, der Enumerationswert <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> oder eine bitweise Kombination aus mindestens einem der folgenden Werte: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> und <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
      <returns>Ein Objekt, das für Zeichenfolgenvergleiche verwendet werden kann.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="compareInfo" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> ist ungültig.</exception>
    </member>
    <member name="T:System.IO.BinaryReader">
      <summary>Liest primitive Datentypen als Binärwerte in einer spezifischen Codierung.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der auf dem bereitgestellten Stream basierenden <see cref="T:System.IO.BinaryReader" />-Klasse mit einer spezifischen Stream- und Zeichencodierung unter Verwendung von UTF-8.</summary>
      <param name="input">Der Eingabestream.</param>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Lesevorgänge, ist <see langword="null" /> oder er wurde bereits geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der auf dem bereitgestellten Stream basierenden <see cref="T:System.IO.BinaryReader" />-Klasse mit einer spezifischen Stream- und Zeichencodierung.</summary>
      <param name="input">Der Eingabestream.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Lesevorgänge, ist <see langword="null" /> oder er wurde bereits geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.BinaryReader" />-Klasse auf Grundlage des angegebenen Streams und der Zeichencodierung und lässt den Stream optional geöffnet.</summary>
      <param name="input">Der Eingabestream.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="leaveOpen">
        <see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.BinaryReader" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Lesevorgänge, ist <see langword="null" /> oder er wurde bereits geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> oder <paramref name="input" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.BinaryReader.BaseStream">
      <summary>Gewährt Zugriff auf den zugrunde liegenden Stream von <see cref="T:System.IO.BinaryReader" />.</summary>
      <returns>Der <see langword="BinaryReader" /> zugeordnete, zugrunde liegende Stream.</returns>
    </member>
    <member name="M:System.IO.BinaryReader.Close">
      <summary>Schließt den aktuellen Reader und den zugrunde liegenden Stream.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.IO.BinaryReader" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.Dispose(System.Boolean)">
      <summary>Gibt die von der <see cref="T:System.IO.BinaryReader" />-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
      <summary>Füllt den internen Puffer mit der angegebenen Anzahl von Bytes, die aus dem Stream gelesen wurden.</summary>
      <param name="numBytes">Die Anzahl der zu lesenden Bytes.</param>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht, bevor <paramref name="numBytes" /> gelesen werden konnte.</exception>
      <exception cref="T:System.IO.IOException">E/A-Fehler.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die angeforderten <paramref name="numBytes" /> überschreiten die interne Puffergröße.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.PeekChar">
      <summary>Gibt das nächste verfügbare Zeichen zurück, ohne die Byte- oder Zeichenposition zu erhöhen.</summary>
      <returns>Das nächste verfügbare Zeichen oder -1, wenn keine weiteren Zeichen verfügbar sind oder der Stream keine Suchvorgänge unterstützt.</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ArgumentException">Das aktuelle Zeichen kann nicht mit dem für den Stream ausgewählten <see cref="T:System.Text.Encoding" /> in den internen Zeichenpuffer decodiert werden.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read">
      <summary>Liest Zeichen aus dem zugrunde liegenden Stream und erhöht die aktuelle Position im Stream in Abhängigkeit von der verwendeten <see langword="Encoding" /> und dem aus dem Stream gelesenen Zeichen.</summary>
      <returns>Das nächste Zeichen aus dem Eingabestream bzw. -1, wenn derzeit keine Zeichen verfügbar sind.</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest die angegebene Anzahl von Bytes beginnend bei einem angegebenen Punkt im Bytearray aus dem Datenstrom.</summary>
      <param name="buffer">Der Puffer, in den Daten gelesen werden sollen.</param>
      <param name="index">Der Anfangspunkt für das Lesen in den Puffer.</param>
      <param name="count">Die Anzahl der zu lesenden Bytes.</param>
      <returns>Die Anzahl von Bytes, die in <paramref name="buffer" /> gelesen wurden. Diese kann kleiner sein als die Anzahl der angeforderten Bytes, wenn gegenwärtig keine entsprechende Anzahl von Bytes verfügbar ist, oder null, wenn das Ende des Streams erreicht ist.</returns>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.  

oder - 
Die Anzahl der zu lesenden decodierten Zeichen ist größer als <paramref name="count" />. Dies kann geschehen, wenn ein Unicode-Decoder Fallbackzeichen oder ein Ersatzzeichenpaar zurückgibt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Liest die angegebene Anzahl von Zeichen beginnend bei einem angegebenen Punkt im Zeichenarray aus dem Datenstrom.</summary>
      <param name="buffer">Der Puffer, in den Daten gelesen werden sollen.</param>
      <param name="index">Der Anfangspunkt für das Lesen in den Puffer.</param>
      <param name="count">Die Anzahl der zu lesenden Zeichen.</param>
      <returns>Die Gesamtanzahl der in den Puffer gelesenen Zeichen. Diese kann kleiner sein als die Anzahl der angeforderten Zeichen, wenn gegenwärtig keine entsprechende Anzahl von Bytes verfügbar ist, oder null, wenn das Ende des Streams erreicht ist.</returns>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.  

oder - 
Die Anzahl der zu lesenden decodierten Zeichen ist größer als <paramref name="count" />. Dies kann geschehen, wenn ein Unicode-Decoder Fallbackzeichen oder ein Ersatzzeichenpaar zurückgibt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.BinaryReader.Read7BitEncodedInt">
      <summary>Liest eine 32-Bit-Ganzzahl in komprimiertem Format.</summary>
      <returns>Eine 32-Bit-Ganzzahl in komprimiertem Format.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">Der Datenstrom ist beschädigt.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadBoolean">
      <summary>Liest einen <see langword="Boolean" />-Wert aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 1 Byte.</summary>
      <returns>
        <see langword="true" /> wenn das Byte ungleich 0 (null) ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadByte">
      <summary>Liest das nächste Byte aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 1 Byte.</summary>
      <returns>Das nächste aus dem aktuellen Stream gelesene Byte.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
      <summary>Liest die angegebene Anzahl von Bytes aus dem aktuellen Datenstrom in ein Bytearray und erhöht die aktuelle Position um diese Anzahl von Bytes.</summary>
      <param name="count">Die Anzahl der zu lesenden Bytes. Dieser Wert muss 0 oder eine nicht negative Zahl sein oder eine Ausnahme tritt auf.</param>
      <returns>Ein Bytearray mit Daten aus dem zugrunde liegenden Stream. Dies kann kleiner sein als die Anzahl der angeforderten Bytes, wenn das Ende des Streams erreicht ist.</returns>
      <exception cref="T:System.ArgumentException">Die Anzahl der zu lesenden decodierten Zeichen ist größer als <paramref name="count" />. Dies kann geschehen, wenn ein Unicode-Decoder Fallbackzeichen oder ein Ersatzzeichenpaar zurückgibt.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> ist ein negativer Wert.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadChar">
      <summary>Liest das nächste Zeichen aus dem aktuellen Stream und erhöht die aktuelle Position im Stream in Abhängigkeit von der verwendeten <see langword="Encoding" /> und dem aus dem Stream gelesenen Zeichen.</summary>
      <returns>Ein aus dem aktuellen Stream gelesenes Zeichen.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ArgumentException">Ein Ersatzzeichenzeichen wurde gelesen.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadChars(System.Int32)">
      <summary>Liest die angegebene Anzahl von Zeichen aus dem aktuellen Datenstrom, gibt die Daten in einem Zeichenarray zurück und erhöht die aktuelle Position in Abhängigkeit von der verwendeten <see langword="Encoding" /> und dem aus dem Datenstrom gelesenen Zeichen.</summary>
      <param name="count">Die Anzahl der zu lesenden Zeichen.</param>
      <returns>Ein Zeichenarray mit Daten aus dem zugrunde liegenden Stream. Dies kann kleiner sein als die Anzahl der angeforderten Zeichen, wenn das Ende des Streams erreicht ist.</returns>
      <exception cref="T:System.ArgumentException">Die Anzahl der zu lesenden decodierten Zeichen ist größer als <paramref name="count" />. Dies kann geschehen, wenn ein Unicode-Decoder Fallbackzeichen oder ein Ersatzzeichenpaar zurückgibt.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> ist ein negativer Wert.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadDecimal">
      <summary>Liest einen Dezimalwert aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 16 Bytes.</summary>
      <returns>Ein aus dem aktuellen Stream gelesener Dezimalwert.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadDouble">
      <summary>Liest einen 8-Byte-Gleitkommawert aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 8 Bytes.</summary>
      <returns>Ein aus dem aktuellen Stream gelesener 8-Byte-Gleitkommawert.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt16">
      <summary>Liest eine 2-Byte-Ganzzahl mit Vorzeichen aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 2 Bytes.</summary>
      <returns>Eine aus dem aktuellen Stream gelesene 2-Byte-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt32">
      <summary>Liest eine 4-Byte-Ganzzahl mit Vorzeichen aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 4 Bytes.</summary>
      <returns>Eine aus dem aktuellen Stream gelesene 4-Byte-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt64">
      <summary>Liest eine 8-Byte-Ganzzahl mit Vorzeichen aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 8 Bytes.</summary>
      <returns>Eine aus dem aktuellen Stream gelesene 8-Byte-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadSByte">
      <summary>Liest ein Byte mit Vorzeichen aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um ein Byte.</summary>
      <returns>Ein aus dem aktuellen Stream gelesenes Byte mit Vorzeichen.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadSingle">
      <summary>Liest einen 4-Byte-Gleitkommawert aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 4 Bytes.</summary>
      <returns>Ein aus dem aktuellen Stream gelesener 4-Byte-Gleitkommawert.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadString">
      <summary>Liest eine Zeichenfolge aus dem aktuellen Stream. Die Zeichenfolge weist ein Präfix mit der Länge auf, die als Ganzzahl mit jeweils 7 Bits codiert ist.</summary>
      <returns>Die gelesene Zeichenfolge.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt16">
      <summary>Liest eine 2-Byte-Ganzzahl ohne Vorzeichen mithilfe einer Little-Endian-Codierung aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 2 Bytes.</summary>
      <returns>Eine aus diesem Stream gelesene 2-Byte-Ganzzahl ohne Vorzeichen.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt32">
      <summary>Liest eine 4-Byte-Ganzzahl ohne Vorzeichen aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 4 Bytes.</summary>
      <returns>Eine aus diesem Stream gelesene 4-Byte-Ganzzahl ohne Vorzeichen.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt64">
      <summary>Liest eine 8-Byte-Ganzzahl ohne Vorzeichen aus dem aktuellen Stream und erhöht die aktuelle Position im Stream um 8 Bytes.</summary>
      <returns>Eine aus diesem Stream gelesene 8-Byte-Ganzzahl ohne Vorzeichen.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="T:System.IO.BinaryWriter">
      <summary>Schreibt primitive Typen binär in einen Datenstrom und unterstützt das Schreiben von Zeichenfolgen in einer bestimmten Codierung.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.BinaryWriter" />-Klasse zum Schreiben in einen Stream.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der auf dem bereitgestellten Stream basierenden <see cref="T:System.IO.BinaryWriter" />-Klasse mit einer spezifischen Stream- und Zeichencodierung unter Verwendung von UTF-8.</summary>
      <param name="output">Der Ausgabestream.</param>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Schreibvorgänge, oder er wurde bereits geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der auf dem bereitgestellten Stream basierenden <see cref="T:System.IO.BinaryWriter" />-Klasse mit einer spezifischen Stream- und Zeichencodierung.</summary>
      <param name="output">Der Ausgabestream.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Schreibvorgänge, oder er wurde bereits geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.BinaryWriter" />-Klasse auf Grundlage des angegebenen Streams und der Zeichencodierung und lässt den Stream optional geöffnet.</summary>
      <param name="output">Der Ausgabestream.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="leaveOpen">
        <see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.BinaryWriter" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Der Stream unterstützt keine Schreibvorgänge, oder er wurde bereits geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.BinaryWriter.BaseStream">
      <summary>Ruft den zugrunde liegenden Stream von <see cref="T:System.IO.BinaryWriter" /> ab.</summary>
      <returns>Der <see langword="BinaryWriter" /> zugeordnete, zugrunde liegende Stream.</returns>
    </member>
    <member name="M:System.IO.BinaryWriter.Close">
      <summary>Schließt den aktuellen <see cref="T:System.IO.BinaryWriter" /> und den zugrunde liegenden Stream.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.IO.BinaryWriter" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.BinaryWriter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.DisposeAsync">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.IO.BinaryWriter" />-Klasse verwendeten Ressourcen asynchron frei.</summary>
      <returns>Eine Aufgabe, die den asynchronen Löschvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.BinaryWriter.Flush">
      <summary>Löscht sämtliche Puffer für den aktuellen Writer und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</summary>
    </member>
    <member name="F:System.IO.BinaryWriter.Null">
      <summary>Gibt eine <see cref="T:System.IO.BinaryWriter" />-Klasse ohne Sicherungsspeicher an.</summary>
    </member>
    <member name="F:System.IO.BinaryWriter.OutStream">
      <summary>Enthält den zugrunde liegenden Stream.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)">
      <summary>Legt die Position im aktuellen Stream fest.</summary>
      <param name="offset">Ein Byteoffset im Verhältnis zu <paramref name="origin" />.</param>
      <param name="origin">Ein Feld von <see cref="T:System.IO.SeekOrigin" />, das den Bezugspunkt angibt, von dem aus die neue Position ermittelt werden soll.</param>
      <returns>Die Position im aktuellen Stream.</returns>
      <exception cref="T:System.IO.IOException">Der Dateizeiger wurde an eine ungültige Position verschoben.</exception>
      <exception cref="T:System.ArgumentException">Der <see cref="T:System.IO.SeekOrigin" />-Wert ist ungültig.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Boolean)">
      <summary>Schreibt einen 1-Byte-<see langword="Boolean" />-Wert in den aktuellen Stream, wobei 0 (null) <see langword="false" /> und 1 <see langword="true" /> darstellt.</summary>
      <param name="value">Der zu schreibende <see langword="Boolean" />-Wert (0 (null) oder 1).</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte)">
      <summary>Schreibt ein Byte ohne Vorzeichen in den aktuellen Stream und erhöht die aktuelle Position im Stream um ein Byte.</summary>
      <param name="value">Das zu schreibende Byte ohne Vorzeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte[])">
      <summary>Schreibt ein Bytearray in den zugrunde liegenden Stream.</summary>
      <param name="buffer">Ein Bytearray, das die zu schreibenden Daten enthält.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Schreibt einen Bereich eines Bytearrays in den aktuellen Stream.</summary>
      <param name="buffer">Ein Bytearray, das die zu schreibenden Daten enthält.</param>
      <param name="index">Der Index des ersten Bytes, das aus dem <paramref name="buffer" /> gelesen und in den Stream geschrieben werden soll.</param>
      <param name="count">Die Anzahl von Bytes, die aus dem <paramref name="buffer" /> gelesen und in den Stream geschrieben werden sollen.</param>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char)">
      <summary>Schreibt ein Unicode-Zeichen in den aktuellen Stream und erhöht die aktuelle Position im Stream in Abhängigkeit von der verwendeten <see langword="Encoding" /> und der in den Stream geschriebenen Zeichen.</summary>
      <param name="ch">Das zu schreibende Unicode-Zeichen (nicht-Ersatzzeichen).</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ch" /> ist ein einzelnes Ersatzzeichen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char[])">
      <summary>Schreibt ein Zeichenarray in den aktuellen Stream und erhöht die aktuelle Position im Stream in Abhängigkeit von der verwendeten <see langword="Encoding" /> und der in den Stream geschriebenen Zeichen.</summary>
      <param name="chars">Ein Zeichenarray mit den zu schreibenden Daten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt einen Bereich eines Zeichenarrays in den aktuellen Stream und erhöht die aktuelle Position im Stream in Abhängigkeit von der verwendeten <see langword="Encoding" /> und ggf. der in den Stream geschriebenen Zeichen.</summary>
      <param name="chars">Ein Zeichenarray mit den zu schreibenden Daten.</param>
      <param name="index">Der Index des ersten Zeichens, das aus dem <paramref name="chars" /> gelesen und in den Stream geschrieben werden soll.</param>
      <param name="count">Die Anzahl von Zeichen, die aus dem <paramref name="chars" /> gelesen und in den Stream geschrieben werden sollen.</param>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Decimal)">
      <summary>Schreibt einen Dezimalwert in den aktuellen Stream und erhöht die Position im Stream um 16 Bytes.</summary>
      <param name="value">Der zu schreibende Dezimalwert.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Double)">
      <summary>Schreibt einen 8-Byte-Gleitkommawert in den aktuellen Stream und erhöht die Position im Stream um 8 Bytes.</summary>
      <param name="value">Der zu schreibende 8-Byte-Gleitkommawert.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int16)">
      <summary>Schreibt eine 2-Byte-Ganzzahl mit Vorzeichen in den aktuellen Stream und erhöht die Position im Stream um 2 Bytes.</summary>
      <param name="value">Die zu schreibende 2-Byte-Ganzzahl mit Vorzeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int32)">
      <summary>Schreibt eine 4-Byte-Ganzzahl mit Vorzeichen in den aktuellen Stream und erhöht die Position im Stream um 4 Bytes.</summary>
      <param name="value">Die zu schreibende 4-Byte-Ganzzahl mit Vorzeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int64)">
      <summary>Schreibt eine 8-Byte-Ganzzahl mit Vorzeichen in den aktuellen Stream und erhöht die Position im Stream um 8 Bytes.</summary>
      <param name="value">Die zu schreibende 8-Byte-Ganzzahl mit Vorzeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Schreibt einen Bereich von Bytes in den aktuellen Stream.</summary>
      <param name="buffer">Der Bereich der zu schreibenden Bytes.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Schreibt einen Bereich von Zeichen in den aktuellen Stream und erhöht die aktuelle Position im Stream in Abhängigkeit von der verwendeten <see langword="Encoding" /> und ggf. der in den Stream geschriebenen Zeichen.</summary>
      <param name="chars">Ein Bereich von zu schreibenden Chars.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.SByte)">
      <summary>Schreibt ein Byte mit Vorzeichen in den aktuellen Stream und erhöht die aktuelle Position im Stream um ein Byte.</summary>
      <param name="value">Das zu schreibende Byte mit Vorzeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Single)">
      <summary>Schreibt einen 4-Byte-Gleitkommawert in den aktuellen Stream und erhöht die Position im Stream um 4 Bytes.</summary>
      <param name="value">Der zu schreibende 4-Byte-Gleitkommawert.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.String)">
      <summary>Schreibt eine Zeichenfolge mit Längenpräfix in der aktuellen Codierung von <see cref="T:System.IO.BinaryWriter" /> in diesen Stream und erhöht die aktuelle Position im Stream in Abhängigkeit von der verwendeten Codierung und der in den Stream geschriebenen Zeichen.</summary>
      <param name="value">Der zu schreibende Wert.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt16)">
      <summary>Schreibt eine 2-Byte-Ganzzahl ohne Vorzeichen in den aktuellen Stream und erhöht die Position im Stream um 2 Bytes.</summary>
      <param name="value">Die zu schreibende 2-Byte-Ganzzahl ohne Vorzeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt32)">
      <summary>Schreibt eine 4-Byte-Ganzzahl ohne Vorzeichen in den aktuellen Stream und erhöht die Position im Stream um 4 Bytes.</summary>
      <param name="value">Die zu schreibende 4-Byte-Ganzzahl ohne Vorzeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt64)">
      <summary>Schreibt eine 8-Byte-Ganzzahl ohne Vorzeichen in den aktuellen Stream und erhöht die Position im Stream um 8 Bytes.</summary>
      <param name="value">Die zu schreibende 8-Byte-Ganzzahl ohne Vorzeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)">
      <summary>Schreibt eine 32-Bit-Ganzzahl in einem komprimierten Format.</summary>
      <param name="value">Die zu schreibende 32-Bit-Ganzzahl.</param>
      <exception cref="T:System.IO.EndOfStreamException">Das Ende des Streams ist erreicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="T:System.IO.BufferedStream">
      <summary>Fügt eine Pufferungsschicht für Lese- und Schreibvorgänge in einem anderen Stream hinzu. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.BufferedStream" />-Klasse mit einer Standardpuffergröße von 4096 Bytes.</summary>
      <param name="stream">Der aktuelle Stream.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.BufferedStream" />-Klasse mit der angegebenen Puffergröße.</summary>
      <param name="stream">Der aktuelle Stream.</param>
      <param name="bufferSize">Die Puffergröße in Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> ist ein negativer Wert.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Lesevorgang. (Verwenden Sie stattdessen <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="buffer">Der Puffer, in den die Daten gelesen werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="buffer" />, ab dem aus dem Stream gelesene Daten geschrieben werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="callback">Ein optionaler asynchroner Rückruf, der nach Abschluss des Lesevorgangs aufgerufen werden soll.</param>
      <param name="state">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Leseanforderung von anderen Anforderungen unterscheidet.</param>
      <returns>Ein Objekt, das den asynchronen Lesevorgang darstellt, der möglicherweise noch aussteht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">Es wurde ein asynchroner Lesevorgang über das Streamende hinaus versucht.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="offset" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.NotSupportedException">Der aktuelle Stream unterstützt den Lesevorgang nicht.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt einen asynchronen Schreibvorgang. (Verwenden Sie stattdessen <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="buffer">Der Puffer mit den Daten, die in den aktuellen Stream geschrieben werden sollen.</param>
      <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem Bytes in den aktuellen Stream kopiert werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="callback">Die Methode, die aufgerufen werden soll, wenn der asynchrone Schreibvorgang abgeschlossen ist.</param>
      <param name="state">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Schreibanforderung von anderen Anforderungen unterscheidet.</param>
      <returns>Ein Objekt, das auf den asynchronen Schreibvorgang verweist, der möglicherweise noch aussteht.</returns>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="buffer" /> minus <paramref name="offset" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt das Schreiben nicht.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.BufferSize">
      <summary>Ruft die Puffergröße in Bytes für diesen gepufferten Stream ab.</summary>
      <returns>Eine ganze Zahl, die die Puffergröße in Bytes darstellt.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanRead">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Lesevorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Stream Lesevorgänge unterstützt, <see langword="false" />, wenn der Stream geschlossen ist oder ausschließlich mit Schreibzugriff geöffnet wurde.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanSeek">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Suchvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Stream Suchvorgänge unterstützt, <see langword="false" />, wenn der Stream geschlossen ist oder von einem Betriebssystemhandle, z. B. einer Pipe oder einer Ausgabe an die Konsole, erstellt wurde.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanWrite">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Schreibvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Stream Schreibvorgänge unterstützt, <see langword="false" />, wenn der Stream geschlossen ist oder mit schreibgeschütztem Zugriff geöffnet wurde.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Liest alle Bytes aus dem aktuellen gepufferten Stream und schreibt sie in einen anderen Datenstrom.</summary>
      <param name="destination">Der Stream, in den der Inhalt des aktuellen gepufferten Stream kopiert wird.</param>
      <param name="bufferSize">Die Größe des Puffers. Dieser Wert muss größer als 0 sein. Die Standardgröße ist 81920.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> ist negativ oder 0 (null).</exception>
      <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom aktuellen Stream nicht unterstützt.

oder -

<paramref name="destination" /> unterstützt das Schreiben nicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Entweder der aktuelle Stream oder <paramref name="destination" /> wurde geschlossen, bevor die <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />-Methode aufgerufen wurde.</exception>
      <exception cref="T:System.IO.IOException">E/A-Fehler</exception>
    </member>
    <member name="M:System.IO.BufferedStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest die Bytes asynchron aus dem aktuellen gepufferten Stream und schreibt sie unter Verwendung einer angegebenen Puffergröße und eines Abbruchtokens in einen anderen Stream.</summary>
      <param name="destination">Der Stream, in den der Inhalt des aktuellen gepufferten Stream kopiert wird.</param>
      <param name="bufferSize">Die Größe des Cookies in Bytes. Dieser Wert muss größer als 0 sein. Die Standardgröße ist 81920.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.DisposeAsync">
      <summary>Gibt die nicht verwalteten Ressourcen, die vom gepufferten Stream verwendet werden, asynchron frei.</summary>
      <returns>Eine Aufgabe, die den asynchronen Löschvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
      <summary>Wartet, bis der ausstehende asynchrone Lesevorgang abgeschlossen ist. (Verwenden Sie stattdessen <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="asyncResult">Der Verweis auf die ausstehende asynchrone Anforderung, die abgewartet werden soll.</param>
      <returns>Die Anzahl der aus dem Stream gelesenen Bytes. Diese Anzahl kann zwischen 0 und der Anzahl der angeforderten Bytes liegen. Streams geben nur am Ende des Streams nur 0 zurück, andernfalls sollten sie blockieren, bis mindestens 1 Byte verfügbar ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Dieses <see cref="T:System.IAsyncResult" />-Objekt wurde nicht durch Aufrufen von <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> für diese Klasse erstellt.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Schreibvorgang und blockiert, bis die E/A-Operation abgeschlossen wurde. (Verwenden Sie stattdessen <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />.)</summary>
      <param name="asyncResult">Die ausstehende asynchrone Anforderung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Dieses <see cref="T:System.IAsyncResult" />-Objekt wurde nicht durch Aufruf von <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> in dieser Klasse erstellt.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Flush">
      <summary>Löscht sämtliche Puffer für diesen Stream und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</summary>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.IO.IOException">Die Datenquelle oder das Repository ist nicht geöffnet.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Löscht alle Puffer für diesen Stream asynchron und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät und überwacht Abbruchanforderungen.</summary>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die die asynchrone Leerung darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde freigegeben.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.Length">
      <summary>Ruft die Länge des Streams in Bytes ab.</summary>
      <returns>Die Länge des Streams in Bytes.</returns>
      <exception cref="T:System.IO.IOException">Der zugrunde liegende Stream ist <see langword="null" /> oder geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt keine Suchvorgänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.Position">
      <summary>Ruft die Position im aktuellen Stream ab.</summary>
      <returns>Die Position im aktuellen Stream.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der an <see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /> übergebene Wert ist negativ.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler ist aufgetreten, beispielsweise durch Schließen des Streams.</exception>
      <exception cref="T:System.NotSupportedException">Vom Stream wird Suchen nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Kopiert Bytes aus dem aktuellen gepufferten Stream in ein Array.</summary>
      <param name="array">Der Puffer, in den Bytes kopiert werden sollen.</param>
      <param name="offset">Der Byteoffset im Puffer, ab dem mit dem Lesen von Bytes begonnen werden soll.</param>
      <param name="count">Die Anzahl der zu lesenden Bytes.</param>
      <returns>Die Anzahl der insgesamt in das <paramref name="array" /> gelesenen Bytes. Diese kann kleiner sein als die Anzahl der angeforderten Bytes, wenn derzeit nicht entsprechend viele Bytes verfügbar sind, oder 0, wenn das Ende des Streams erreicht ist, bevor Daten gelesen werden können.</returns>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="array" /> minus <paramref name="offset" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">Der Stream ist nicht geöffnet oder ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Read(System.Span{System.Byte})">
      <summary>Kopiert Bytes aus dem gepufferten Stream in eine Bytespanne und verschiebt die Position im gepufferten Stream um die Anzahl der gelesenen Bytes.</summary>
      <param name="destination">Ein Bereich im Arbeitsspeicher. Bei der Rückgabe dieser Methode werden die Inhalte dieses Bereichs durch die aus der aktuellen Quelle gelesenen Bytes ersetzt.</param>
      <returns>Die Gesamtanzahl der in den Puffer gelesenen Bytes. Dies kann weniger als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0 (null), wenn das Ende des Streams erreicht ist.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest eine Folge von Bytes asynchron aus aktuellen Stream, erhöht die Position im Stream um die Anzahl der gelesenen Bytes und überwacht Abbruchanfragen.</summary>
      <param name="buffer">Der Puffer, in den die Daten geschrieben werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="buffer" />, ab dem Daten aus dem Stream geschrieben werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Datenstromende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Stream wird gerade durch einen früheren Lesevorgang.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Liest eine Bytesequenz asynchron aus dem aktuellen gepufferten Stream und setzt die Position in diesem gepufferten Stream um die Anzahl der gelesenen Bytes nach vorn.</summary>
      <param name="buffer">Der Bereich im Arbeitsspeicher, in den die Daten geschrieben werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert seiner <see cref="P:System.Threading.Tasks.ValueTask`1.Result" />-Eigenschaft enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann weniger als die Anzahl der im Puffer zugeordneten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder er kann 0 (null) sein, wenn das Ende des Streams erreicht ist.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.ReadByte">
      <summary>Liest ein Byte aus dem zugrunde liegenden Stream und gibt dieses in ein <see langword="int" /> umgewandelt zurück, bzw. wird -1 zurückgegeben, wenn das Ende des Streams erreicht ist.</summary>
      <returns>Das Byte, umgewandelt in ein <see langword="int" />, oder -1, wenn das Ende des Streams erreicht ist.</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler ist aufgetreten, beispielsweise durch Schließen des Streams.</exception>
      <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Legt die Position im aktuellen gepufferten Stream fest.</summary>
      <param name="offset">Ein Byteoffset im Verhältnis zu <paramref name="origin" />.</param>
      <param name="origin">Ein Wert vom Typ <see cref="T:System.IO.SeekOrigin" />, der den Bezugspunkt angibt, von dem aus die neue Position ermittelt wird.</param>
      <returns>Die neue Position innerhalb des aktuellen gepufferten Streams.</returns>
      <exception cref="T:System.IO.IOException">Der Stream ist nicht geöffnet oder ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Vom Stream wird Suchen nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.SetLength(System.Int64)">
      <summary>Legt die Länge des gepufferten Streams fest.</summary>
      <param name="value">Eine ganze Zahl, die die gewünschte Länge des aktuellen gepufferten Streams in Bytes angibt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">Der Stream ist nicht geöffnet oder ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt weder Schreib- noch Suchvorgänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.UnderlyingStream">
      <summary>Ruft die zugrunde liegende <see cref="T:System.IO.Stream" />-Instanz für diesen gepufferten Stream ab.</summary>
      <returns>Die zugrunde liegende Streaminstanz.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Kopiert Bytes in den gepufferten Stream und verschiebt die aktuelle Position im gepufferten Stream um die Anzahl der geschriebenen Bytes.</summary>
      <param name="array">Das Bytearray, aus dem <paramref name="count" /> Bytes in den aktuellen gepufferten Stream kopiert werden sollen.</param>
      <param name="offset">Der Offset im Puffer, ab dem Bytes in den aktuellen gepufferten Stream kopiert werden sollen.</param>
      <param name="count">Die Anzahl der Bytes, die in den aktuellen gepufferten Stream geschrieben werden sollen.</param>
      <exception cref="T:System.ArgumentException">Die Länge von <paramref name="array" /> minus <paramref name="offset" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">Der Stream ist geschlossen oder <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt das Schreiben nicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Schreibt eine Bytesequenz in den aktuellen gepufferten Stream und setzt die aktuelle Position in diesem gepufferten Stream um die Anzahl der geschriebenen Bytes nach vorn.</summary>
      <param name="buffer">Ein Bereich im Arbeitsspeicher. Diese Methode kopiert den Inhalt dieses Bereichs in den aktuellen gepufferten Stream.</param>
    </member>
    <member name="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Folge von Bytes asynchron in den aktuellen Stream und erhöht die aktuelle Position im Stream um die Anzahl der geschriebenen Bytes und überwacht Abbruchanforderungen.</summary>
      <param name="buffer">Der Puffer, aus dem Daten geschrieben werden sollen.</param>
      <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem Bytes in den Stream kopiert werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt das Schreiben nicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Stream wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Folge von Bytes asynchron in den aktuellen gepufferten Stream und erhöht die aktuelle Position im gepufferten Stream um die Anzahl der geschriebenen Bytes und überwacht Abbruchanforderungen.</summary>
      <param name="buffer">Die Region im Arbeitsspeicher, aus der die Daten für das Schreiben gelesen werden sollen.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.WriteByte(System.Byte)">
      <summary>Schreibt ein Byte an die aktuelle Position im gepufferten Stream.</summary>
      <param name="value">Ein Byte, das in den Stream geschrieben werden soll.</param>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt das Schreiben nicht.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen wurde.</exception>
    </member>
    <member name="T:System.IO.EndOfStreamException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn hinter dem Ende eines Streams ein Leseversuch erfolgt.</summary>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.EndOfStreamException" />-Klasse, bei der die Meldungszeichenfolge auf eine vom System gelieferte Meldung und HRESULT auf COR_E_ENDOFSTREAM festgelegt ist.</summary>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.EndOfStreamException" />-Klasse mit der angegebenen Serialisierung und den angegebenen Kontextinformationen.</summary>
      <param name="info">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Kontextinformationen über die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.EndOfStreamException" />-Klasse, bei der die Nachrichtenzeichenfolge auf <paramref name="message" /> und HRESULT auf COR_E_ENDOFSTREAM festgelegt wurde.</summary>
      <param name="message">Eine Zeichenfolge, die den Fehler beschreibt. Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein. Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.EndOfStreamException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Eine Zeichenfolge, die den Fehler beschreibt. Der Inhalt der <paramref name="message" /> soll in verständlicher Sprache gehalten sein. Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.IO.InvalidDataException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Datenstream ein ungültiges Format hat.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.InvalidDataException" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.InvalidDataException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.InvalidDataException" />-Klasse mit einem Verweis auf die innere Ausnahme, die die Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.IO.MemoryStream">
      <summary>Erstellt einen Stream, der den Arbeitsspeicher als Sicherungsspeicher verwendet.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.MemoryStream" />-Klasse mit einer erweiterbaren Kapazität, die mit 0 (null) initialisiert wurde.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[])">
      <summary>Initialisiert anhand des angegebenen Bytearrays eine neue Instanz der <see cref="T:System.IO.MemoryStream" />-Klasse, deren Größe nicht geändert werden kann.</summary>
      <param name="buffer">Das Array vorzeichenloser Bytes, aus dem der aktuelle Stream erstellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
      <summary>Initialisiert anhand des angegebenen Bytearrays eine neue Instanz der <see cref="T:System.IO.MemoryStream" />-Klasse, deren Größe nicht geändert werden kann, wobei die <see cref="P:System.IO.MemoryStream.CanWrite" />-Eigenschaft wie angegeben festgelegt wird.</summary>
      <param name="buffer">Das Array vorzeichenloser Bytes, aus dem dieser Stream erstellt werden soll.</param>
      <param name="writable">Die Einstellung der <see cref="P:System.IO.MemoryStream.CanWrite" />-Eigenschaft, mit der bestimmt wird, ob der Stream Schreibvorgänge unterstützt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Initialisiert anhand des angegebenen Bereichs (Indexes) eines Bytearrays eine neue Instanz der <see cref="T:System.IO.MemoryStream" />-Klasse, deren Größe nicht geändert werden kann.</summary>
      <param name="buffer">Das Array vorzeichenloser Bytes, aus dem dieser Stream erstellt werden soll.</param>
      <param name="index">Der Index in <paramref name="buffer" />, an dem der Stream beginnt.</param>
      <param name="count">Die Länge des Streams in Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Initialisiert anhand des angegebenen Bereichs eines Bytearrays eine neue Instanz der <see cref="T:System.IO.MemoryStream" />-Klasse, deren Größe nicht geändert werden kann, wobei die <see cref="P:System.IO.MemoryStream.CanWrite" />-Eigenschaft wie angegeben festgelegt wird.</summary>
      <param name="buffer">Das Array vorzeichenloser Bytes, aus dem dieser Stream erstellt werden soll.</param>
      <param name="index">Der Index in <paramref name="buffer" />, bei dem der Stream beginnt.</param>
      <param name="count">Die Länge des Streams in Bytes.</param>
      <param name="writable">Die Einstellung der <see cref="P:System.IO.MemoryStream.CanWrite" />-Eigenschaft, mit der bestimmt wird, ob der Stream Schreibvorgänge unterstützt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist negativ.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.MemoryStream" />-Klasse auf der Grundlage des angegebenen Bereichs eines Bytearrays, wobei die <see cref="P:System.IO.MemoryStream.CanWrite" />-Eigenschaft und die Möglichkeit zum Aufruf von <see cref="M:System.IO.MemoryStream.GetBuffer" /> wie angegeben festgelegt werden.</summary>
      <param name="buffer">Das Array vorzeichenloser Bytes, aus dem dieser Stream erstellt werden soll.</param>
      <param name="index">Der Index in <paramref name="buffer" />, an dem der Stream beginnt.</param>
      <param name="count">Die Länge des Streams in Bytes.</param>
      <param name="writable">Die Einstellung der <see cref="P:System.IO.MemoryStream.CanWrite" />-Eigenschaft, mit der bestimmt wird, ob der Stream Schreibvorgänge unterstützt.</param>
      <param name="publiclyVisible">
        <see langword="true" />, um <see cref="M:System.IO.MemoryStream.GetBuffer" /> zu aktivieren, wodurch das Array vorzeichenloser Bytes zurückgegeben wird, aus dem der Stream erstellt wurde, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.MemoryStream" />-Klasse mit einer erweiterbaren Kapazität, die mit dem angegebenen Wert initialisiert wird.</summary>
      <param name="capacity">Die Anfangsgröße des internen Arrays in Bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> ist ein negativer Wert.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <param name="buffer" />
      <param name="offset" />
      <param name="count" />
      <param name="callback" />
      <param name="state" />
    </member>
    <member name="M:System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <param name="buffer" />
      <param name="offset" />
      <param name="count" />
      <param name="callback" />
      <param name="state" />
    </member>
    <member name="P:System.IO.MemoryStream.CanRead">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Lesevorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Stream geöffnet ist.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.CanSeek">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Suchvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Stream geöffnet ist.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.CanWrite">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Stream Schreibvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn der Stream Schreibvorgänge unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.Capacity">
      <summary>Ruft die Anzahl der für diesen Stream reservierten Bytes ab oder legt diese fest.</summary>
      <returns>Die Länge des Bereichs, der für den Stream im Puffer verwendet werden kann.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Es wurde eine Kapazität festgelegt, die negativ oder kleiner als die derzeitige Länge des Streams ist.</exception>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Stream wird geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">
        <see langword="set" /> wird für einen Stream aufgerufen, dessen Kapazität nicht geändert werden kann.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)">
      <param name="destination" />
      <param name="bufferSize" />
    </member>
    <member name="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest alle Bytes asynchron aus dem aktuellen Stream und schreibt sie unter Verwendung einer angegebenen Puffergröße und eines Abbruchtokens in einen anderen Stream.</summary>
      <param name="destination">Der Stream, in den der Inhalt des aktuellen Stream kopiert wird.</param>
      <param name="bufferSize">Die Größe des Cookies in Bytes. Dieser Wert muss größer als 0 sein.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="buffersize" /> ist negativ oder 0 (null).</exception>
      <exception cref="T:System.ObjectDisposedException">Entweder der aktuelle Stream oder der Zielstream wird freigegeben.</exception>
      <exception cref="T:System.NotSupportedException">Der aktuelle Stream unterstützt kein Lesen oder Zielstream unterstützt keine Schreibvorgänge.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Dispose(System.Boolean)">
      <summary>Gibt die von der <see cref="T:System.IO.MemoryStream" />-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.MemoryStream.EndRead(System.IAsyncResult)">
      <param name="asyncResult" />
    </member>
    <member name="M:System.IO.MemoryStream.EndWrite(System.IAsyncResult)">
      <param name="asyncResult" />
    </member>
    <member name="M:System.IO.MemoryStream.Flush">
      <summary>Überschreibt die <see cref="M:System.IO.Stream.Flush" />-Methode, sodass keine Aktion durchgeführt wird.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Löscht sämtliche Puffer für diesen Stream asynchron und überwacht Abbruchanforderungen.</summary>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen.</param>
      <returns>Eine Aufgabe, die die asynchrone Leerung darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.GetBuffer">
      <summary>Gibt das Array vorzeichenloser Bytes zurück, aus dem dieser Stream erstellt wurde.</summary>
      <returns>Das Bytearray, aus dem der Stream erstellt wurde, oder das zugrunde liegende Array, wenn für den <see cref="T:System.IO.MemoryStream" />-Konstruktor beim Erstellen der aktuellen Instanz kein Bytearray bereitgestellt wurde.</returns>
      <exception cref="T:System.UnauthorizedAccessException">Die <see langword="MemoryStream" />-Instanz wurde nicht mit einem öffentlich sichtbaren Puffer erstellt.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.Length">
      <summary>Ruft die Länge des Streams in Bytes ab.</summary>
      <returns>Die Länge des Streams in Bytes.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.Position">
      <summary>Ruft die aktuelle Position im Stream ab oder legt diese fest.</summary>
      <returns>Die aktuelle Position innerhalb des Streams.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Position ist auf einen negativen Wert oder einen größeren Wert als <see cref="F:System.Int32.MaxValue" /> festgelegt.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest einen Byteblock aus dem aktuellen Stream und schreibt die Daten in einen Puffer.</summary>
      <param name="buffer">Enthält nach dem Beenden dieser Methode das angegebene Bytearray mit den Werten zwischen <paramref name="offset" /> und (<paramref name="offset" /> + <paramref name="count" /> - 1), die durch aus dem aktuellen Stream gelesene Zeichen ersetzt wurden.</param>
      <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem die Daten aus dem aktuellen Stream gespeichert werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <returns>Die Gesamtanzahl der in den Puffer geschriebenen Bytes. Dies kann weniger als die Anzahl der angeforderten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder null, wenn das Ende des Streams erreicht ist, bevor mindestens ein Byte gelesen wurde.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> subtrahiert von der Pufferlänge ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Instanz des Streams ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Read(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Liest eine Folge von Bytes asynchron aus aktuellen Stream, erhöht die Position im Stream um die Anzahl der gelesenen Bytes und überwacht Abbruchanfragen.</summary>
      <param name="buffer">Der Puffer, in den die Daten geschrieben werden sollen.</param>
      <param name="offset">Der Byteoffset im <paramref name="buffer" />, ab dem Daten aus dem Stream geschrieben werden.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Datenstromende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.NotSupportedException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Stream wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <param name="destination" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.MemoryStream.ReadByte">
      <summary>Liest ein Byte aus dem aktuellen Stream.</summary>
      <returns>Das Byte, das in <see cref="T:System.Int32" /> umgewandelt wurde, oder -1, wenn das Ende des Streams erreicht wurde.</returns>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Instanz des Streams ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Legt die Position im aktuellen Stream auf den angegebenen Wert fest.</summary>
      <param name="offset">Die neue Position innerhalb des Streams. Diese ist relativ zum <paramref name="loc" />-Parameter und kann positiv oder negativ sein.</param>
      <param name="loc">Ein Wert vom Typ <see cref="T:System.IO.SeekOrigin" />, der den Bezugspunkt für die Suche darstellt.</param>
      <returns>Die neue Position im Stream, die durch Kombinieren des anfänglichen Verweispunktes und des Offsets berechnet wird.</returns>
      <exception cref="T:System.IO.IOException">Es wird versucht, vor Beginn des Streams eine Suche auszuführen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">Ein <see cref="T:System.IO.SeekOrigin" /> ist ungültig.  

oder - 
<paramref name="offset" /> hat einen arithmetischen Überlauf verursacht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Instanz des Streams ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.SetLength(System.Int64)">
      <summary>Legt die Länge des aktuellen Streams auf den angegebenen Wert fest.</summary>
      <param name="value">Der Wert, auf den die Länge festgelegt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Größe des aktuellen Streams kann nicht geändert werden, und <paramref name="value" /> übersteigt die aktuelle Kapazität.  

oder - 
Der aktuelle Stream unterstützt keine Schreibvorgänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> ist negativ oder größer als die maximale Länge von <see cref="T:System.IO.MemoryStream" />, wobei die maximale Länge (<see cref="F:System.Int32.MaxValue" /> - Ursprung) ist, und der Ursprung der Index des zugrunde liegenden Puffers ist, an dem der Stream beginnt.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.ToArray">
      <summary>Schreibt den Inhalt des Streams in ein Bytearray, unabhängig von der <see cref="P:System.IO.MemoryStream.Position" />-Eigenschaft.</summary>
      <returns>Ein neues Bytearray.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
      <summary>Gibt das Array vorzeichenloser Bytes zurück, aus dem dieser Stream erstellt wurde. Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</summary>
      <param name="buffer">Das Bytearraysegment, aus dem der Stream erstellt wurde.</param>
      <returns>
        <see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Schreibt einen Byteblock mit den aus einem Puffer gelesenen Daten in den aktuellen Stream.</summary>
      <param name="buffer">Der Puffer, aus dem Daten geschrieben werden sollen.</param>
      <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem Bytes in den aktuellen Stream kopiert werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt das Schreiben nicht. Weitere Informationen finden Sie unter <see cref="P:System.IO.Stream.CanWrite" />.  

oder - 
Der Abstand der aktuellen Position zum Ende des Streams beträgt weniger als <paramref name="count" /> Bytes, und die Kapazität kann nicht geändert werden.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> subtrahiert von der Pufferlänge ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist negativ.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Instanz des Streams ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Folge von Bytes asynchron in den aktuellen Stream und erhöht die aktuelle Position im Stream um die Anzahl der geschriebenen Bytes und überwacht Abbruchanforderungen.</summary>
      <param name="buffer">Der Puffer, aus dem Daten geschrieben werden sollen.</param>
      <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem Bytes in den Stream kopiert werden.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Bytes.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt das Schreiben nicht.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Stream wird zurzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <param name="source" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.MemoryStream.WriteByte(System.Byte)">
      <summary>Schreibt ein Byte an die aktuelle Position im aktuellen Stream.</summary>
      <param name="value">Das zu schreibende Byte.</param>
      <exception cref="T:System.NotSupportedException">Der Stream unterstützt das Schreiben nicht. Weitere Informationen finden Sie unter <see cref="P:System.IO.Stream.CanWrite" />.  

oder - 
Die aktuelle Position befindet sich am Ende des Streams, und die Kapazität kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Stream wird geschlossen.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
      <summary>Schreibt den gesamten Inhalt dieses Arbeitsspeicherstreams in einen anderen Stream.</summary>
      <param name="stream">Der Stream, in den dieser Arbeitsspeicherstream geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Stream oder der Zielstream ist geschlossen.</exception>
    </member>
    <member name="T:System.IO.Path">
      <summary>Führt Vorgänge für <see cref="T:System.String" />-Instanzen aus, die Datei- oder Verzeichnispfadinformationen enthalten. Diese Vorgänge werden plattformübergreifend durchgeführt.</summary>
    </member>
    <member name="F:System.IO.Path.AltDirectorySeparatorChar">
      <summary>Stellt ein plattformspezifisches, alternatives Zeichen bereit, das zur Trennung von Verzeichnisebenen in einer Pfadzeichenfolge verwendet wird und eine hierarchische Dateisystemorganisation wiedergibt.</summary>
    </member>
    <member name="M:System.IO.Path.ChangeExtension(System.String,System.String)">
      <summary>Ändert die Erweiterung einer Pfadzeichenfolge.</summary>
      <param name="path">Die zu ändernden Pfadinformationen. Der Pfad darf keines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten Zeichen enthalten.</param>
      <param name="extension">Die neue Erweiterung (mit oder ohne führenden Punkt). Geben Sie <see langword="null" /> an, um eine vorhandene Erweiterung aus <paramref name="path" /> zu entfernen.</param>
      <returns>Die geänderten Pfadinformationen.  
Auf Desktopplattformen auf Grundlage von Windows werden die Pfadinformationen unverändert zurückgegeben, wenn <paramref name="path" /><see langword="null" /> oder eine leere Zeichenfolge ("") ist. Wenn <paramref name="extension" /><see langword="null" /> ist, enthält die zurückgegebene Zeichenfolge den angegebenen Pfad ohne die Erweiterung. Wenn <paramref name="path" /> keine Erweiterung besitzt und <paramref name="extension" /> nicht <see langword="null" /> ist, enthält die zurückgegebene Pfadzeichenfolge <paramref name="extension" />, angefügt an das Ende von <paramref name="path" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültigen Zeichen.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String)">
      <summary>Kombiniert zwei Zeichenfolgen zu einem Pfad.</summary>
      <param name="path1">Der erste zu kombinierende Pfad.</param>
      <param name="path2">Der zweite zu kombinierende Pfad.</param>
      <returns>Die kombinierten Pfade. Wenn einer der beiden angegebenen Pfade eine Zeichenfolge der Länge 0 ist, gibt diese Methode den anderen Pfad zurück. Wenn <paramref name="path2" /> einen absoluten Pfad enthält, gibt diese Methode <paramref name="path2" /> zurück.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" /> oder <paramref name="path2" /> enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültigen Zeichen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" /> oder <paramref name="path2" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String,System.String)">
      <summary>Kombiniert drei Zeichenfolgen zu einem Pfad.</summary>
      <param name="path1">Der erste zu kombinierende Pfad.</param>
      <param name="path2">Der zweite zu kombinierende Pfad.</param>
      <param name="path3">Der dritte zu kombinierende Pfad.</param>
      <returns>Die kombinierten Pfade.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" />, <paramref name="path2" /> oder <paramref name="path3" /> enthält mindestens ein ungültiges Zeichen gemäß der Definition in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" />, <paramref name="path2" /> oder <paramref name="path3" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)">
      <summary>Kombiniert vier Zeichenfolgen zu einem Pfad.</summary>
      <param name="path1">Der erste zu kombinierende Pfad.</param>
      <param name="path2">Der zweite zu kombinierende Pfad.</param>
      <param name="path3">Der dritte zu kombinierende Pfad.</param>
      <param name="path4">Der vierte zu kombinierende Pfad.</param>
      <returns>Die kombinierten Pfade.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> oder <paramref name="path4" /> enthält mindestens ein ungültiges Zeichen gemäß der Definition in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> oder <paramref name="path4" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String[])">
      <summary>Kombiniert ein Array von Zeichenfolgen zu einem Pfad.</summary>
      <param name="paths">Ein Array der Teile des Pfads.</param>
      <returns>Die kombinierten Pfade.</returns>
      <exception cref="T:System.ArgumentException">Eine der Zeichenfolgen im Array enthält eines oder mehrere der ungültigen Zeichen, die in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definiert sind.</exception>
      <exception cref="T:System.ArgumentNullException">Eine der Zeichenfolgen im Array ist <see langword="null" />.</exception>
    </member>
    <member name="F:System.IO.Path.DirectorySeparatorChar">
      <summary>Stellt ein plattformspezifisches Zeichen bereit, das zur Trennung von Verzeichnisebenen in einer Pfadzeichenfolge verwendet wird und eine hierarchische Dateisystemorganisation wiedergibt.</summary>
    </member>
    <member name="M:System.IO.Path.EndsInDirectorySeparator(System.ReadOnlySpan{System.Char})">
      <summary>Gibt einen Wert zurück, mit dem angegeben wird, ob der als schreibgeschützter Bereich angegebene Pfad auf ein Verzeichnistrennzeichen endet.</summary>
      <param name="path">Der zu analysierende Pfad.</param>
      <returns>
        <see langword="true" />, wenn der Pfad auf ein Verzeichnistrennzeichen endet; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.EndsInDirectorySeparator(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Pfad auf ein Verzeichnistrennzeichen endet.</summary>
      <param name="path">Der zu analysierende Pfad.</param>
      <returns>
        <see langword="true" />, wenn der Pfad auf ein Verzeichnistrennzeichen endet; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})">
      <summary>Gibt die Verzeichnisinformationen für den angegebenen Pfad in Form einer Zeichenspanne zurück.</summary>
      <param name="path">Der Pfad, aus dem die Verzeichnisinformationen abgerufen werden sollen.</param>
      <returns>Verzeichnisinformationen für <paramref name="path" /> oder eine leere Spanne, wenn <paramref name="path" /><see langword="null" /> ist, eine leere Spanne oder ein Stamm (wie , C: oder \server\share).</returns>
    </member>
    <member name="M:System.IO.Path.GetDirectoryName(System.String)">
      <summary>Gibt die Verzeichnisinformationen für die angegebene Pfadzeichenfolge zurück.</summary>
      <param name="path">Der Pfad einer Datei oder eines Verzeichnisses.</param>
      <returns>Verzeichnisinformationen für <paramref name="path" /> oder <see langword="null" />, wenn <paramref name="path" /> ein Stammverzeichnis bezeichnet oder NULL ist. Gibt <see cref="F:System.String.Empty" /> zurück, wenn <paramref name="path" /> keine Verzeichnisinformationen enthält.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="path" />-Parameter enthält nur ungültige Zeichen, ist leer oder enthält nur Leerzeichen.</exception>
      <exception cref="T:System.IO.PathTooLongException">Fangen Sie in .NET für Windows Store-Apps oder der portablen Klassenbibliothek stattdessen die Basisklassenausnahme <see cref="T:System.IO.IOException" /> ab.  


            

 Der <paramref name="path" />-Parameter überschreitet die vom System definierte Maximallänge.</exception>
    </member>
    <member name="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})">
      <summary>Gibt die Erweiterung eines Dateipfads zurück, der durch eine schreibgeschützte Zeichenspanne dargestellt wird.</summary>
      <param name="path">Der Dateipfad, aus dem die Erweiterung abgerufen werden soll.</param>
      <returns>Die Erweiterung des angegebenen Pfads (einschließlich des Punkts „.“) oder <see cref="P:System.ReadOnlySpan`1.Empty" />, falls <paramref name="path" /> keine Erweiterungsinformationen umfasst.</returns>
    </member>
    <member name="M:System.IO.Path.GetExtension(System.String)">
      <summary>Gibt die Erweiterung (einschließlich des Punkts „.“) der angegebenen Pfadzeichenfolge zurück.</summary>
      <param name="path">Die Pfadzeichenfolge, aus der die Erweiterung abgerufen werden soll.</param>
      <returns>Die Erweiterung des angegebenen Pfads (einschließlich des Punkts ".") oder <see langword="null" /> oder <see cref="F:System.String.Empty" />. Wenn <paramref name="path" /> gleich <see langword="null" /> ist, gibt <see cref="M:System.IO.Path.GetExtension(System.String)" /><see langword="null" /> zurück. Wenn <paramref name="path" /> keine Informationen über die Erweiterung enthält, gibt <see cref="M:System.IO.Path.GetExtension(System.String)" /><see cref="F:System.String.Empty" /> zurück.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültigen Zeichen.</exception>
    </member>
    <member name="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})">
      <summary>Gibt den Dateinamen und die Erweiterung eines Dateipfads zurück, der durch eine schreibgeschützte Zeichenspanne dargestellt wird.</summary>
      <param name="path">Eine schreibgeschützte Spanne, die den Pfad enthält, aus dem der Dateiname und die Erweiterung abgerufen werden sollen.</param>
      <returns>Die Zeichen nach dem letzten Verzeichnistrennzeichen in <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetFileName(System.String)">
      <summary>Gibt den Dateinamen und die Erweiterung der angegebenen Pfadzeichenfolge zurück.</summary>
      <param name="path">Die Pfadzeichenfolge, aus der der Dateiname und die Erweiterung abgerufen werden sollen.</param>
      <returns>Die Zeichen nach dem letzten Verzeichnistrennzeichen in <paramref name="path" />. Wenn das letzte Zeichen von <paramref name="path" /> ein Verzeichnis- bzw. Volumetrennzeichen ist, gibt diese Methode <see cref="F:System.String.Empty" /> zurück. Wenn <paramref name="path" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="null" /> zurück.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültigen Zeichen.</exception>
    </member>
    <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})">
      <summary>Gibt den Dateinamen ohne die Erweiterung eines Dateipfads zurück, der durch eine schreibgeschützte Zeichenspanne dargestellt wird.</summary>
      <param name="path">Eine schreibgeschützte Spanne, die den Pfad enthält, aus dem der Dateiname ohne die Erweiterung abgerufen werden soll.</param>
      <returns>Die von <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" /> zurückgegebenen Zeichen in der schreibgeschützten Spanne ohne den letzten Punkt (.) und alle folgenden Zeichen.</returns>
    </member>
    <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.String)">
      <summary>Gibt den Dateinamen der angegebenen Pfadzeichenfolge ohne Erweiterung zurück.</summary>
      <param name="path">Der Pfad der Datei.</param>
      <returns>Die von <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" /> zurückgegebene Zeichenfolge ohne den letzten Punkt (.) und alle folgenden Zeichen.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültigen Zeichen.</exception>
    </member>
    <member name="M:System.IO.Path.GetFullPath(System.String)">
      <summary>Gibt den absoluten Pfad für die angegebene Pfadzeichenfolge zurück.</summary>
      <param name="path">Die Datei oder das Verzeichnis, für das die absoluten Pfadinformationen abgerufen werden sollen.</param>
      <returns>Der vollqualifizierte Speicherort von <paramref name="path" />, z. B. "C:\MyFile.txt".</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), besteht nur aus Leerraum oder enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültige Zeichen.  

oder - 
Das System konnte den absoluten Pfad nicht abrufen.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> enthält einen Doppelpunkt („:“), der kein Teil eines Volumenbezeichners (z.B. „c:\“) ist.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
    </member>
    <member name="M:System.IO.Path.GetFullPath(System.String,System.String)">
      <summary>Gibt einen absoluten Pfad aus einem vollqualifizierten Basispfad und einem relativen Pfad zurück.</summary>
      <param name="path">Ein relativer Pfad zum Verketten mit <paramref name="basePath" />.</param>
      <param name="basePath">Der Anfang eines vollqualifizierten Pfads.</param>
      <returns>Der absolute Pfad.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="basePath" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="basePath" /> ist kein vollqualifizierter Pfad.

oder -

<paramref name="path" /> oder <paramref name="basePath" /> enthält ungültige Pfadzeichen, z. B. U+0000.</exception>
    </member>
    <member name="M:System.IO.Path.GetInvalidFileNameChars">
      <summary>Ruft ein Array ab, das die Zeichen enthält, die in Dateinamen nicht zulässig sind.</summary>
      <returns>Ein Array, das die Zeichen enthält, die in Dateinamen nicht zulässig sind.</returns>
    </member>
    <member name="M:System.IO.Path.GetInvalidPathChars">
      <summary>Ruft ein Array ab, das die Zeichen enthält, die in Pfadnamen nicht zulässig sind.</summary>
      <returns>Ein Array, das die Zeichen enthält, die in Pfadnamen nicht zulässig sind.</returns>
    </member>
    <member name="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})">
      <summary>Ruft Informationen über das Stammverzeichnis aus dem Pfad ab, der in der angegebenen Zeichenspanne enthalten ist.</summary>
      <param name="path">Der Pfad, von dem Informationen über das Stammverzeichnis abgerufen werden sollen.</param>
      <returns>Eine Zeichenspanne mit dem Stammverzeichnis von path.</returns>
    </member>
    <member name="M:System.IO.Path.GetPathRoot(System.String)">
      <summary>Ruft die Informationen über das Stammverzeichnis des angegebenen Pfads ab.</summary>
      <param name="path">Der Pfad, von dem Informationen über das Stammverzeichnis abgerufen werden sollen.</param>
      <returns>Das Stammverzeichnis von <paramref name="path" /> oder <see langword="null" />, wenn <paramref name="path" /><see langword="null" /> ist, oder eine leere Zeichenfolge, wenn <paramref name="path" /> keine Informationen über das Stammverzeichnis enthält.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültigen Zeichen.  

oder - 
<see cref="F:System.String.Empty" /> wurde an <paramref name="path" /> übergeben.</exception>
    </member>
    <member name="M:System.IO.Path.GetRandomFileName">
      <summary>Gibt einen zufälligen Ordnernamen oder Dateinamen zurück.</summary>
      <returns>Ein zufälliger Ordnername oder Dateiname.</returns>
    </member>
    <member name="M:System.IO.Path.GetRelativePath(System.String,System.String)">
      <summary>Gibt einen relativen Pfad von einem Pfad zu einem anderen zurück.</summary>
      <param name="relativeTo">Der Quellpfad, zu dem das Ergebnis relativ sein muss. Dieser Pfad wird nicht immer als Verzeichnis betrachtet.</param>
      <param name="path">Der Zielpfad.</param>
      <returns>Der relative Pfad oder <paramref name="path" />, wenn die Pfade nicht denselben Stamm aufweisen.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeTo" /> oder <paramref name="path" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetTempFileName">
      <summary>Erstellt eine eindeutig benannte temporäre Datei auf dem Datenträger mit einer Größe von 0 Byte und gibt den vollständigen Pfad dieser Datei zurück.</summary>
      <returns>Der vollständige Pfad der temporären Datei.</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf, z. B. ist kein eindeutiger temporärer Dateiname verfügbar.  

oder -

 Diese Methode konnte keine temporäre Datei erstellen.</exception>
    </member>
    <member name="M:System.IO.Path.GetTempPath">
      <summary>Gibt den Pfad des temporären Ordners des aktuellen Benutzers zurück.</summary>
      <returns>Der Pfad zum temporären Ordner, endend mit einem umgekehrten Schrägstrich.</returns>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen.</exception>
    </member>
    <member name="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})">
      <summary>Legt fest, ob der Pfad, der durch die angegebene Zeichenspanne dargestellt wird, eine Erweiterung enthält.</summary>
      <param name="path">Der Pfad, in dem nach einer Erweiterung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Zeichen, die auf das letzte Verzeichnistrennzeichen oder Volumentrennzeichen im Pfad folgen, einen Punkt (.) gefolgt von einem oder mehreren Zeichen enthalten; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.HasExtension(System.String)">
      <summary>Bestimmt, ob ein Pfad eine Dateierweiterung enthält.</summary>
      <param name="path">Der Pfad, in dem nach einer Erweiterung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Zeichen, die auf das letzte Verzeichnistrennzeichen (\\ oder /) oder Volumentrennzeichen (:) im Pfad folgen, einen Punkt (.) gefolgt von einem oder mehreren Zeichen enthalten; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültigen Zeichen.</exception>
    </member>
    <member name="F:System.IO.Path.InvalidPathChars">
      <summary>Stellt ein plattformspezifisches Array von Zeichen bereit, die nicht in Pfadzeichenfolgenargumenten angegeben werden können, die an Member der <see cref="T:System.IO.Path" />-Klasse übergeben werden.</summary>
    </member>
    <member name="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})">
      <summary>Gibt einen Wert zurück, der angibt, ob der durch die angegebene Zeichenspanne dargestellte Dateipfad auf ein bestimmtes Laufwerk oder einen UNC-Pfad festgelegt ist.</summary>
      <param name="path">Ein Dateipfad.</param>
      <returns>
        <see langword="true" />, wenn der Pfad auf ein bestimmtes Laufwerk oder einen UNC-Pfad festgelegt ist; <see langword="false" />, wenn der Pfad relativ zum aktuellen Laufwerk oder Arbeitsverzeichnis angegeben ist.</returns>
    </member>
    <member name="M:System.IO.Path.IsPathFullyQualified(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Dateipfad auf ein bestimmtes Laufwerk oder einen UNC-Pfad festgelegt ist.</summary>
      <param name="path">Ein Dateipfad.</param>
      <returns>
        <see langword="true" />, wenn der Pfad auf ein bestimmtes Laufwerk oder einen UNC-Pfad festgelegt ist; <see langword="false" />, wenn der Pfad relativ zum aktuellen Laufwerk oder Arbeitsverzeichnis angegeben ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})">
      <summary>Gibt einen Wert zurück, der angibt, ob die angegebene Zeichenspanne zur Darstellung eines Dateipfads einen Stamm enthält.</summary>
      <param name="path">Der zu testende Pfad.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="path" /> einen Stamm enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.IsPathRooted(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob die angegebene Pfadzeichenfolge einen Stamm enthält.</summary>
      <param name="path">Der zu testende Pfad.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="path" /> einen Stamm enthält, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> enthält mindestens eines der in <see cref="M:System.IO.Path.GetInvalidPathChars" /> definierten ungültigen Zeichen.</exception>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Verkettet zwei Pfadkomponenten zu einem einzigen Pfad.</summary>
      <param name="path1">Eine Zeichenspanne, die den ersten Pfad für die Verknüpfung enthält.</param>
      <param name="path2">Eine Zeichenspanne, die den zweiten Pfad für die Verknüpfung enthält.</param>
      <returns>Die kombinierten Pfade.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Verkettet drei Pfadkomponenten zu einem einzigen Pfad.</summary>
      <param name="path1">Eine Zeichenspanne, die den ersten Pfad für die Verknüpfung enthält.</param>
      <param name="path2">Eine Zeichenspanne, die den zweiten Pfad für die Verknüpfung enthält.</param>
      <param name="path3">Eine Zeichenspanne, die den dritten Pfad für die Verknüpfung enthält.</param>
      <returns>Der verkettete Pfad.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Verkettet vier Pfadkomponenten zu einem einzelnen Pfad.</summary>
      <param name="path1">Eine Zeichenspanne, die den ersten Pfad für die Verknüpfung enthält.</param>
      <param name="path2">Eine Zeichenspanne, die den zweiten Pfad für die Verknüpfung enthält.</param>
      <param name="path3">Eine Zeichenspanne, die den dritten Pfad für die Verknüpfung enthält.</param>
      <param name="path4">Eine Zeichenspanne, die den vierten zu verknüpfenden Pfad enthält.</param>
      <returns>Der verkettete Pfad.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String)">
      <summary>Verkettet zwei Pfade zu einem einzelnen Pfad.</summary>
      <param name="path1">Der erste Pfad für die Verknüpfung.</param>
      <param name="path2">Der zweite Pfad für die Verknüpfung.</param>
      <returns>Der verkettete Pfad.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String,System.String)">
      <summary>Verkettet drei Pfade zu einem einzelnen Pfad.</summary>
      <param name="path1">Der erste Pfad für die Verknüpfung.</param>
      <param name="path2">Der zweite Pfad für die Verknüpfung.</param>
      <param name="path3">Der dritte Pfad für die Verknüpfung.</param>
      <returns>Der verkettete Pfad.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String,System.String,System.String)">
      <summary>Verkettet vier Pfade zu einem einzelnen Pfad.</summary>
      <param name="path1">Der erste Pfad für die Verknüpfung.</param>
      <param name="path2">Der zweite Pfad für die Verknüpfung.</param>
      <param name="path3">Der dritte Pfad für die Verknüpfung.</param>
      <param name="path4">Der vierte Pfad für die Verknüpfung.</param>
      <returns>Der verkettete Pfad.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String[])">
      <summary>Verkettet ein Array von Pfaden zu einem einzelnen Pfad.</summary>
      <param name="paths">Ein Array von Pfaden.</param>
      <returns>Der verkettete Pfad.</returns>
    </member>
    <member name="F:System.IO.Path.PathSeparator">
      <summary>Ein plattformspezifisches Trennzeichen, das zur Trennung von Pfadzeichenfolgen in Umgebungsvariablen verwendet wird.</summary>
    </member>
    <member name="M:System.IO.Path.TrimEndingDirectorySeparator(System.ReadOnlySpan{System.Char})">
      <summary>Schneidet ein nachstehendes Verzeichnistrennzeichen nach dem Stamm des angegebenen Pfads ab.</summary>
      <param name="path">Der Pfad, der zugeschnitten werden soll.</param>
      <returns>
        <paramref name="path" /> ohne nachstehende Verzeichnistrennzeichen.</returns>
    </member>
    <member name="M:System.IO.Path.TrimEndingDirectorySeparator(System.String)">
      <summary>Schneidet ein nachstehendes Verzeichnistrennzeichen nach dem Stamm des angegebenen Pfads ab.</summary>
      <param name="path">Der Pfad, der zugeschnitten werden soll.</param>
      <returns>
        <paramref name="path" /> ohne nachstehende Verzeichnistrennzeichen.</returns>
    </member>
    <member name="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)">
      <summary>Versucht, zwei Pfadkomponenten zu einer einzigen vorbelegten Zeichenspanne zu verketten, und gibt einen Wert zurück, der den Erfolg des Vorgangs angibt.</summary>
      <param name="path1">Eine Zeichenspanne, die den ersten Pfad für die Verknüpfung enthält.</param>
      <param name="path2">Eine Zeichenspanne, die den zweiten Pfad für die Verknüpfung enthält.</param>
      <param name="path3">Eine Zeichenspanne, die den dritten Pfad für die Verknüpfung enthält.</param>
      <param name="destination">Eine Zeichenspanne, die den verketteten Pfad enthalten soll.</param>
      <param name="charsWritten">Ein Wert bei Rückgabe der Methode, der die Anzahl der Zeichen angibt, die in <paramref name="destination" /> geschrieben werden.</param>
      <returns>
        <see langword="true" />, wenn die Verkettung erfolgreich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)">
      <summary>Versucht, zwei Pfadkomponenten zu einer einzigen vorbelegten Zeichenspanne zu verketten, und gibt einen Wert zurück, der den Erfolg des Vorgangs angibt.</summary>
      <param name="path1">Eine Zeichenspanne, die den ersten Pfad für die Verknüpfung enthält.</param>
      <param name="path2">Eine Zeichenspanne, die den zweiten Pfad für die Verknüpfung enthält.</param>
      <param name="destination">Eine Zeichenspanne, die den verketteten Pfad enthalten soll.</param>
      <param name="charsWritten">Ein Wert bei Rückgabe der Methode, der die Anzahl der Zeichen angibt, die in <paramref name="destination" /> geschrieben werden.</param>
      <returns>
        <see langword="true" />, wenn die Verkettung erfolgreich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="F:System.IO.Path.VolumeSeparatorChar">
      <summary>Stellt ein plattformspezifisches Volumetrennzeichen bereit.</summary>
    </member>
    <member name="T:System.IO.StreamReader">
      <summary>Implementiert einen <see cref="T:System.IO.TextReader" />, der Zeichen aus einem Bytestream in einer bestimmten Codierung liest.</summary>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Stream.</summary>
      <param name="stream">Der zu lesende Stream.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse des angegebenen Streams mit der angegebenen Option zur Erkennung der Markierung für die Bytereihenfolge.</summary>
      <param name="stream">Der zu lesende Stream.</param>
      <param name="detectEncodingFromByteOrderMarks">Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Stream und mit der angegebenen Zeichencodierung.</summary>
      <param name="stream">Der zu lesende Stream.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Stream mit der angegebenen Zeichencodierung und der Option zur Erkennung der Markierung für die Bytereihenfolge.</summary>
      <param name="stream">Der zu lesende Stream.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="detectEncodingFromByteOrderMarks">Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> unterstützt keine Lesevorgänge.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Stream mit der angegebenen Zeichencodierung, der Option zur Erkennung der Markierung für die Bytereihenfolge und der angegebenen Puffergröße.</summary>
      <param name="stream">Der zu lesende Stream.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="detectEncodingFromByteOrderMarks">Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll.</param>
      <param name="bufferSize">Die Mindestgröße des Puffers.</param>
      <exception cref="T:System.ArgumentException">Lesevorgänge werden vom Stream nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> ist kleiner gleich 0 (null).</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Stream auf Grundlage der angegebenen Zeichencodierung, der Option zur Erkennung der Markierung für die Bytereihenfolge, der Puffergröße und lässt optional den Stream geöffnet.</summary>
      <param name="stream">Der zu lesende Stream.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="detectEncodingFromByteOrderMarks">
        <see langword="true" />, um am Anfang der Datei nach Bytereihenfolgemarkierungen zu suchen, andernfalls <see langword="false" />.</param>
      <param name="bufferSize">Die Mindestgröße des Puffers.</param>
      <param name="leaveOpen">
        <see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.StreamReader" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Dateinamen.</summary>
      <param name="path">Der zu lesende vollständige Dateipfad.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Dateinamen mit der angegebenen Option zur Erkennung der Markierung für die Bytereihenfolge.</summary>
      <param name="path">Der zu lesende vollständige Dateipfad.</param>
      <param name="detectEncodingFromByteOrderMarks">Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Dateinamen und mit der angegebenen Zeichencodierung.</summary>
      <param name="path">Der zu lesende vollständige Dateipfad.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Dateinamen mit der angegebenen Zeichencodierung und der Option zur Erkennung der Bytereihenfolgemarkierung.</summary>
      <param name="path">Der zu lesende vollständige Dateipfad.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="detectEncodingFromByteOrderMarks">Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamReader" />-Klasse für den angegebenen Dateinamen mit der angegebenen Zeichencodierung, der Option zur Erkennung der Bytereihenfolgemarkierung und der angegebenen Puffergröße.</summary>
      <param name="path">Der zu lesende vollständige Dateipfad.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="detectEncodingFromByteOrderMarks">Gibt an, ob am Anfang der Datei nach Bytereihenfolgemarken gesucht werden soll.</param>
      <param name="bufferSize">Die Mindestgröße des Puffers als Zahl aus 16-Bit-Zeichen.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="buffersize" /> ist kleiner gleich 0 (null).</exception>
    </member>
    <member name="P:System.IO.StreamReader.BaseStream">
      <summary>Gibt den zugrunde liegenden Stream zurück.</summary>
      <returns>Der zugrunde liegende Stream.</returns>
    </member>
    <member name="M:System.IO.StreamReader.Close">
      <summary>Schließt das <see cref="T:System.IO.StreamReader" />-Objekt sowie den zugrunde liegenden Stream und gibt alle dem Reader zugeordneten Systemressourcen frei.</summary>
    </member>
    <member name="P:System.IO.StreamReader.CurrentEncoding">
      <summary>Ruft die aktuelle Zeichencodierung ab, die das aktuelle <see cref="T:System.IO.StreamReader" />-Objekt verwendet.</summary>
      <returns>Die durch das aktuelle Leseprogramm verwendete aktuelle Zeichencodierung. Der Wert kann sich nach dem ersten Aufruf einer <see cref="Overload:System.IO.StreamReader.Read" />-Methode von <see cref="T:System.IO.StreamReader" /> ändern, da die automatische Erkennung der Codierung erst nach dem ersten Aufruf einer <see cref="Overload:System.IO.StreamReader.Read" />-Methode erfolgt.</returns>
    </member>
    <member name="M:System.IO.StreamReader.DiscardBufferedData">
      <summary>Löscht den internen Puffer.</summary>
    </member>
    <member name="M:System.IO.StreamReader.Dispose(System.Boolean)">
      <summary>Schließt den zugrunde liegenden Stream und gibt die vom <see cref="T:System.IO.StreamReader" /> verwendeten nicht verwalteten Ressourcen sowie optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.StreamReader.EndOfStream">
      <summary>Ruft einen Wert ab, der angibt, ob sich die aktuelle Streamposition am Ende des Streams befindet.</summary>
      <returns>
        <see langword="true" />, wenn sich die aktuelle Streamposition am Ende des Streams befindet, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Der zugrunde liegende Stream wurde verworfen.</exception>
    </member>
    <member name="F:System.IO.StreamReader.Null">
      <summary>Ein <see cref="T:System.IO.StreamReader" />-Objekt um einen leeren Stream.</summary>
    </member>
    <member name="M:System.IO.StreamReader.Peek">
      <summary>Gibt das nächste verfügbare Zeichen zurück, ohne es zu verarbeiten.</summary>
      <returns>Eine ganze Zahl, die das nächste zu lesende Zeichen darstellt, oder -1, wenn keine zu lesenden Zeichen vorhanden sind oder der Stream keine Suchvorgänge unterstützt.</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read">
      <summary>Liest das nächste Zeichen aus dem Eingabestream und verschiebt die Zeichenposition um ein Zeichen nach vorn.</summary>
      <returns>Das nächste Zeichen im Eingabestream wird als <see cref="T:System.Int32" />-Objekt dargestellt, oder -1, wenn keine weiteren Zeichen verfügbar sind.</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Liest vom aktuellen Stream ein angegebenes Maximum von Zeichen in einen Puffer ein und beginnt dabei am angegebenen Index.</summary>
      <param name="buffer">Wenn diese Methode zurückgegeben wird, enthält dieser Parameter das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<c>index + count –1</c>), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Der Index von <paramref name="buffer" />, bei dem mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <returns>Die Anzahl der gelesenen Zeichen, bzw. 0 (null), wenn das Ende des Streams erreicht ist und keine Daten gelesen wurden. Die Anzahl ist gleich dem <paramref name="count" />-Parameter oder kleiner, abhängig davon, ob die Daten im Stream verfügbar sind.</returns>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">Es ist ein E/A-Fehler aufgetreten, beispielsweise das Schließen eines Streams.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Höchstanzahl von Zeichen asynchron aus dem aktuellen Stream und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Enthält nach der Rückgabe dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> - 1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen. Wenn das Ende des Streams erreicht ist, bevor die angegebene Anzahl von Zeichen in den Puffer geschrieben wurde, erfolgt die aktuelle Methodenrückgabe.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Zeichen, die in den Puffer gelesen werden. Der Ergebniswert kann kleiner als die Anzahl der angeforderten Zeichen sein, wenn die Anzahl der derzeit verfügbaren Zeichen kleiner ist als die angeforderte Anzahl, oder er kann 0 (null) sein, wenn das Datenstromende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe von <paramref name="index" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Höchstanzahl von Zeichen aus dem aktuellen Stream und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Wenn diese Methode zurückgegeben wird, enthält dieser Parameter das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<c>index + count –1</c>), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <returns>Die Anzahl der gelesenen Zeichen. Die Anzahl ist kleiner oder gleich <paramref name="count" />, je nachdem, ob alle Eingabezeichen gelesen wurden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.IO.StreamReader" /> wird geschlossen.</exception>
      <exception cref="T:System.IO.IOException">E/A-Fehler</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Höchstanzahl von Zeichen asynchron aus dem aktuellen Stream und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Enthält nach der Rückgabe dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> - 1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen. Wenn das Ende des Streams erreicht ist, bevor die angegebene Anzahl von Zeichen in den Puffer geschrieben wurde, erfolgt die Methodenrückgabe.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Zeichen, die in den Puffer gelesen werden. Der Ergebniswert kann kleiner als die Anzahl der angeforderten Zeichen sein, wenn die Anzahl der derzeit verfügbaren Zeichen kleiner ist als die angeforderte Anzahl, oder er kann 0 (null) sein, wenn das Datenstromende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe von <paramref name="index" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StreamReader.ReadLine">
      <summary>Liest eine Zeile von Zeichen aus dem aktuellen Stream und gibt die Daten als Zeichenfolge zurück.</summary>
      <returns>Die nächste Zeile des Eingabestreams, bzw. <see langword="null" />, wenn das Ende des Eingabestreams erreicht ist.</returns>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Speicher vorhanden, um einen Puffer für die zurückgegebene Zeichenfolge zuzuordnen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadLineAsync">
      <summary>Liest eine Zeile von Zeichen asynchron aus dem aktuellen Stream und gibt die Daten als Zeichenfolge zurück.</summary>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die nächste Zeile aus dem Stream oder <see langword="null" />, wenn alle Zeichen gelesen wurden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Zeichen in der nächsten Zeile ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadToEnd">
      <summary>Liest alle Zeichen von der aktuellen Position bis zum Ende des Streams.</summary>
      <returns>Der Rest des Streams als Zeichenfolge, von der aktuellen Position bis zum Ende. Wenn die aktuelle Position am Ende des Streams ist, wird eine leere Zeichenfolge ("") zurückgegeben.</returns>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Speicher vorhanden, um einen Puffer für die zurückgegebene Zeichenfolge zuzuordnen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadToEndAsync">
      <summary>Liest alle Zeichen asynchron von der aktuellen Position bis zum Ende des Streams und gibt diese als einzelne Zeichenfolge zurück.</summary>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält eine Zeichenfolge mit den Zeichen von der aktuellen Position bis zum Ende des Streams.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Zeichen ist niedriger als <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="T:System.IO.StreamWriter">
      <summary>Implementiert einen <see cref="T:System.IO.TextWriter" /> zum Schreiben von Zeichen in einen Stream in einer bestimmten Codierung.</summary>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamWriter" />-Klasse für den angegebenen Stream unter Verwedung UTF-8-Codierung und der Standardpuffergröße.</summary>
      <param name="stream">Der Stream, in den geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> kann nicht geschrieben werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamWriter" />-Klasse für den angegebenen Stream unter Verwendung der angegebenen Codierung und der Standardpuffergröße.</summary>
      <param name="stream">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> kann nicht geschrieben werden.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamWriter" />-Klasse für den angegebenen Stream unter Verwendung der angegebenen Codierung und Puffergröße.</summary>
      <param name="stream">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="bufferSize">Die Puffergröße in Byte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> kann nicht geschrieben werden.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamWriter" />-Klasse für den angegebenen Stream unter Verwendung der angegebenen Codierung und der Puffergröße und lässt optional den Stream geöffnet.</summary>
      <param name="stream">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="bufferSize">Die Puffergröße in Byte.</param>
      <param name="leaveOpen">
        <see langword="true" />, um den Datenstrom geöffnet zu lassen, nach dem das <see cref="T:System.IO.StreamWriter" />-Objekt freigegeben wurde; andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> kann nicht geschrieben werden.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamWriter" />-Klasse für die angegebene Datei unter Verwendung der Standardcodierung und -puffergröße.</summary>
      <param name="path">Der vollständige Dateipfad, in den geschrieben werden soll. <paramref name="path" /> kann ein Dateiname sein.</param>
      <exception cref="T:System.UnauthorizedAccessException">Der Zugriff wird verweigert.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge ("").  

oder - 
<paramref name="path" /> enthält den Namen eines Systemgeräts (com1, com2 usw.).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamWriter" />-Klasse für die angegebene Datei unter Verwendung der Standardcodierung und -puffergröße. Wenn die Datei vorhanden ist, kann sie überschrieben oder angefügt werden. Wenn die Datei nicht vorhanden ist, erstellt dieser Konstruktor eine neue Datei.</summary>
      <param name="path">Der vollständige Dateipfad, in den geschrieben werden soll.</param>
      <param name="append">
        <see langword="true" />, wenn Daten an die Datei angefügt werden sollen, <see langword="false" />, wenn die Datei überschrieben werden soll. Wenn die angegebene Datei nicht vorhanden ist, hat dieser Parameter keine Auswirkungen, und der Konstruktor erstellt eine neue Datei.</param>
      <exception cref="T:System.UnauthorizedAccessException">Der Zugriff wird verweigert.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist leer.  

oder - 
<paramref name="path" /> enthält den Namen eines Systemgeräts (com1, com2 usw.).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StreamWriter" />-Klasse für die angegebene Datei unter Verwendung der angegebenen Codierung und Standardpuffergröße. Wenn die Datei vorhanden ist, kann sie überschrieben oder angefügt werden. Wenn die Datei nicht vorhanden ist, erstellt dieser Konstruktor eine neue Datei.</summary>
      <param name="path">Der vollständige Dateipfad, in den geschrieben werden soll.</param>
      <param name="append">
        <see langword="true" />, wenn Daten an die Datei angefügt werden sollen, <see langword="false" />, wenn die Datei überschrieben werden soll. Wenn die angegebene Datei nicht vorhanden ist, hat dieser Parameter keine Auswirkungen, und der Konstruktor erstellt eine neue Datei.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <exception cref="T:System.UnauthorizedAccessException">Der Zugriff wird verweigert.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist leer.  

oder - 
<paramref name="path" /> enthält den Namen eines Systemgeräts (com1, com2 usw.).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
      <summary>Initialisiert für die angegebene Datei im angegebenen Pfad eine neue Instanz der <see cref="T:System.IO.StreamWriter" />-Klasse unter Verwendung der angegebenen Codierung und der Puffergröße. Wenn die Datei vorhanden ist, kann sie überschrieben oder angefügt werden. Wenn die Datei nicht vorhanden ist, erstellt dieser Konstruktor eine neue Datei.</summary>
      <param name="path">Der vollständige Dateipfad, in den geschrieben werden soll.</param>
      <param name="append">
        <see langword="true" />, wenn Daten an die Datei angefügt werden sollen, <see langword="false" />, wenn die Datei überschrieben werden soll. Wenn die angegebene Datei nicht vorhanden ist, hat dieser Parameter keine Auswirkungen, und der Konstruktor erstellt eine neue Datei.</param>
      <param name="encoding">Die zu verwendende Zeichencodierung.</param>
      <param name="bufferSize">Die Puffergröße in Byte.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> ist eine leere Zeichenfolge ("").  

oder - 
<paramref name="path" /> enthält den Namen eines Systemgeräts (com1, com2 usw.).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> oder <paramref name="encoding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Zugriff wird verweigert.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
    </member>
    <member name="P:System.IO.StreamWriter.AutoFlush">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.IO.StreamWriter" /> nach jedem Aufruf von <see cref="M:System.IO.StreamWriter.Write(System.Char)" /> den Puffer in den zugrunde liegenden Stream wegschreibt, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, um <see cref="T:System.IO.StreamWriter" /> zum Entleeren des Puffers zu zwingen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.StreamWriter.BaseStream">
      <summary>Ruft den zugrunde liegenden Stream ab, der eine Schnittstelle zu einem Sicherungsspeicher bildet.</summary>
      <returns>Der Stream, in den dieser <see langword="StreamWriter" /> schreibt.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.Close">
      <summary>Schließt das aktuelle <see langword="StreamWriter" />-Objekt und den zugrunde liegenden Stream.</summary>
      <exception cref="T:System.Text.EncoderFallbackException">Die aktuelle Codierung unterstützt das Anzeigen einer Hälfte eines Unicode-Ersatzzeichenpaars nicht.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Dispose(System.Boolean)">
      <summary>Bewirkt, dass alle gepufferten Daten in den zugrunde liegenden Stream geschrieben werden, und gibt die vom <see cref="T:System.IO.StreamWriter" /> verwendeten nicht verwalteten Ressourcen sowie optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Die aktuelle Codierung unterstützt das Anzeigen einer Hälfte eines Unicode-Ersatzzeichenpaars nicht.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.DisposeAsync">
      <summary>Schreibt gepufferte Daten asynchron in den zugrunde liegenden Datenstrom und veröffentlicht die nicht verwalteten Ressourcen, die von <see cref="T:System.IO.StreamWriter" /> verwendet werden.</summary>
      <returns>Eine Aufgabe, die den asynchronen Löschvorgang darstellt.</returns>
    </member>
    <member name="P:System.IO.StreamWriter.Encoding">
      <summary>Ruft die <see cref="T:System.Text.Encoding" /> ab, in der die Ausgabe geschrieben wird.</summary>
      <returns>Die im Konstruktor für die aktuelle Instanz angegebene <see cref="T:System.Text.Encoding" /> oder <see cref="T:System.Text.UTF8Encoding" />, sofern keine Codierung angegeben wurde.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.Flush">
      <summary>Löscht sämtliche Puffer für den aktuellen Writer und veranlasst die Ausgabe aller gepufferten Daten an den zugrunde liegenden Stream.</summary>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Writer wird geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler ist aufgetreten.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Die aktuelle Codierung unterstützt das Anzeigen einer Hälfte eines Unicode-Ersatzzeichenpaars nicht.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.FlushAsync">
      <summary>Löscht alle Puffer für diesen Stream asynchron und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</summary>
      <returns>Eine Aufgabe, die die asynchrone Leerung darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Stream wurde verworfen.</exception>
    </member>
    <member name="F:System.IO.StreamWriter.Null">
      <summary>Stellt einen <see langword="StreamWriter" /> ohne Sicherungsspeicher bereit, in den zwar geschrieben, aus dem jedoch nicht gelesen werden kann.</summary>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char)">
      <summary>Schreibt ein Zeichen in den Stream.</summary>
      <param name="value">Das in den Stream zu schreibende Zeichen.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> ist true, oder der <see cref="T:System.IO.StreamWriter" />-Puffer ist voll, und der aktuelle Writer ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> ist true, oder der <see cref="T:System.IO.StreamWriter" />-Puffer ist voll, und der Inhalt des Puffers kann nicht in den zugrunde liegenden Stream fester Größe geschrieben werden, da der <see cref="T:System.IO.StreamWriter" /> sich am Ende des Streams befindet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char[])">
      <summary>Schreibt ein Zeichenarray in den Stream.</summary>
      <param name="buffer">Ein Zeichenarray mit den zu schreibenden Daten. Wenn <paramref name="buffer" /> den Wert <see langword="null" /> ist, wird nichts geschrieben.</param>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> ist true, oder der <see cref="T:System.IO.StreamWriter" />-Puffer ist voll, und der aktuelle Writer ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> ist true, oder der <see cref="T:System.IO.StreamWriter" />-Puffer ist voll, und der Inhalt des Puffers kann nicht in den zugrunde liegenden Stream fester Größe geschrieben werden, da der <see cref="T:System.IO.StreamWriter" /> sich am Ende des Streams befindet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Unterarray von Zeichen in den Stream.</summary>
      <param name="buffer">Ein Zeichenarray, das die zu schreibenden Daten enthält.</param>
      <param name="index">Die Zeichenposition im Puffer, an der mit dem Lesen von Daten begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> ist true, oder der <see cref="T:System.IO.StreamWriter" />-Puffer ist voll, und der aktuelle Writer ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> ist true, oder der <see cref="T:System.IO.StreamWriter" />-Puffer ist voll, und der Inhalt des Puffers kann nicht in den zugrunde liegenden Stream fester Größe geschrieben werden, da der <see cref="T:System.IO.StreamWriter" /> sich am Ende des Streams befindet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Schreibt eine Zeichenspanne in den Datenstrom.</summary>
      <param name="buffer">Die zu schreibende Zeichenspanne.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String)">
      <summary>Schreibt eine Zeichenfolge in den Stream.</summary>
      <param name="value">Die Zeichenfolge, die in den Stream geschrieben werden soll. Wenn <paramref name="value" /> NULL ist, wird nichts geschrieben.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> ist true, oder der <see cref="T:System.IO.StreamWriter" />-Puffer ist voll, und der aktuelle Writer ist geschlossen.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> ist true, oder der <see cref="T:System.IO.StreamWriter" />-Puffer ist voll, und der Inhalt des Puffers kann nicht in den zugrunde liegenden Stream fester Größe geschrieben werden, da der <see cref="T:System.IO.StreamWriter" /> sich am Ende des Streams befindet.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge in den Datenstrom unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das zu formatierende und zu schreibende Objekt.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge in den Datenstrom unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende und zu schreibende Objekt.</param>
      <param name="arg1">Das zweite zu formatierende und zu schreibende Objekt.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge in den Datenstrom unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende und zu schreibende Objekt.</param>
      <param name="arg1">Das zweite zu formatierende und zu schreibende Objekt.</param>
      <param name="arg2">Das dritte zu formatierende und zu schreibende Objekt.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object[])">
      <summary>Schreibt eine formatierte Zeichenfolge in den Datenstrom unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object[])" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg">Ein Objektarray mit 0 (null) oder mehr zu formatierenden und zu schreibenden Objekten.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.Char)">
      <summary>Schreibt ein Zeichen asynchron in den Datenstrom.</summary>
      <param name="value">Das in den Stream zu schreibende Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Streamwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Streamwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Teilarray von Zeichen asynchron in den Datenstrom.</summary>
      <param name="buffer">Ein Zeichenarray, das die zu schreibenden Daten enthält.</param>
      <param name="index">Die Zeichenposition im Puffer, an der mit dem Lesen von Daten begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Streamwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Streamwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Schreibt einen Zeichenspeicherbereich asynchron in den Datenstrom.</summary>
      <param name="buffer">Der Zeichenspeicherbereich, der in den Datenstrom geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.String)">
      <summary>Schreibt eine Zeichenfolge asynchron in den Datenstrom.</summary>
      <param name="value">Die Zeichenfolge, die in den Stream geschrieben werden soll. Wenn <paramref name="value" /> den Wert <see langword="null" /> ist, wird nichts geschrieben.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Streamwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Streamwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Schreibt die Textdarstellung einer Zeichenspanne, auf die ein Zeichen für den Zeilenabschluss folgt, in den Datenstrom.</summary>
      <param name="buffer">Die in den Datenstrom zu schreibende Zeichenspanne.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String)">
      <summary>Schreibt eine Zeichenfolge, gefolgt von einem Zeichen für den Zeilenabschluss, in den Datenstrom.</summary>
      <param name="value">Die zu schreibende Zeichenfolge. Wenn <paramref name="value" /><see langword="null" /> ist, wird nur das Zeichen für den Zeilenabschluss geschrieben.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge und eine neue Zeile in den Datenstrom unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das zu formatierende und zu schreibende Objekt.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge und eine neue Zeile in den Datenstrom unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende und zu schreibende Objekt.</param>
      <param name="arg1">Das zweite zu formatierende und zu schreibende Objekt.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge und eine neue Zeile in den Datenstrom unter Verwendung der gleichen Semantik wie <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende und zu schreibende Objekt.</param>
      <param name="arg1">Das zweite zu formatierende und zu schreibende Objekt.</param>
      <param name="arg2">Das dritte zu formatierende und zu schreibende Objekt.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object[])">
      <summary>Schreibt eine formatierte Zeichenfolge und eine neue Zeile in den Datenstrom unter Verwendung der gleichen Semantik wie <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg">Ein Objektarray mit 0 (null) oder mehr zu formatierenden und zu schreibenden Objekten.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync">
      <summary>Schreibt ein Zeichen für den Zeilenabschluss asynchron in den Datenstrom.</summary>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Streamwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Streamwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
      <summary>Schreibt ein Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in den Datenstrom.</summary>
      <param name="value">Das in den Stream zu schreibende Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Streamwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Streamwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Unterarray von Zeichen, gefolgt von einem Zeilenabschlusszeichen, asynchron in denn Datenstrom.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Die Zeichenposition im Puffer, an der mit dem Lesen von Daten begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Streamwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Streamwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Schreibt die Textdarstellung eines Zeichenspeicherbereichs, gefolgt von einem Zeilenabschlusszeichen, asynchron in den Datenstrom.</summary>
      <param name="buffer">Der Zeichenspeicherbereich, der in den Datenstrom geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
      <summary>Schreibt eine Zeichenfolge, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in den Datenstrom.</summary>
      <param name="value">Die zu schreibende Zeichenfolge. Wenn der Wert <see langword="null" /> ist, wird nur ein Zeichen für den Zeilenabschluss geschrieben.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Streamwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Streamwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="T:System.IO.StringReader">
      <summary>Implementiert einen <see cref="T:System.IO.TextReader" />, der aus einer Zeichenfolge liest.</summary>
    </member>
    <member name="M:System.IO.StringReader.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StringReader" />-Klasse, die aus der angegebenen Zeichenfolge liest.</summary>
      <param name="s">Die Zeichenfolge, mit der der <see cref="T:System.IO.StringReader" /> initialisiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="s" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringReader.Close">
      <summary>Schließt den <see cref="T:System.IO.StringReader" />.</summary>
    </member>
    <member name="M:System.IO.StringReader.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.StringReader" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.StringReader.Peek">
      <summary>Gibt das nächste verfügbare Zeichen zurück, ohne es zu verarbeiten.</summary>
      <returns>Eine ganze Zahl, die das nächste zu lesende Zeichen darstellt, oder auch -1, wenn keine weiteren Zeichen verfügbar sind oder der Stream keine Suchvorgänge unterstützt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Reader ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read">
      <summary>Liest das nächste Zeichen aus der Eingabezeichenfolge und verschiebt die Zeichenposition um ein Zeichen nach vorn.</summary>
      <returns>Das nächste Zeichen in der zugrunde liegenden Zeichenfolge oder -1, wenn keine weiteren Zeichen verfügbar sind.</returns>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Reader ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Liest einen Zeichenblock aus der Eingabezeichenfolge und verschiebt die Zeichenposition um die durch <paramref name="count" /> angegebene Anzahl von Zeichen nach vorn.</summary>
      <param name="buffer">Enthält nach der Rückgabe dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> - 1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Der Anfangsindex im Puffer.</param>
      <param name="count">Die Anzahl der zu lesenden Zeichen.</param>
      <returns>Die Gesamtanzahl der in den Puffer gelesenen Zeichen. Diese kann kleiner als die Anzahl der angeforderten Zeichen sein, wenn diese Anzahl von Zeichen derzeit nicht verfügbar ist, oder 0, wenn das Ende der zugrunde liegenden Zeichenfolge erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Reader ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Höchstanzahl von Zeichen asynchron aus der aktuellen Zeichenkette und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Enthält nach der Rückgabe dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> - 1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen. Wenn das Ende der Zeichenfolge erreicht ist, bevor die angegebene Anzahl von Zeichen in den Puffer geschrieben wurde, erfolgt die Methodenrückgabe.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Zeichenfolgenende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe aus <paramref name="index" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgen-Reader wurde freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Höchstanzahl von Zeichen asynchron aus der aktuellen Zeichenkette und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Enthält nach der Rückgabe dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> - 1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen. Wenn das Ende der Zeichenfolge erreicht ist, bevor die angegebene Anzahl von Zeichen in den Puffer geschrieben wurde, erfolgt die Methodenrückgabe.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Zeichenfolgenende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe aus <paramref name="index" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgen-Reader wurde freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird gerade durch einen früheren Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.StringReader.ReadLine">
      <summary>Liest eine Zeile von Zeichen aus der aktuellen Zeichenkette und gibt die Daten als Zeichenfolge zurück.</summary>
      <returns>Die nächste Zeile der aktuellen Zeichenfolge oder <see langword="null" />, wenn das Ende der Zeichenfolge erreicht ist.</returns>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Reader ist geschlossen.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Speicher vorhanden, um einen Puffer für die zurückgegebene Zeichenfolge zuzuordnen.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadLineAsync">
      <summary>Liest eine Zeile von Zeichen asynchron aus der aktuellen Zeichenkette und gibt die Daten als Zeichenfolge zurück.</summary>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die nächste Zeile aus dem Zeichenfolgenreader oder <see langword="null" />, wenn alle Zeichen gelesen wurden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Zeichen in der nächsten Zeile ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgen-Reader wurde freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadToEnd">
      <summary>Liest alle Zeichen von der aktuellen Position bis zum Ende des Streams und gibt diese als einzelne Zeichenfolge zurück.</summary>
      <returns>Der Inhalt ab der aktuellen Position bis zum Ende der zugrunde liegenden Zeichenfolge.</returns>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Speicher vorhanden, um einen Puffer für die zurückgegebene Zeichenfolge zuzuordnen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der aktuelle Reader ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadToEndAsync">
      <summary>Liest alle Zeichen asynchron von der aktuellen Position bis zum Ende des Streams und gibt diese als einzelne Zeichenfolge zurück.</summary>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält eine Zeichenfolge mit den Zeichen von der aktuellen Position bis zum Ende der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Zeichen ist niedriger als <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgen-Reader wurde freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="T:System.IO.StringWriter">
      <summary>Implementiert einen <see cref="T:System.IO.TextWriter" /> zum Schreiben von Informationen in eine Zeichenfolge. Die Informationen werden in einem zugrunde liegenden <see cref="T:System.Text.StringBuilder" /> gespeichert.</summary>
    </member>
    <member name="M:System.IO.StringWriter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StringWriter" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StringWriter" />-Klasse mit dem angegebenen Formatierungssteuerelement.</summary>
      <param name="formatProvider">Ein <see cref="T:System.IFormatProvider" />-Objekt zum Steuern der Formatierung.</param>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StringWriter" />-Klasse zum Schreiben in den angegebenen <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="sb">Das <see cref="T:System.Text.StringBuilder" />-Objekt, in das geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sb" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.StringWriter" />-Klasse zum Schreiben in den angegebenen <see cref="T:System.Text.StringBuilder" /> und mit dem angegebenen Formatanbieter.</summary>
      <param name="sb">Das <see cref="T:System.Text.StringBuilder" />-Objekt, in das geschrieben werden soll.</param>
      <param name="formatProvider">Ein <see cref="T:System.IFormatProvider" />-Objekt zum Steuern der Formatierung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sb" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Close">
      <summary>Schließt den aktuellen <see cref="T:System.IO.StringWriter" /> und den zugrunde liegenden Stream.</summary>
    </member>
    <member name="M:System.IO.StringWriter.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.StringWriter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="P:System.IO.StringWriter.Encoding">
      <summary>Ruft die <see cref="T:System.Text.Encoding" /> ab, in der die Ausgabe geschrieben wird.</summary>
      <returns>Die <see langword="Encoding" />, in der die Ausgabe geschrieben wird.</returns>
    </member>
    <member name="M:System.IO.StringWriter.FlushAsync">
      <summary>Löscht sämtliche Puffer für den aktuellen Writer asynchron und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</summary>
      <returns>Eine Aufgabe, die die asynchrone Leerung darstellt.</returns>
    </member>
    <member name="M:System.IO.StringWriter.GetStringBuilder">
      <summary>Gibt den zugrunde liegenden <see cref="T:System.Text.StringBuilder" /> zurück.</summary>
      <returns>Der zugrundeliegende <see langword="StringBuilder" />.</returns>
    </member>
    <member name="M:System.IO.StringWriter.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die die bisher in den aktuellen <see langword="StringWriter" /> geschriebenen Zeichen enthält.</summary>
      <returns>Die Zeichenfolge, die die bisher in den aktuellen <see langword="StringWriter" /> geschriebenen Zeichen enthält.</returns>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Char)">
      <summary>Schreibt ein Zeichen in die Zeichenfolge.</summary>
      <param name="value">Das zu schreibende Zeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der Writer ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Teilarray von Zeichen in die Zeichenfolge.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Die Position im Puffer, an der mit dem Lesen von Daten begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />. <see langword="Length" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Writer ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Schreibt die Zeichenfolgendarstellung einer Zeichenspanne in die aktuelle Zeichenfolge.</summary>
      <param name="buffer">Eine Spanne von Zeichen, die in die Zeichenfolge geschrieben werden sollen.</param>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.String)">
      <summary>Schreibt eine Zeichenfolge in die aktuelle Zeichenfolge.</summary>
      <param name="value">Die zu schreibende Zeichenfolge.</param>
      <exception cref="T:System.ObjectDisposedException">Der Writer ist geschlossen.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Text.StringBuilder)">
      <summary>Schreibt die Zeichenfolgendarstellung eines Zeichenfolgengenerators in die aktuelle Zeichenfolge.</summary>
      <param name="value">Der Zeichenfolgengenerator, der in die Zeichenfolge geschrieben werden soll.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Char)">
      <summary>Schreibt ein Zeichen asynchron in die Zeichenfolge.</summary>
      <param name="value">Das in die Zeichenfolge zu schreibende Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgenwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Zeichenfolgenwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Teilarray von Zeichen asynchron in die Zeichenfolge.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Die Position im Puffer, an der mit dem Lesen von Daten begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgenwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Zeichenfolgenwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Schreibt einen Zeichenspeicherbereich asynchron in die Zeichenfolge.</summary>
      <param name="buffer">Der Zeichenspeicherbereich, der in die Zeichenfolge geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.String)">
      <summary>Schreibt eine Zeichenfolge asynchron in die aktuelle Zeichenfolge.</summary>
      <param name="value">Die zu schreibende Zeichenfolge. Wenn <paramref name="value" /> den Wert <see langword="null" /> hat, wird nichts in den Stream geschrieben.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgenwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Zeichenfolgenwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Schreibt die Textdarstellung eines Zeichenfolgengenerators asynchron in die Zeichenfolge.</summary>
      <param name="value">Der Zeichenfolgengenerator, der in die Zeichenfolge geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Schreibt die Textdarstellung einer Zeichenspanne, gefolgt von einem Zeilenabschlusszeichen, in die Zeichenfolge.</summary>
      <param name="buffer">Die Zeichenspanne, die in die Zeichenfolge geschrieben werden soll.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteLine(System.Text.StringBuilder)">
      <summary>Schreibt die Textdarstellung eines Zeichenfolgengenerators, auf die ein Zeichen für den Zeilenabschluss folgt, in die Zeichenfolge.</summary>
      <param name="value">Die Zeichenfolge, die als Zeichenfolgengenerator in die Zeichenfolge geschrieben werden soll.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
      <summary>Schreibt ein Zeichen, gefolgt von einem Zeilenabschlusszeichen, asynchron in die Zeichenfolge.</summary>
      <param name="value">Das in die Zeichenfolge zu schreibende Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgenwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Zeichenfolgenwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Unterarray von Zeichen, gefolgt von einem Zeilenabschlusszeichen, asynchron in die Zeichenfolge.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Die Position im Puffer, an der mit dem Lesen von Daten begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgenwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Zeichenfolgenwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Schreibt die Zeichenfolgendarstellung des Zeichenspeicherbereichs, gefolgt von einem Zeilenabschlusszeichen, asynchron in die aktuelle Zeichenfolge.</summary>
      <param name="buffer">Ein Zeichenspeicherbereich, der in die Zeichenfolge geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.String)">
      <summary>Schreibt eine Zeichenfolge, gefolgt von einem Zeilenabschlusszeichen, asynchron in die aktuelle Zeichenfolge.</summary>
      <param name="value">Die zu schreibende Zeichenfolge. Wenn der Wert <see langword="null" /> ist, wird nur ein Zeichen für den Zeilenabschluss geschrieben.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Zeichenfolgenwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Zeichenfolgenwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Schreibt die Zeichenfolgendarstellung des Zeichenfolgengenerators, gefolgt von einem Zeilenabschlusszeichen, asynchron in die aktuelle Zeichenfolge.</summary>
      <param name="value">Der Zeichenfolgengenerator, der in die Zeichenfolge geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="T:System.IO.TextReader">
      <summary>Stellt ein Leseprogramm dar, das eine sequenzielle Serie von Zeichenfolgen lesen kann.</summary>
    </member>
    <member name="M:System.IO.TextReader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.TextReader" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.TextReader.Close">
      <summary>Schließt <see cref="T:System.IO.TextReader" /> und gibt alle dem <see langword="TextReader" /> zugeordneten Systemressourcen frei.</summary>
    </member>
    <member name="M:System.IO.TextReader.Dispose">
      <summary>Gibt alle vom <see cref="T:System.IO.TextReader" />-Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.TextReader.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.TextReader" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="F:System.IO.TextReader.Null">
      <summary>Stellt einen <see langword="TextReader" /> ohne zu lesende Daten bereit.</summary>
    </member>
    <member name="M:System.IO.TextReader.Peek">
      <summary>Liest das nächste Zeichen, ohne den Zustand des Readers oder der Zeichenquelle zu ändern. Gibt das nächste verfügbare Zeichen zurück, ohne es tatsächlich aus dem Reader zu lesen.</summary>
      <returns>Eine Ganzzahl, die das nächste zu lesende Zeichen darstellt, oder auch -1, wenn keine weiteren Zeichen verfügbar sind oder der Reader keine Suchvorgänge unterstützt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextReader" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read">
      <summary>Liest das nächste Zeichen aus dem Text-Reader und verschiebt die Zeichenposition um ein Zeichen nach vorn.</summary>
      <returns>Das nächste Zeichen im Textreader, bzw. -1, wenn keine weiteren Zeichen verfügbar sind. Die Standardimplementierung gibt -1 zurück.</returns>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextReader" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Höchstanzahl von Zeichen aus dem aktuellen Reader und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Enthält nach der Rückgabe dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> - 1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen. Wenn das Ende des Readers erreicht ist, bevor die angegebene Anzahl von Zeichen in den Puffer gelesen wurde, erfolgt die Methodenrückgabe.</param>
      <returns>Die Anzahl der gelesenen Zeichen. Die Anzahl ist kleiner oder gleich <paramref name="count" />, abhängig davon, ob die Daten im Reader verfügbar sind. Diese Methode gibt 0 (null) zurück für den Fall, dass sie aufgerufen wird, wenn keine Zeichen mehr zu lesen sind.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextReader" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Liest asynchron eine angegebene Höchstanzahl von Zeichen aus dem aktuellen Textreader und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Enthält nach der Rückgabe dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> - 1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen. Wenn das Ende des Texts erreicht ist, bevor die angegebene Anzahl von Zeichen in den Puffer gelesen wurde, erfolgt die aktuelle Methodenrückgabe.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Textende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe von <paramref name="index" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Textreader wurde freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Höchstanzahl von Zeichen aus dem aktuellen Textreader und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Dieser Parameter enthält nach dem Beenden dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> -1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <returns>Die Anzahl der gelesenen Zeichen. Die Anzahl ist kleiner oder gleich <paramref name="count" />, je nachdem, ob alle Eingabezeichen gelesen wurden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextReader" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})">
      <param name="buffer" />
    </member>
    <member name="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Liest asynchron eine angegebene Höchstanzahl von Zeichen aus dem aktuellen Textreader und schreibt die Daten in einen Puffer, wobei am angegebenen Index begonnen wird.</summary>
      <param name="buffer">Enthält nach der Rückgabe dieser Methode das angegebene Zeichenarray mit den Werten zwischen <paramref name="index" /> und (<paramref name="index" /> + <paramref name="count" /> - 1), die durch die aus der aktuellen Quelle gelesenen Zeichen ersetzt wurden.</param>
      <param name="index">Die Position in <paramref name="buffer" />, an der mit dem Schreiben begonnen wird.</param>
      <param name="count">Die maximale Anzahl der zu lesenden Zeichen. Wenn das Ende des Texts erreicht ist, bevor die angegebene Anzahl von Zeichen in den Puffer gelesen wurde, erfolgt die aktuelle Methodenrückgabe.</param>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die Gesamtzahl der Bytes, die in den Puffer gelesen werden. Der Ergebniswert kann niedriger als die Anzahl der angeforderten Bytes sein, wenn die Anzahl an derzeit verfügbaren Bytes kleiner ist als die angeforderte Anzahl, oder sie kann 0 (null) sein, wenn das Textende erreicht ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Summe von <paramref name="index" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Textreader wurde freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <param name="buffer" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.IO.TextReader.ReadLine">
      <summary>Liest eine Zeile von Zeichen aus dem Textleser und gibt die Daten als Zeichenfolge zurück.</summary>
      <returns>Die nächste Zeile des Readers oder <see langword="null" />, wenn alle Zeichen gelesen wurden.</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Speicher vorhanden, um einen Puffer für die zurückgegebene Zeichenfolge zuzuordnen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextReader" /> ist geschlossen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Zeichen in der nächsten Zeile ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadLineAsync">
      <summary>Liest eine Zeile von asynchron Zeichen aus dem aktuellen Stream und gibt die Daten als Zeichenfolge zurück.</summary>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält die nächste Zeile aus dem Textreader oder <see langword="null" />, wenn alle Zeichen gelesen wurden.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Zeichen in der nächsten Zeile ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Textreader wurde freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadToEnd">
      <summary>Liest alle Zeichen von der aktuellen Position bis zum Ende des Text-Readers und gibt diese als eine Zeichenfolge zurück.</summary>
      <returns>Eine Zeichenfolge mit allen Zeichen von der aktuellen Position bis zum Ende des Textreaders.</returns>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextReader" /> ist geschlossen.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Speicher vorhanden, um einen Puffer für die zurückgegebene Zeichenfolge zuzuordnen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Zeichen in der nächsten Zeile ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadToEndAsync">
      <summary>Liest alle Zeichen asynchron von der aktuellen Position bis zum Ende des Text-Readers und gibt diese als eine Zeichenfolge zurück.</summary>
      <returns>Eine Aufgabe, die den asynchronen Lesevorgang darstellt. Der Wert des <paramref name="TResult" />-Parameters enthält eine Zeichenfolge mit den Zeichen von der aktuellen Position bis zum Ende des Textreaders.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Zeichen ist niedriger als <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Textreader wurde freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Reader wird zurzeit von einem vorherigen Lesevorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
      <summary>Erstellt einen threadsicheren Wrapper um den angegebenen <see langword="TextReader" />.</summary>
      <param name="reader">Die <see langword="TextReader" />, die synchronisiert werden soll.</param>
      <returns>Ein threadsicherer <see cref="T:System.IO.TextReader" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.IO.TextWriter">
      <summary>Stellt einen Writer dar, der eine sequenzielle Serie von Zeichen schreiben kann. Diese Klasse ist abstrakt.</summary>
    </member>
    <member name="M:System.IO.TextWriter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.TextWriter" />-Klasse.</summary>
    </member>
    <member name="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.TextWriter" />-Klasse mit dem angegebenen Formatanbieter.</summary>
      <param name="formatProvider">Ein <see cref="T:System.IFormatProvider" />-Objekt zum Steuern der Formatierung.</param>
    </member>
    <member name="M:System.IO.TextWriter.Close">
      <summary>Schließt den aktuellen Writer und gibt alle dem Writer zugeordneten Systemressourcen frei.</summary>
    </member>
    <member name="F:System.IO.TextWriter.CoreNewLine">
      <summary>Speichert die für diesen <see langword="TextWriter" /> verwendeten Zeilenendemarken.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Dispose">
      <summary>Gibt alle vom <see cref="T:System.IO.TextWriter" />-Objekt verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.IO.TextWriter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.IO.TextWriter.DisposeAsync">
      <summary>Gibt alle vom <see cref="T:System.IO.TextWriter" />-Objekt verwendeten Ressourcen asynchron frei.</summary>
      <returns>Eine Aufgabe, die den asynchronen Löschvorgang darstellt.</returns>
    </member>
    <member name="P:System.IO.TextWriter.Encoding">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse die Zeichencodierung zurück, in der die Ausgabe geschrieben ist.</summary>
      <returns>Die Zeichencodierung, in der die Ausgabe geschrieben wird.</returns>
    </member>
    <member name="M:System.IO.TextWriter.Flush">
      <summary>Löscht sämtliche Puffer für den aktuellen Writer und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</summary>
    </member>
    <member name="M:System.IO.TextWriter.FlushAsync">
      <summary>Löscht sämtliche Puffer für den aktuellen Writer asynchron und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</summary>
      <returns>Eine Aufgabe, die die asynchrone Leerung darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Writer wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="P:System.IO.TextWriter.FormatProvider">
      <summary>Ruft ein Objekt zum Steuern der Formatierung ab.</summary>
      <returns>Ein <see cref="T:System.IFormatProvider" />-Objekt für eine bestimmte Kultur oder die Formatierung der aktuellen Kultur, wenn keine andere Kultur angegeben wurde.</returns>
    </member>
    <member name="P:System.IO.TextWriter.NewLine">
      <summary>Ruft die Zeichenfolge für den Zeilenabschluss ab, die vom aktuellen <see langword="TextWriter" /> verwendet wird, oder legt diese fest.</summary>
      <returns>Die Zeichenfolge für den Zeilenabschluss für den aktuellen <see langword="TextWriter" />.</returns>
    </member>
    <member name="F:System.IO.TextWriter.Null">
      <summary>Stellt einen <see langword="TextWriter" /> ohne Sicherungsspeicher bereit, in den zwar geschrieben, aus dem jedoch nicht gelesen werden kann.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
      <summary>Erstellt einen threadsicheren Wrapper um den angegebenen <see langword="TextWriter" />.</summary>
      <param name="writer">Die <see langword="TextWriter" />, die synchronisiert werden soll.</param>
      <returns>Ein threadsicherer Wrapper.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Boolean)">
      <summary>Schreibt die Textdarstellung eines <see langword="Boolean" />-Werts in den Textstream.</summary>
      <param name="value">Der zu schreibende <see langword="Boolean" />-Wert.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char)">
      <summary>Schreibt ein Zeichen in den Textstream.</summary>
      <param name="value">Das in den Textstream zu schreibende Zeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char[])">
      <summary>Schreibt ein Zeichenarray in den Textstream.</summary>
      <param name="buffer">Das in den Textstream zu schreibende Zeichenarray.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Teilarray von Zeichen in den Textstream.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Die Zeichenposition im Puffer, an der mit dem Abrufen von Daten begonnen werden soll.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Decimal)">
      <summary>Schreibt die Textdarstellung eines Dezimalwerts in den Textstream.</summary>
      <param name="value">Der zu schreibende Dezimalwert.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Double)">
      <summary>Schreibt die Textdarstellung eines 8-Byte-Gleitkommawerts in den Textstream.</summary>
      <param name="value">Der zu schreibende 8-Byte-Gleitkommawert.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Int32)">
      <summary>Schreibt die Textdarstellung einer 4-Byte-Ganzzahl mit Vorzeichen in den Textstream.</summary>
      <param name="value">Die zu schreibende 4-Byte-Ganzzahl mit Vorzeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Int64)">
      <summary>Schreibt die Textdarstellung einer 8-Byte-Ganzzahl mit Vorzeichen in den Textstream.</summary>
      <param name="value">Die zu schreibende 8-Byte-Ganzzahl mit Vorzeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Object)">
      <summary>Schreibt die Textdarstellung eines Objekts in den Textstream, indem für das Objekt die <see langword="ToString" />-Methode aufgerufen wird.</summary>
      <param name="value">Das zu schreibende Objekt.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Schreibt eine Zeichenspanne in den Textstream.</summary>
      <param name="buffer">Die zu schreibende Zeichenspanne.</param>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Single)">
      <summary>Schreibt die Textdarstellung eines 4-Byte-Gleitkommawerts in den Textstream.</summary>
      <param name="value">Der zu schreibende 4-Byte-Gleitkommawert.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String)">
      <summary>Schreibt eine Zeichenfolge in den Textstream.</summary>
      <param name="value">Die zu schreibende Zeichenfolge.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge in den Textstream unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das zu formatierende und zu schreibende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist keine gültige kombinierte Formatzeichenfolge.  

oder - 
Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (1 für diese Methodenüberladung).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge in den Textstream unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende und zu schreibende Objekt.</param>
      <param name="arg1">Das zweite zu formatierende und zu schreibende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist keine gültige kombinierte Formatzeichenfolge.  

oder - 
Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (2 für diese Methodenüberladung).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge in den Textstream unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende und zu schreibende Objekt.</param>
      <param name="arg1">Das zweite zu formatierende und zu schreibende Objekt.</param>
      <param name="arg2">Das dritte zu formatierende und zu schreibende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist keine gültige kombinierte Formatzeichenfolge.  

oder - 
Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (3 für diese Methodenüberladung).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object[])">
      <summary>Schreibt eine formatierte Zeichenfolge in den Textstream unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object[])" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg">Ein Objektarray mit 0 (null) oder mehr zu formatierenden und zu schreibenden Objekten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> oder <paramref name="arg" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist keine gültige kombinierte Formatzeichenfolge.  

oder - 
Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich der Länge des <paramref name="arg" />-Arrays.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Text.StringBuilder)">
      <summary>Schreibt einen Zeichenfolgengenerator in den Textstream.</summary>
      <param name="value">Die Zeichenfolge, die als Zeichenfolgengenerator in den Textstream geschrieben werden soll.</param>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.UInt32)">
      <summary>Schreibt die Textdarstellung einer 4-Byte-Ganzzahl ohne Vorzeichen in den Textstream.</summary>
      <param name="value">Die zu schreibende 4-Byte-Ganzzahl ohne Vorzeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.UInt64)">
      <summary>Schreibt die Textdarstellung einer 8-Byte-Ganzzahl ohne Vorzeichen in den Textstream.</summary>
      <param name="value">Die zu schreibende 8-Byte-Ganzzahl ohne Vorzeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char)">
      <summary>Schreibt ein Zeichen asynchron in den Textstream.</summary>
      <param name="value">Das in den Textstream zu schreibende Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char[])">
      <summary>Schreibt ein Zeichenarray asynchron in den Textstream.</summary>
      <param name="buffer">Das in den Textstream zu schreibende Zeichenarray. Wenn <paramref name="buffer" /> den Wert <see langword="null" /> ist, wird nichts geschrieben.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Teilarray von Zeichen asynchron in den Textstream.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Die Zeichenposition im Puffer, an der mit dem Abrufen von Daten begonnen werden soll.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Schreibt eine Zeichenspeicherregion asynchron in den Textstream.</summary>
      <param name="buffer">Die in den Textstream zu schreibende Zeichenspeicherregion.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.String)">
      <summary>Schreibt eine Zeichenfolge asynchron in den Textstream.</summary>
      <param name="value">Die zu schreibende Zeichenfolge. Wenn <paramref name="value" /> den Wert <see langword="null" /> hat, wird nichts in den Stream geschrieben.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Schreibt einen Zeichenfolgengenerator asynchron in den Textstream.</summary>
      <param name="value">Die Zeichenfolge, die als Zeichenfolgengenerator in den Textstream geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine">
      <summary>Schreibt ein Zeichen für den Zeilenabschluss in den Textstream.</summary>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Boolean)">
      <summary>Schreibt die Textdarstellung eines <see langword="Boolean" />-Werts, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Der zu schreibende <see langword="Boolean" />-Wert.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char)">
      <summary>Schreibt ein Zeichen, auf das ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Das in den Textstream zu schreibende Zeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char[])">
      <summary>Schreibt ein Array von Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="buffer">Das Zeichenarray, aus dem die Daten gelesen werden.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Unterarray von Zeichen, auf das ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="buffer">Das Zeichenarray, aus dem die Daten gelesen werden.</param>
      <param name="index">Die Zeichenposition im <paramref name="buffer" />, an der mit dem Lesen von Daten begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl der zu schreibenden Zeichen.</param>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Decimal)">
      <summary>Schreibt die Textdarstellung eines Dezimalwerts, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Der zu schreibende Dezimalwert.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Double)">
      <summary>Schreibt die Textdarstellung eines 8-Byte-Gleitkommawerts, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Der zu schreibende 8-Byte-Gleitkommawert.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Int32)">
      <summary>Schreibt die Textdarstellung einer 4-Byte-Ganzzahl mit Vorzeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Die zu schreibende 4-Byte-Ganzzahl mit Vorzeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Int64)">
      <summary>Schreibt die Textdarstellung einer 8-Byte-Ganzzahl mit Vorzeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Die zu schreibende 8-Byte-Ganzzahl mit Vorzeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Object)">
      <summary>Schreibt durch Aufrufen der <see langword="ToString" />-Methode für ein Objekt die Textdarstellung dieses Objekts, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Das zu schreibende Objekt. Wenn <paramref name="value" /><see langword="null" /> ist, wird nur das Zeichen für den Zeilenabschluss geschrieben.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Schreibt die Textdarstellung einer Zeichenspanne, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="buffer">Der Zeichenspannenwert, der in den Textstream geschrieben werden soll.</param>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Single)">
      <summary>Schreibt die Textdarstellung eines 4-Byte-Gleitkommawerts, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Der zu schreibende 4-Byte-Gleitkommawert.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String)">
      <summary>Schreibt eine Zeichenfolge, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Die zu schreibende Zeichenfolge. Wenn <paramref name="value" /><see langword="null" /> ist, wird nur das Zeichen für den Zeilenabschluss geschrieben.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge und eine neue Zeile in den Textstream unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das zu formatierende und zu schreibende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist keine gültige kombinierte Formatzeichenfolge.  

oder - 
Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (1 für diese Methodenüberladung).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge und eine neue Zeile in den Textstream unter Verwendung der gleichen Semantik wie die <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />-Methode.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende und zu schreibende Objekt.</param>
      <param name="arg1">Das zweite zu formatierende und zu schreibende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist keine gültige kombinierte Formatzeichenfolge.  

oder - 
Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (2 für diese Methodenüberladung).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Schreibt eine formatierte Zeichenfolge und eine neue Zeile in den Textstream unter Verwendung der gleichen Semantik wie <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg0">Das erste zu formatierende und zu schreibende Objekt.</param>
      <param name="arg1">Das zweite zu formatierende und zu schreibende Objekt.</param>
      <param name="arg2">Das dritte zu formatierende und zu schreibende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist keine gültige kombinierte Formatzeichenfolge.  

oder - 
Der Index eines Formatelements ist kleiner als 0 (null) oder größer/gleich der Anzahl der zu formatierenden Objekte (3 für diese Methodenüberladung).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
      <summary>Schreibt eine formatierte Zeichenfolge und eine neue Zeile in den Textstream unter Verwendung der gleichen Semantik wie <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Eine kombinierte Formatzeichenfolge.</param>
      <param name="arg">Ein Objektarray mit 0 (null) oder mehr zu formatierenden und zu schreibenden Objekten.</param>
      <exception cref="T:System.ArgumentNullException">Eine Zeichenfolge oder ein Objekt wird als <see langword="null" /> übergeben.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> ist keine gültige kombinierte Formatzeichenfolge.  

oder - 
Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich der Länge des <paramref name="arg" />-Arrays.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Text.StringBuilder)">
      <summary>Schreibt die Textdarstellung eines Zeichenfolgengenerators, auf die ein Zeichen für den Zeilenabschluss folgt, in den Textstream.</summary>
      <param name="value">Die Zeichenfolge, die als Zeichenfolgengenerator in den Textstream geschrieben werden soll.</param>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.UInt32)">
      <summary>Schreibt die Textdarstellung einer 4-Byte-Ganzzahl ohne Vorzeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Die zu schreibende 4-Byte-Ganzzahl ohne Vorzeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.UInt64)">
      <summary>Schreibt die Textdarstellung einer 8-Byte-Ganzzahl ohne Vorzeichen, gefolgt von einem Zeichen für den Zeilenabschluss, in den Textstream.</summary>
      <param name="value">Die zu schreibende 8-Byte-Ganzzahl ohne Vorzeichen.</param>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.IO.TextWriter" /> ist geschlossen.</exception>
      <exception cref="T:System.IO.IOException">Ein E/A-Fehler tritt auf.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync">
      <summary>Schreibt ein Zeichen für den Zeilenabschluss asynchron in den Textstream.</summary>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
      <summary>Schreibt ein Zeichen, auf das ein Zeichen für den Zeilenabschluss folgt, asynchron in den Textstream.</summary>
      <param name="value">Das in den Textstream zu schreibende Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
      <summary>Schreibt ein Array von Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in den Textstream.</summary>
      <param name="buffer">Das in den Textstream zu schreibende Zeichenarray. Wenn das Zeichenarray <see langword="null" /> ist, wird nur das Zeichen für den Zeilenabschluss geschrieben.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt ein Unterarray von Zeichen, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in den Textstream.</summary>
      <param name="buffer">Das Zeichenarray, aus dem Daten geschrieben werden sollen.</param>
      <param name="index">Die Zeichenposition im Puffer, an der mit dem Abrufen von Daten begonnen werden soll.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus <paramref name="count" /> ist größer als die Pufferlänge.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Schreibt die Textdarstellung einer Zeichenspeicherregion, auf die ein Zeichen für den Zeilenabschluss folgt, asynchron in den Textstream.</summary>
      <param name="buffer">Die in den Textstream zu schreibende Zeichenspeicherregion.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.String)">
      <summary>Schreibt eine Zeichenfolge, gefolgt von einem Zeichen für den Zeilenabschluss, asynchron in den Textstream.</summary>
      <param name="value">Die zu schreibende Zeichenfolge. Wenn der Wert <see langword="null" /> ist, wird nur ein Zeichen für den Zeilenabschluss geschrieben.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
      <exception cref="T:System.ObjectDisposedException">Der Textwriter wird freigegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der Textwriter wird derzeit von einem vorherigen Schreibvorgang verwendet.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Schreibt die Textdarstellung eines Zeichenfolgengenerators, auf die ein Zeichen für den Zeilenabschluss folgt, asynchron in den Textstream.</summary>
      <param name="value">Die Zeichenfolge, die als Zeichenfolgengenerator in den Textstream geschrieben werden soll.</param>
      <param name="cancellationToken">Das Token zum Überwachen von Abbruchanforderungen. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />sein.</param>
      <returns>Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</returns>
    </member>
    <member name="T:System.LoaderOptimization">
      <summary>Eine zusammen mit der <see cref="T:System.LoaderOptimizationAttribute" />-Klasse verwendete Enumeration zur Angabe von Ladeoptimierungen für eine ausführbare Datei.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DisallowBindings">
      <summary>Wird von der Common Language Runtime ignoriert.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DomainMask">
      <summary>Nicht verwenden. Diese Maske wählt die domänenbezogenen Werte aus und schließt das nicht verwendete <see cref="F:System.LoaderOptimization.DisallowBindings" />-Flag aus.</summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomain">
      <summary>Gibt an, dass die Anwendung wahrscheinlich über mehrere Domänen verfügt, die denselben Code verwenden, und daher die gemeinsame Verwendung einer Höchstzahl an internen Ressourcen über Anwendungsdomänen hinweg vom Ladeprogramm ermöglicht werden muss.</summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomainHost">
      <summary>Gibt an, dass die Anwendung wahrscheinlich über mehrere Domänen mit jeweils eigenem Code verfügt und das Ladeprogramm daher nur ermöglichen muss, dass Ressourcen für global verfügbare Assemblys (mit starkem Namen) anwendungsdomänenübergreifend gemeinsam verwendet werden, die dem globalen Assemblycache hinzugefügt wurden.</summary>
    </member>
    <member name="F:System.LoaderOptimization.NotSpecified">
      <summary>Gibt an, dass keine Optimierungen für die gemeinsame Verwendung interner Ressourcen angegeben sind. Wenn die Anwendungsdomäne oder die Hostschnittstelle eine Optimierung angegeben hat, wird diese vom Ladeprogramm verwendet. Andernfalls verwendet das Ladeprogramm <see cref="F:System.LoaderOptimization.SingleDomain" />.</summary>
    </member>
    <member name="F:System.LoaderOptimization.SingleDomain">
      <summary>Gibt an, dass die Anwendung wahrscheinlich über eine einzige Domäne verfügt und das Ladeprogramm keine gemeinsame Verwendung interner Ressourcen über Anwendungsdomänen hinweg ermöglichen muss.</summary>
    </member>
    <member name="T:System.LoaderOptimizationAttribute">
      <summary>Wird zum Festlegen der Standardrichtlinien zur Ladeoptimierung für die Hauptmethode eines ausführbaren Programms verwendet.</summary>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.Byte)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.LoaderOptimizationAttribute" />-Klasse mit dem angegebenen Wert.</summary>
      <param name="value">Ein Wert, der einer <see cref="T:System.LoaderOptimization" />-Konstanten entspricht.</param>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.LoaderOptimizationAttribute" />-Klasse mit dem angegebenen Wert.</summary>
      <param name="value">Eine <see cref="T:System.LoaderOptimization" />-Konstante.</param>
    </member>
    <member name="P:System.LoaderOptimizationAttribute.Value">
      <summary>Ruft den aktuellen <see cref="T:System.LoaderOptimization" />-Wert für diese Instanz ab.</summary>
      <returns>Eine <see cref="T:System.LoaderOptimization" />-Konstante.</returns>
    </member>
    <member name="T:System.Math">
      <summary>Stellt Konstanten und statische Methoden für trigonometrische, logarithmische und andere gebräuchliche mathematische Funktionen bereit.</summary>
    </member>
    <member name="M:System.Math.Abs(System.Decimal)">
      <summary>Gibt den Absolutbetrag einer <see cref="T:System.Decimal" />-Zahl zurück.</summary>
      <param name="value">Eine Zahl, die größer oder gleich <see cref="F:System.Decimal.MinValue" />, aber kleiner oder gleich <see cref="F:System.Decimal.MaxValue" /> ist.</param>
      <returns>Eine Dezimalzahl x im Bereich 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Abs(System.Double)">
      <summary>Gibt den Absolutbetrag einer Gleitkommazahl mit doppelter Genauigkeit zurück.</summary>
      <param name="value">Eine Zahl, die größer oder gleich <see cref="F:System.Double.MinValue" />, aber kleiner oder gleich <see cref="F:System.Double.MaxValue" /> ist.</param>
      <returns>Eine Gleitkommazahl x mit doppelter Genauigkeit im Bereich 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Abs(System.Int16)">
      <summary>Gibt den absoluten Wert einer 16-Bit-Ganzzahl mit Vorzeichen zurück.</summary>
      <param name="value">Eine Zahl, die größer als <see cref="F:System.Int16.MinValue" />, aber kleiner oder gleich <see cref="F:System.Int16.MaxValue" /> ist.</param>
      <returns>Eine ganze 16-Bit-Zahl x mit Vorzeichen im Bereich 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist gleich <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Int32)">
      <summary>Gibt den absoluten Wert einer 32-Bit-Ganzzahl mit Vorzeichen zurück.</summary>
      <param name="value">Eine Zahl, die größer als <see cref="F:System.Int32.MinValue" />, aber kleiner oder gleich <see cref="F:System.Int32.MaxValue" /> ist.</param>
      <returns>Eine ganze 32-Bit-Zahl x mit Vorzeichen im Bereich 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist gleich <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Int64)">
      <summary>Gibt den absoluten Wert einer 64-Bit-Ganzzahl mit Vorzeichen zurück.</summary>
      <param name="value">Eine Zahl, die größer als <see cref="F:System.Int64.MinValue" />, aber kleiner oder gleich <see cref="F:System.Int64.MaxValue" /> ist.</param>
      <returns>Eine ganze 64-Bit-Zahl x mit Vorzeichen im Bereich 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist gleich <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.SByte)">
      <summary>Gibt den Absolutbetrag einer 8-Bit-Ganzzahl mit Vorzeichen zurück.</summary>
      <param name="value">Eine Zahl, die größer als <see cref="F:System.SByte.MinValue" />, aber kleiner oder gleich <see cref="F:System.SByte.MaxValue" /> ist.</param>
      <returns>Eine ganze 8-Bit-Zahl x mit Vorzeichen im Bereich 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> ist gleich <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Single)">
      <summary>Gibt den Absolutbetrag einer Gleitkommazahl mit einfacher Genauigkeit zurück.</summary>
      <param name="value">Eine Zahl, die größer oder gleich <see cref="F:System.Single.MinValue" />, aber kleiner oder gleich <see cref="F:System.Single.MaxValue" /> ist.</param>
      <returns>Eine Gleitkommazahl x mit einfacher Genauigkeit im Bereich 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Acos(System.Double)">
      <summary>Gibt einen Winkel zurück, dessen Kosinus die angegebene Zahl ist.</summary>
      <param name="d">Eine Zahl, die einen Kosinus darstellt, wobei <paramref name="d" /> größer oder gleich -1, aber kleiner oder gleich 1 sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich 0 ≤θ≤π 

oder - 
<see cref="F:System.Double.NaN" />, wenn <paramref name="d" /> &lt; –1 oder <paramref name="d" /> &gt; 1 oder <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> ist.</returns>
    </member>
    <member name="M:System.Math.Acosh(System.Double)">
      <summary>Gibt den Winkel zurück, dessen hyperbolischer Kosinus die angegebene Zahl ist.</summary>
      <param name="d">Eine Zahl, die einen hyperbolischen Kosinus darstellt, wobei <paramref name="d" /> größer oder gleich 1, aber kleiner oder gleich <see cref="F:System.Double.PositiveInfinity" /> sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich 0 ≤ θ ≤ ∞.  

oder - 
<see cref="F:System.Double.NaN" /> wenn <paramref name="d" /> &lt; 1 oder <paramref name="d" /> gleich <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Asin(System.Double)">
      <summary>Gibt einen Winkel zurück, dessen Sinus die angegebene Zahl ist.</summary>
      <param name="d">Eine Zahl, die einen Sinus darstellt, wobei <paramref name="d" /> größer oder gleich -1, aber kleiner oder gleich 1 sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich –π/2 ≤θ≤π/2 

oder - 
<see cref="F:System.Double.NaN" />, wenn <paramref name="d" /> &lt; –1 oder <paramref name="d" /> &gt; 1 oder <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> ist.</returns>
    </member>
    <member name="M:System.Math.Asinh(System.Double)">
      <summary>Gibt den Winkel zurück, dessen hyperbolischer Sinus die angegebene Zahl ist.</summary>
      <param name="d">Eine Zahl, die einen hyperbolischen Sinus darstellt, wobei <paramref name="d" /> größer oder gleich <see cref="F:System.Double.NegativeInfinity" />, aber kleiner oder gleich <see cref="F:System.Double.PositiveInfinity" /> sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß sodass -∞ &lt; θ ≤ -1, oder 1 ≤ θ &lt; ∞. 

oder - 
<see cref="F:System.Double.NaN" /> wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Atan(System.Double)">
      <summary>Gibt einen Winkel zurück, dessen Tangens die angegebene Zahl ist.</summary>
      <param name="d">Eine Zahl, die einen Tangens darstellt.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich –π/2 ≤θ≤π/2.  

oder - 
<see cref="F:System.Double.NaN" />, wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> ist, –π/2 auf doppelte Genauigkeit gerundet (–1,5707963267949), wenn <paramref name="d" /> gleich <see cref="F:System.Double.NegativeInfinity" /> ist oder π/2 auf doppelte Genauigkeit gerundet (1,5707963267949), wenn <paramref name="d" /> gleich <see cref="F:System.Double.PositiveInfinity" /> ist.</returns>
    </member>
    <member name="M:System.Math.Atan2(System.Double,System.Double)">
      <summary>Gibt einen Winkel zurück, dessen Tangens der Quotient zweier angegebener Zahlen ist.</summary>
      <param name="y">Die y-Koordinate eines Punkts.</param>
      <param name="x">Die x-Koordinate eines Punkts.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich –π≤θ≤π, und tan(θ) = <paramref name="y" /> / <paramref name="x" />, wobei (<paramref name="x" />, <paramref name="y" />) einen Punkt in der kartesischen Ebene darstellt. Beachten Sie dabei: 
–   Wenn (<paramref name="x" />, <paramref name="y" />) im 1. Quadranten liegt, gilt 0 &lt; θ &lt; π/2.  
–   Wenn (<paramref name="x" />, <paramref name="y" />) im 2. Quadranten liegt, gilt π/2 &lt; θ≤π.  
–   Wenn (<paramref name="x" />, <paramref name="y" />) im 3. Quadranten liegt, gilt –π &lt; θ &lt; –π/2.  
–   Wenn (<paramref name="x" />, <paramref name="y" />) im 4. Quadranten liegt, gilt –π/2 &lt; θ &lt; 0.  
Für Punkte an den Begrenzungen der Quadranten wird der folgende Rückgabewert zurückgegeben: 
–   Wenn y gleich 0 und x nicht negativ ist, gilt θ = 0.  
–   Wenn y gleich 0 und x negativ ist, gilt θ = π.  
–   Wenn y positiv und x gleich 0 ist, gilt θ = π/2.  
–   Wenn y negativ ist und x gleich 0 ist, gilt θ = -π/2.  
–   Wenn y gleich 0 ist und x gleich 0 ist, gilt θ = 0.  
Wenn <paramref name="x" /> oder <paramref name="y" /> gleich <see cref="F:System.Double.NaN" /> ist oder wenn <paramref name="x" /> und <paramref name="y" /> entweder gleich <see cref="F:System.Double.PositiveInfinity" /> oder gleich <see cref="F:System.Double.NegativeInfinity" /> sind, gibt die Methode <see cref="F:System.Double.NaN" /> zurück.</returns>
    </member>
    <member name="M:System.Math.Atanh(System.Double)">
      <summary>Gibt den Winkel zurück, dessen hyperbolischer Tangens die angegebene Zahl ist.</summary>
      <param name="d">Eine Zahl, die einen hyperbolischen Tangens darstellt, wobei <paramref name="d" /> größer oder gleich -1, aber kleiner oder gleich 1 sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich -∞ &lt; θ &lt; -1, oder 1 &lt; θ &lt; ∞. 

oder - 
<see cref="F:System.Double.NaN" />, wenn <paramref name="d" /> &lt; –1 oder <paramref name="d" /> &gt; 1 oder <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> ist.</returns>
    </member>
    <member name="M:System.Math.BigMul(System.Int32,System.Int32)">
      <summary>Berechnet das vollständige Produkt aus zwei 32-Bit-Zahlen.</summary>
      <param name="a">Die erste zu multiplizierende Zahl.</param>
      <param name="b">Die zweite zu multiplizierende Zahl.</param>
      <returns>Die Zahl, die das Produkt der angegebenen Zahlen enthält.</returns>
    </member>
    <member name="M:System.Math.BitDecrement(System.Double)">
      <summary>Gibt den nächsten kleinsten Wert zurück, der weniger als <paramref name="x" /> vergleicht.</summary>
      <param name="x">Der zu dekrementierende Wert.</param>
      <returns>Der nächste kleinste Wert, der weniger als <paramref name="x" /> vergleicht.  

oder - 
<see cref="F:System.Double.NegativeInfinity" /> wenn <paramref name="x" /> gleich <see cref="F:System.Double.NegativeInfinity" />.

oder - 
<see cref="F:System.Double.NaN" /> wenn <paramref name="x" /> gleich <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.BitIncrement(System.Double)">
      <summary>Gibt den nächsten größten Wert zurück, der größer als <paramref name="x" /> vergleicht.</summary>
      <param name="x">Der zu inkrementierende Wert.</param>
      <returns>Den nächste größte Wert, der größer als <paramref name="x" /> vergleicht.  

oder - 
<see cref="F:System.Double.PositiveInfinity" /> wenn <paramref name="x" /> gleich <see cref="F:System.Double.PositiveInfinity" />.

oder - 
<see cref="F:System.Double.NaN" /> wenn <paramref name="x" /> gleich <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Cbrt(System.Double)">
      <summary>Gibt die Kubikwurzel einer angegebenen Zahl zurück.</summary>
      <param name="d">Die Zahl, deren Kubikwurzel bestimmt werden soll.</param>
      <returns>Die Kubikwurzel von <paramref name="d" />.  

oder - 
<see cref="F:System.Double.NaN" /> wenn <paramref name="x" /> gleich <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Ceiling(System.Decimal)">
      <summary>Gibt den kleinsten ganzzahligen Wert zurück, der größer oder gleich der angegebenen Dezimalzahl ist.</summary>
      <param name="d">Eine Dezimalzahl.</param>
      <returns>Der kleinste ganzzahlige Wert, der größer oder gleich <paramref name="d" /> ist. Beachten Sie, dass diese Methode einen <see cref="T:System.Decimal" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
    </member>
    <member name="M:System.Math.Ceiling(System.Double)">
      <summary>Gibt den kleinsten ganzzahligen Wert zurück, der größer oder gleich der angegebenen Gleitkommazahl mit doppelter Genauigkeit ist.</summary>
      <param name="a">Eine Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>Der kleinste ganzzahlige Wert, der größer oder gleich <paramref name="a" /> ist. Wenn <paramref name="a" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben. Beachten Sie, dass diese Methode einen <see cref="T:System.Double" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt;<paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Double,System.Double,System.Double)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.`` 

oder - 
<see cref="F:System.Double.NaN" /> wenn <paramref name="value" /> gleich <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Single,System.Single,System.Single)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.

oder - 
<see cref="F:System.Single.NaN" /> wenn <paramref name="value" /> gleich <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.  

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)">
      <summary>Gibt <paramref name="value" /> gebunden an den Inklusivbereich von <paramref name="min" /> und <paramref name="max" /> zurück.</summary>
      <param name="value">Der zu bindende Wert.</param>
      <param name="min">Die Untergrenze des Ergebnisses.</param>
      <param name="max">Die Obergrenze des Ergebnisses.</param>
      <returns>
        <paramref name="value" /> wenn <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.

oder - 
<paramref name="min" /> wenn <paramref name="value" /> &lt; <paramref name="min" />.

oder - 
<paramref name="max" /> wenn <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.CopySign(System.Double,System.Double)">
      <summary>Gibt einen Wert mit dem Betrag <paramref name="x" /> und dem Vorzeichen <paramref name="y" /> zurück.</summary>
      <param name="x">Eine Zahl, deren Betrag im Ergebnis verwendet wird.</param>
      <param name="y">Eine Zahl, deren Vorzeichen im Ergebnis verwendet wird.</param>
      <returns>Ein Wert mit dem Betrag <paramref name="x" /> und dem Vorzeichen <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Math.Cos(System.Double)">
      <summary>Gibt den Kosinus des angegebenen Winkels zurück.</summary>
      <param name="d">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Kosinus von <paramref name="d" />. Wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird <see cref="F:System.Double.NaN" /> von dieser Methode zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Cosh(System.Double)">
      <summary>Gibt den Hyperbelkosinus des angegebenen Winkels zurück.</summary>
      <param name="value">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Hyperbelkosinus von <paramref name="value" />. Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird <see cref="F:System.Double.PositiveInfinity" /> zurückgegeben. Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NaN" /> ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
      <summary>Berechnet den Quotienten zweier 32-Bit-Ganzzahlen mit Vorzeichen und gibt außerdem den Rest als Ausgabeparameter zurück.</summary>
      <param name="a">Der Dividend.</param>
      <param name="b">Der Divisor.</param>
      <param name="result">Der Rest.</param>
      <returns>Der Quotient der angegebenen Zahlen.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> ist 0 (null).</exception>
    </member>
    <member name="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
      <summary>Berechnet den Quotienten zweier 64-Bit-Ganzzahlen mit Vorzeichen und gibt außerdem den Rest als Ausgabeparameter zurück.</summary>
      <param name="a">Der Dividend.</param>
      <param name="b">Der Divisor.</param>
      <param name="result">Der Rest.</param>
      <returns>Der Quotient der angegebenen Zahlen.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> ist 0 (null).</exception>
    </member>
    <member name="F:System.Math.E">
      <summary>Stellt die Basis des natürlichen Logarithmus durch die Konstante <see langword="e" /> dar.</summary>
    </member>
    <member name="M:System.Math.Exp(System.Double)">
      <summary>Gibt die angegebene Potenz von <see langword="e" /> zurück.</summary>
      <param name="d">Eine Zahl, die einen Exponenten angibt.</param>
      <returns>Die Zahl <see langword="e" /> hoch <paramref name="d" />. Wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben. Wenn <paramref name="d" /> gleich <see cref="F:System.Double.NegativeInfinity" /> ist, wird 0 zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Floor(System.Decimal)">
      <summary>Gibt die größte Ganzzahl zurück, die kleiner oder gleich der angegebenen Dezimalzahl ist.</summary>
      <param name="d">Eine Dezimalzahl.</param>
      <returns>Die größte Ganzzahl, die kleiner oder gleich <paramref name="d" /> ist.  Beachten Sie, dass die Methode einen Ganzzahlwert vom Typ <see cref="T:System.Decimal" /> zurückgibt.</returns>
    </member>
    <member name="M:System.Math.Floor(System.Double)">
      <summary>Gibt die größte Ganzzahl zurück, die kleiner oder gleich der angegebenen Gleitkommazahl mit doppelter Genauigkeit ist.</summary>
      <param name="d">Eine Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>Die größte Ganzzahl, die kleiner oder gleich <paramref name="d" /> ist. Wenn <paramref name="d" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.FusedMultiplyAdd(System.Double,System.Double,System.Double)">
      <summary>Gibt (x * y) + z, gerundet als ternärer Vorgang, zurück.</summary>
      <param name="x">Die Zahl, die mit <paramref name="y" /> multipliziert werden soll.</param>
      <param name="y">Die Zahl, die mit <paramref name="x" /> multipliziert werden soll.</param>
      <param name="z">Die Zahl, die zum Ergebnis von <paramref name="x" /> multipliziert mit <paramref name="y" /> addiert werden soll.</param>
      <returns>(x * y) + z, gerundet als ternärer Vorgang.</returns>
    </member>
    <member name="M:System.Math.IEEERemainder(System.Double,System.Double)">
      <summary>Gibt den Rest der Division zweier angegebener Zahlen zurück.</summary>
      <param name="x">Ein Dividend.</param>
      <param name="y">Ein Divisor.</param>
      <returns>Eine Zahl gleich <paramref name="x" /> – (<paramref name="y" /> Q), wobei Q der auf die nächste ganze Zahl gerundete Quotient von <paramref name="x" /> / <paramref name="y" /> ist (wenn <paramref name="x" /> / <paramref name="y" /> genau in der Mitte zwischen zwei ganzen Zahlen liegt, wird die gerade ganze Zahl zurückgegeben).  
Wenn <paramref name="x" /> - (<paramref name="y" />Q) gleich 0 ist, wird bei positivem <paramref name="x" /> +0 und bei negativem <paramref name="x" /> -0 zurückgegeben.  
Wenn <paramref name="y" /> = 0 ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.ILogB(System.Double)">
      <summary>Gibt den Logarithmus einer angegebenen ganzen Zahl zur Basis 2 zurück.</summary>
      <param name="x">Die Zahl, deren Logarithmus bestimmt werden soll.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="x" />-Parameter 
  Rückgabewert 
  Standard 
  Der Logarithmus einer ganzen Zahl zur Basis 2 von <paramref name="x" />; d.h. (int)log2(<paramref name="x" />).  

  Zero 
 <see cref="F:System.Int32.MinValue" /> Gleich <see cref="F:System.Double.NaN" /> oder <see cref="F:System.Double.PositiveInfinity" /> oder <see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Int32.MaxValue" /></returns>
    </member>
    <member name="M:System.Math.Log(System.Double)">
      <summary>Gibt den natürlichen Logarithmus (zur Basis <see langword="e" />) der angegebenen Zahl zurück.</summary>
      <param name="d">Die Zahl, deren Logarithmus bestimmt werden soll.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="d" />-Parameter 
  Rückgabewert 
  Positiv 
  Der natürliche Logarithmus von <paramref name="d" />, d.h. ln <paramref name="d" /> oder log e <paramref name="d" /> Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativ 
 <see cref="F:System.Double.NaN" /> Gleich <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Gleich <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Log(System.Double,System.Double)">
      <summary>Gibt den Logarithmus einer angegebenen Zahl bezüglich einer angegebenen Basis zurück.</summary>
      <param name="a">Die Zahl, deren Logarithmus bestimmt werden soll.</param>
      <param name="newBase">Die Basis des Logarithmus.</param>
      <returns>Einer der Werte aus der folgenden Tabelle. (Plus unendlich steht für <see cref="F:System.Double.PositiveInfinity" />, minus unendlich für <see cref="F:System.Double.NegativeInfinity" /> und NaN für <see cref="F:System.Double.NaN" />.) 
 <paramref name="a" /><paramref name="newBase" /> Rückgabewert 
 <paramref name="a" />&gt; 0 
  (0 &lt;<paramref name="newBase" />&lt; 1) – oder – (<paramref name="newBase" />&gt; 1) 
  lognewBase(a) 
 <paramref name="a" />&lt; 0 
  (beliebiger Wert) 
  NaN 
  (beliebiger Wert) 
 <paramref name="newBase" />&lt; 0 
  NaN 
 <paramref name="a" /> != 1 
 <paramref name="newBase" /> = 0 
  NaN 
 <paramref name="a" /> != 1 
 <paramref name="newBase" /> = plus unendlich 
  NaN 
 <paramref name="a" /> = NaN 
  (beliebiger Wert) 
  NaN 
  (beliebiger Wert) 
 <paramref name="newBase" /> = NaN 
  NaN 
  (beliebiger Wert) 
 <paramref name="newBase" /> = 1 
  NaN 
 <paramref name="a" /> = 0 
  0 &lt;<paramref name="newBase" />&lt; 1 
  plus unendlich 
 <paramref name="a" /> = 0 
 <paramref name="newBase" />&gt; 1 
  minus unendlich 
 <paramref name="a" /> =  +unendlich 
  0 &lt;<paramref name="newBase" />&lt; 1 
  -Infinity 
 <paramref name="a" /> =  +unendlich 
 <paramref name="newBase" />&gt; 1 
  plus unendlich 
 <paramref name="a" /> = 1 
 <paramref name="newBase" /> = 0 
  0 
 <paramref name="a" /> = 1 
 <paramref name="newBase" /> = plus unendlich 
  0</returns>
    </member>
    <member name="M:System.Math.Log10(System.Double)">
      <summary>Gibt den Logarithmus einer angegebenen Zahl zur Basis 10 zurück.</summary>
      <param name="d">Eine Zahl, deren Logarithmus gesucht wird.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="d" />-Parameter 
  Rückgabewert 
  Positiv 
  Der Logarithmus von <paramref name="d" /> zur Basis 10, d.h. log 10<paramref name="d" />.  

  Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativ 
 <see cref="F:System.Double.NaN" /> Gleich <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Gleich <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Log2(System.Double)">
      <summary>Gibt den Logarithmus einer angegebenen Zahl zur Basis 2 zurück.</summary>
      <param name="x">Eine Zahl, deren Logarithmus gesucht wird.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="x" />-Parameter 
  Rückgabewert 
  Positiv 
  Der Logarithmus von <paramref name="x" /> zur Basis 2, d.h. log 2<paramref name="x" />.  

  Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativ 
 <see cref="F:System.Double.NaN" /> Gleich <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Gleich <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Max(System.Byte,System.Byte)">
      <summary>Gibt die größere von zwei 8-Bit-Ganzzahlen ohne Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Decimal,System.Decimal)">
      <summary>Gibt die größere von zwei Decimal-Zahlen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden Dezimalzahlen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden Dezimalzahlen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Double,System.Double)">
      <summary>Gibt die größere von zwei Gleitkommazahlen mit doppelter Genauigkeit zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />. Wenn entweder <paramref name="val1" /> oder <paramref name="val2" /> oder sowohl <paramref name="val1" /> als auch <paramref name="val2" /> gleich <see cref="F:System.Double.NaN" /> ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int16,System.Int16)">
      <summary>Gibt die größere von zwei 16-Bit-Ganzzahlen mit Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int32,System.Int32)">
      <summary>Gibt die größere von zwei 32-Bit-Ganzzahlen mit Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int64,System.Int64)">
      <summary>Gibt die größere von zwei 64-Bit-Ganzzahlen mit Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.SByte,System.SByte)">
      <summary>Gibt die größere von zwei 8-Bit-Ganzzahlen mit Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.Single,System.Single)">
      <summary>Gibt die größere von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />. Wenn entweder <paramref name="val1" /> oder <paramref name="val2" /> oder sowohl <paramref name="val1" /> als auch <paramref name="val2" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt16,System.UInt16)">
      <summary>Gibt die größere von zwei 16-Bit-Ganzzahlen ohne Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt32,System.UInt32)">
      <summary>Gibt die größere von zwei 32-Bit-Ganzzahlen ohne Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt64,System.UInt64)">
      <summary>Gibt die größere von zwei 64-Bit-Ganzzahlen ohne Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Der größere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.MaxMagnitude(System.Double,System.Double)">
      <summary>Gibt den größeren Betrag von zwei Gleitkommazahlen mit doppelter Genauigkeit zurück.</summary>
      <param name="x">Die erste von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</param>
      <param name="y">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</param>
      <returns>Parameter <paramref name="x" /> oder <paramref name="y" />, je nachdem, welche den größeren Betrag hat. Wenn entweder <paramref name="x" /> oder <paramref name="y" /> oder sowohl <paramref name="x" /> als auch <paramref name="y" /> gleich <see cref="F:System.Double.NaN" /> ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Min(System.Byte,System.Byte)">
      <summary>Gibt die kleinere von zwei 8-Bit-Ganzzahlen ohne Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Decimal,System.Decimal)">
      <summary>Gibt die kleinere von zwei Decimal-Zahlen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden Dezimalzahlen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden Dezimalzahlen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Double,System.Double)">
      <summary>Gibt die kleinere von zwei Gleitkommazahlen mit doppelter Genauigkeit zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />. Wenn entweder <paramref name="val1" /> oder <paramref name="val2" /> oder sowohl <paramref name="val1" /> als auch <paramref name="val2" /> gleich <see cref="F:System.Double.NaN" /> ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int16,System.Int16)">
      <summary>Gibt die kleinere von zwei 16-Bit-Ganzzahlen mit Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen mit Vorzeichen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int32,System.Int32)">
      <summary>Gibt die kleinere von zwei 32-Bit-Ganzzahlen mit Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen mit Vorzeichen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int64,System.Int64)">
      <summary>Gibt die kleinere von zwei 64-Bit-Ganzzahlen mit Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen mit Vorzeichen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.SByte,System.SByte)">
      <summary>Gibt die kleinere von zwei 8-Bit-Ganzzahlen mit Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 8-Bit-Ganzzahlen mit Vorzeichen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.Single,System.Single)">
      <summary>Gibt die kleinere von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />. Wenn entweder <paramref name="val1" /> oder <paramref name="val2" /> oder sowohl <paramref name="val1" /> als auch <paramref name="val2" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt16,System.UInt16)">
      <summary>Gibt die kleinere von zwei 16-Bit-Ganzzahlen ohne Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 16-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt32,System.UInt32)">
      <summary>Gibt die kleinere von zwei 32-Bit-Ganzzahlen ohne Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 32-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt64,System.UInt64)">
      <summary>Gibt die kleinere von zwei 64-Bit-Ganzzahlen ohne Vorzeichen zurück.</summary>
      <param name="val1">Die erste von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <param name="val2">Die zweite von zwei zu vergleichenden 64-Bit-Ganzzahlen ohne Vorzeichen.</param>
      <returns>Der kleinere der Parameter <paramref name="val1" /> und <paramref name="val2" />.</returns>
    </member>
    <member name="M:System.Math.MinMagnitude(System.Double,System.Double)">
      <summary>Gibt den kleineren Betrag von zwei Gleitkommazahlen mit doppelter Genauigkeit zurück.</summary>
      <param name="x">Die erste von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</param>
      <param name="y">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit doppelter Genauigkeit.</param>
      <returns>Parameter <paramref name="x" /> oder <paramref name="y" />, je nachdem, welche den kleineren Betrag hat. Wenn entweder <paramref name="x" /> oder <paramref name="y" /> oder sowohl <paramref name="x" /> als auch <paramref name="y" /> gleich <see cref="F:System.Double.NaN" /> ist, wird <see cref="F:System.Double.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="F:System.Math.PI">
      <summary>Stellt das Verhältnis eines Kreisumfangs zum Kreisdurchmesser durch die Konstante π dar.</summary>
    </member>
    <member name="M:System.Math.Pow(System.Double,System.Double)">
      <summary>Potenziert eine angegebene Zahl mit dem angegebenen Exponenten.</summary>
      <param name="x">Eine Gleitkommazahl mit doppelter Genauigkeit, die potenziert werden soll.</param>
      <param name="y">Eine Gleitkommazahl mit doppelter Genauigkeit, die einen Exponenten darstellt.</param>
      <returns>Die Zahl <paramref name="x" /> hoch <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Math.Round(System.Decimal)">
      <summary>Rundet einen Dezimalwert auf den nächstgelegenen ganzzahligen Wert und Mittelpunktwerte auf die nächstgelegene gerade Zahl.</summary>
      <param name="d">Eine zu rundende Dezimalzahl.</param>
      <returns>Die dem <paramref name="d" />-Parameter nächstgelegene ganze Zahl. Wenn der Nachkommawert von <paramref name="d" /> genau in der Mitte zwischen zwei Ganzzahlen liegt, von denen eine gerade und die andere ungerade ist, wird die gerade Zahl zurückgegeben. Beachten Sie, dass diese Methode einen <see cref="T:System.Decimal" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
      <exception cref="T:System.OverflowException">Das Ergebnis liegt außerhalb des Bereichs von <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32)">
      <summary>Rundet einen Dezimalwert auf eine angegebene Anzahl Dezimalstellen und Mittelpunktwerte auf die nächstgelegene gerade Zahl.</summary>
      <param name="d">Eine zu rundende Dezimalzahl.</param>
      <param name="decimals">Die Anzahl der Dezimalstellen im Rückgabewert.</param>
      <returns>Die Zahl, die <paramref name="d" /> am nächsten liegt und deren Anzahl von Nachkommastellen gleich <paramref name="decimals" /> ist.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> ist kleiner als 0 (null) oder größer als 28.</exception>
      <exception cref="T:System.OverflowException">Das Ergebnis liegt außerhalb des Bereichs von <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
      <summary>Rundet einen Dezimalwert auf die angegebene Anzahl Dezimalstellen und verwendet den angegebenen Rundungsmodus für Mittelpunktwerte.</summary>
      <param name="d">Eine zu rundende Dezimalzahl.</param>
      <param name="decimals">Die Anzahl von Dezimalstellen im Rückgabewert.</param>
      <param name="mode">Angabe, wie <paramref name="d" /> gerundet werden soll, wenn der Wert genau in der Mitte zwischen zwei anderen Zahlen liegt.</param>
      <returns>Die Zahl, die <paramref name="d" /> am nächsten liegt und deren Anzahl von Bruchziffern <paramref name="decimals" /> entspricht. Wenn <paramref name="d" /> weniger Dezimalstellen als <paramref name="decimals" /> hat, wird <paramref name="d" /> unverändert zurückgegeben.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> ist kleiner als 0 (null) oder größer als 28.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger Wert von <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">Das Ergebnis liegt außerhalb des Bereichs von <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
      <summary>Rundet einen Dezimalwert auf die nächstgelegene ganze Zahl und verwendet den angegebenen Rundungsmodus für Mittelpunktwerte.</summary>
      <param name="d">Eine zu rundende Dezimalzahl.</param>
      <param name="mode">Angabe zum Runden von <paramref name="d" />, wenn er genau in der Mitte zwischen zwei anderen Zahlen liegt.</param>
      <returns>Die zu <paramref name="d" /> nächste Ganzzahl. Wenn <paramref name="d" /> genau in der Mitte zwischen zwei Zahlen liegt, von denen eine gerade und die andere ungerade ist, bestimmt der <paramref name="mode" />-Parameter, welche der beiden Zahlen zurückgegeben wird. Beachten Sie, dass diese Methode einen <see cref="T:System.Decimal" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger Wert von <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">Das Ergebnis liegt außerhalb des Bereichs von <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double)">
      <summary>Rundet einen Gleitkommawert mit doppelter Genauigkeit auf den nächstgelegenen ganzzahligen Wert und Mittelpunktwerte auf die nächstgelegene gerade Zahl.</summary>
      <param name="a">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <returns>Der der Ganzzahl am nächsten liegende <paramref name="a" />. Wenn der Nachkommawert von <paramref name="a" /> genau in der Mitte zwischen zwei Ganzzahlen liegt, von denen eine gerade und die andere ungerade ist, wird die gerade Zahl zurückgegeben. Beachten Sie, dass diese Methode einen <see cref="T:System.Double" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32)">
      <summary>Rundet einen Gleitkommawert mit doppelter Genauigkeit auf eine angegebene Anzahl Dezimalstellen und Mittelpunktwerte auf die nächstgelegene gerade Zahl.</summary>
      <param name="value">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <param name="digits">Die Anzahl von Dezimalstellen im Rückgabewert.</param>
      <returns>Die Zahl, die <paramref name="value" /> am nächsten liegt und deren Anzahl von Nachkommastellen gleich <paramref name="digits" /> ist.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> ist kleiner als 0 (null) oder größer als 15.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
      <summary>Rundet einen Gleitkommawert mit doppelter Genauigkeit auf die angegebene Anzahl Dezimalstellen und verwendet den angegebenen Rundungsmodus für Mittelpunktwerte.</summary>
      <param name="value">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <param name="digits">Die Anzahl der Bruchziffern im Rückgabewert.</param>
      <param name="mode">Angabe, wie <paramref name="value" /> gerundet werden soll, wenn der Wert genau in der Mitte zwischen zwei anderen Zahlen liegt.</param>
      <returns>Die Zahl, die <paramref name="value" /> am nächsten liegt und deren Anzahl von Bruchziffern <paramref name="digits" /> entspricht. Wenn <paramref name="value" /> weniger Dezimalstellen als <paramref name="digits" /> hat, wird <paramref name="value" /> unverändert zurückgegeben.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> ist kleiner als 0 (null) oder größer als 15.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger Wert von <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double,System.MidpointRounding)">
      <summary>Rundet einen Gleitkommawert mit doppelter Genauigkeit auf die nächstgelegene ganze Zahl und verwendet den angegebenen Rundungsmodus für Mittelpunktwerte.</summary>
      <param name="value">Eine zu rundende Gleitkommazahl mit doppelter Genauigkeit.</param>
      <param name="mode">Angabe, wie <paramref name="value" /> gerundet werden soll, wenn der Wert genau in der Mitte zwischen zwei anderen Zahlen liegt.</param>
      <returns>Die zu <paramref name="value" /> nächste Ganzzahl. Wenn <paramref name="value" /> genau in der Mitte zwischen zwei Zahlen liegt, von denen eine gerade und die andere ungerade ist, bestimmt der <paramref name="mode" />-Parameter, welche der beiden Zahlen zurückgegeben wird. Beachten Sie, dass diese Methode einen <see cref="T:System.Double" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger Wert von <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.Math.ScaleB(System.Double,System.Int32)">
      <summary>Gibt x * 2^n effizient berechnet zurück.</summary>
      <param name="x">Eine Gleitkommazahl mit einfacher Genauigkeit, die den Basiswert darstellt.</param>
      <param name="n">Eine Gleitkommazahl mit einfacher Genauigkeit, die den Exponenten darstellt.</param>
      <returns>x * 2^n effizient berechnet.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Decimal)">
      <summary>Gibt eine ganze Zahl zurück, die das Vorzeichen einer Dezimalzahl angibt.</summary>
      <param name="value">Eine Dezimalzahl mit Vorzeichen.</param>
      <returns>Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Rückgabewert 
  Bedeutung 
  -1 
 <paramref name="value" /> ist kleiner als Null.  

  0 
 <paramref name="value" /> ist gleich 0 (null).  

  1 
 <paramref name="value" /> ist größer als 0 (null).</returns>
    </member>
    <member name="M:System.Math.Sign(System.Double)">
      <summary>Gibt eine ganze Zahl zurück, die das Vorzeichen einer Gleitkommazahl mit doppelter Genauigkeit angibt.</summary>
      <param name="value">Eine Zahl mit Vorzeichen.</param>
      <returns>Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Rückgabewert 
  Bedeutung 
  -1 
 <paramref name="value" /> ist kleiner als Null.  

  0 
 <paramref name="value" /> ist gleich 0 (null).  

  1 
 <paramref name="value" /> ist größer als 0 (null).</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> ist gleich <see cref="F:System.Double.NaN" />.</exception>
    </member>
    <member name="M:System.Math.Sign(System.Int16)">
      <summary>Gibt eine ganze Zahl zurück, die das Vorzeichen einer ganzen 16-Bit-Zahl mit Vorzeichen angibt.</summary>
      <param name="value">Eine Zahl mit Vorzeichen.</param>
      <returns>Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Rückgabewert 
  Bedeutung 
  -1 
 <paramref name="value" /> ist kleiner als Null.  

  0 
 <paramref name="value" /> ist gleich 0 (null).  

  1 
 <paramref name="value" /> ist größer als 0 (null).</returns>
    </member>
    <member name="M:System.Math.Sign(System.Int32)">
      <summary>Gibt eine ganze Zahl zurück, die das Vorzeichen einer ganzen 32-Bit-Zahl mit Vorzeichen angibt.</summary>
      <param name="value">Eine Zahl mit Vorzeichen.</param>
      <returns>Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Rückgabewert 
  Bedeutung 
  -1 
 <paramref name="value" /> ist kleiner als Null.  

  0 
 <paramref name="value" /> ist gleich 0 (null).  

  1 
 <paramref name="value" /> ist größer als 0 (null).</returns>
    </member>
    <member name="M:System.Math.Sign(System.Int64)">
      <summary>Gibt eine ganze Zahl zurück, die das Vorzeichen einer ganzen 64-Bit-Zahl mit Vorzeichen angibt.</summary>
      <param name="value">Eine Zahl mit Vorzeichen.</param>
      <returns>Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Rückgabewert 
  Bedeutung 
  -1 
 <paramref name="value" /> ist kleiner als Null.  

  0 
 <paramref name="value" /> ist gleich 0 (null).  

  1 
 <paramref name="value" /> ist größer als 0 (null).</returns>
    </member>
    <member name="M:System.Math.Sign(System.SByte)">
      <summary>Gibt eine ganze Zahl zurück, die das Vorzeichen einer ganzen 8-Bit-Zahl mit Vorzeichen angibt.</summary>
      <param name="value">Eine Zahl mit Vorzeichen.</param>
      <returns>Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Rückgabewert 
  Bedeutung 
  -1 
 <paramref name="value" /> ist kleiner als Null.  

  0 
 <paramref name="value" /> ist gleich 0 (null).  

  1 
 <paramref name="value" /> ist größer als 0 (null).</returns>
    </member>
    <member name="M:System.Math.Sign(System.Single)">
      <summary>Gibt eine ganze Zahl zurück, die das Vorzeichen einer Gleitkommazahl mit einfacher Genauigkeit angibt.</summary>
      <param name="value">Eine Zahl mit Vorzeichen.</param>
      <returns>Eine Zahl, die das Vorzeichen von <paramref name="value" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Rückgabewert 
  Bedeutung 
  -1 
 <paramref name="value" /> ist kleiner als Null.  

  0 
 <paramref name="value" /> ist gleich 0 (null).  

  1 
 <paramref name="value" /> ist größer als 0 (null).</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> ist gleich <see cref="F:System.Single.NaN" />.</exception>
    </member>
    <member name="M:System.Math.Sin(System.Double)">
      <summary>Gibt den Sinus des angegebenen Winkels zurück.</summary>
      <param name="a">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Sinus von <paramref name="a" />. Wenn <paramref name="a" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird <see cref="F:System.Double.NaN" /> von dieser Methode zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Sinh(System.Double)">
      <summary>Gibt den Hyperbelsinus des angegebenen Winkels zurück.</summary>
      <param name="value">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Hyperbelsinus von <paramref name="value" />. Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> oder <see cref="F:System.Double.NaN" /> ist, gibt diese Methode einen <see cref="T:System.Double" /> mit dem Wert <paramref name="value" /> zurück.</returns>
    </member>
    <member name="M:System.Math.Sqrt(System.Double)">
      <summary>Gibt die Quadratwurzel einer angegebenen Zahl zurück.</summary>
      <param name="d">Die Zahl, deren Quadratwurzel bestimmt werden soll.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="d" />-Parameter 
  Rückgabewert 
  0 oder positiv 
  Die positive Quadratwurzel von <paramref name="d" />.  

  Negativ 
 <see cref="F:System.Double.NaN" /> Entspricht <see cref="F:System.Double.NaN" />.<see cref="F:System.Double.NaN" /> Entspricht <see cref="F:System.Double.PositiveInfinity" />.<see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Tan(System.Double)">
      <summary>Gibt den Tangens des angegebenen Winkels zurück.</summary>
      <param name="a">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Tangens von <paramref name="a" />. Wenn <paramref name="a" /> gleich <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" /> ist, wird <see cref="F:System.Double.NaN" /> von dieser Methode zurückgegeben.</returns>
    </member>
    <member name="M:System.Math.Tanh(System.Double)">
      <summary>Gibt den Hyperbeltangens des angegebenen Winkels zurück.</summary>
      <param name="value">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Hyperbeltangens von <paramref name="value" />. Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NegativeInfinity" /> ist, gibt diese Methode -1 zurück. Wenn value gleich <see cref="F:System.Double.PositiveInfinity" /> ist, gibt diese Methode 1 zurück. Wenn <paramref name="value" /> gleich <see cref="F:System.Double.NaN" /> ist, gibt diese Methode <see cref="F:System.Double.NaN" /> zurück.</returns>
    </member>
    <member name="M:System.Math.Truncate(System.Decimal)">
      <summary>Berechnet den den ganzzahligen Teil einer angegebenen Decimal-Zahl.</summary>
      <param name="d">Eine abzuschneidende Zahl.</param>
      <returns>Der ganzzahlige Teil von <paramref name="d" />, d. h, die Zahl, die nach dem Verwerfen der Dezimalstellen übrig bleibt.</returns>
    </member>
    <member name="M:System.Math.Truncate(System.Double)">
      <summary>Berechnet den den ganzzahligen Teil einer angegebenen Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="d">Eine abzuschneidende Zahl.</param>
      <returns>Der wesentliche Bestandteil von <paramref name="d" />; das heißt, die Zahl, die bleibt, wenn alle Dezimalstellen verworfen wurden, oder einer der Werte in der folgenden Tabelle.  
 <paramref name="d" /> Rückgabewert 
 <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /><see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="T:System.MathF">
      <summary>Stellt Konstanten und statische Methoden für trigonometrische, logarithmische und andere gebräuchliche mathematische Funktionen bereit.</summary>
    </member>
    <member name="M:System.MathF.Abs(System.Single)">
      <summary>Gibt den absoluten Wert einer Gleitkommazahl mit einfacher Genauigkeit zurück.</summary>
      <param name="x">Eine Zahl, die größer oder gleich <see cref="F:System.Single.MinValue" />, aber kleiner oder gleich <see cref="F:System.Single.MaxValue" /> ist.</param>
      <returns>Eine Gleitkommazahl x mit einfacher Genauigkeit im Bereich 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</returns>
    </member>
    <member name="M:System.MathF.Acos(System.Single)">
      <summary>Gibt einen Winkel zurück, dessen Kosinus die angegebene Zahl ist.</summary>
      <param name="x">Eine Zahl, die einen Kosinus darstellt, wobei <paramref name="x" /> größer oder gleich -1, aber kleiner oder gleich 1 sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich 0 ≤ θ ≤ π.

oder - 
<see cref="F:System.Single.NaN" />, wenn <paramref name="x" /> &lt; –1 oder <paramref name="x" /> &gt; 1 oder <paramref name="x" /> gleich <see cref="F:System.Single.NaN" /> ist.</returns>
    </member>
    <member name="M:System.MathF.Acosh(System.Single)">
      <summary>Gibt den Winkel zurück, dessen hyperbolischer Kosinus die angegebene Zahl ist.</summary>
      <param name="x">Eine Zahl, die einen hyperbolischen Kosinus darstellt, wobei <paramref name="x" /> größer oder gleich 1, aber kleiner oder gleich <see cref="F:System.Single.PositiveInfinity" /> sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich 0 ≤ θ ≤ ∞.

oder - 
<see cref="F:System.Single.NaN" /> wenn <paramref name="x" /> &lt; 1 oder <paramref name="x" /> gleich <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Asin(System.Single)">
      <summary>Gibt einen Winkel zurück, dessen Sinus die angegebene Zahl ist.</summary>
      <param name="x">Eine Zahl, die einen Sinus darstellt, wobei <paramref name="x" /> größer oder gleich -1, aber kleiner oder gleich 1 sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich -π/2 ≤ θ ≤ π/2.

oder - 
<see cref="F:System.Single.NaN" />, wenn <paramref name="x" /> &lt; –1 oder <paramref name="x" /> &gt; 1 oder <paramref name="x" /> gleich <see cref="F:System.Single.NaN" /> ist.</returns>
    </member>
    <member name="M:System.MathF.Asinh(System.Single)">
      <summary>Gibt den Winkel zurück, dessen hyperbolischer Sinus die angegebene Zahl ist.</summary>
      <param name="x">Eine Zahl, die einen hyperbolischen Sinus darstellt, wobei <paramref name="x" /> größer oder gleich <see cref="F:System.Single.NegativeInfinity" />, aber kleiner oder gleich <see cref="F:System.Single.PositiveInfinity" /> sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß sodass -∞ &lt; θ ≤ -1, oder 1 ≤ θ &lt; ∞. 

oder - 
<see cref="F:System.Single.NaN" /> wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Atan(System.Single)">
      <summary>Gibt einen Winkel zurück, dessen Tangens die angegebene Zahl ist.</summary>
      <param name="x">Eine Zahl, die einen Tangens darstellt.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich -π/2 ≤ θ ≤ π/2.  

oder - 
<see cref="F:System.Single.NaN" />, wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" /> ist, –π/2 auf doppelte Genauigkeit gerundet (–1,5707963267949), wenn <paramref name="x" /> gleich <see cref="F:System.Single.NegativeInfinity" /> ist oder π/2 auf doppelte Genauigkeit gerundet (1,5707963267949), wenn <paramref name="x" /> gleich <see cref="F:System.Single.PositiveInfinity" /> ist.</returns>
    </member>
    <member name="M:System.MathF.Atan2(System.Single,System.Single)">
      <summary>Gibt einen Winkel zurück, dessen Tangens der Quotient zweier angegebener Zahlen ist.</summary>
      <param name="y">Die y-Koordinate eines Punkts.</param>
      <param name="x">Die x-Koordinate eines Punkts.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich –π ≤ θ ≤ π, und tan(θ) = <paramref name="y" /> / <paramref name="x" />, wobei (<paramref name="x" />, <paramref name="y" />) einen Punkt in der kartesischen Ebene darstellt. Beachten Sie dabei: 
–   Wenn (<paramref name="x" />, <paramref name="y" />) im 1. Quadranten liegt, gilt 0 &lt; θ &lt; π/2.  
–   Wenn (<paramref name="x" />, <paramref name="y" />) im 2. Quadranten liegt, gilt π/2 &lt; θ ≤ π.  
–   Wenn (<paramref name="x" />, <paramref name="y" />) im 3. Quadranten liegt, gilt –π &lt; θ &lt; –π/2.  
–   Wenn (<paramref name="x" />, <paramref name="y" />) im 4. Quadranten liegt, gilt –π/2 &lt; θ &lt; 0.  
Für Punkte an den Begrenzungen der Quadranten wird der folgende Rückgabewert zurückgegeben: 
–   Wenn y gleich 0 und x nicht negativ ist, gilt θ = 0.  
–   Wenn y gleich 0 und x negativ ist, gilt θ = π.  
–   Wenn y positiv und x gleich 0 ist, gilt θ = π/2.  
–   Wenn y negativ ist und x gleich 0 ist, gilt θ = -π/2.  
–   Wenn y gleich 0 ist und x gleich 0 ist, gilt θ = 0.  
Wenn <paramref name="x" /> oder <paramref name="y" /> gleich <see cref="F:System.Single.NaN" /> ist oder wenn <paramref name="x" /> und <paramref name="y" /> entweder gleich <see cref="F:System.Single.PositiveInfinity" /> oder gleich <see cref="F:System.Single.NegativeInfinity" /> sind, gibt die Methode <see cref="F:System.Single.NaN" /> zurück.</returns>
    </member>
    <member name="M:System.MathF.Atanh(System.Single)">
      <summary>Gibt den Winkel zurück, dessen hyperbolischer Tangens die angegebene Zahl ist.</summary>
      <param name="x">Eine Zahl, die einen hyperbolischen Tangens darstellt, wobei <paramref name="x" /> größer oder gleich -1, aber kleiner oder gleich 1 sein muss.</param>
      <returns>Ein Winkel (θ) im Bogenmaß im Bereich -∞ &lt; θ &lt;-1, oder 1 &lt; θ &lt; ∞.  

oder - 
<see cref="F:System.Single.NaN" />, wenn <paramref name="x" /> &lt; –1 oder <paramref name="x" /> &gt; 1 oder <paramref name="x" /> gleich <see cref="F:System.Single.NaN" /> ist.</returns>
    </member>
    <member name="M:System.MathF.BitDecrement(System.Single)">
      <summary>Gibt den nächsten kleinsten Wert zurück, der weniger als <paramref name="x" /> vergleicht.</summary>
      <param name="x">Der zu dekrementierende Wert.</param>
      <returns>Der nächste kleinste Wert, der weniger als <paramref name="x" /> vergleicht.

oder - 
<see cref="F:System.Single.NegativeInfinity" /> wenn <paramref name="x" /> ist gleich <see cref="F:System.Single.NegativeInfinity" />.

oder - 
<see cref="F:System.Single.NaN" /> wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.BitIncrement(System.Single)">
      <summary>Gibt den nächsten größten Wert zurück, der größer als <paramref name="x" /> ist.</summary>
      <param name="x">Der zu inkrementierende Wert.</param>
      <returns>Der nächste größte Wert, der größer als <paramref name="x" /> ist.

oder - 
<see cref="F:System.Single.PositiveInfinity" /> wenn <paramref name="x" /> gleich <see cref="F:System.Single.PositiveInfinity" />.

oder - 
<see cref="F:System.Single.NaN" /> wenn <paramref name="x" /> ist gleich <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Cbrt(System.Single)">
      <summary>Gibt die Kubikwurzel einer angegebenen Zahl zurück.</summary>
      <param name="x">Die Zahl, deren Kubikwurzel bestimmt werden soll.</param>
      <returns>Die Kubikwurzel von <paramref name="x" />.

oder - 
<see cref="F:System.Single.NaN" /> wenn <paramref name="x" /> ist gleich <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Ceiling(System.Single)">
      <summary>Gibt den kleinsten ganzzahligen Wert zurück, der größer oder gleich der angegebenen Gleitkommazahl mit einfacher Genauigkeit ist.</summary>
      <param name="x">Eine Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>Der kleinste ganzzahlige Wert, der größer oder gleich <paramref name="x" /> ist. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> oder <see cref="F:System.Single.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben. Beachten Sie, dass diese Methode einen <see cref="T:System.Single" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
    </member>
    <member name="M:System.MathF.CopySign(System.Single,System.Single)">
      <summary>Gibt einen Wert mit dem Betrag <paramref name="x" /> und dem Vorzeichen <paramref name="y" /> zurück.</summary>
      <param name="x">Eine Zahl, deren Betrag im Ergebnis verwendet wird.</param>
      <param name="y">Eine Zahl, deren Vorzeichen im Ergebnis verwendet wird.</param>
      <returns>Ein Wert mit dem Betrag <paramref name="x" /> und dem Vorzeichen <paramref name="y" />.</returns>
    </member>
    <member name="M:System.MathF.Cos(System.Single)">
      <summary>Gibt den Kosinus des angegebenen Winkels zurück.</summary>
      <param name="x">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Kosinus von <paramref name="x" />. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> oder <see cref="F:System.Single.PositiveInfinity" /> ist, wird <see cref="F:System.Single.NaN" /> von dieser Methode zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.Cosh(System.Single)">
      <summary>Gibt den Hyperbelkosinus des angegebenen Winkels zurück.</summary>
      <param name="x">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Hyperbelkosinus von <paramref name="x" />. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NegativeInfinity" /> oder <see cref="F:System.Single.PositiveInfinity" /> ist, wird <see cref="F:System.Single.PositiveInfinity" /> zurückgegeben. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="F:System.MathF.E">
      <summary>Stellt die Basis des natürlichen Logarithmus durch die Konstante <see langword="e" /> dar.</summary>
    </member>
    <member name="M:System.MathF.Exp(System.Single)">
      <summary>Gibt die angegebene Potenz von <see langword="e" /> zurück.</summary>
      <param name="x">Eine Zahl, die einen Exponenten angibt.</param>
      <returns>Die Zahl <see langword="e" /> hoch <paramref name="x" />. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" /> oder <see cref="F:System.Single.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NegativeInfinity" /> ist, wird 0 zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.Floor(System.Single)">
      <summary>Gibt die größte Ganzzahl zurück, die kleiner oder gleich der angegebenen Gleitkommazahl mit einfacher Genauigkeit ist.</summary>
      <param name="x">Eine Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>Die größte Ganzzahl, die kleiner oder gleich <paramref name="x" /> ist. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> oder <see cref="F:System.Single.PositiveInfinity" /> ist, wird dieser Wert zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.FusedMultiplyAdd(System.Single,System.Single,System.Single)">
      <summary>Gibt (x * y) + z, gerundet als ternärer Vorgang, zurück.</summary>
      <param name="x">Die Zahl, die mit <paramref name="y" /> multipliziert werden soll.</param>
      <param name="y">Die Zahl, die mit <paramref name="x" /> multipliziert werden soll.</param>
      <param name="z">Die Zahl, die zum Ergebnis von <paramref name="x" /> multipliziert mit <paramref name="y" /> addiert werden soll.</param>
      <returns>(x * y) + z, gerundet als ternärer Vorgang.</returns>
    </member>
    <member name="M:System.MathF.IEEERemainder(System.Single,System.Single)">
      <summary>Gibt den Rest der Division zweier angegebener Zahlen zurück.</summary>
      <param name="x">Ein Dividend.</param>
      <param name="y">Ein Divisor.</param>
      <returns>Eine Zahl gleich <paramref name="x" /> – (<paramref name="y" /> Q), wobei Q der auf die nächste ganze Zahl gerundete Quotient von <paramref name="x" /> / <paramref name="y" /> ist (wenn <paramref name="x" /> / <paramref name="y" /> genau in der Mitte zwischen zwei ganzen Zahlen liegt, wird die gerade ganze Zahl zurückgegeben).  
Wenn <paramref name="x" /> - (<paramref name="y" />Q) gleich 0 ist, wird bei positivem <paramref name="x" /> +0 und bei negativem <paramref name="x" /> -0 zurückgegeben.  
Wenn <paramref name="y" /> = 0 ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.ILogB(System.Single)">
      <summary>Gibt den Logarithmus einer angegebenen ganzen Zahl zur Basis 2 zurück.</summary>
      <param name="x">Die Zahl, deren Logarithmus bestimmt werden soll.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="x" />-Parameter 
  Rückgabewert 
  Standard 
  Der Logarithmus einer ganzen Zahl zur Basis 2 von <paramref name="x" />; d.h. (int)log2(<paramref name="x" />).  

  Zero 
 <see cref="F:System.Int32.MinValue" /> Gleich <see cref="F:System.Single.NaN" /> oder <see cref="F:System.Single.PositiveInfinity" /> oder <see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Int32.MaxValue" /></returns>
    </member>
    <member name="M:System.MathF.Log(System.Single)">
      <summary>Gibt den natürlichen Logarithmus (zur Basis <see langword="e" />) der angegebenen Zahl zurück.</summary>
      <param name="x">Die Zahl, deren Logarithmus bestimmt werden soll.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="x" />-Parameter 
  Rückgabewert 
  Positiv 
  Der natürliche Logarithmus von <paramref name="x" />, d.h. ln <paramref name="x" /> oder log e <paramref name="x" /> Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativ 
 <see cref="F:System.Single.NaN" /> Gleich <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Gleich <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Log(System.Single,System.Single)">
      <summary>Gibt den Logarithmus einer angegebenen Zahl bezüglich einer angegebenen Basis zurück.</summary>
      <param name="x">Die Zahl, deren Logarithmus bestimmt werden soll.</param>
      <param name="y">Die Basis</param>
      <returns>Einer der Werte aus der folgenden Tabelle. (Plus unendlich steht für <see cref="F:System.Single.PositiveInfinity" />, minus unendlich für <see cref="F:System.Single.NegativeInfinity" /> und NaN für <see cref="F:System.Single.NaN" />.) 
 <paramref name="x" /><paramref name="newBase" /> Rückgabewert 
 <paramref name="x" />&gt; 0 
  (0 &lt;<paramref name="newBase" />&lt; 1) – oder – (<paramref name="newBase" />&gt; 1) 
  lognewBase(a) 
 <paramref name="x" />&lt; 0 
  (beliebiger Wert) 
  NaN 
  (beliebiger Wert) 
 <paramref name="newBase" />&lt; 0 
  NaN 
 <paramref name="x" /> != 1 
 <paramref name="newBase" /> = 0 
  NaN 
 <paramref name="x" /> != 1 
 <paramref name="newBase" /> = plus unendlich 
  NaN 
 <paramref name="x" /> = NaN 
  (beliebiger Wert) 
  NaN 
  (beliebiger Wert) 
 <paramref name="newBase" /> = NaN 
  NaN 
  (beliebiger Wert) 
 <paramref name="newBase" /> = 1 
  NaN 
 <paramref name="x" /> = 0 
  0 &lt;<paramref name="newBase" />&lt; 1 
  plus unendlich 
 <paramref name="x" /> = 0 
 <paramref name="newBase" />&gt; 1 
  minus unendlich 
 <paramref name="x" /> =  +unendlich 
  0 &lt;<paramref name="newBase" />&lt; 1 
  -Infinity 
 <paramref name="x" /> =  +unendlich 
 <paramref name="newBase" />&gt; 1 
  plus unendlich 
 <paramref name="x" /> = 1 
 <paramref name="newBase" /> = 0 
  0 
 <paramref name="x" /> = 1 
 <paramref name="newBase" /> = plus unendlich 
  0</returns>
    </member>
    <member name="M:System.MathF.Log10(System.Single)">
      <summary>Gibt den Logarithmus einer angegebenen Zahl zur Basis 10 zurück.</summary>
      <param name="x">Eine Zahl, deren Logarithmus gesucht wird.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="x" />-Parameter 
  Rückgabewert 
  Positiv 
  Der Logarithmus von <paramref name="x" /> zur Basis 10, d.h. log 10<paramref name="x" />.  

  Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativ 
 <see cref="F:System.Single.NaN" /> Gleich <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Gleich <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Log2(System.Single)">
      <summary>Gibt den Logarithmus einer angegebenen Zahl zur Basis 2 zurück.</summary>
      <param name="x">Eine Zahl, deren Logarithmus gesucht wird.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="x" />-Parameter 
  Rückgabewert 
  Positiv 
  Der Logarithmus von <paramref name="x" /> zur Basis 2, d.h. log 2<paramref name="x" />.  

  Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativ 
 <see cref="F:System.Single.NaN" /> Gleich <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Gleich <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Max(System.Single,System.Single)">
      <summary>Gibt die größere von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.</summary>
      <param name="x">Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <param name="y">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <returns>Der größere der Parameter <paramref name="x" /> und <paramref name="y" />. Wenn entweder <paramref name="x" /> oder <paramref name="y" /> oder sowohl <paramref name="x" /> als auch <paramref name="y" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.MaxMagnitude(System.Single,System.Single)">
      <summary>Gibt den größeren Betrag von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.</summary>
      <param name="x">Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <param name="y">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <returns>Parameter <paramref name="x" /> oder <paramref name="y" />, je nachdem, welche den größeren Betrag hat. Wenn entweder <paramref name="x" /> oder <paramref name="y" /> oder sowohl <paramref name="x" /> als auch <paramref name="y" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.Min(System.Single,System.Single)">
      <summary>Gibt die kleinere von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.</summary>
      <param name="x">Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <param name="y">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <returns>Der kleinere der Parameter <paramref name="x" /> und <paramref name="y" />. Wenn entweder <paramref name="x" /> oder <paramref name="y" /> oder sowohl <paramref name="x" /> als auch <paramref name="y" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.MinMagnitude(System.Single,System.Single)">
      <summary>Gibt den kleineren Betrag von zwei Gleitkommazahlen mit einfacher Genauigkeit zurück.</summary>
      <param name="x">Die erste von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <param name="y">Die zweite von zwei zu vergleichenden Gleitkommazahlen mit einfacher Genauigkeit.</param>
      <returns>Parameter <paramref name="x" /> oder <paramref name="y" />, je nachdem, welche den kleineren Betrag hat. Wenn entweder <paramref name="x" /> oder <paramref name="y" /> oder sowohl <paramref name="x" /> als auch <paramref name="y" /> gleich <see cref="F:System.Single.NaN" /> ist, wird <see cref="F:System.Single.NaN" /> zurückgegeben.</returns>
    </member>
    <member name="F:System.MathF.PI">
      <summary>Stellt das Verhältnis eines Kreisumfangs zum Kreisdurchmesser durch die Konstante π dar.</summary>
    </member>
    <member name="M:System.MathF.Pow(System.Single,System.Single)">
      <summary>Potenziert eine angegebene Zahl mit dem angegebenen Exponenten.</summary>
      <param name="x">Eine Gleitkommazahl mit einfacher Genauigkeit, die potenziert werden soll.</param>
      <param name="y">Eine Gleitkommazahl mit einfacher Genauigkeit, die einen Exponenten darstellt.</param>
      <returns>Die Zahl <paramref name="x" /> hoch <paramref name="y" />.</returns>
    </member>
    <member name="M:System.MathF.Round(System.Single)">
      <summary>Rundet einen Gleitkommawert mit einfacher Genauigkeit auf den nächstgelegenen ganzzahligen Wert und Mittelpunktwerte auf die nächstgelegene gerade Zahl.</summary>
      <param name="x">Eine zu rundende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <returns>Die zu <paramref name="x" /> nächste Ganzzahl. Wenn der Nachkommawert von <paramref name="x" /> genau in der Mitte zwischen zwei Ganzzahlen liegt, von denen eine gerade und die andere ungerade ist, wird die gerade Zahl zurückgegeben. Beachten Sie, dass diese Methode einen <see cref="T:System.Single" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.Int32)">
      <summary>Rundet einen Gleitkommawert mit einfacher Genauigkeit auf eine angegebene Anzahl Dezimalstellen und Mittelpunktwerte auf die nächstgelegene gerade Zahl.</summary>
      <param name="x">Eine zu rundende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <param name="digits">Die Anzahl von Dezimalstellen im Rückgabewert.</param>
      <returns>Die Zahl, die <paramref name="x" /> am nächsten liegt und deren Anzahl von Nachkommastellen gleich <paramref name="digits" /> ist.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> ist kleiner als 0 (null) oder größer als 6.</exception>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.Int32,System.MidpointRounding)">
      <summary>Rundet einen Gleitkommawert mit einfacher Genauigkeit auf die angegebene Anzahl Dezimalstellen und verwendet den angegebenen Rundungsmodus für Mittelpunktwerte.</summary>
      <param name="x">Eine zu rundende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <param name="digits">Die Anzahl von Dezimalstellen im Rückgabewert.</param>
      <param name="mode">Angabe, wie <paramref name="x" /> gerundet werden soll, wenn der Wert genau in der Mitte zwischen zwei anderen Zahlen liegt.</param>
      <returns>Die Zahl, die <paramref name="x" /> am nächsten liegt und deren Anzahl von Dezimalstellen gleich <paramref name="digits" /> ist. Wenn <paramref name="x" /> weniger Dezimalstellen als <paramref name="digits" /> hat, wird <paramref name="x" /> unverändert zurückgegeben.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> ist kleiner als 0 (null) oder größer als 6.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger Wert von <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.MidpointRounding)">
      <summary>Rundet einen Gleitkommawert mit einfacher Genauigkeit auf die nächstgelegene ganze Zahl und verwendet den angegebenen Rundungsmodus für Mittelpunktwerte.</summary>
      <param name="x">Eine zu rundende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <param name="mode">Angabe, wie <paramref name="x" /> gerundet werden soll, wenn der Wert genau in der Mitte zwischen zwei anderen Zahlen liegt.</param>
      <returns>Die zu <paramref name="x" /> nächste Ganzzahl. Wenn <paramref name="x" /> genau in der Mitte zwischen zwei Zahlen liegt, von denen eine gerade und die andere ungerade ist, bestimmt der <paramref name="mode" />-Parameter, welche der beiden Zahlen zurückgegeben wird. Beachten Sie, dass diese Methode einen <see cref="T:System.Single" /> anstelle eines ganzzahligen Typs zurückgibt.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> ist kein gültiger Wert von <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.MathF.ScaleB(System.Single,System.Int32)">
      <summary>Gibt x * 2^n effizient berechnet zurück.</summary>
      <param name="x">Eine Gleitkommazahl mit einfacher Genauigkeit, die den Basiswert darstellt.</param>
      <param name="n">Eine Gleitkommazahl mit einfacher Genauigkeit, die den Exponenten darstellt.</param>
      <returns>x * 2^n effizient berechnet.</returns>
    </member>
    <member name="M:System.MathF.Sign(System.Single)">
      <summary>Gibt eine ganze Zahl zurück, die das Vorzeichen einer Gleitkommazahl mit einfacher Genauigkeit angibt.</summary>
      <param name="x">Eine Zahl mit Vorzeichen.</param>
      <returns>Eine Zahl, die das Vorzeichen von <paramref name="x" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Rückgabewert 
  Bedeutung 
  -1 
 <paramref name="x" /> ist kleiner als Null.  

  0 
 <paramref name="x" /> ist gleich 0 (null).  

  1 
 <paramref name="x" /> ist größer als 0 (null).</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="x" /> ist gleich <see cref="F:System.Single.NaN" />.</exception>
    </member>
    <member name="M:System.MathF.Sin(System.Single)">
      <summary>Gibt den Sinus des angegebenen Winkels zurück.</summary>
      <param name="x">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Sinus von <paramref name="x" />. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> oder <see cref="F:System.Single.PositiveInfinity" /> ist, wird <see cref="F:System.Single.NaN" /> von dieser Methode zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.Sinh(System.Single)">
      <summary>Gibt den Hyperbelsinus des angegebenen Winkels zurück.</summary>
      <param name="x">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Hyperbelsinus von <paramref name="x" />. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NegativeInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> oder <see cref="F:System.Single.NaN" /> ist, gibt diese Methode einen <see cref="T:System.Single" /> mit dem Wert <paramref name="x" /> zurück.</returns>
    </member>
    <member name="M:System.MathF.Sqrt(System.Single)">
      <summary>Gibt die Quadratwurzel einer angegebenen Zahl zurück.</summary>
      <param name="x">Die Zahl, deren Quadratwurzel bestimmt werden soll.</param>
      <returns>Einer der Werte aus der folgenden Tabelle.  
 <paramref name="x" />-Parameter 
  Rückgabewert 
  0 oder positiv 
  Die positive Quadratwurzel von <paramref name="x" />.  

  Negativ 
 <see cref="F:System.Single.NaN" /> Entspricht <see cref="F:System.Single.NaN" />.<see cref="F:System.Single.NaN" /> Entspricht <see cref="F:System.Single.PositiveInfinity" />.<see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Tan(System.Single)">
      <summary>Gibt den Tangens des angegebenen Winkels zurück.</summary>
      <param name="x">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Tangens von <paramref name="x" />. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> oder <see cref="F:System.Single.PositiveInfinity" /> ist, wird <see cref="F:System.Single.NaN" /> von dieser Methode zurückgegeben.</returns>
    </member>
    <member name="M:System.MathF.Tanh(System.Single)">
      <summary>Gibt den Hyperbeltangens des angegebenen Winkels zurück.</summary>
      <param name="x">Ein im Bogenmaß angegebener Winkel.</param>
      <returns>Der Hyperbeltangens von <paramref name="x" />. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NegativeInfinity" /> ist, gibt diese Methode -1 zurück. Wenn value gleich <see cref="F:System.Single.PositiveInfinity" /> ist, gibt diese Methode 1 zurück. Wenn <paramref name="x" /> gleich <see cref="F:System.Single.NaN" /> ist, gibt diese Methode <see cref="F:System.Single.NaN" /> zurück.</returns>
    </member>
    <member name="M:System.MathF.Truncate(System.Single)">
      <summary>Berechnet den ganzzahligen Teil einer angegebenen Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="x">Eine abzuschneidende Zahl.</param>
      <returns>Der ganzzahlige Teil von <paramref name="x" />, d. h. die Zahl, die übrig bleibt, wenn alle Dezimalstellen verworfen wurden, oder einer der Werte in der folgenden Tabelle.  
 <paramref name="x" /> Rückgabewert 
 <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /><see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="T:System.Net.WebUtility">
      <summary>Stellt Methoden zum Codieren und Decodieren von URLs bei der Verarbeitung von Webanforderungen bereit.</summary>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String)">
      <summary>Konvertiert eine Zeichenfolge, die für die HTTP-Übertragung HTML-codiert wurde, in eine decodierte Zeichenfolge.</summary>
      <param name="value">Die zu decodierende Zeichenfolge.</param>
      <returns>Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>Konvertiert eine HTML-codierte Zeichenfolge in eine decodierte Zeichenfolge und sendet die decodierte Zeichenfolge an einen <see cref="T:System.IO.TextWriter" />-Ausgabestream.</summary>
      <param name="value">Die zu decodierende Zeichenfolge.</param>
      <param name="output">Ein <see cref="T:System.IO.TextWriter" />-Ausgabestream.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="output" />-Parameter kann nicht <see langword="null" /> sein, wenn der <paramref name="value" />-Parameter nicht <see langword="null" /> ist.</exception>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String)">
      <summary>Konvertiert eine Zeichenfolge in eine HTML-codierte Zeichenfolge.</summary>
      <param name="value">Die zu codierende Zeichenfolge.</param>
      <returns>Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>Konvertiert eine Zeichenfolge in eine HTML-codierte Zeichenfolge und gibt das Ergebnis in Form eines <see cref="T:System.IO.TextWriter" />-Ausgabestreams zurück.</summary>
      <param name="value">Die zu codierende Zeichenfolge.</param>
      <param name="output">Ein <see cref="T:System.IO.TextWriter" />-Ausgabestream.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="output" />-Parameter kann nicht <see langword="null" /> sein, wenn der <paramref name="value" />-Parameter nicht <see langword="null" /> ist.</exception>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecode(System.String)">
      <summary>Konvertiert eine Zeichenfolge, die für die Übertragung in eine URL codiert wurde, in eine decodierte Zeichenfolge.</summary>
      <param name="encodedValue">Eine zu decodierende URL-codierte Zeichenfolge.</param>
      <returns>Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Konvertiert ein codiertes Bytearray, das für die Übertragung in eine URL in ein codiertes Bytearray  codiert wurde.</summary>
      <param name="encodedValue">Ein zu decodierende URL-codiertes <see cref="T:System.Byte" /> Array.</param>
      <param name="offset">Der Offset, in Bytes, vom Anfang des zu decodierenden <see cref="T:System.Byte" /> Arrays.</param>
      <param name="count">Die Anzahl, in Bytes, die vom <see cref="T:System.Byte" /> Array decodiert werden.</param>
      <returns>Ein decodiertes <see cref="T:System.Byte" /> Array.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncode(System.String)">
      <summary>Konvertiert eine Textzeichenfolge in eine URL-codierte Zeichenfolge.</summary>
      <param name="value">Der als URL zu codierende Text.</param>
      <returns>Eine URL-codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Konvertiert ein Bytearray in ein URL-codiertes URL-Bytearray.</summary>
      <param name="value">Das mit URL zu codierende <see cref="T:System.Byte" /> Array.</param>
      <param name="offset">Der Offset, in Bytes, vom Anfang des zu codierenden <see cref="T:System.Byte" /> Arrays.</param>
      <param name="count">Die Anzahl, in Bytes, die vom <see cref="T:System.Byte" /> Array codiert werden.</param>
      <returns>Ein codiertes <see cref="T:System.Byte" /> array.</returns>
    </member>
    <member name="T:System.Numerics.BitOperations">
      <summary>Stellt Hilfsmethoden für intrinsische Bitanpassungsoperationen bereit. Die Methoden verwenden systeminterne Hardwarefunktionen, wenn sie auf der zugrunde liegenden Plattform verfügbar sind, ansonsten verwenden sie optimierte Softwarefallbacks.</summary>
    </member>
    <member name="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt32)">
      <summary>Zählt die Anzahl der führenden Nullbits in einer 32-Bit-Ganzzahlmaske ohne Vorzeichen.</summary>
      <param name="value">Die Maske.</param>
      <returns>Die Anzahl der führenden Nullbits in einer Maske.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt64)">
      <summary>Zählt die Anzahl der führenden Nullbits in einer 64-Bit-Ganzzahlmaske ohne Vorzeichen.</summary>
      <param name="value">Die Maske.</param>
      <returns>Die Anzahl der führenden Nullbits in einer Maske.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.Log2(System.UInt32)">
      <summary>Gibt den Logarithmus einer ganzen Zahl (Floor) des angegebenen Werts zur Basis 2 zurück.</summary>
      <param name="value">Die Zahl, aus der der Logarithmus erhalten wird.</param>
      <returns>Der Logarithmus des angegebenen Werts zur Basis 2.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.Log2(System.UInt64)">
      <summary>Gibt den Logarithmus einer ganzen Zahl (Floor) des angegebenen Werts zur Basis 2 zurück.</summary>
      <param name="value">Die Zahl, aus der der Logarithmus erhalten wird.</param>
      <returns>Der Logarithmus des angegebenen Werts zur Basis 2.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.PopCount(System.UInt32)">
      <summary>Gibt die Auffüllungsanzahl (Anzahl festgelegter Bits) einer Maske zurück.</summary>
      <param name="value">Die Maske.</param>
      <returns>Die Auffüllungsanzahl einer Maske.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.PopCount(System.UInt64)">
      <summary>Gibt die Auffüllungsanzahl (Anzahl festgelegter Bits) einer 64-Bit-Ganzzahlmaske ohne Vorzeichen zurück.</summary>
      <param name="value">Die Maske.</param>
      <returns>Die Auffüllungsanzahl der Maske.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateLeft(System.UInt32,System.Int32)">
      <summary>Dreht den angegebenen Wert um die angegebene Anzahl von Bits nach links.</summary>
      <param name="value">Der zu drehende Wert.</param>
      <param name="offset">Die Anzahl der Bits, um die gedreht wird. Jeder Wert außerhalb des Bereichs [0..31] wird als kongruenter Mod 32 behandelt.</param>
      <returns>Der gedrehte Wert.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateLeft(System.UInt64,System.Int32)">
      <summary>Dreht den angegebenen Wert um die angegebene Anzahl von Bits nach links.</summary>
      <param name="value">Der zu drehende Wert.</param>
      <param name="offset">Die Anzahl der Bits, um die gedreht wird. Jeder Wert außerhalb des Bereichs [0..63] wird als kongruenter Mod 64 behandelt.</param>
      <returns>Der gedrehte Wert.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateRight(System.UInt32,System.Int32)">
      <summary>Dreht den angegebenen Wert um die angegebene Anzahl von Bits nach rechts.</summary>
      <param name="value">Der zu drehende Wert.</param>
      <param name="offset">Die Anzahl der Bits, um die gedreht wird. Jeder Wert außerhalb des Bereichs [0..31] wird als kongruenter Mod 32 behandelt.</param>
      <returns>Der gedrehte Wert.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateRight(System.UInt64,System.Int32)">
      <summary>Dreht den angegebenen Wert um die angegebene Anzahl von Bits nach rechts.</summary>
      <param name="value">Der zu drehende Wert.</param>
      <param name="offset">Die Anzahl der Bits, um die gedreht wird. Jeder Wert außerhalb des Bereichs [0..63] wird als kongruenter Mod 64 behandelt.</param>
      <returns>Der gedrehte Wert.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int32)">
      <summary>Zählt die Anzahl der nachstehenden Nullbits in einer 32-Bit-Ganzzahlmaske.</summary>
      <param name="value">Die Maske.</param>
      <returns>Die Anzahl der nachstehenden Nullbits im ganzzahligen Wert.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int64)">
      <summary>Zählt die Anzahl der nachstehenden Nullbits in einer 64-Bit-Ganzzahlmaske.</summary>
      <param name="value">Die Maske.</param>
      <returns>Die Anzahl der nachstehenden Nullbits in der Maske.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt32)">
      <summary>Zählt die Anzahl der nachstehenden Nullbits in einer 32-Bit-Ganzzahlmaske ohne Vorzeichen.</summary>
      <param name="value">Die Maske.</param>
      <returns>Die Anzahl der nachstehenden Nullbits in der Maske.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt64)">
      <summary>Zählt die Anzahl der nachstehenden Nullbits in einer 64-Bit-Ganzzahlmaske ohne Vorzeichen.</summary>
      <param name="value">Die Maske.</param>
      <returns>Die Anzahl der nachstehenden Nullbits in der Maske.</returns>
    </member>
    <member name="T:System.OperatingSystem">
      <summary>Stellt die Informationen über ein Betriebssystem dar, wie Versions- und Plattformbezeichner. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.OperatingSystem.#ctor(System.PlatformID,System.Version)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.OperatingSystem" />-Klasse unter Verwendung des angegebenen Plattformbezeichners und Versionsobjekts.</summary>
      <param name="platform">Einer der <see cref="T:System.PlatformID" />-Werte, der die Betriebssystemplattform angibt.</param>
      <param name="version">Ein <see cref="T:System.Version" />-Objekt, das die Version des Betriebssystems angibt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="platform" /> ist kein <see cref="T:System.PlatformID" />-Enumerationswert.</exception>
    </member>
    <member name="M:System.OperatingSystem.Clone">
      <summary>Erstellt ein <see cref="T:System.OperatingSystem" />-Objekt, das mit dieser Instanz identisch ist.</summary>
      <returns>Ein <see cref="T:System.OperatingSystem" />-Objekt, das eine Kopie dieser Instanz darstellt.</returns>
    </member>
    <member name="M:System.OperatingSystem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den für das Deserialisieren dieser Instanz erforderlichen Daten.</summary>
      <param name="info">Das Objekt, das mit Serialisierungsinformationen aufgefüllt werden soll.</param>
      <param name="context">Der Ort zum Speichern und Abrufen von serialisierten Daten. Für zukünftige Verwendung reserviert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.OperatingSystem.Platform">
      <summary>Ruft einen <see cref="T:System.PlatformID" />-Enumerationswert ab, der die Betriebssystemplattform identifiziert.</summary>
      <returns>Einer der <see cref="T:System.PlatformID" />-Werte.</returns>
    </member>
    <member name="P:System.OperatingSystem.ServicePack">
      <summary>Ruft die durch dieses <see cref="T:System.OperatingSystem" />-Objekt dargestellte Service Pack-Version ab.</summary>
      <returns>Die Service Pack-Version, wenn Service Packs unterstützt werden und mindestens eines installiert ist; andernfalls eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="M:System.OperatingSystem.ToString">
      <summary>Konvertiert den Wert dieses <see cref="T:System.OperatingSystem" />-Objekts in die entsprechende Zeichenfolgendarstellung.</summary>
      <returns>Die Zeichenfolgendarstellung der von den Eigenschaften <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" /> und <see cref="P:System.OperatingSystem.ServicePack" /> zurückgegebenen Werte.</returns>
    </member>
    <member name="P:System.OperatingSystem.Version">
      <summary>Ruft ein <see cref="T:System.Version" />-Objekt ab, das das Betriebssystem identifiziert.</summary>
      <returns>Ein <see cref="T:System.Version" />-Objekt, das die Hauptversions-, Nebenversions-, Build- und Revisionsnummer des Betriebssystems beschreibt.</returns>
    </member>
    <member name="P:System.OperatingSystem.VersionString">
      <summary>Ruft die verkettete Zeichenfolgendarstellung des Plattformbezeichners, der Version und des Service Packs ab, die momentan auf dem Betriebssystem installiert sind.</summary>
      <returns>Die Zeichenfolgendarstellung der von den Eigenschaften <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" /> und <see cref="P:System.OperatingSystem.ServicePack" /> zurückgegebenen Werte.</returns>
    </member>
    <member name="T:System.PlatformID">
      <summary>Gibt das Betriebssystem bzw. die Plattform an, die von einer Assembly unterstützt werden.</summary>
    </member>
    <member name="F:System.PlatformID.MacOSX">
      <summary>Das Betriebssystem ist Macintosh. Dieser Wert wurde von Silverlight zurückgegeben. Auf .NET Core lautet sein Ersatz Unix.</summary>
    </member>
    <member name="F:System.PlatformID.Unix">
      <summary>Das Betriebssystem ist Unix.</summary>
    </member>
    <member name="F:System.PlatformID.Win32NT">
      <summary>Das Betriebssystem ist Windows NT oder eine höhere Version.</summary>
    </member>
    <member name="F:System.PlatformID.Win32S">
      <summary>Das Betriebssystem ist Win32s. Dieser Wert wird nicht mehr genutzt.</summary>
    </member>
    <member name="F:System.PlatformID.Win32Windows">
      <summary>Das Betriebssystem ist Windows 95 oder Windows 98. Dieser Wert wird nicht mehr genutzt.</summary>
    </member>
    <member name="F:System.PlatformID.WinCE">
      <summary>Das Betriebssystem ist Windows CE. Dieser Wert wird nicht mehr genutzt.</summary>
    </member>
    <member name="F:System.PlatformID.Xbox">
      <summary>Die Entwicklungsplattform ist Xbox 360. Dieser Wert wird nicht mehr genutzt.</summary>
    </member>
    <member name="T:System.Progress`1">
      <summary>Stellt ein <see cref="T:System.IProgress`1" /> bereit, das Rückrufe für jeden gemeldeten Statuswert aufruft.</summary>
      <typeparam name="T">Gibt den Typ des Werts des Statusberichts an.</typeparam>
    </member>
    <member name="M:System.Progress`1.#ctor">
      <summary>Initialisiert das <see cref="T:System.Progress`1" />-Objekt.</summary>
    </member>
    <member name="M:System.Progress`1.#ctor(System.Action{`0})">
      <summary>Initialisiert das <see cref="T:System.Progress`1" />-Objekt mit des angegebenen Rückrufs.</summary>
      <param name="handler">Ein Handler, der für jeden gemeldeten Fortschrittswert aufgerufen werden soll. Dieser Handler wird zusätzlich zu allen Delegaten aufgerufen, die beim <see cref="E:System.Progress`1.ProgressChanged" />-Ereignis registriert sind. Abhängig von der <see cref="T:System.Threading.SynchronizationContext" />-Instanz, die von <see cref="T:System.Progress`1" /> bei Konstruktion aufgezeichnet wird, kann es vorkommen, dass dieser Handler gleichzeitig mit sich selbst aufgerufen werden kann.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> ist <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Progress`1.OnReport(`0)">
      <summary>Berichtet eine Statusänderung.</summary>
      <param name="value">Der Wert des aktualisierten Status.</param>
    </member>
    <member name="E:System.Progress`1.ProgressChanged">
      <summary>Wird für jeden gemeldeten Statuswert ausgelöst.</summary>
    </member>
    <member name="M:System.Progress`1.System#IProgress{T}#Report(`0)">
      <summary>Berichtet eine Statusänderung.</summary>
      <param name="value">Der Wert des aktualisierten Status.</param>
    </member>
    <member name="T:System.Random">
      <summary>Stellt einen Generator für Pseudozufallszahlen dar, d. h. ein Gerät, das eine Zahlenfolge erzeugt, die bestimmte statistische Anforderungen hinsichtlich ihrer Zufälligkeit erfüllt.</summary>
    </member>
    <member name="M:System.Random.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse unter Verwendung eines zeitabhängigen Standardstartwerts.</summary>
    </member>
    <member name="M:System.Random.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Random" />-Klasse unter Verwendung des angegebenen Startwerts.</summary>
      <param name="Seed">Eine Zahl, mit der ein Startwert für Folgen von Pseudozufallszahlen berechnet wird. Wenn eine negative Zahl angegeben wird, wird der absolute Wert der Zahl verwendet.</param>
    </member>
    <member name="M:System.Random.Next">
      <summary>Gibt eine nicht negative Zufallsganzzahl zurück.</summary>
      <returns>Eine ganze 32-Bit-Zahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als <see cref="F:System.Int32.MaxValue" /> ist.</returns>
    </member>
    <member name="M:System.Random.Next(System.Int32)">
      <summary>Gibt eine nicht negative Zufallsganzzahl zurück, die kleiner als das angegebene Maximum ist.</summary>
      <param name="maxValue">Die exklusive obere Grenze der Zufallszahl, die generiert werden soll. <paramref name="maxValue" /> muss größer oder gleich 0 sein.</param>
      <returns>Eine ganze 32-Bit-Zahl mit Vorzeichen, die größer oder gleich 0 (null) und kleiner als <paramref name="maxValue" /> ist, d.h., der Bereich der Rückgabewerte umfasst in der Regel 0 (null), aber nicht <paramref name="maxValue" />. Wenn jedoch <paramref name="maxValue" /> 0 (null) entspricht, wird <paramref name="maxValue" /> zurückgegeben.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxValue" /> ist kleiner als 0.</exception>
    </member>
    <member name="M:System.Random.Next(System.Int32,System.Int32)">
      <summary>Gibt eine zufällige ganze Zahl zurück, die in einem angegebenen Bereich liegt.</summary>
      <param name="minValue">Die inklusive untere Grenze der zurückgegebenen Zufallszahl.</param>
      <param name="maxValue">Die exklusive obere Grenze der zurückgegebenen Zufallszahl. <paramref name="maxValue" /> muss größer oder gleich <paramref name="minValue" /> sein.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die größer oder gleich <paramref name="minValue" /> und kleiner als <paramref name="maxValue" /> ist, d. h., der Bereich der Rückgabewerte umfasst <paramref name="minValue" />, aber nicht <paramref name="maxValue" />. Wenn <paramref name="minValue" /> gleich <paramref name="maxValue" /> ist, wird <paramref name="minValue" /> zurückgegeben.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="minValue" /> ist größer als <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Random.NextBytes(System.Byte[])">
      <summary>Füllt die Elemente eines angegebenen Bytearrays mit Zufallszahlen.</summary>
      <param name="buffer">Ein Bytearray, das für Zufallszahlen vorgesehen ist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Random.NextBytes(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Random.NextDouble">
      <summary>Gibt eine zufällige Gleitkommazahl zurück, die größer oder gleich 0,0 und kleiner als 1,0 ist.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.</returns>
    </member>
    <member name="M:System.Random.Sample">
      <summary>Gibt eine zufällig Gleitkommazahl zwischen 0,0 und 1,0 zurück.</summary>
      <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die größer oder gleich 0,0 und kleiner als 1,0 ist.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameProxy">
      <summary>Stellt eine Version von <see langword="AssemblyName" /> mit Remoteunterstützung zur Verfügung.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyNameProxy.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyNameProxy" />-Klasse.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
      <summary>Ruft den <see langword="AssemblyName" /> für eine angegebene Datei ab.</summary>
      <param name="assemblyFile">Die Assemblydatei, für die der <see langword="AssemblyName" /> abgerufen werden soll.</param>
      <returns>Ein <see langword="AssemblyName" />-Objekt, das die angegebene Datei darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyFile" /> ist leer.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> ist keine gültige Assembly.</exception>
    </member>
    <member name="T:System.ResolveEventHandler">
      <summary>Stellt eine Methode dar, die das Ereignis <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" /> oder <see cref="E:System.AppDomain.AssemblyResolve" /> einer <see cref="T:System.AppDomain" /> behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="args">Die Ereignisdaten.</param>
      <returns>Die Assembly, die den Typ, die Assembly oder die Ressource auflöst, oder <see langword="null" />, wenn die Assembly nicht aufgelöst werden kann.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.SwitchExpressionException">
      <summary>Zeigt an, dass ein unvollständiger switch-Ausdruck zur Laufzeit nicht mit seiner Eingabe übereinstimmte. Die Ausnahme enthält optional ein Objekt, das den nicht übereinstimmenden Wert darstellt.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" />-Klasse.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" />-Klasse mit einem nicht übereinstimmenden Schalterwert.</summary>
      <param name="unmatchedValue">Der Schalterwert, der keinen Schalterfällen entspricht.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Die Meldung, die dem Endbenutzer angezeigt wird.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" />-Klasse mit der angegebenen ausführlichen Beschreibung und der angegebenen Ausnahme.</summary>
      <param name="message">Die Meldung, die dem Endbenutzer angezeigt wird.</param>
      <param name="innerException">Ein Verweis auf die innere Ausnahme, die dieser Ausnahme zugrunde liegt.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Legt die <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit dem Parameternamen und zusätzlichen Informationen über die Ausnahme fest.</summary>
      <param name="info">Speichert die Daten, die zum Serialisieren oder Deserialisieren eines vom <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> serialisierten oder deserialisierten Objekts verwendet wurden.</param>
      <param name="context">Beschreibt Quelle und Ziel des Streams, der die Ausnahme generiert hat, und die Möglichkeit, bei der Serialisierung diesen Kontext und einen zusätzlichen, vom Aufrufer definierten Kontext beizubehalten.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.SwitchExpressionException.Message">
      <summary>Ruft die Ausnahmenachricht ab.</summary>
      <returns>Die vollständige Meldungszeichenfolge.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.SwitchExpressionException.UnmatchedValue">
      <summary>Ruft den der Ausnahme zugeordneten nicht übereinstimmenden Wert ab.</summary>
      <returns>Der nicht übereinstimmende Wert, der die Ausnahme verursacht.</returns>
    </member>
    <member name="T:System.Runtime.ProfileOptimization">
      <summary>Verbessert die Startleistung von Anwendungsdomänen in Anwendungen, die den JIT (Just-In-Time)-Compiler erfordern, indem sie eine Hintergrundkompilierung von Methoden, die wahrscheinlich ausgeführt werden, basierend auf den Profilen ausführen, die bei vorherigen Kompilierungen erstellt wurden.</summary>
    </member>
    <member name="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
      <summary>Aktiviert die Profilerstellung für die Optimierung der aktuellen Anwendungsdomäne und legt den Ordner ab, in dem die Optimierungsprofildateien gespeichert werden. Auf einem einkernigen Computer wird die Methode ignoriert.</summary>
      <param name="directoryPath">Der vollständige Pfad zu dem Ordner, in dem Profildateien für die aktuelle Anwendungsdomäne gespeichert werden.</param>
    </member>
    <member name="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
      <summary>Startet JIT-Kompilierung (Just-In-Time) der Methoden, die zuvor in der angegebenen Profildatei aufgezeichnet wurden, in einem Hintergrundthread. Startet den Prozess zum Aufzeichnen der aktuellen Methodenverwendung, die später die angegebene Profildatei überschreibt.</summary>
      <param name="profile">Der Name des zu verwendenden Profils.</param>
    </member>
    <member name="T:System.Runtime.Versioning.ComponentGuaranteesAttribute">
      <summary>Definiert die Kompatibilitätsgarantie einer Komponente, eines Typs oder eines Typmembers, die bzw. der mehrere Versionen umfassen kann.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />-Klasse mit einem Wert, der den garantierten Kompatibilitätsgrad einer Bibliothek, eines Typs oder eines Members über mehrere Versionen angibt.</summary>
      <param name="guarantees">Einer der Enumerationswerte, der die Ebene der Kompatibilität angibt, die über mehrere Versionen garantiert wird.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees">
      <summary>Ruft einen Wert ab, der den garantierten Kompatibilitätsgrad einer Bibliothek, eines Typs oder Typmembers angibt, die bzw. der mehrere Versionen umfasst.</summary>
      <returns>Einer der Enumerationswerte, der die Ebene der Kompatibilität angibt, die über mehrere Versionen garantiert wird.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ComponentGuaranteesOptions">
      <summary>Beschreibt die Kompatibilitätsgarantie einer Komponente, eines Typs oder eines Typmembers, die bzw. der mehrere Versionen umfassen kann.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange">
      <summary>Der Entwickler verspricht für den Typ versionsübergreifende Austauschkompatibilität. Consumer des Typs können in zukünftigen Versionen Kompatibilität voraussetzen und den Typ in allen Schnittstellen verwenden. Versionsprobleme können nicht durch parallele Ausführung behoben werden.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.None">
      <summary>Der Entwickler verspricht keine versionsübergreifende Kompatibilität. Consumer der Komponente, des Typs oder Members können davon ausgehen, dass zukünftige Versionen im vorhandenen Client zu Fehlern führen.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide">
      <summary>Die Komponente wurde getestet und funktioniert, wenn mehrere Versionen der Assembly in die gleiche Anwendungsdomäne geladen werden. In zukünftigen Versionen kann die Kompatibilität aufgehoben werden. Wenn jedoch solche grundlegenden Änderungen vorgenommen werden, wird die alte Version nicht geändert, sondern ist weiterhin neben der neuen Version vorhanden.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable">
      <summary>Der Entwickler verspricht versionsübergreifende stabile Kompatibilität. Consumer des Typs können davon ausgehen, dass zukünftige Versionen im vorhandenen Client nicht zu Fehlern führen. Wenn dies dennoch der Fall ist und der Typ nicht in den Schnittstellen des Clients verwendet wurde, kann das Problem möglicherweise durch parallele Ausführung behoben werden.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.FrameworkName">
      <summary>Stellt den Namen einer .NET Framework-Version dar.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Versioning.FrameworkName" />-Klasse aus einer Zeichenfolge, die Informationen zu einer Version von .NET Framework enthält.</summary>
      <param name="frameworkName">Eine Zeichenfolge, die .NET Framework-Versionsinformationen enthält.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="frameworkName" /> ist <see cref="F:System.String.Empty" />.  

oder - 
<paramref name="frameworkName" /> enthält weniger als zwei oder mehr als drei Komponenten.  

oder - 
<paramref name="frameworkName" /> enthält keine Haupt- und Nebenversionsnummer.  

oder - 
<paramref name="frameworkName" /> enthält keine gültige Versionsnummer.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Versioning.FrameworkName" />-Klasse aus einer Zeichenfolge und einem <see cref="T:System.Version" />-Objekt, mit denen eine .NET Framework-Version identifiziert wird.</summary>
      <param name="identifier">Eine Zeichenfolge, die eine .NET Framework-Version identifiziert.</param>
      <param name="version">Ein Objekt, das .NET Framework-Versionsinformationen enthält.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> ist <see langword="null" />.  

oder - 
<paramref name="version" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Versioning.FrameworkName" />-Klasse aus einer Zeichenfolge, einem <see cref="T:System.Version" />-Objekt, das eine .NET Framework-Version identifiziert, und einem Profilnamen.</summary>
      <param name="identifier">Eine Zeichenfolge, die eine .NET Framework-Version identifiziert.</param>
      <param name="version">Ein Objekt, das .NET Framework-Versionsinformationen enthält.</param>
      <param name="profile">Ein Profilname.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> ist <see langword="null" />.  

oder - 
<paramref name="version" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Runtime.Versioning.FrameworkName" />-Instanz die gleiche .NET Framework-Version wie ein angegebenes Objekt darstellt.</summary>
      <param name="obj">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn jede Komponente des aktuellen <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts mit der entsprechenden Komponente von <paramref name="obj" /> übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Runtime.Versioning.FrameworkName)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Runtime.Versioning.FrameworkName" />-Instanz die gleiche .NET Framework-Version wie eine angegebene <see cref="T:System.Runtime.Versioning.FrameworkName" />-Instanz darstellt.</summary>
      <param name="other">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn jede Komponente des aktuellen <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts mit der entsprechenden Komponente von <paramref name="other" /> übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.FullName">
      <summary>Ruft den vollständigen Namen dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts ab.</summary>
      <returns>Der vollständige Name dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.GetHashCode">
      <summary>Gibt den Hashcode für das <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekt zurück.</summary>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die den Hashcode für die Instanz darstellt.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Identifier">
      <summary>Ruft den Bezeichner dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts ab.</summary>
      <returns>Der Bezeichner dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Equality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekte die gleiche .NET Framework-Version darstellen.</summary>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter die gleiche .NET Framework-Version darstellen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Inequality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekte unterschiedliche .NET Framework-Versionen darstellen.</summary>
      <param name="left">Das erste zu vergleichende Objekt.</param>
      <param name="right">Das zweite zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter unterschiedliche .NET Framework-Versionen darstellen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Profile">
      <summary>Ruft den Profilnamen dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts ab.</summary>
      <returns>Der Profilname dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.ToString">
      <summary>Gibt die Zeichenfolgendarstellung dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts zurück.</summary>
      <returns>Eine Zeichenfolge, die dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekt darstellt.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Version">
      <summary>Ruft die Version dieses <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekts ab.</summary>
      <returns>Ein Objekt, das Versionsinformationen zu diesem <see cref="T:System.Runtime.Versioning.FrameworkName" />-Objekt enthält.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceConsumptionAttribute">
      <summary>Gibt die von einem Member einer Klasse verwendete Ressource an. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceConsumptionAttribute.#ctor(System.Runtime.Versioning.ResourceScope)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Versioning.ResourceConsumptionAttribute" />-Klasse unter Angabe des Bereichs der verwendeten Ressource.</summary>
      <param name="resourceScope">Der <see cref="T:System.Runtime.Versioning.ResourceScope" /> der verwendeten Ressource.</param>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceConsumptionAttribute.#ctor(System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Versioning.ResourceConsumptionAttribute" />-Klasse unter Angabe des Bereichs der verwendeten Ressource und des Bereichs ihrer Verwendung.</summary>
      <param name="resourceScope">Der <see cref="T:System.Runtime.Versioning.ResourceScope" /> der verwendeten Ressource.</param>
      <param name="consumptionScope">Der von diesem Member verwendete <see cref="T:System.Runtime.Versioning.ResourceScope" />.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceConsumptionAttribute.ConsumptionScope">
      <summary>Ruft den Verwendungsbereich für diesen Member ab.</summary>
      <returns>Ein <see cref="T:System.Runtime.Versioning.ResourceScope" />-Objekt, das den von diesem Member verwendeten Ressourcenbereich angibt.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceConsumptionAttribute.ResourceScope">
      <summary>Ruft den Ressourcenbereich für die verwendete Ressource ab.</summary>
      <returns>Ein <see cref="T:System.Runtime.Versioning.ResourceScope" />-Objekt, das den Ressourcenbereich des verwendeten Members angibt.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceExposureAttribute">
      <summary>Gibt die für den Member einer Klasse verfügbar gemachten Ressourcen an. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceExposureAttribute.#ctor(System.Runtime.Versioning.ResourceScope)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Versioning.ResourceExposureAttribute" />-Klasse mit der angegebenen Ebene der verfügbar gemachten Ressourcen.</summary>
      <param name="exposureLevel">Der Bereich der Ressource.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceExposureAttribute.ResourceExposureLevel">
      <summary>Ruft den Bereich für die verfügbar gemachten Ressourcen ab.</summary>
      <returns>Ein <see cref="T:System.Runtime.Versioning.ResourceScope" />-Objekt.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceScope">
      <summary>Identifiziert den Bereich einer freigegebenen Ressource.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.AppDomain">
      <summary>Der Zustand wird von Objekten in <see cref="T:System.AppDomain" /> gemeinsam verwendet.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Assembly">
      <summary>Die Ressource ist in einem Assemblybereich sichtbar.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Library">
      <summary>Der Zustand wird von Objekten einer Bibliothek gemeinsam verwendet.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Machine">
      <summary>Der Zustand wird von Objekten eines Computers gemeinsam verwendet.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.None">
      <summary>Es ist kein gemeinsamer Zustand vorhanden.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Private">
      <summary>Die Ressource ist nur für den Typ sichtbar.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Process">
      <summary>Der Zustand ist in einem Prozess freigegeben.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.VersioningHelper">
      <summary>Stellt Methoden bereit, um Entwickler beim Schreiben von versionssicherem Code zu unterstützen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.VersioningHelper.MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)">
      <summary>Gibt einen versionssicheren Namen zurück, der auf dem angegebenen Ressourcennamen und der gewünschten Ressourcenverwendungsquelle basiert.</summary>
      <param name="name">Der Name der Ressource.</param>
      <param name="from">Der Bereich der Ressource.</param>
      <param name="to">Der gewünschte Ressourcenverwendungsbereich.</param>
      <returns>Ein versionssicherer Name.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.VersioningHelper.MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope,System.Type)">
      <summary>Gibt einen versionssicheren Namen zurück, der auf dem angegebenen Ressourcennamen, dem gewünschten Ressourcenverwendungsbereich und dem Typ basiert, der die Ressource verwendet.</summary>
      <param name="name">Der Name der Ressource.</param>
      <param name="from">Der Anfang des Bereichs.</param>
      <param name="to">Das Ende des Bereichs.</param>
      <param name="type">Der <see cref="T:System.Type" /> der Ressource.</param>
      <returns>Ein versionssicherer Name.</returns>
      <exception cref="T:System.ArgumentException">Die Werte für <paramref name="from" /> und <paramref name="to" /> sind ungültig. Der Ressourcentyp in der <see cref="T:System.Runtime.Versioning.ResourceScope" />-Enumeration geht von einem stärker eingeschränkten Ressourcentyp in einen allgemeineren Ressourcentyp über.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.IPermission">
      <summary>Definiert von Berechtigungstypen implementierte Methoden.</summary>
    </member>
    <member name="M:System.Security.IPermission.Copy">
      <summary>Erstellt eine identische Kopie der aktuellen Berechtigung und gibt sie zurück.</summary>
      <returns>Eine Kopie der aktuellen Berechtigung.</returns>
    </member>
    <member name="M:System.Security.IPermission.Demand">
      <summary>Löst zur Laufzeit eine <see cref="T:System.Security.SecurityException" /> aus, wenn die Sicherheitsanforderung nicht erfüllt ist.</summary>
    </member>
    <member name="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Schnittmenge der aktuellen und der angegebenen Berechtigung und gibt diese zurück.</summary>
      <param name="target">Eine Berechtigung für die Überschneidung mit der aktuellen Berechtigung. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Eine neue Berechtigung, die die Schnittmenge der aktuellen und der angegebenen Berechtigung darstellt. Diese neue Berechtigung ist <see langword="null" />, wenn die Schnittmenge leer ist.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="target" />-Parameter ist nicht <see langword="null" /> und keine Instanz der Klasse der aktuellen Berechtigung.</exception>
    </member>
    <member name="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Bestimmt, ob die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist.</summary>
      <param name="target">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll. Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>
        <see langword="true" />, wenn die aktuelle Berechtigung eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="target" />-Parameter ist nicht <see langword="null" /> und weist nicht denselben Typ wie die aktuelle Berechtigung auf.</exception>
    </member>
    <member name="M:System.Security.IPermission.Union(System.Security.IPermission)">
      <summary>Erstellt eine Berechtigung als Kombination der aktuellen und der angegebenen Berechtigung.</summary>
      <param name="target">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll. Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</param>
      <returns>Eine neue Berechtigung, die die Kombination der aktuellen und der angegebenen Berechtigung darstellt.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="target" />-Parameter ist nicht <see langword="null" /> und weist nicht denselben Typ wie die aktuelle Berechtigung auf.</exception>
    </member>
    <member name="T:System.Security.ISecurityEncodable">
      <summary>Definiert die Methoden zum Konvertieren des Zustands von Berechtigungsobjekten in die und aus der XML-Elementdarstellung.</summary>
    </member>
    <member name="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
      <summary>Stellt ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
      <param name="e">Die XML-Codierung zur Wiederherstellung des Sicherheitsobjekts.</param>
    </member>
    <member name="M:System.Security.ISecurityEncodable.ToXml">
      <summary>Erstellt eine XML-Codierung des Sicherheitsobjekts und seines aktuellen Zustands.</summary>
      <returns>Eine XML-Codierung des Sicherheitsobjekts, einschließlich aller Zustandsinformationen.</returns>
    </member>
    <member name="T:System.Security.IStackWalk">
      <summary>Verwaltet den Stackwalk, über den bestimmt wird, ob alle Aufrufer in der Aufrufliste über die erforderlichen Berechtigungen für den Zugriff auf eine geschützte Ressource verfügen.</summary>
    </member>
    <member name="M:System.Security.IStackWalk.Assert">
      <summary>Bestätigt, dass der aufrufende Code auf die durch das aktuelle Berechtigungsobjekt identifizierte Ressource zugreifen kann, selbst wenn Aufrufern einer höheren Ebene in der Aufrufliste keine Berechtigung für den Zugriff auf die Ressource erteilt wurde.</summary>
      <exception cref="T:System.Security.SecurityException">Der aufrufende Code verfügt nicht über <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</exception>
    </member>
    <member name="M:System.Security.IStackWalk.Demand">
      <summary>Ermittelt zur Laufzeit, ob allen Aufrufern in der Aufrufliste die vom aktuellen Berechtigungsobjekt angegebene Berechtigung erteilt wurde.</summary>
      <exception cref="T:System.Security.SecurityException">Ein übergeordneter Aufrufer in der Aufrufliste verfügt nicht über die vom aktuellen Berechtigungsobjekt angegebene Berechtigung.  

oder - 
Ein Aufrufer in der Aufrufliste hat <see cref="M:System.Security.IStackWalk.Deny" /> für das aktuelle Berechtigungsobjekt aufgerufen.</exception>
    </member>
    <member name="M:System.Security.IStackWalk.Deny">
      <summary>Bewirkt, dass jedes <see cref="M:System.Security.IStackWalk.Demand" /> für das aktuelle Objekt fehlschlägt, das den Aufrufcode durchläuft.</summary>
    </member>
    <member name="M:System.Security.IStackWalk.PermitOnly">
      <summary>Bewirkt, dass jedes <see cref="M:System.Security.IStackWalk.Demand" /> für alle Objekte außer dem aktuellen Objekt fehlschlägt, das den aufrufenden Code durchläuft, selbst wenn übergeordnetem Code in der Aufrufliste eine Zugriffsberechtigung für andere Ressourcen gewährt wurde.</summary>
    </member>
    <member name="T:System.Security.Permissions.CodeAccessSecurityAttribute">
      <summary>Gibt die Basisattributklasse für Codezugriffssicherheit an.</summary>
    </member>
    <member name="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" /> mit der angegebenen <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</param>
    </member>
    <member name="T:System.Security.Permissions.PermissionState">
      <summary>Gibt an, ob eine Berechtigung bei der Erstellung vollen oder keinen Zugriff auf Ressourcen erhält.</summary>
    </member>
    <member name="F:System.Security.Permissions.PermissionState.None">
      <summary>Kein Zugriff auf die durch die Berechtigung geschützte Ressource.</summary>
    </member>
    <member name="F:System.Security.Permissions.PermissionState.Unrestricted">
      <summary>Vollzugriff auf die durch die Berechtigung geschützte Ressource.</summary>
    </member>
    <member name="T:System.Security.Permissions.SecurityAction">
      <summary>Gibt die Sicherheitsaktionen an, die mit deklarativer Sicherheit ausgeführt werden können.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Assert">
      <summary>Der aufrufende Code kann auf die durch das aktuelle Berechtigungsobjekt identifizierte Ressource zugreifen, selbst wenn Aufrufern einer höheren Ebene in der Aufrufliste keine Berechtigung für den Zugriff auf die Ressource erteilt wurde (siehe Verwenden der Assert-Methode).</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Demand">
      <summary>Allen Aufrufern einer höheren Ebene in der Aufrufliste muss die vom aktuellen Berechtigungsobjekt angegebene Berechtigung erteilt worden sein.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Deny">
      <summary>Die Möglichkeit, auf die durch das aktuelle Berechtigungsobjekt angegebene Ressource zuzugreifen, wird Aufrufern auch dann verweigert, wenn ihnen die Berechtigung für den Zugriff erteilt wurde (siehe Verwenden der Deny-Methode).</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <summary>Der abgeleiteten Klasse, die die Klasse erbt oder eine Methode überschreibt, muss die angegebene Berechtigung erteilt worden sein.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <summary>Dem unmittelbaren Aufrufer muss die angegebene Berechtigung erteilt worden sein. Verwenden Sie dies nicht in .NET Framework 4. Verwenden Sie stattdessen für volle Vertrauenswürdigkeit <see cref="T:System.Security.SecurityCriticalAttribute" /> und für teilweise Vertrauenswürdigkeit <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.PermitOnly">
      <summary>Nur auf die durch dieses Berechtigungsobjekt angegebenen Ressourcen kann zugegriffen werden, selbst wenn dem Code die Berechtigung für den Zugriff auf andere Ressourcen gewährt wurde.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestMinimum">
      <summary>Die Anforderung der Mindestberechtigungen, die zum Ausführen des Codes erforderlich sind. Diese Aktion kann nur innerhalb des Gültigkeitsbereichs der Assembly verwendet werden.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestOptional">
      <summary>Die Anforderung weiterer Berechtigungen, die optional sind (zur Ausführung nicht erforderlich). Diese Anforderung lehnt implizit alle anderen nicht speziell angeforderten Berechtigungen ab. Diese Aktion kann nur innerhalb des Gültigkeitsbereichs der Assembly verwendet werden.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestRefuse">
      <summary>Die Anforderung, dass dem aufrufenden Code keine Berechtigungen erteilt werden, die missbraucht werden könnten. Diese Aktion kann nur innerhalb des Gültigkeitsbereichs der Assembly verwendet werden.</summary>
    </member>
    <member name="T:System.Security.Permissions.SecurityAttribute">
      <summary>Gibt die Basisattributklasse für Deklarationssicherheit an, aus der <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" /> abgeleitet wird.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Security.Permissions.SecurityAttribute" /> mit der angegebenen <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</param>
    </member>
    <member name="P:System.Security.Permissions.SecurityAttribute.Action">
      <summary>Ruft eine Sicherheitsaktion ab oder legt diese fest.</summary>
      <returns>Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten Klasse ein Berechtigungsobjekt, das in eine binäre Form serialisiert und zusammen mit der <see cref="T:System.Security.Permissions.SecurityAction" /> in den Metadaten einer Assembly persistent gespeichert werden kann.</summary>
      <returns>Ein serialisierbares Berechtigungsobjekt.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityAttribute.Unrestricted">
      <summary>Ruft einen Wert ab, der angibt, ob eine vollständige (uneingeschränkte) Berechtigung für die durch das Attribut geschützte Ressource deklariert ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn eine vollständige Berechtigung für die geschützte Ressource deklariert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermissionAttribute">
      <summary>Ermöglicht, dass Sicherheitsaktionen für <see cref="T:System.Security.Permissions.SecurityPermission" /> unter Verwendung deklarativer Sicherheit auf Code angewendet werden. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.SecurityPermissionAttribute" />-Klasse mit der angegebenen <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Einer der <see cref="T:System.Security.Permissions.SecurityAction" />-Werte.</param>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Assertion">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zur Bestätigung, dass alle Aufrufer dieses Codes über die erforderliche Berechtigung für den Vorgang verfügen, deklariert ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Bestätigungsberechtigung deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects">
      <summary>Ruft einen Wert ab, der angibt, ob der Code zum Ausführen einer Bindungsumleitung in der Anwendungskonfigurationsdatei berechtigt ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Code Bindungsumleitungen ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Bearbeiten von <see cref="T:System.AppDomain" /> deklariert ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Berechtigung zum Bearbeiten von <see cref="T:System.AppDomain" /> deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Bearbeiten oder Ändern der Domänensicherheitsrichtlinie deklariert ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Berechtigung zum Bearbeiten oder Ändern von Sicherheitsrichtlinien in einer Anwendungsdomäne deklariert ist, anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Bearbeiten oder Ändern von Beweisen deklariert ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Möglichkeit zum Ändern oder Bearbeiten von Beweisen deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Anzeigen und Bearbeiten der Sicherheitsrichtlinie deklariert ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Berechtigung zum Bearbeiten der Sicherheitsrichtlinie deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Bearbeiten des aktuellen Prinzipals deklariert ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Berechtigung zum Bearbeiten des aktuellen Prinzipals deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlThread">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Bearbeiten von Threads deklariert ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Berechtigung zum Bearbeiten von Threads deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermissionAttribute.CreatePermission">
      <summary>Erstellt eine neue <see cref="T:System.Security.Permissions.SecurityPermission" /> und gibt diese zurück.</summary>
      <returns>Eine <see cref="T:System.Security.Permissions.SecurityPermission" />, die diesem Attribut entspricht.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Execution">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Ausführen von Code deklariert ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Berechtigung zum Ausführen von Code deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Flags">
      <summary>Ruft alle Berechtigungsflags ab, die aus <see cref="T:System.Security.Permissions.SecurityPermission" />-Berechtigungen bestehen, oder legt diese fest.</summary>
      <returns>Ein oder mehrere <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />-Werte, die in einer bitweisen OR-Operation kombiniert werden.</returns>
      <exception cref="T:System.ArgumentException">Es wird versucht, diese Eigenschaft auf einen ungültigen Wert festzulegen. Informationen zu zulässigen Werten finden Sie unter <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</exception>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Infrastructure">
      <summary>Ruft einen Wert ab, der angibt, ob Code in die Infrastruktur der Common Language Runtime eingebunden werden kann, z. B. durch Hinzufügen von Remotekontextsenken, Botensenken und dynamischen Senken.</summary>
      <returns>
        <see langword="true" />, wenn Code in die Infrastruktur der Common Language Runtime eingebunden werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration">
      <summary>Ruft einen Wert ab, der angibt, ob Code Remotetypen und Channels konfigurieren kann, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Code Remotetypen und Channels konfigurieren kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter">
      <summary>Ruft einen Wert ab, der angibt, ob Code mithilfe eines Formatierungsprogramms für die Serialisierung Objekte Serialisieren oder Deserialisieren kann, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Code mithilfe eines Formatierungsprogramms für die Serialisierung Objekte serialisieren oder deserialisieren kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.SkipVerification">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Umgehen der Codeüberprüfung deklariert ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Berechtigung zum Umgehen der Codeüberprüfung deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">
      <summary>Ruft einen Wert ab, der angibt, ob die Berechtigung zum Aufruf von nicht verwaltetem Code deklariert ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Berechtigung zum Aufrufen von nicht verwaltetem Code deklariert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermissionFlag">
      <summary>Gibt Zugriffsflags für das Sicherheitsberechtigungsobjekt an.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.AllFlags">
      <summary>Der uneingeschränkte Zustand der Berechtigung.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Assertion">
      <summary>Die Fähigkeit zu bestätigen, dass alle Aufrufer dieses Codes über die erforderliche Berechtigung für den Vorgang verfügen.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.BindingRedirects">
      <summary>Die Berechtigung für die explizite Bindungsumleitung in der Anwendungskonfigurationsdatei. Dies umfasst die Umleitung von vereinheitlichten .NET Framework-Assemblys und von Assemblys außerhalb von .NET Framework.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain">
      <summary>Die Fähigkeit zum Erstellen und Bearbeiten von <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy">
      <summary>Die Fähigkeit zum Angeben von Domänenrichtlinien.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence">
      <summary>Die Fähigkeit zum Bereitstellen von Beweisen, einschließlich der Fähigkeit, die von der Common Language Runtime bereitgestellten Beweise zu ändern.
Diese Berechtigung ist äußerst umfassend und sollte nur für in hohem Maße vertrauenswürdigen Code erteilt werden.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy">
      <summary>Die Fähigkeit zum Anzeigen und Ändern von Richtlinien.
Diese Berechtigung ist äußerst umfassend und sollte nur für in hohem Maße vertrauenswürdigen Code erteilt werden.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal">
      <summary>Die Fähigkeit zum Verändern des Hauptobjekts.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread">
      <summary>Die Fähigkeit zum Verwenden bestimmter erweiterter Vorgänge in Threads.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Execution">
      <summary>Berechtigung für den auszuführenden Code. Ohne diese Berechtigung wird verwalteter Code nicht ausgeführt.
Dieses Flag hat keine Auswirkung, wenn es dynamisch mit Stapelmodifikatoren wie <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.Assert" /> und <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> verwendet wird.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure">
      <summary>Berechtigung zum Einbinden von Code in die Infrastruktur der Common Language Runtime, z. B. für das Hinzufügen von Remotekontextsenken, Botensenken und dynamischen Senken.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.NoFlags">
      <summary>Kein Sicherheitszugriff.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration">
      <summary>Berechtigung zum Konfigurieren von Remotetypen und Channels.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter">
      <summary>Die Fähigkeit zum Bereitstellen von Serialisierungsdiensten. Wird durch Serialisierungsformatierer verwendet.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.SkipVerification">
      <summary>Die Fähigkeit, die Überprüfung von Code in dieser Assembly zu überspringen. Nicht überprüfbarer Code kann bei Erteilung dieser Berechtigung ausgeführt werden.
Diese Berechtigung ist äußerst umfassend und sollte nur für in hohem Maße vertrauenswürdigen Code erteilt werden.
Dieses Flag hat keine Auswirkung, wenn es dynamisch mit Stapelmodifikatoren wie <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.Assert" /> und <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> verwendet wird.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode">
      <summary>Die Fähigkeit, nicht verwalteten Code aufzurufen.
 Da nicht verwalteter Code möglicherweise andere Berechtigungen umgehen kann, ist dies eine gefährliche Berechtigung, die nur für sehr vertrauenswürdigen Code gewährt werden sollte. Er wird für Anwendungen wie den Aufruf von nativem Code über PInvoke oder über COM-Interop verwendet.</summary>
    </member>
    <member name="T:System.Security.PermissionSet">
      <summary>Stellt eine Auflistung dar, die viele verschiedene Berechtigungstypen enthalten kann.</summary>
    </member>
    <member name="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.PermissionSet" />-Klasse mit der angegebenen <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Einer der Enumerationswerte, der den Zugriff des Berechtigungssatzes auf Ressourcen angibt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="state" />-Parameter ist kein gültiger <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.PermissionSet" />-Klasse mit Anfangswerten, die aus dem <paramref name="permSet" />-Parameter stammen.</summary>
      <param name="permSet">Der Satz, aus dem der Wert des neuen <see cref="T:System.Security.PermissionSet" /> stammen soll, oder <see langword="null" />, um einen leeren <see cref="T:System.Security.PermissionSet" /> zu erstellen.</param>
    </member>
    <member name="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
      <summary>Fügt <see cref="T:System.Security.PermissionSet" /> eine angegebene Berechtigung hinzu.</summary>
      <param name="perm">Die hinzuzufügende Berechtigung.</param>
      <returns>Die Kombination der hinzugefügten Berechtigung und aller Berechtigungen desselben Typs, die bereits in <see cref="T:System.Security.PermissionSet" /> vorhanden sind.</returns>
      <exception cref="T:System.InvalidOperationException">Die Methode wird aus <see cref="T:System.Security.ReadOnlyPermissionSet" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
      <summary>Fügt <see cref="T:System.Security.PermissionSet" /> eine angegebene Berechtigung hinzu.</summary>
      <param name="perm">Die hinzuzufügende Berechtigung.</param>
      <returns>Die Union der hinzugefügten Berechtigung und aller Berechtigungen desselben Typs, die bereits in <see cref="T:System.Security.PermissionSet" /> vorhanden sind oder <see langword="null" />, wenn <paramref name="perm" /><see langword="null" /> ist.</returns>
      <exception cref="T:System.InvalidOperationException">Die Methode wird aus <see cref="T:System.Security.ReadOnlyPermissionSet" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Assert">
      <summary>Deklariert, dass der aufrufende Code auf die durch eine Berechtigungsforderung geschützte Ressource über den diese Methode aufrufenden Code zugreifen kann, auch wenn Aufrufern einer höheren Ebene im Stapel keine Berechtigung zum Zugreifen auf die Ressource erteilt wurde. Die Verwendung von <see cref="M:System.Security.PermissionSet.Assert" /> kann zu Sicherheitslücken führen.</summary>
      <exception cref="T:System.Security.SecurityException">Die gewährte <see cref="T:System.Security.PermissionSet" />-Instanz wurde nicht dem gewährenden Code gewährt.  

oder - 
Es ist bereits eine aktive <see cref="M:System.Security.PermissionSet.Assert" /> für den aktuellen Frame vorhanden.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Security.PermissionSet" /> Berechtigungen enthält, die nicht von <see cref="T:System.Security.CodeAccessPermission" /> abgeleitet sind.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Security.PermissionSet" /> Berechtigungen enthält, die nicht von <see cref="T:System.Security.CodeAccessPermission" /> abgeleitet sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
      <summary>Konvertiert ein codiertes <see cref="T:System.Security.PermissionSet" />-Objekt aus einem XML-Codierungsformat in ein anderes XML-Codierungsformat.</summary>
      <param name="inFormat">Eine Zeichenfolge, die eines der folgenden Codierungsformate darstellt: ASCII, Unicode oder binär. Mögliche Werte sind „XMLASCII“ oder „XML“, „XMLUNICODE“ und „BINARY“.</param>
      <param name="inData">Ein XML-codierter Berechtigungssatz.</param>
      <param name="outFormat">Eine Zeichenfolge, die eines der folgenden Codierungsformate darstellt: ASCII, Unicode oder binär. Mögliche Werte sind „XMLASCII“ oder „XML“, „XMLUNICODE“ und „BINARY“.</param>
      <returns>Ein verschlüsselter Berechtigungssatz mit dem angegebenen Ausgabeformat.</returns>
      <exception cref="T:System.NotImplementedException">In allen Fällen.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Copy">
      <summary>Erstellt eine Kopie des <see cref="T:System.Security.PermissionSet" />-Objekts.</summary>
      <returns>Eine Kopie von <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Berechtigungsobjekte des Satzes an die angegebene Position in einem <see cref="T:System.Array" />.</summary>
      <param name="array">Das Zielarray, in das kopiert werden soll.</param>
      <param name="index">Die Anfangsposition im Array, ab der kopiert werden soll (nullbasiert).</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="array" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="array" />-Parameter hat mehr als eine Dimension.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Die <paramref name="index" />-Parameter liegt außerhalb des Bereichs des <paramref name="array" />-Parameters.</exception>
    </member>
    <member name="P:System.Security.PermissionSet.Count">
      <summary>Ruft die Anzahl der Berechtigungsobjekte im Berechtigungssatz ab.</summary>
      <returns>Die Anzahl der Berechtigungsobjekte im <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Demand">
      <summary>Erzwingt zur Laufzeit eine <see cref="T:System.Security.SecurityException" />, wenn nicht allen Aufrufern, die in der Aufrufliste höher eingestuft sind, die Berechtigungen gewährt wurden, die von der aktuellen Instanz angegeben wurden.</summary>
      <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufkette verfügt nicht über die geforderte Berechtigung.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Deny">
      <summary>Bewirkt, dass eine beliebige <see cref="M:System.Security.PermissionSet.Demand" /> misslingt, die den aufrufenden Code für eine Berechtigung durchläuft, die eine Schnittmenge mit einer Berechtigung eines Typs hat, die im aktuellen <see cref="T:System.Security.PermissionSet" /> enthalten ist.</summary>
      <exception cref="T:System.Security.SecurityException">Durch einen vorherigen Aufruf von <see cref="M:System.Security.PermissionSet.Deny" /> wurden die Berechtigungen für den aktuellen Stapelrahmen bereits eingeschränkt.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Security.PermissionSet" />- oder <see cref="T:System.Security.NamedPermissionSet" />-Objekt dem aktuellen <see cref="T:System.Security.PermissionSet" /> entspricht.</summary>
      <param name="o">Das Objekt, das mit der aktuellen <see cref="T:System.Security.PermissionSet" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Objekt und das aktuelle <see cref="T:System.Security.PermissionSet" />-Objekt gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>Stellt ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
      <param name="et">Die XML-Codierung zur Wiederherstellung des Sicherheitsobjekts.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="et" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="et" />-Parameter ist kein gültiges Berechtigungselement.  

oder - 
Die Versionsnummer des <paramref name="et" />-Parameters wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.GetEnumerator">
      <summary>Gibt einen Enumerator für die Berechtigungen des Satzes zurück.</summary>
      <returns>Ein Enumeratorobjekt für die Berechtigungen des Satzes.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetEnumeratorImpl">
      <summary>Gibt einen Enumerator für die Berechtigungen des Satzes zurück.</summary>
      <returns>Ein Enumeratorobjekt für die Berechtigungen des Satzes.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetHashCode">
      <summary>Ruft einen Hashcode für das <see cref="T:System.Security.PermissionSet" />-Objekt ab, das sich für die Verwendung in Hashalgorithmen und Datenstrukturen eignet, z.B. in einer Hashtabelle.</summary>
      <returns>Ein Hashcode für das aktuelle <see cref="T:System.Security.PermissionSet" />-Objekt.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetPermission(System.Type)">
      <summary>Ruft ein Berechtigungsobjekt des angegebenen Typs ab, falls es im Satz vorhanden ist.</summary>
      <param name="permClass">Der Typ des gewünschten Berechtigungsobjekts.</param>
      <returns>Eine Kopie des Berechtigungsobjekts mit dem durch den <paramref name="permClass" />-Parameter angegebenen Typ, das in <see cref="T:System.Security.PermissionSet" /> enthalten ist, oder <see langword="null" />, falls keins vorhanden ist.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
      <summary>Ruft ein Berechtigungsobjekt des angegebenen Typs ab, falls es im Satz vorhanden ist.</summary>
      <param name="permClass">Der Typ des Berechtigungsobjekts.</param>
      <returns>Eine Kopie des Berechtigungsobjekts mit dem durch den <paramref name="permClass" />-Parameter angegebenen Typ, das in <see cref="T:System.Security.PermissionSet" /> enthalten ist, oder <see langword="null" />, falls keins vorhanden ist.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
      <summary>Erstellt einen Berechtigungssatz als Schnittmenge des aktuellen <see cref="T:System.Security.PermissionSet" /> und des angegebenen <see cref="T:System.Security.PermissionSet" /> und gibt diesen zurück.</summary>
      <param name="other">Ein Berechtigungssatz für die Überschneidung mit dem aktuellen <see cref="T:System.Security.PermissionSet" />.</param>
      <returns>Ein neuer Berechtigungssatz, der die Schnittmenge des aktuellen <see cref="T:System.Security.PermissionSet" /> und des angegebenen Ziels darstellt. Dieses Objekt ist <see langword="null" />, wenn die Schnittmenge leer ist.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsEmpty">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Security.PermissionSet" /> leer ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Security.PermissionSet" /> leer ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.PermissionSet.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>Immer <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
      <summary>Überprüft, ob der aktuelle <see cref="T:System.Security.PermissionSet" /> einer Teilmenge des angegebenen <see cref="T:System.Security.PermissionSet" /> entspricht.</summary>
      <param name="target">Der für die Teilmengenbeziehung zu testende Berechtigungssatz. Dieser muss entweder <see cref="T:System.Security.PermissionSet" /> oder <see cref="T:System.Security.NamedPermissionSet" /> sein.</param>
      <returns>
        <see langword="true" />, wenn der aktuelle <see cref="T:System.Security.PermissionSet" /> eine Teilmenge des <paramref name="target" />-Parameters ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.PermissionSet.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob die Threadsicherheit der Auflistung gewährleistet ist.</summary>
      <returns>Immer <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsUnrestricted">
      <summary>Bestimmt, ob <see cref="T:System.Security.PermissionSet" /><see langword="Unrestricted" /> ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Security.PermissionSet" /><see langword="Unrestricted" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.PermitOnly">
      <summary>Bewirkt, dass eine beliebige <see cref="M:System.Security.PermissionSet.Demand" /> misslingt, die den aufrufenden Code für einen beliebigen <see cref="T:System.Security.PermissionSet" /> durchläuft , der keine Teilmenge des aktuellen <see cref="T:System.Security.PermissionSet" /> ist.</summary>
    </member>
    <member name="M:System.Security.PermissionSet.RemovePermission(System.Type)">
      <summary>Entfernt eine Berechtigung eines bestimmten Typs aus dem Berechtigungssatz.</summary>
      <param name="permClass">Der Typ der zu löschenden Berechtigung.</param>
      <returns>Die Berechtigung, die aus dem Satz entfernt wurde.</returns>
      <exception cref="T:System.InvalidOperationException">Die Methode wird aus <see cref="T:System.Security.ReadOnlyPermissionSet" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
      <summary>Entfernt eine Berechtigung eines bestimmten Typs aus dem Berechtigungssatz.</summary>
      <param name="permClass">Der Typ der Berechtigung, die entfernt werden soll.</param>
      <returns>Die Berechtigung, die aus dem Satz entfernt wurde.</returns>
      <exception cref="T:System.InvalidOperationException">Die Methode wird aus <see cref="T:System.Security.ReadOnlyPermissionSet" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.RevertAssert">
      <summary>Veranlasst, dass alle vorherigen <see cref="M:System.Security.CodeAccessPermission.Assert" /> für den aktuellen Frame entfernt werden und nicht mehr gültig sind.</summary>
      <exception cref="T:System.InvalidOperationException">Es ist kein vorheriges <see cref="M:System.Security.CodeAccessPermission.Assert" /> für den aktuellen Frame vorhanden.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
      <summary>Legt eine Berechtigung für <see cref="T:System.Security.PermissionSet" /> fest, wobei eine vorhandene Berechtigung desselben Typs ersetzt wird.</summary>
      <param name="perm">Die festzulegende Berechtigung.</param>
      <returns>Die festgelegte Berechtigung.</returns>
      <exception cref="T:System.InvalidOperationException">Die Methode wird aus <see cref="T:System.Security.ReadOnlyPermissionSet" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
      <summary>Legt eine Berechtigung für <see cref="T:System.Security.PermissionSet" /> fest, wobei eine vorhandene Berechtigung desselben Typs ersetzt wird.</summary>
      <param name="perm">Die festzulegende Berechtigung.</param>
      <returns>Die festgelegte Berechtigung.</returns>
      <exception cref="T:System.InvalidOperationException">Die Methode wird aus <see cref="T:System.Security.ReadOnlyPermissionSet" /> aufgerufen.</exception>
    </member>
    <member name="P:System.Security.PermissionSet.SyncRoot">
      <summary>Ruft das Stammobjekt der aktuellen Auflistung ab.</summary>
      <returns>Das Stammobjekt der aktuellen Auflistung.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Wird ausgeführt, wenn ein vollständiges Objektdiagramm deserialisiert worden ist.</summary>
      <param name="sender">Das Objekt, das den Rückruf initiiert hat. Die Funktionen für diesen Parameter sind derzeit nicht implementiert.</param>
    </member>
    <member name="M:System.Security.PermissionSet.ToString">
      <summary>Gibt eine Zeichenfolgendarstellung von <see cref="T:System.Security.PermissionSet" /> zurück.</summary>
      <returns>Eine Darstellung des <see cref="T:System.Security.PermissionSet" />-Elements.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.ToXml">
      <summary>Erstellt eine XML-Codierung des Sicherheitsobjekts und seines aktuellen Zustands.</summary>
      <returns>Eine XML-Codierung des Sicherheitsobjekts, einschließlich aller Zustandsinformationen.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
      <summary>Erstellt einen <see cref="T:System.Security.PermissionSet" />, der die Kombination aus dem aktuellen <see cref="T:System.Security.PermissionSet" /> und dem angegebenen <see cref="T:System.Security.PermissionSet" /> bildet.</summary>
      <param name="other">Der Berechtigungssatz, der die Kombination mit dem aktuellen <see cref="T:System.Security.PermissionSet" /> bildet.</param>
      <returns>Ein neuer Berechtigungssatz, der die Kombination des aktuellen <see cref="T:System.Security.PermissionSet" /> und des angegebenen <see cref="T:System.Security.PermissionSet" /> darstellt.</returns>
    </member>
    <member name="T:System.Security.SecurityElement">
      <summary>Stellt das XML-Objektmodell zum Codieren von Sicherheitsobjekten dar. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.SecurityElement.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityElement" />-Klasse mit dem angegebenen Tag.</summary>
      <param name="tag">Der Tagname eines XML-Elements.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="tag" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="tag" />-Parameter ist in XML ungültig.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.SecurityElement" />-Klasse mit dem angegebenen Tag und Text.</summary>
      <param name="tag">Der Tagname des XML-Elements.</param>
      <param name="text">Der Textinhalt im Element.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="tag" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="tag" />-Parameter bzw. <paramref name="text" />-Parameter is ist in XML ungültig.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
      <summary>Fügt einem XML-Element ein Name-/Wert-Attribut hinzu.</summary>
      <param name="name">Der Name des Attributs.</param>
      <param name="value">Der Wert des Attributs.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter bzw. <paramref name="value" />-Parameter is ist in XML ungültig.  

oder - 
Ein Attribut mit dem vom <paramref name="name" />-Parameter angegebenen Namen ist bereits vorhanden.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
      <summary>Fügt dem XML-Element ein untergeordnetes Element hinzu.</summary>
      <param name="child">Das hinzuzufügende untergeordnete Element.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="child" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.Attribute(System.String)">
      <summary>Sucht in einem XML-Element ein Attribut nach Namen.</summary>
      <param name="name">Der Name des zu suchenden Attributs.</param>
      <returns>Der dem benannten Attribut zugeordnete Wert, oder <see langword="null" />, wenn kein Attribut mit <paramref name="name" /> vorhanden ist.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Attributes">
      <summary>Ruft die Attribute eines XML-Elements als Name-/Wertpaare ab oder legt diese fest.</summary>
      <returns>Das <see cref="T:System.Collections.Hashtable" />-Objekt für die Attributwerte des XML-Elements.</returns>
      <exception cref="T:System.InvalidCastException">Der Name oder der Wert des <see cref="T:System.Collections.Hashtable" />-Objekts ist ungültig.</exception>
      <exception cref="T:System.ArgumentException">Der Name ist kein gültiger XML-Attributname.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Children">
      <summary>Ruft das Array von untergeordneten Elementen des XML-Elements ab oder legt dieses fest.</summary>
      <returns>Die geordneten untergeordneten Elemente des XML-Elements als Sicherheitselemente.</returns>
      <exception cref="T:System.ArgumentException">Ein untergeordnetes Element des übergeordneten XML-Knotens ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.Copy">
      <summary>Erstellt eine identische Kopie des aktuellen <see cref="T:System.Security.SecurityElement" />-Objekts und gibt diese zurück.</summary>
      <returns>Eine Kopie des aktuellen <see cref="T:System.Security.SecurityElement" />-Objekts.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
      <summary>Prüft zwei XML-Elementobjekte auf Gleichheit.</summary>
      <param name="other">Ein XML-Elementobjekt, mit dem das aktuelle XML-Elementobjekt verglichen wird.</param>
      <returns>
        <see langword="true" />, wenn das Tag, die Attributnamen und -werte, die untergeordneten Elemente und die Textfelder im aktuellen XML-Element mit denen im <paramref name="other" />-Parameter identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.Escape(System.String)">
      <summary>Ersetzt ungültige XML-Zeichen in einer Zeichenfolge durch die gültigen XML-Äquivalente.</summary>
      <param name="str">Die Zeichenfolge, in der ungültige Zeichen in Escapezeichen umzuwandeln sind.</param>
      <returns>Die Eingabezeichenfolge mit den ersetzten ungültigen Zeichen.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.FromString(System.String)">
      <summary>Erstellt ein Sicherheitselement aus einer XML-codierten Zeichenfolge.</summary>
      <param name="xml">Die XML-codierte Zeichenfolge, aus der das Sicherheitselement erstellt werden soll.</param>
      <returns>Ein aus dem XML-Code erstelltes <see cref="T:System.Security.SecurityElement" />.</returns>
      <exception cref="T:System.Security.XmlSyntaxException">
        <paramref name="xml" /> enthält mindestens ein einfaches Anführungszeichen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
      <summary>Bestimmt, ob eine Zeichenfolge ein gültiger Attributname ist.</summary>
      <param name="name">Der Attributname, dessen Gültigkeit getestet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="name" />-Parameter ein gültiger XML-Attributname ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
      <summary>Bestimmt, ob eine Zeichenfolge ein gültiger Attributwert ist.</summary>
      <param name="value">Der Attributwert, dessen Gültigkeit getestet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="value" />-Parameter ein gültiger XML-Attributwert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidTag(System.String)">
      <summary>Bestimmt, ob eine Zeichenfolge ein gültiges Tag ist.</summary>
      <param name="tag">Das Tag, dessen Gültigkeit getestet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="tag" />-Parameter ein gültiges XML-Tag ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidText(System.String)">
      <summary>Bestimmt, ob eine Zeichenfolge als Text in einem XML-Element gültig ist.</summary>
      <param name="text">Der Text, dessen Gültigkeit getestet werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="text" />-Parameter ein gültiges XML-Textelement ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
      <summary>Sucht ein untergeordnetes Element anhand seines Tagnamens.</summary>
      <param name="tag">Das Tag, nach dem in untergeordneten Elementen gesucht werden soll.</param>
      <returns>Das erste untergeordnete XML-Element mit dem angegebenen Tagwert, oder <see langword="null" />, wenn kein untergeordnetes Element mit <paramref name="tag" /> vorhanden ist.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="tag" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
      <summary>Sucht ein untergeordnetes Element anhand seines Tagnamens und gibt den enthaltenen Text zurück.</summary>
      <param name="tag">Das Tag, nach dem in untergeordneten Elementen gesucht werden soll.</param>
      <returns>Der Textinhalt des ersten untergeordneten Elements mit dem angegebenen Tagwert.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tag" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Tag">
      <summary>Ruft den Tagnamen eines XML-Elements ab oder legt diesen fest.</summary>
      <returns>Der Tagname eines XML-Elements.</returns>
      <exception cref="T:System.ArgumentNullException">Das Tag ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Das Tag ist in XML nicht gültig.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Text">
      <summary>Ruft den Text in einem XML-Element ab oder legt diesen fest.</summary>
      <returns>Der Wert des Textes in einem XML-Element.</returns>
      <exception cref="T:System.ArgumentException">Der Text ist in XML nicht gültig.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.ToString">
      <summary>Erstellt eine Zeichenfolgendarstellung eines XML-Elements mit den zugehörigen Attributen und untergeordneten Elementen sowie dem zugehörigen Text.</summary>
      <returns>Das XML-Element und sein Inhalt.</returns>
    </member>
    <member name="T:System.StringComparer">
      <summary>Stellt einen Zeichenfolgenvergleichsvorgang dar, der bestimmte Regeln zur Groß- und Kleinschreibung und kulturbasierte bzw. Ordinalvergleichsregeln verwendet.</summary>
    </member>
    <member name="M:System.StringComparer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.StringComparer" />-Klasse.</summary>
    </member>
    <member name="M:System.StringComparer.Compare(System.Object,System.Object)">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird ein Vergleich von zwei Objekten durchgeführt und eine Angabe der relativen Sortierreihenfolge zurückgegeben.</summary>
      <param name="x">Ein mit <paramref name="y" /> zu vergleichendes Objekt.</param>
      <param name="y">Ein mit <paramref name="x" /> zu vergleichendes Objekt.</param>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Wert 
  Bedeutung 
  Kleiner als 0 (null) 
 <paramref name="x" /> steht in der Sortierreihenfolge vor <paramref name="y" />.  

- oder - 
 <paramref name="x" /> ist <see langword="null" />, und <paramref name="y" /> ist nicht <see langword="null" />.  

  Zero 
 <paramref name="x" /> ist gleich <paramref name="y" />.  

- oder - 
 <paramref name="x" /> und <paramref name="y" /> sind jeweils <see langword="null" />.  

  Größer als 0 (null) 
 <paramref name="x" /> steht in der Sortierreihenfolge hinter <paramref name="y" />.  

- oder - 
 <paramref name="y" /> ist <see langword="null" />, und <paramref name="x" /> ist nicht <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Weder <paramref name="x" /> noch <paramref name="y" /> ist ein <see cref="T:System.String" />-Objekt, und weder <paramref name="x" /> noch <paramref name="y" /> implementiert die <see cref="T:System.IComparable" />-Schnittstelle.</exception>
    </member>
    <member name="M:System.StringComparer.Compare(System.String,System.String)">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird ein Vergleich von zwei Zeichenfolgen durchgeführt und eine Angabe der relativen Sortierreihenfolge zurückgegeben.</summary>
      <param name="x">Eine Zeichenfolge, die mit <paramref name="y" /> verglichen werden soll.</param>
      <param name="y">Eine Zeichenfolge, die mit <paramref name="x" /> verglichen werden soll.</param>
      <returns>Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  Wert 
  Bedeutung 
  Kleiner als 0 (null) 
 <paramref name="x" /> steht in der Sortierreihenfolge vor <paramref name="y" />.  

- oder - 
 <paramref name="x" /> ist <see langword="null" />, und <paramref name="y" /> ist nicht <see langword="null" />.  

  Zero 
 <paramref name="x" /> ist gleich <paramref name="y" />.  

- oder - 
 <paramref name="x" /> und <paramref name="y" /> sind jeweils <see langword="null" />.  

  Größer als 0 (null) 
 <paramref name="x" /> steht in der Sortierreihenfolge hinter <paramref name="y" />.  

- oder - 
 <paramref name="y" /> ist <see langword="null" />, und <paramref name="x" /> ist nicht <see langword="null" />.</returns>
    </member>
    <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
      <summary>Erstellt ein <see cref="T:System.StringComparer" />-Objekt, das Zeichenfolgen nach den Regeln einer angegebenen Kultur vergleicht.</summary>
      <param name="culture">Eine Kultur, deren linguistische Regeln verwendet werden, um einen Zeichenfolgenvergleich auszuführen.</param>
      <param name="ignoreCase">
        <see langword="true" />, um anzugeben, dass die Groß- und Kleinschreibung bei den Vergleichsvorgängen nicht beachtet wird; <see langword="false" />, um anzugeben, dass die Groß- und Kleinschreibung bei den Vergleichsvorgängen beachtet wird.</param>
      <returns>Ein neues <see cref="T:System.StringComparer" />-Objekt, das Zeichenfolgenvergleiche gemäß den Vergleichsregeln durchführt, die vom <paramref name="culture" />-Parameter verwendet werden, und gemäß den vom <paramref name="ignoreCase" />-Parameter angegebenen Regeln zur Groß- und Kleinschreibung.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)">
      <param name="culture" />
      <param name="options" />
    </member>
    <member name="P:System.StringComparer.CurrentCulture">
      <summary>Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das mit den Wortvergleichsregeln der aktuellen Kultur einen Zeichenfolgenvergleich mit Berücksichtigung von Groß- und Kleinschreibung ausführt.</summary>
      <returns>Ein neues <see cref="T:System.StringComparer" />-Objekt.</returns>
    </member>
    <member name="P:System.StringComparer.CurrentCultureIgnoreCase">
      <summary>Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das Zeichenfolgenvergleiche ohne Unterscheidung der Groß- und Kleinschreibung mit den Wortvergleichsregeln der aktuellen Kultur ausführt.</summary>
      <returns>Ein neues-Objekt für den Zeichen folgen Vergleich.</returns>
    </member>
    <member name="M:System.StringComparer.Equals(System.Object,System.Object)">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Objekte gleich sind.</summary>
      <param name="x">Ein mit <paramref name="y" /> zu vergleichendes Objekt.</param>
      <param name="y">Ein mit <paramref name="x" /> zu vergleichendes Objekt.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="x" /> und <paramref name="y" /> auf dasselbe Objekt verweisen oder wenn <paramref name="x" /> und <paramref name="y" /> den gleichen Objekttyp aufweisen und diese Objekte gleich sind, oder wenn <paramref name="x" /> und <paramref name="y" /> gleich <see langword="null" /> sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.StringComparer.Equals(System.String,System.String)">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird angegeben, ob zwei Zeichenfolgen gleich sind.</summary>
      <param name="x">Eine Zeichenfolge, die mit <paramref name="y" /> verglichen werden soll.</param>
      <param name="y">Eine Zeichenfolge, die mit <paramref name="x" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="x" /> und <paramref name="y" /> auf dasselbe Objekt verweisen oder wenn <paramref name="x" /> und <paramref name="y" /> gleich sind, oder wenn <paramref name="x" /> und <paramref name="y" /> gleich <see langword="null" /> sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.StringComparer.FromComparison(System.StringComparison)">
      <param name="comparisonType" />
    </member>
    <member name="M:System.StringComparer.GetHashCode(System.Object)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für das angegebene Objekt ab.</summary>
      <param name="obj">Ein Objekt.</param>
      <returns>Ein 32-Bit-Hashcode mit Vorzeichen, berechnet aus dem Wert des <paramref name="obj" />-Parameters.</returns>
      <exception cref="T:System.ArgumentException">Nicht genug Arbeitsspeicher ist verfügbar, um den zur Berechnung des Hashcodes erforderlichen Puffer zuzuweisen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.StringComparer.GetHashCode(System.String)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Hashcode für die angegebene Zeichenfolge ab.</summary>
      <param name="obj">Eine Zeichenfolge.</param>
      <returns>Ein 32-Bit-Hashcode mit Vorzeichen, berechnet aus dem Wert des <paramref name="obj" />-Parameters.</returns>
      <exception cref="T:System.ArgumentException">Nicht genug Arbeitsspeicher ist verfügbar, um den zur Berechnung des Hashcodes erforderlichen Puffer zuzuweisen.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.StringComparer.InvariantCulture">
      <summary>Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das mit den Wortvergleichsregeln der invarianten Kultur einen Zeichenfolgenvergleich mit Berücksichtigung von Groß- und Kleinschreibung ausführt.</summary>
      <returns>Ein neues <see cref="T:System.StringComparer" />-Objekt.</returns>
    </member>
    <member name="P:System.StringComparer.InvariantCultureIgnoreCase">
      <summary>Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das mit den Wortvergleichsregeln der invarianten Kultur einen Zeichenfolgenvergleich ohne Berücksichtigung von Groß- und Kleinschreibung ausführt.</summary>
      <returns>Ein neues <see cref="T:System.StringComparer" />-Objekt.</returns>
    </member>
    <member name="P:System.StringComparer.Ordinal">
      <summary>Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das einen Ordinalzeichenfolgenvergleich mit Berücksichtigung der Groß- und Kleinschreibung ausführt.</summary>
      <returns>Ein <see cref="T:System.StringComparer" />-Objekt.</returns>
    </member>
    <member name="P:System.StringComparer.OrdinalIgnoreCase">
      <summary>Ruft ein <see cref="T:System.StringComparer" />-Objekt ab, das einen Ordinalzeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung ausführt.</summary>
      <returns>Ein <see cref="T:System.StringComparer" />-Objekt.</returns>
    </member>
    <member name="T:System.StringNormalizationExtensions">
      <summary>Stellt Erweiterungsmethoden für die Zeichenfolgennormalisierung bereit.</summary>
    </member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String)">
      <summary>Gibt an, ob diese angegebene Zeichenfolge in der Unicode-Normalisierungsform C vorliegt.</summary>
      <param name="value">Eine Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in der Normalisierungsform C vorliegt; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> enthält ungültige Unicodezeichen.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
      <summary>Gibt an, ob eine Zeichenfolge in einer angegebenen Unicode-Normalisierungsform vorliegt.</summary>
      <param name="value">Eine Zeichenfolge.</param>
      <param name="normalizationForm">Eine Unicode-Normalisierungsform.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> in Normalisierungsform <paramref name="normalizationForm" /> vorliegt; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> enthält ungültige Unicodezeichen.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String)">
      <summary>Normalisiert eine Zeichenfolge in eine Unicode-Normalisierungsform C.</summary>
      <param name="value">Die zu normalisierende Zeichenfolge.</param>
      <returns>Eine neue Zeichenfolge, deren Textwert mit <paramref name="value" /> übereinstimmt, deren binäre Darstellung jedoch in der Unicode-Normalisierungsform C vorliegt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> enthält ungültige Unicodezeichen.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
      <summary>Normalisiert eine Zeichenfolge in die angegebene Unicode-Normalisierungsform.</summary>
      <param name="value">Die zu normalisierende Zeichenfolge.</param>
      <param name="normalizationForm">Die Unicode-Normalisierungsform.</param>
      <returns>Eine neue Zeichenfolge, deren Textwert mit <paramref name="value" /> übereinstimmt, deren binäre Darstellung jedoch in der <paramref name="normalizationForm" />-Normalisierungsform vorliegt.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> enthält ungültige Unicodezeichen.</exception>
    </member>
    <member name="T:System.UriBuilder">
      <summary>Stellt einen benutzerdefinierten Konstruktor für URIs (Uniform Resource Identifier) bereit und ändert URIs für die <see cref="T:System.Uri" />-Klasse.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit dem angegebenen URI.</summary>
      <param name="uri">Eine URI-Zeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.UriFormatException">Fangen Sie in .NET für Windows Store-Apps oder der portablen Klassenbibliothek stattdessen die Basisklassenausnahme <see cref="T:System.FormatException" /> ab.  

          
          <paramref name="uri" /> ist eine Zeichenfolge der Länge 0 (null) oder enthält nur Leerzeichen.  

oder - 
Die Analyseroutine hat ein Schema in einem ungültigen Formular erkannt.  

oder - 
Der Parser hat mehr als zwei aufeinander folgende Schrägstriche in einem URI erkannt, der nicht das Schema „Datei“ verwendet.  

oder - 
<paramref name="uri" /> ist kein gültiger URI.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit dem angegebenen Schema und dem angegebenen Host.</summary>
      <param name="schemeName">Ein Internetprotokoll.</param>
      <param name="hostName">Ein Domänenname im DNS-Format oder eine IP-Adresse.</param>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit den Angaben für Schema, Host und Anschluss.</summary>
      <param name="scheme">Ein Internetprotokoll.</param>
      <param name="host">Ein Domänenname im DNS-Format oder eine IP-Adresse.</param>
      <param name="portNumber">Eine IP-Anschlussnummer für den Dienst.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="portNumber" /> ist kleiner als –1 oder größer als 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit den Angaben für Schema, Host, Anschluss und Pfad.</summary>
      <param name="scheme">Ein Internetprotokoll.</param>
      <param name="host">Ein Domänenname im DNS-Format oder eine IP-Adresse.</param>
      <param name="port">Eine IP-Anschlussnummer für den Dienst.</param>
      <param name="pathValue">Der Pfad zur Internetressource.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist kleiner als –1 oder größer als 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit den Angaben für Schema, Host, Anschluss, Pfad und Abfragezeichenfolge oder Fragmentbezeichner.</summary>
      <param name="scheme">Ein Internetprotokoll.</param>
      <param name="host">Ein Domänenname im DNS-Format oder eine IP-Adresse.</param>
      <param name="port">Eine IP-Anschlussnummer für den Dienst.</param>
      <param name="path">Der Pfad zur Internetressource.</param>
      <param name="extraValue">Eine Abfragezeichenfolge oder ein Fragmentbezeichner.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="extraValue" /> ist weder <see langword="null" /> noch <see cref="F:System.String.Empty" />, und weder beginnt ein gültiger Fragmentbezeichner mit einem Nummernzeichen (#), noch eine gültige Abfragezeichenfolge mit einem Fragezeichen (?).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist kleiner als –1 oder größer als 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.Uri)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriBuilder" />-Klasse mit der angegebenen <see cref="T:System.Uri" />-Instanz.</summary>
      <param name="uri">Eine Instanz der <see cref="T:System.Uri" />-Klasse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.UriBuilder.Equals(System.Object)">
      <summary>Überprüft eine vorhandene <see cref="T:System.Uri" />-Instanz und den Inhalt des <see cref="T:System.UriBuilder" /> auf Gleichheit.</summary>
      <param name="rparam">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="rparam" /> denselben <see cref="T:System.Uri" /> wie der <see cref="T:System.Uri" /> darstellt, der durch diese <see cref="T:System.UriBuilder" />-Instanz erstellt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.UriBuilder.Fragment">
      <summary>Ruft den Fragmentteil des URIs ab oder legt diesen fest.</summary>
      <returns>Der Fragmentteil des URIs. Der Fragmentbezeichner ("#") wird am Anfang des Fragments hinzugefügt.</returns>
    </member>
    <member name="M:System.UriBuilder.GetHashCode">
      <summary>Gibt den Hashcode für den URI zurück.</summary>
      <returns>Der für den URI generierte Hashcode.</returns>
    </member>
    <member name="P:System.UriBuilder.Host">
      <summary>Ruft den DNS-Hostnamen (Domain Name System) oder die IP-Adresse eines Servers ab oder legt diese fest.</summary>
      <returns>Der DNS-Hostname oder die IP-Adresse des Servers.</returns>
    </member>
    <member name="P:System.UriBuilder.Password">
      <summary>Ruft das Kennwort des Benutzers ab, der auf den URI zugreift, oder legt dieses fest.</summary>
      <returns>Das Kennwort des Benutzers, der auf den URI zugreift.</returns>
    </member>
    <member name="P:System.UriBuilder.Path">
      <summary>Ruft den Pfad der Ressource ab, auf die der URI verweist, oder legt diesen fest.</summary>
      <returns>Der Pfad der Ressource, auf die der URI verweist.</returns>
    </member>
    <member name="P:System.UriBuilder.Port">
      <summary>Ruft die Anschlussnummer des URIs ab oder legt diese fest.</summary>
      <returns>Die Anschlussnummer des URIs.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Für diesen Port kann kein geringerer Wert als -1 und keine höherer Wert als 65.535 festgelegt werden.</exception>
    </member>
    <member name="P:System.UriBuilder.Query">
      <summary>Ruft zum URI gehörende Abfrageinformationen ab oder legt diese fest.</summary>
      <returns>Die zum URI gehörenden Abfrageinformationen.</returns>
    </member>
    <member name="P:System.UriBuilder.Scheme">
      <summary>Ruft den Schemanamen des URIs ab oder legt diesen fest.</summary>
      <returns>Das Schema des URIs.</returns>
      <exception cref="T:System.ArgumentException">Das Schema kann nicht auf einen ungültigen Schemanamen festgelegt werden.</exception>
    </member>
    <member name="M:System.UriBuilder.ToString">
      <summary>Gibt die Anzeigezeichenfolge für die angegebene <see cref="T:System.UriBuilder" />-Instanz zurück.</summary>
      <returns>Die Zeichenfolge, die die Anzeigezeichenfolge ohne Escapezeichen für den <see cref="T:System.UriBuilder" /> enthält.</returns>
      <exception cref="T:System.UriFormatException">Fangen Sie in .NET für Windows Store-Apps oder der portablen Klassenbibliothek stattdessen die Basisklassenausnahme <see cref="T:System.FormatException" /> ab.  


            

 Die <see cref="T:System.UriBuilder" />-Instanz weist ein ungültiges Kennwort auf.</exception>
    </member>
    <member name="P:System.UriBuilder.Uri">
      <summary>Ruft die von der angegebenen <see cref="T:System.UriBuilder" />-Instanz erstellte <see cref="T:System.Uri" />-Instanz ab.</summary>
      <returns>Ein <see cref="T:System.Uri" />, der den vom <see cref="T:System.UriBuilder" /> erstellten URI enthält.</returns>
      <exception cref="T:System.UriFormatException">Fangen Sie in .NET für Windows Store-Apps oder der portablen Klassenbibliothek stattdessen die Basisklassenausnahme <see cref="T:System.FormatException" /> ab.  


            

 Der von den <see cref="T:System.UriBuilder" />-Eigenschaften erstellte URI ist ungültig.</exception>
    </member>
    <member name="P:System.UriBuilder.UserName">
      <summary>Der Benutzername des Benutzers, der auf den URI zugreift.</summary>
      <returns>Der Benutzername des Benutzers, der auf den URI zugreift.</returns>
    </member>
  </members>
</doc>